--- Log opened Mon Dec 02 00:00:49 2013
 shogun-buildbot_	build #317 of osx1 - libshogun is complete: Failure [failed compile test shell]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx1%20-%20libshogun/builds/317  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has quit [Ping timeout: 264 seconds]
-!- Boeke [~alex@24-179-114-25.dhcp.oxfr.ma.charter.com] has quit [Remote host closed the connection]
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has joined #shogun
 shogun-buildbot_	build #635 of nightly_default is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/635
-!- Saurabh7 [~Saurabh7@115.248.130.148] has quit [Ping timeout: 246 seconds]
-!- sonne|osx [~sonne@89.204.130.236] has joined #shogun
 sonne|osx	wiking: could you tell how csharp modular examples are run via ctest?
 sonne|osx	wiking: I cannot reproduce any of the crashes when I use the check.sh script
@wiking	ctest
@wiking	no .sh
 sonne|osx	wiking: yeah but what is the exact command line ctest is running?
@wiking	see buildbot?
@wiking	i mean seriously....
 sonne|osx	wiking: no
 sonne|osx	wiking: buildbot just says ctest
@wiking	/bin/bash -c 'cd build && ctest --output-on-failure -j2 -R csharp'
@wiking	no
 sonne|osx	nothing like mono <whateveropts> file
 sonne|osx	wiking: that doesn't help
 sonne|osx	wiking: I need the command that is run for each test
@wiking	http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2068/steps/test%20csharp%20modular/logs/stdio
@wiking	first line i've copy pasted...
@wiking	add -V
@wiking	and u'll see the exact cmd
 sonne|osx	wiking: when I run that it doesn't find the dll / so
 sonne|osx	[ERROR] FATAL UNHANDLED EXCEPTION: System.IO.FileNotFoundException: Could not load file or assembly 'modshogun, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies.
@wiking	env var...
 sonne|osx	there is none on http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2068/steps/test%20csharp%20modular/logs/stdio
@wiking	yeah sure
@wiking	then there is none
@wiking	come on
@wiking	it's really too early for this
@wiking	why dont u check the example/undocumented/csharp-modular/CMakeLists.txt
@wiking	obviously there's no env var:
@wiking	et_property(TEST ${EXAMPLE_NAME} PROPERTY ENVIRONMENT "MONO_PATH=${CSHARP_MODULAR_BUILD_DIR}")
-!- sonne|osx [~sonne@89.204.130.236] has quit [Quit: sonne|osx]
-!- lisitsyn [~lisitsin@212.46.246.30] has joined #shogun
-!- lisitsyn [~lisitsin@212.46.246.30] has quit [Ping timeout: 252 seconds]
-!- lisitsyn [~lisitsin@212.46.246.30] has joined #shogun
-!- besser82 [~besser82@2a02:8108:8840:1800:e8b:fdff:fe16:bb33] has joined #shogun
-!- besser82 [~besser82@2a02:8108:8840:1800:e8b:fdff:fe16:bb33] has quit [Changing host]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
 besser82	sonney2k, wiking, lisitsyn, sonne|work: Guten Morgen  :D
 lisitsyn	besser82: morgen
 besser82	lisitsyn: Sergej, how is it going?  ;)
 lisitsyn	besser82: horosho!
 lisitsyn	besser82: a u tebya?
 besser82	lisitsyn:  ????  *puzzled*
 lisitsyn	besser82: hah jk
 lisitsyn	besser82: sonne|work can understand that though!
 besser82	lisitsyn: is that some asian lang?  Sounds a bit...
 besser82	lisitsyn: or is that the comeback for me writing "lizzard-style" sometimes?!?
 lisitsyn	besser82: asian? russian
 lisitsyn	:D
 besser82	lisitsyn: ain't russia in asia, mostly?!?
 besser82	lisitsyn: the border europe/asia is somewhat near moscow afaik, ain't it?
 besser82	lisitsyn: but me is fine, too, thanks!
 lisitsyn	besser82: europe/asia border is ural
 lisitsyn	:D
 lisitsyn	as considered here
 lisitsyn	besser82: well I wouldn't like to be anyhow related to asia :D
 lisitsyn	most of things are european
 lisitsyn	and well some EU countries speak some kind of similar language
 besser82	lisitsyn: so the border is actually more easter than i thought  ;)
 besser82	lisitsyn: i know...   Czech, e.g. is somehow related....
 besser82	lisitsyn: at least all russian-people i know can understand that...
 lisitsyn	besser82: I think it is easier to understand slovenian actually
 lisitsyn	czech is very influenced by some roman stuff
 besser82	lisitsyn: I dunno  :D  Don't understand either  :-P
 lisitsyn	and actually our letters were introduced by greeks haha
 lisitsyn	so we have quite similar alphabet
 lisitsyn	besser82: serbian is even more closer - I can understand some parts of it
 besser82	lisitsyn: I actually don't understand any cyrilic-based lang, but just some stuff like food...
 lisitsyn	besser82: I had symmetric stuff when I was in berlin ;)
 besser82	lisitsyn:  :D    Ausweis, bitte!  XD
 lisitsyn	besser82: the most 'shameful' when we came to some restaurant
 lisitsyn	actually it was called traube IIRC
 lisitsyn	and there was 'zwei gaenge 15 EUR'
 lisitsyn	drei gaenge 20 EUR
 lisitsyn	or so
 lisitsyn	I had to ask to explain what is gaenge
 besser82	lisitsyn:  would be the same for if would come to russia  ;)
 lisitsyn	besser82: there is a chance people speak english if you come to some big city
 lisitsyn	but generally yes that's troublesome without understanding here
 besser82	lisitsyn: I hope so  ;)  But how about places like "Novosibirsk"?!?
 lisitsyn	besser82: novosibirsk is quite big city and you can find someone able to speak english
 besser82	lisitsyn: I know, it was just some synonym for some more non-tourist area...
 lisitsyn	besser82: haha no, why
 lisitsyn	non-tourist area is say arkhangelsk
 lisitsyn	may be murmansk
 besser82	lisitsyn: murmansk...  somewhen heard about that...
 lisitsyn	besser82: this way you get no service for english speakers + bad weather
 besser82	lisitsyn: But when I would come to russia, I'd really like to visit Duga-3  ;)
 lisitsyn	:D
 lisitsyn	what's duga-3?
 besser82	lisitsyn: never heard about that?
 lisitsyn	no :)
 lisitsyn	but googled
 lisitsyn	besser82: though it is belarus
 lisitsyn	besser82: as well as chernobyl which is between ukraine and belarus
 besser82	lisitsyn: by my knowledge about geography, boarders of russia are actually from my old atlas  ;)
 besser82	lisitsyn: which shows me some "CSSR" at those locations.  XD
 lisitsyn	besser82: USSR you mean? :)
 lisitsyn	or CCCP in native
 besser82	lisitsyn: USSR, rye  ;)
 sonne|work	hey besser82!
-!- iglesiasg [~iglesiasg@211.Red-83-40-129.dynamicIP.rima-tde.net] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	wiking, sonne|work, what's the version of Shogun that runs on cloud?
 sonne|work	iglesiasg: I guess 3.0
@iglesiasg	sonne|work, so I guess it does not get new stuff as they are implemented in develop
 sonne|work	iglesiasg: no
 sonne|work	manual procedure
 besser82	sonne|work: Hey Sonne!
@wiking	iglesiasg: 3.0
@iglesiasg	all right, thanks wiking!
@wiking	as soon as docker changes the way it does oauth on github we'll be able to do travis like docker image builds
-!- iglesiasg [~iglesiasg@211.Red-83-40-129.dynamicIP.rima-tde.net] has quit [Quit: Leaving]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
 thoralf	Hey GUIs
 besser82	thoralf: Hall?chen  ;)
 thoralf	Hey Bj?rn
 besser82	thoralf: your PR looks good from code-pov  ;)
 thoralf	Hehe, thanks.
 thoralf	It's only a part of the solution - if done right, we should make StructuredLabels an interface.
 besser82	thoralf: sounds good  ;)  but if we want to get that implemented, we should get that done during we rewrite the interfaces for using d-pointers...
 thoralf	What's d-pointers?
 besser82	thoralf: d-pointers is a technique to wrap all function / object-calls into pointers, so you won't have to deal with external deps anymore...
 besser82	thoralf: like having an "internal" interface for build-time and a public interface for linking against libshogun
 besser82	thoralf: qt is one project using this
 thoralf	besser82: I must've missed that development.
 lisitsyn	thoralf: in depth description of d-ptrs:
 lisitsyn	class A { struct AImpl; AImpl* impl; };
 thoralf	Doesn't look very beautiful.
 thoralf	Is that idiomatic for c++ programmers?
 lisitsyn	thoralf: yes, this way you hide your implementation/data
 lisitsyn	because that impl is incompletely defined
 lisitsyn	you can use whatever libraries
 lisitsyn	and they are not exposed to headers
 lisitsyn	thoralf: if you use it you get no header dependencies + fast compilation + stable headers/API
 besser82	thoralf: here is the d-ptr / q-ptr thing explained really verbose: http://qt-project.org/wiki/Dpointer
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has quit [Ping timeout: 272 seconds]
 thoralf	besser82: Looks like it would break IDEs auto completion.
 besser82	thoralf: not sure about that, but afaik autocompletion of Eclipse works for Qt.
 besser82	thoralf: so either there is some addon for Qt in Eclipse or Eclipse can handle it properly...
 thoralf	Maybe I didn't fully understand it. ;)
@wiking	thoralf: it wouldn't... as you would still have the public api
@wiking	thoralf: hence if you are just writing an external application it would be just the same
 thoralf	Okay, so the public API is still exported.
 thoralf	Only data is hidden?
@wiking	thoralf: no
@wiking	thoralf: not only the data
@wiking	thoralf: e.g. you would have any private function or member exposed in the public api
@wiking	thoralf: there would be nothing like private: void init()...
@wiking	as that would be implemented within the private class
 thoralf	I see.
@wiking	of course if you are writing a shogun module
@wiking	you would still work with the shogun source
 thoralf	And no need to make them private in the private class anyway, since its already hidden?
@wiking	and there you would have reference on the private class
@wiking	thoralf: yes
@wiking	thoralf: the only private member of the class would be
 thoralf	Okay, got it.
@wiking	a private class
@wiking	say we have MagicMachine
@wiking	it would have like a MagicMachine.h
@wiking	that would have all the public api definitions
@wiking	and something like
@wiking	private: MagiceMachineImpl* dptr;
@wiking	and that MagiceMachineImpl.h/cpp would have all the internal stuff of MagicMachine
@wiking	would you would never expose the MagicMachineImpl api
@wiking	i.e. it would never be installed to <prefix>/shogun/...
 thoralf	Okay, now back to the PR: You suggested to apply this d-pointer stuff to the PR classes as well?
@wiking	thoralf: well i think the dpointer stuff needs to be discussed
@wiking	we are plannign this for a while
@wiking	since it would help a lot with swig
@wiking	(much smaller generated .cxx etc.)
@wiking	but we need to have a discussion about this how exactly we want to do it
@wiking	and not just randomly do it
@wiking	so i think u just keep it as it is
@wiking	before we lay down the ground rules of how to do dptrs in shogun
@wiking	imho all of us has ideas, but that needs to be fixed
@wiking	as you see for example Qt has some magic macros there to do this dptr stuff
@wiking	so even if it sounds an easy task
@wiking	we should do some predesign of the whole thing
@wiking	so that we do it in a general/robust way...
@wiking	</bullshit stuff>
@wiking	:P
 thoralf	;)
 thoralf	Wait.  I missed the opening tag. ;)
@wiking	thoralf: somewhere around 2011 february ;
@wiking	:P
 thoralf	:D
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- gideonite [~gideon@mookmo.net] has left #shogun []
-!- zxtx [~zv@rrcs-24-103-81-66.nyc.biz.rr.com] has joined #shogun
-!- sonne|osx [~sonne@89.204.130.12] has joined #shogun
 sonne|osx	besser82: so how is it going? don't try to dptr stuff before you are done cmaking :)
 besser82	sonne|osx: doing the final-polish(tm) of first-stage-besser82-cmake-skills(tm)  XD
 sonne|osx	okok
 besser82	sonne|osx: will take me 'till ~22:00 CET, after finished i'll push feature/CMakeImproved and paste link to travis-build
 sonne|osx	besser82: exciting! I can't wait to try it...
 besser82	sonne|osx: I can't to hear you say: "bessr82, you f*ckin' skrewed-up everything"  :-P
@wiking	besser82: just push the feature branch into shogun's main repo
@wiking	besser82: it'll autotrigger a travis build
@wiking	or same with the PR :)
@wiking	whichever fits u
 sonne|osx	besser82: hehe I am through this a couple of times and wiking experienced that too
 besser82	wiking: I know; but i don't want to rebase around in main-repo, even not in feature-branch  :-P
@wiking	?
 sonne|osx	besser82: so why should you feel better?
@wiking	that's what feature branch is for...
@wiking	so i do really hope that u r going to push into the main repo
 besser82	wiking: I am..., just be patient a bit ;)
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
 sonne|osx	thoralf: that was exactly what I meant...
 thoralf	Hey.
 thoralf	sonne|osx: The PR?
 sonne|osx	thoralf: yeah
 thoralf	sonne|osx: Is this good or bad? ;)
 sonne|osx	thoralf: depends on whom you ask
-!- zxtx [~zv@rrcs-24-103-81-66.nyc.biz.rr.com] has quit [Ping timeout: 272 seconds]
 sonne|osx	thoralf: but it is really an optimization for a very particular case
@wiking	thoralf: kudos for the structdata refactor!
 sonne|osx	so IMHO this overload is fine
 sonne|osx	oops
* sonne|osx off train
-!- sonne|osx [~sonne@89.204.130.12] has quit [Quit: sonne|osx]
 thoralf	sonne|osx, wiking: Okay, the Multiclass case is only a proof-of-concept of what could be used for my multilabel stuff.
 thoralf	wiking: Well, the refactoring is not that good: A multilabel object will have plenty of members: (m_num_classes, m_labels_vector, m_num_labels_set) plus (m_labels) plus (m_current_values)
 thoralf	from MulticlassSOLabels, StructuredLabels, CLabels resp.
 thoralf	So we're duplicating stuff and having semantically redundant features, but of different types.
 thoralf	m_labels_vector, m_labels, m_current_values <-- All of them are non-trivial types.
 thoralf	(Vectors and DynObjArray)
@wiking	thoralf: well whatever, but numbers speak for themselves
@wiking	136MiB vs 17MiB
@wiking	:)
 thoralf	Initially 10GiB vs. 17MiB  ;)
@wiking	lol
@wiking	that fucking crazy
 thoralf	Anyway, any suggestions what to change to get this merged?
 thoralf	Tests are already running - the buildbreak is not related to the changes.
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- sonne|osx [~sonne@f053039239.adsl.alicedsl.de] has joined #shogun
-!- HeikoS [~heiko@nat-179-66.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 besser82	HeikoS: Hey, man!  Haven't seen for a long while  :D  How's ya doing?
-!- iglesiasg [~iglesiasg@211.Red-83-40-129.dynamicIP.rima-tde.net] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	greetings people
-!- sonne|osx [~sonne@f053039239.adsl.alicedsl.de] has quit [Quit: sonne|osx]
 besser82	iglesiasg: Hey, man!
@iglesiasg	besser82, what did you decide in the end regarding the cmake problem you pointed out yesterday?
 besser82	iglesiasg: sonney2k decided me to implement d-ptr  :D
-!- HeikoS [~heiko@nat-179-66.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
@iglesiasg	besser82, good good
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Fernando Iglesias :develop * e8e4244 / src/shogun/labels/LabelsFactory.h: https://github.com/shogun-toolbox/shogun/commit/e8e4244a3ec14ed0a0d53390e81d227f10257e12
 shogun-notifier-	shogun: Fix wrong indentation in LabelsFactory::get_name
 shogun-notifier-	shogun: Fernando Iglesias :develop * 1090a9f / src/shogun/labels/LabelsFactory.h: https://github.com/shogun-toolbox/shogun/commit/1090a9f63259832058ffdcd66bb29d9f4b521c07
 shogun-notifier-	shogun: Merge pull request #1775 from iglesias/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Fix wrong indentation in LabelsFactory::get_name
 shogun-buildbot_	build #329 of precise - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/329
 shogun-buildbot_	build #1433 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/rpm1%20-%20libshogun/builds/1433  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
@iglesiasg	shogun-buildbot_, force build --branch=develop 'rpm1 - libshogun'
 shogun-buildbot_	build forced [ETA 16m13s]
 shogun-buildbot_	I'll give a shout when the build finishes
 shogun-buildbot_	build #1434 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/rpm1%20-%20libshogun/builds/1434
-!- travis-ci [~travis-ci@ec2-107-21-171-237.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Fernando Iglesias's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/14829687
-!- travis-ci [~travis-ci@ec2-107-21-171-237.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot_	build #2069 of deb3 - modular_interfaces is complete: Failure [failed test csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2069  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
--- Log closed Tue Dec 03 00:00:50 2013
