--- Log opened Tue Nov 26 00:00:40 2013
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@iglesiasg	good night guys
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- new_lido_ is now known as new_lido_afk
-!- new_lido_afk is now known as new_lido_
-!- sonne|osx_ [~sonne@f053041026.adsl.alicedsl.de] has joined #shogun
-!- sonne|osx [~sonne@f053040204.adsl.alicedsl.de] has quit [Ping timeout: 272 seconds]
-!- sonne|osx_ is now known as sonne|osx
 shogun-buildbot_	build #533 of nightly_all is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_all/builds/533
-!- new_lido_ [~walid@41.218.174.238] has quit [Ping timeout: 245 seconds]
-!- new_lido [~walid@41.218.174.238] has quit [Ping timeout: 272 seconds]
-!- new_lido [~walid@41.218.180.228] has joined #shogun
-!- Boeke [~alex@24-179-114-25.dhcp.oxfr.ma.charter.com] has joined #shogun
 Boeke	hey can any one tell me the best way to open a hdf5 file with shogun is there still a direct method?
 Boeke	like HDF5File
-!- new_lido [~walid@41.218.180.228] has quit [Ping timeout: 264 seconds]
 Boeke	I suppose it is also important to say that I am using the python modular interface.
 shogun-buildbot_	build #629 of nightly_default is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/629
-!- Boeke [~alex@24-179-114-25.dhcp.oxfr.ma.charter.com] has quit [Quit: Leaving]
-!- sonne|osx [~sonne@f053041026.adsl.alicedsl.de] has quit [Quit: sonne|osx]
-!- sonne|osx [~sonne@89.204.130.48] has joined #shogun
 sonne|osx	shogun-buildbot_: force build --branch=develop nightly_all
 shogun-buildbot_	build forced [ETA 10m57s]
 shogun-buildbot_	I'll give a shout when the build finishes
 shogun-buildbot_	build #534 of nightly_all is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_all/builds/534
-!- besser82|laptop [~besser82@fedora/besser82] has joined #shogun
-!- besser82 is now known as Guest31030
-!- besser82|laptop is now known as besser82
 sonne|osx	hey besser82 !
-!- Guest31030 [~besser82@fedora/besser82] has quit [Ping timeout: 252 seconds]
 sonne|osx	long time no see
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 48815d9 / src/interfaces/modular/SGBase.i: https://github.com/shogun-toolbox/shogun/commit/48815d95135c517304722919d2b20ef0c9753876
 shogun-notifier-	shogun: for java / c# add dummies for serialization for  SGRefObject
 besser82	sonne|osx: Yes, those business duties you know?!?  :D
 sonne|osx	besser82: I managed to get protobuf to work in the meantime so you can do sth else or do it besser82 :)
 besser82	sonne|osx: I'm going to push your requested cmake changes today  ;)
 sonne|osx	better I mean ;)
 besser82	sonne|osx: like possibly improving protobuf && enabling build of modules from pre-compiled / existing libshogun.so
 sonne|osx	cooooool!
 sonne|osx	external would be graet
 sonne|osx	then i could get the debs towork
* sonne|osx off train
-!- sonne|osx [~sonne@89.204.130.48] has quit [Quit: sonne|osx]
 besser82	sonne|work: btw. is testsuite failing on 32-Bits arches for you, too?
 besser82	sonne|work: on Fedora && RHEL ~10 test are repeatedly failing with ppc / ix86 / armv7h
 besser82	sonne|work: x86_64 (amd64) and ppc64 are running fine...
 shogun-buildbot_	build #1423 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/rpm1%20-%20libshogun/builds/1423  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- new_lido [~walid@41.218.175.226] has joined #shogun
 shogun-buildbot_	build #358 of FC19 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20libshogun/builds/358
 shogun-buildbot_	build #352 of FCRH - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/352
 sonne|work	besser82: back
 sonne|work	besser82: which ones?
 besser82	sonne|work: sry, been afk...  just a momemt
 shogun-buildbot_	build #2057 of deb3 - modular_interfaces is complete: Failure [failed examples and unit tests]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2057  blamelist: Soeren Sonnenburg <sonne@debian.org>
 besser82	sonne|work: http://ur1.ca/g3lld  <---  reproducible on all 32-Bit arches, but HDF5 which fails on 64-Bits, too...
 besser82	sonne|work: does hdf5 need inet-connectivity?
 besser82	sonne|work: the test I mean...
 sonne|work	besser82: the mldata one yes - so disable it - it is downloading some data set from mldata.org.
 besser82	sonne|work: kk, will do so  ;)  thx
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
 sonne|work	besser82: the others seem to be numerical differences like 1E-15 evaluates to 1.0000000000000001e-15.
 besser82	sonne|work: like precision-difference for 64 vs. 32 bits?
 besser82	sonne|work: or related to other problems?
 sonne|work	besser82: yeah I guess so but I better investigate further. I need to run this on some legacy machine to be sure - the differences were really minor but still
 besser82	sonne|work: I can reproduce that in x86 VM and chroot...
 besser82	sonne|work: bare metal (Pentium4), too...
 sonne|work	thoralf: hey good morning! thanks for the patch! do you recall if iglesiasg agreed that we don't need serialization for output?
 thoralf	sonne|work: The problem with m_output also applies to StructuredLabels::m_labels :(
 thoralf	sonne|work: See my commend.
 thoralf	t
 sonne|work	don't get shogun mails at work...
* sonne|work checks the PR
 sonne|work	thoralf: nargh
 thoralf	Yes.
 thoralf	Didn't see that in advance, sorry.
 sonne|work	thoralf: this would rather mean we need some 'cheap' serialization too
 thoralf	Hmm.
 sonne|work	thoralf: not your fault - fernando didn't see it coming either
 thoralf	sonne|work: Okay, SG_ADD is for serialization, right?  So why wo we have to initialize this at object creation?  Maybe just call all these SG_ADDs only when serializing?
 sonne|work	thoralf: in principle yes but we need this for deep_copy of objects / equals too
 thoralf	I see.
 thoralf	Maybe introducing a SG_ADD_UNSERIALIZABLE(...) to add arbitrary variables?
 thoralf	Would be a hack, since it moves the problem to runtime...
-!- new_lido [~walid@41.218.175.226] has quit [Read error: Connection reset by peer]
 sonne|work	thoralf: we have the other overhead like the io / parallel etc objects
 sonne|work	thoralf: but I agree it would be nice to say have some extra class that you just plug in
 sonne|work	and then you get serialization
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 sonne|work	thoralf: it really was never meant to be efficient in that respect
 sonne|work	thoralf: the assumption was that any SGObject is huge anyway
 sonne|work	as in holds a huge matrix or vector or sth
 sonne|work	while it is true we could reduce SGObject memory footprint a bit
 sonne|work	I just don't think that the RealNumber approach for more than debugging is the right way(tm)
 sonne|work	you should rather have some aggregated structure
 sonne|work	say RealNumbers or RealVector(s)
 sonne|work	and then have stuff working on this
 sonne|work	iglesiasg: hey!
 sonne|work	iglesiasg: seen thoralf's comments?
@iglesiasg	hey there
@iglesiasg	yeah, I am following the conversation
 thoralf	Hey iglesiasg - didn't see you sneaking in ;)
@iglesiasg	hehehe
 sonne|work	lisitsyn: any ideas why http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2057/steps/examples%20and%20unit%20tests/logs/stdio is happening
 sonne|work	lisitsyn: location: class org.shogun.SGRefObject
 sonne|work	                this.save_serializable(tmpFile);
 sonne|work	lisitsyn: I did add SERIALIZABLE_DUMMY(shogun::SGRefObject);
 sonne|work	lisitsyn: but it is not used?! any ideas?
 thoralf	sonne|work: Well, maybe we simply could have subclasses of StructuredLabels for each label type.  As labels usually don't live alone.
 sonne|work	thoralf: sounds better - iglesiasg?
 sonne|work	iglesiasg: any thoughts?
@iglesiasg	I understand this is how it is done right now, isn't it?
@iglesiasg	these subclasses would be the current Sequence, RealNumber, FactorGraph, etc
@iglesiasg	well, without etc, I think there are no more than those :D
 thoralf	iglesiasg: No.  Dropping these "Data" classes and putting them into the "Labels" classes.
 thoralf	Drop RealNumber and create RealSOLabels
 thoralf	extending StructuredLabels
 thoralf	Because objects (in shogun) are too expensive to have millions of them.
@iglesiasg	there is a MulticlassSOLabels, SequenceLabels and so that extend StructuredLabels
 thoralf	iglesiasg: But they internally create an object for every label.
@iglesiasg	ok
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has quit [Ping timeout: 264 seconds]
@iglesiasg	thoralf,  so how would they look like now?
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has left #shogun []
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has joined #shogun
 thoralf	I'm just wondering if it would be possible (with finite effort) to refactor the SO labels... Maybe by just making StructuredLabels an interface and each Labels class implementing it's own (efficient) structures.
 thoralf	e.g. RealSoLabels only dealing with SGVector<float> internally.
@iglesiasg	ok, I think it should be possible
@iglesiasg	however, I think that the type of each label should still have the same superclass
@iglesiasg	the current StructuredData
 thoralf	Ehrm.  I was just trying to avoid StructuredData. ;)
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has joined #shogun
-!- naywhayare [~ryan@spoon.lugatgt.org] has quit [Ping timeout: 260 seconds]
@iglesiasg	hehe ok
 thoralf	sonne|work: Btw., why did we make SGDynamicRefObjectArray a SGRefObject instead of CSGObject?
 sonne|work	iglesiasg: please think this through thoroughly - we don't want to waste time here
 thoralf	sonne|work: SGDynamicRefObjectArray could by a CSGObject
@iglesiasg	sonne|work, sure
 sonne|work	thoralf: well it didn't support serialization anyway
 sonne|work	doesn't
@iglesiasg	thoralf, but I don't think I see the problem we are trying too solve. Last week we talked about the overhead introduced because StructuredData extended CSGObject, fine.
@iglesiasg	thoralf, if StructuredData does not extend it, what is the new problem such that you would like to get rid of StructuredData?
 thoralf	That we lose serialization/equals/copy on StructuredLabels, because it's StructuredData entries do not support these operations.
@iglesiasg	Got it then
 thoralf	I think we could either abort the refactoring here or push it further.
@iglesiasg	I am trying to think how would the SO framework look like if there was no StructuredData base class
 thoralf	Depends on how easy it would be to do solve it.
@iglesiasg	thoralf, how would for instance the argmax be defined in the CStructuredModel?
@iglesiasg	In case there is no StructuredData base class.
@iglesiasg	The function signature.
 thoralf	Good point.
@iglesiasg	A completely different approach
@iglesiasg	We not separate CSGObject?
 thoralf	Parse error ;)
@iglesiasg	I believe that the part that gives the overhead is mainly due to model selection and cross validation stuff
-!- naywhayare [~ryan@spoon.lugatgt.org] has joined #shogun
 thoralf	iglesiasg: Yes.
 thoralf	We have four different parameter objects in CSGObject: m_parameters, m_model_selection_parameters, m_gradient_parameters, m_parameter_map
@iglesiasg	maybe these guys should be moved to another class then
 thoralf	parameter/parameter_map are neede for serialization/clone/deep_copy/equals.
@iglesiasg	is the overhead too large if only parameter/parameter_map are kept?
 thoralf	But at least m_model_selection_parameters and m_gradient_parameters are not obvious.
@iglesiasg	If it is, then this approach has no sense whatsoever.
 thoralf	Well, the overhead is mainly introduced by these 4 guys.
 thoralf	So avoiding two of them would be a good deal ;)
 thoralf	Looks like they could be extracted easily from CSGObject.
@iglesiasg	I suggest to send a mail to Heiko in any case, I think he did that so may point out something to take into account
 thoralf	Of course.
 thoralf	But I think this is getting too complicated to be fixed easily.
 thoralf	sonne|work: Agree that we stop working on the issue here?  Too many complications everywhere...
 thoralf	Too many dependencies.
 thoralf	And iglesiasg, thanks for your time.
-!- naywhayare [~ryan@spoon.lugatgt.org] has quit [Ping timeout: 264 seconds]
-!- naywhayare [~ryan@spoon.lugatgt.org] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
@iglesiasg	thoralf, no problem at all :)
 sonne|work	iglesiasg: the right fix is not trying to squeeze every byte out of sgobject - it was never intended to be a cheap object.
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
 sonne|work	iglesiasg: I mean there is a reason why we have a CLabels class and not one CLabel object and then an array of them
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
 sonne|work	iglesiasg: so please think about how we can use aggregated structures and return e.g. multiple things in argmax
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
@iglesiasg	void*
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has quit [Ping timeout: 245 seconds]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Ping timeout: 246 seconds]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- besser82 [~besser82@fedora/besser82] has quit [Ping timeout: 252 seconds]
-!- besser82 [~besser82@77-22-24-6-dynip.superkabel.de] has joined #shogun
-!- besser82 [~besser82@77-22-24-6-dynip.superkabel.de] has quit [Changing host]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- lisitsyn [~lisitsyn@80.252.20.67] has quit [Ping timeout: 248 seconds]
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
 thoralf	Hey.
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has quit [Ping timeout: 272 seconds]
 thoralf	sonne|work: Hmm.  Iglesias said (void*), that's true, but suppose we're having an array of (void*) in StructuredLabels, how would we compare these?
 thoralf	(compare/serialize/...)
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has joined #shogun
 sonne|work	thoralf: I didn't yet understand what is wrong with a typed data container...
 thoralf	sonne|work: Well, as soon we put something into StructuredLabels, which is *not* CSGObject, we'll have this serialization problem.  Right?
 sonne|work	thoralf: well SGVector/SGMatrix/Sparse*/String* etc works of course
 thoralf	Out of the box or with custom code?
 sonne|work	thoralf: out of the box
 thoralf	sonne|work: How does it work?
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
 thoralf	No SG_ADD methods in SGVector.
 sonne|work	thoralf: SG_ADD(&my_vector, "bla", "bla", MS_NOT_AVAILABLE);
 sonne|work	SG_ADD(&my_matrix, "bla", "bla", MS_NOT_AVAILABLE);
 sonne|work	etc
 thoralf	Well, in this case we could simply write "SG_ADD((CSGObject**)&m_outputs, "outputs", "Structured outputs", MS_NOT_AVAILABLE);" in StructuredLabels/MAPInference and we're done?
 thoralf	Without casting it to CSGObject**?
 sonne|work	thoralf: if m_outputs is SGVector or so yes
 thoralf	It is not.
 sonne|work	thoralf: what is it?
 thoralf	m_output is no SGVector
 sonne|work	thoralf: but what then?
 thoralf	I'm trying to figure out what's neccessary to get this SG_ADD back on m_outputs/m_labels... e.g. DynamicRefObjectArray* or StructuredData*
 thoralf	I still don't understand this magic.
 sonne|work	thoralf: which class is this you are talking about - I haven't used the SO framework nor am I the architect so no idea
 sonne|work	thoralf: in any case there is no magiv
 sonne|work	c
 sonne|work	thoralf: you just SG_ADD() variables you want to register
 thoralf	Can these variables be of any type?
 lisitsyn	any of supported ;)
 thoralf	lol
 sonne|work	thoralf: and all you can do is add CSGObject data types and the SG{Vector,Matrix,SparseMatrix} types and scalars like bool / int32_t etc
 sonne|work	lisitsyn: ahh you there - seen my question above?
 lisitsyn	sonne|work: no, let me read llogs
 lisitsyn	sonne|work: uhm what question sorry?
 sonne|work	(09:59:04 AM) sonne|work: lisitsyn: any ideas why http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2057/steps/examples%20and%20unit%20tests/logs/stdio is happening
 sonne|work	(09:59:16 AM) sonne|work: lisitsyn: location: class org.shogun.SGRefObject
 sonne|work	(09:59:16 AM) sonne|work:                 this.save_serializable(tmpFile);
 sonne|work	(09:59:37 AM) sonne|work: lisitsyn: I did add SERIALIZABLE_DUMMY(shogun::SGRefObject);
 sonne|work	(09:59:45 AM) sonne|work: lisitsyn: but it is not used?! any ideas?
 lisitsyn	hmm interesting
 sonne|work	lisitsyn: we refactored SGObject so that it derives from SGRefObject which in turn only does the refcounting
 lisitsyn	sonne|work: yeah I was following it a bit
 sonne|work	lisitsyn: so it makes sense to be able to expose any SGRefObject to the modular interfaces (since we only need ref/unref)
 lisitsyn	sonne|work: quite strange it didn't work
 sonne|work	thoralf: clear now?
 thoralf	sonne|work: Well, yes.  But seems unsolvable (within finite time).
 lisitsyn	sonne|work: can't see why it fails
 sonne|work	lisitsyn: hmmh  I don't see it either
 sonne|work	thoralf: you know more about the framework than me - what is the current requirement?
 lisitsyn	sonne|work: may be SGBase.i:313?
 lisitsyn	the class is referenced before extended
 lisitsyn	I don't know if that could cause it
-!- Saurabh7 [~Saurabh7@115.248.130.148] has joined #shogun
 sonne|work	lisitsyn: could be no idea - try it
-!- Saurabh7 [~Saurabh7@115.248.130.148] has quit [Client Quit]
-!- Boeke [~alex@24-179-114-25.dhcp.oxfr.ma.charter.com] has joined #shogun
 sonne|work	Boeke: what was your question again?
 sonne|work	Boeke: ahh yes HDF5
 sonne|work	Boeke: just use HDF5File
@wiking	lisitsyn: eigen is fucking awesome
 lisitsyn	wiking: yeah eigen is ok ;)
 lisitsyn	what makes you that excited?
 Boeke	yeah ok. I can't load it I am going to go back and see if I can't do what I did last time I had a problem loafing a module.
 thoralf	sonne|work: No real requirement?  We tried to refactor StructuredData, but it didn't work out.  ;)
 thoralf	sonne|work: My requirement was: Use less memory, but that's already solved.  You said, we should refactor StructuredData. ;)
@wiking	lisitsyn: well that it has all the modules for sparsesuite as well
@wiking	lisitsyn: and cholmod already has support for gpu based factorization
 Boeke	So the error I get is vague and different from last time
 Boeke	ImportError: cannot import name HDF5File
 lisitsyn	wiking: viennacl is interesting in that part
@wiking	lisitsyn: yeah i've checked yesterday
 lisitsyn	with good interfacing with eigen
@wiking	lisitsyn: it has one factorizer (incomplete cholesky) for sparse matrices
@wiking	or no
@wiking	http://viennacl.sourceforge.net/doc/namespaceviennacl_1_1linalg_1_1detail.html#ae72d75fd519eaf00742aeaf86abb1d3a
 lisitsyn	wiking: they have interesting thing with these 'tags'
 lisitsyn	to designate algorithm to be used
 sonne|work	Boeke: but hdf5 got detected by cmake?
@wiking	so actually i'm going to go with having the factorization algo as a template module
@wiking	lisitsyn: as if u have viennacl then u might want to do opencl based factorizatio
 lisitsyn	wiking: what do you do and why? ;)
@wiking	lisitsyn: well currently a KKT equation solver
@wiking	lisitsyn: the idea is that it could be used by other optimizers
 lisitsyn	is it lacked currently?
 lisitsyn	;)
 lisitsyn	I have no idea about that
@wiking	but i'll use it in my own qp solver
@wiking	lisitsyn: well the thing is that htis is always reimplemented eveyrwhere
@wiking	*everywhere
 lisitsyn	I see
@wiking	and of course it's never super optimized
 Boeke	oh no I realized I needed hdf5 after I installed. I am new to 9 gig data sets.
@wiking	lisitsyn: and since matrix factorization is heavily used in this tasks... i thought that it would be good to have the factorization methods as a plugin
 Boeke	I guess I need to uninstall and reinstall again right?
@wiking	Boeke: reinstall should be fine
@wiking	as it'll overwite your previous install
 Boeke	ok thanks
 Boeke	cmake is throwing a lot of errors trying to add custom rules to things that already have them
@wiking	eh
@wiking	try to rm -rf build
@wiking	and then create build dir and rerun cmake
@wiking	should help with such problems
 Boeke	ok
 Boeke	I still encounter that error
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has quit [Read error: Connection reset by peer]
-!- sonne|work1 [~sonnenbu@24-134-74-216-dynip.superkabel.de] has joined #shogun
@wiking	voila http://gigaom.com/2013/11/26/docker-goes-broader-supporting-more-linux-distros-out-of-the-box/
@wiking	Boeke: can u pastebin that error plz
@wiking	http://blog.docker.io/2013/11/docker-0-7-docker-now-runs-on-any-linux-distribution/
@wiking	http://blog.docker.io/2013/11/docker-0-7-docker-now-runs-on-any-linux-distribution/
 Boeke	ok I will try
@wiking	Boeke: if u really need shogun out of box just use our docker image
@wiking	Boeke: otherwise just copy-paste us somehow your erro
@wiking	r
 Boeke	http://pastebin.com/1SbsG0SV
@wiking	oooh
@wiking	Boeke: did u use shogun before 3.0?
 Boeke	yes
@wiking	ok that all makes sense now
@wiking	:)
@wiking	Boeke: so in /home/alex/shogun-3.0.0/src/interfaces/python_modular
@wiking	delete those files that the cmake is complaining about
 Boeke	ok
@wiking	i.e. Machine.i Multiclass_includes.i Distance.i
@wiking	etc
@wiking	and rerun in your build dir the cmake
 besser82	sonne|work, wiking, lisitsyn, thoralf: any objections moving the generation of documented examples from external-script to cmake-internal?  So the documented examples are actually generated out of source-tree?
 besser82	same for config.h / version.h, too?
 thoralf	And class_list.cpp? ;)
@wiking	besser82: no
@wiking	besser82: go ahead
 besser82	thoralf: class_list.cpp is autogenerated?
 thoralf	besser82: Yes.
@wiking	besser82: the only problem you'll have with the examples that it depends on the data submodule
 thoralf	class_list.cpp.py
@wiking	besser82: and it's hardcoded in the examples (the path)
@wiking	besser82: it's like ../data/<datafilename>
@wiking	besser82: so that'll need to be generated somehow within the build dir
 thoralf	besser82: Yields to problems some times, if you're building release/debug versions alternately.
@wiking	besser82: yes class_list is generated as well
 besser82	wiking: setting up a symlink isn't the problem  ;)
@wiking	besser82: yeah i know i'm just saying that it should be in the right 'level' :P
 besser82	wiking:  ;)
@wiking	besser82: that goes really for all the examples (libshogun, *_modular etc)
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has quit [Read error: Operation timed out]
 besser82	wiking: Seen it  ;)
 besser82	wiking, thoralf: anything else being autogenerated?
@wiking	besser82: noup... just in unit tests
@wiking	besser82: but those are generated within the build dir
 besser82	wiking: so actually with cmake magic, rye?
@wiking	so that should be alright
 besser82	wiking: any objections to alter the generation of the modules in a way they will properly use ccache?
 besser82	wiking: like speeding rebuilds somewhat insane  ;)
 sonne|work1	besser82: no we like long compile times!
@wiking	besser82: well we use already ccache
@wiking	besser82: both for modular interfaces and libshogun
@wiking	i.e. ccache and ccache-swig
@wiking	if of course ccache or ccache-swig is available
@wiking	so i dont see how that could be still cached...?
@wiking	or in another way
 besser82	wiking: I'm using ccache,too; but builds still take ~10 minutes for me  :(
 besser82	wiking: so there must be a solution  :-P
@wiking	besser82: well ccache is being prepended for each compilation if aavailable
-!- iglesiasg [~iglesias@2001:6b0:1:1041:e4ea:290f:b6ca:d6e] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@wiking	hence i really dont see how that can be still changed to be faster
@iglesiasg	thoralf, they there!
 thoralf	Hey iglesiasg
 besser82	wiking: but infact a lot of files of the modules are with the same name
 besser82	wiking: that shreds most of ccache afaik....
@iglesiasg	thoralf, I have been thinking about the SO refactoring. Let me ask you
 besser82	iglesiasg: hi!
@wiking	besser82: yes but the thing is that the swig file for all the interfaces a monolithic file...
 thoralf	iglesiasg: Go ahead. :)
@wiking	besser82: modshogun.i
@iglesiasg	thoralf, if there is no StructuredData class, how will serialization be supported?
@iglesiasg	besser82, sup!
@wiking	besser82: and that is being ccached
 thoralf	iglesiasg: I've been thinking about that, but I don't know.
@iglesiasg	thoralf, ok, I see
 thoralf	iglesiasg: With my current PR it wouldn't work any more. ;)
@iglesiasg	thoralf, because I guess the argmax issue we talked about before could be fixed by using void* somewhere
 besser82	wiking: let me investigate some optimization possibilities
 thoralf	iglesiasg: Yeah, but still: StructuredLabels must contain something that can be serialized.
 besser82	wiking: i possibly may find some....
@iglesiasg	thoralf, exactly
 thoralf	iglesiasg: Either array of CSGObject or SGVector or SGMatrix, whatever
@iglesiasg	thoralf, yes. However, SGVector and SGMatrix are just designed to contain primitive data types
@iglesiasg	which makes sense to me
 thoralf	iglesiasg: Currently this is unsolved - independently of the argmax
 thoralf	iglesiasg: I know.
@wiking	besser82: note that we had problems with previously trying to separate swig files into modules.... this is why we have now one monolitic swig file (modshogun.i)
@iglesiasg	thoralf, but I still don't understand why can't we have a lightweight CSGObject
 sonne|work1	iglesiasg: we could but it doesn't fix the problem
 besser82	wiking: mhh....
@iglesiasg	sonne|work1, why not?
 thoralf	iglesiasg: I already tried - have a look at SGRefObject.
 besser82	wiking: lemme try...
 thoralf	iglesiasg: There are many dependencies on every thing implemented in CSGObject.
@wiking	besser82: if we could use swig modules we could use ccache on those... but at last we tried it was not possible, as the modular interfaces were just crashing
 sonne|work1	iglesiasg: you still have a comparably huge overhead for just storing one float
 thoralf	iglesiasg: We could outsource gradient/model selection stuff as well, but I think thats all.
 sonne|work1	iglesiasg: the right fix would be to use an object that contains not just 1 float but say a vector or matrix of floats
 thoralf	sonne|work1: But SO works differently - it should be able to handle arbitrary outputs.
@iglesiasg	sonne|work1, thoralf, however, I still think that the idea of storing a float as a structured label does not really represent what the SO stuff is usef for
 thoralf	sonne|work1: Trees, sequences, sets, etc.
 sonne|work1	thoralf: arbitrary outputs composed of basic data types
@iglesiasg	what I mean is that we should not aim at designing the structured labels so that they are efficient when CStructuredLables is basically an array of floats
 thoralf	sonne|work1: Of course, but still: How would you represent a class that can hold arbitrary combinations of basic types?
 sonne|work1	thoralf: how many of these class instances do you expect?
 sonne|work1	normally I would say CSGObject
 sonne|work1	butif #instances is too big you need some aggregated labels for efficiency reasons
@iglesiasg	thoralf, wiking, you guys have experience with SVMStruct code, don't you?
 thoralf	iglesiasg: Yes.
@iglesiasg	thoralf, how do they solve this issue we are facing here?
@iglesiasg	IIRC, in the doc it is claimed that you can pretty much implement your own labels as you want and still use their solvers
 thoralf	iglesiasg: You can define your own struct to represent your outputs, then compile it. ;)
@iglesiasg	but internally, in the ssvm solver for instance, this struct must be handled somehow
 thoralf	iglesiasg: And you have to implement all stuff that deals with your data type.
@iglesiasg	I don't think I am making my point very clear.... argh
 thoralf	We need a whiteboard. ;)
 thoralf	Feels like a big misunderstanding. ;)
@iglesiasg	hehehe
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
@iglesiasg	thoralf, let me try to explain
@iglesiasg	thoralf, so SVMStruct supports any data type the user may define
@iglesiasg	thoralf, agree?
 thoralf	Yes, but it doesn't have any overhead like additional attributes you didn't define.
@iglesiasg	agree
@iglesiasg	then it must be that the user defined struct does not extend any internal SVMStruct class
@iglesiasg	thoralf,  good so far?
 thoralf	Yes.
@iglesiasg	All right.
 thoralf	And that's the main difference to shogun, btw.
 thoralf	The implementation is similar, except that svmstruct does not provide serialization, etc.
@iglesiasg	Then, how do the signatures of the functions that use this user defined data look like?
@iglesiasg	Because these functions must be used somewhere in their code for sure
 thoralf	loss(label *ytrue, label *ypred);
@iglesiasg	all right
 thoralf	iglesiasg: SVMstruct only handles one implemented type at a time.
 thoralf	You need another type?  Recompile.
@iglesiasg	Aham!
 thoralf	It's the C-way.  Not real C++. ;)
@iglesiasg	We cannot afford doing that unfortunately
 sonne|work1	thoralf: but you surely could do that in C too
 thoralf	sonne|work1: Is there a way to implement custom comparator/serialization functions for StructuredLabels?
@iglesiasg	sonne|work1, do you mean  without the need to recompile?
 thoralf	(an easy way preferably ;))
 sonne|work1	iglesiasg: yes
@iglesiasg	sonne|work1, I'd say that you can do that in C using void*
 sonne|work1	iglesiasg: well you can fake classes by handing over structs that contain function pointers...
 sonne|work1	that is how the linux kernel guys do it
 thoralf	Pseudo-Objective-C.  Loving it. ;)
@iglesiasg	thoralf, the only thing I can think about now is to make a new StructuredData base class that supports everything we need (serialization, lightweight, hopefully ref count like the one in SGObject)
@iglesiasg	thoralf, but that sounds pretty crazy :D
 sonne|work1	iglesiasg: but that is not efficient right?
@iglesiasg	sonne|work1, efficient in terms of the time/effort if may take?
 sonne|work1	iglesiasg: efficient memory overhead
@iglesiasg	sonne|work1, why not? Ref count would probably include little overhead, but I don't see how serialization would include any overhead
 thoralf	iglesiasg: The SG_ADD stuff introduces the overhead at object creating.
 thoralf	creation
@iglesiasg	thoralf, what does SG_ADD do internally?
@iglesiasg	ref count stuff, model selection stuff, both?
 sonne|work1	well we could say we have one SerializationFramework class
 sonne|work1	and all SGObjects have that as a member
 sonne|work1	which is null usually
 sonne|work1	but only when we do a serialization (load/save/comparison)
 sonne|work1	the object gets created
 thoralf	sonne|work1: Sounds pretty good.
 thoralf	Lazy initialization.
 sonne|work1	this certainly makes sense (has some other issue - like you serialize and suddenly it eats memory like hell)
 sonne|work1	but no idea if this is the right approach - I would rather use some aggregated labels
@iglesiasg	how would these aggregated labels look like?
 thoralf	sonne|work1: The easiest way would be to have skinny StructuredData objects.  Nothing more than structs.
 sonne|work1	iglesiasg: e.g. not a real number but a vector - for multiple labels
 thoralf	sonne|work1: So basically structs+refcounting.  Minimal overhead.
 sonne|work1	thoralf: but we don't have that because we want serialization of ?
 thoralf	sonne|work1: That brings us back to my above question: Is there a way to implement custom comparator/serialization functions for StructuredLabels? ;)
 thoralf	StructuredLabels taking care of it's own stuff.  So we can implement StructuredData as skinny as possible.
 sonne|work1	thoralf: nah sounds more difficult than the optimized SGObject
@iglesiasg	CSGObject::equals is virtual so why not
@iglesiasg	about serialization idk
@iglesiasg	where is the serialization code btw?
 sonne|work1	iglesiasg: SGObject.cpp and Parameter*
@iglesiasg	load_serializable I see
@iglesiasg	and save, etc
@iglesiasg	all right, I have to run to a lab session now, see you later
-!- iglesiasg [~iglesias@2001:6b0:1:1041:e4ea:290f:b6ca:d6e] has quit [Quit: Ex-Chat]
-!- sonne|osx [~sonne@89.204.138.171] has joined #shogun
* sonne|osx sighs
 Boeke	Hi cmake is working but can't find "HDF5_DIR: The directory containing a Cmake configuration file for HDF5."
 sonne|osx	Boeke: please paste the output of cmake ... do you have hdf5 developer files installed?
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 3761d82 / src/interfaces/modular/SGBase.i: https://github.com/shogun-toolbox/shogun/commit/3761d82ef03ab45aa237d2e9412babaf9471ac4a
 shogun-notifier-	shogun: add dummy before doing ref / unref magic
 Boeke	I do have the dev files installed. Cmake doesn't throw any errors I could generate and exit
 Boeke	I just don't think that will get HPF5File installed.
@wiking	Boeke: can u copy paste the whole output of cmake somewhere
@wiking	?
 Boeke	cmake or ccmake ?
 sonne|osx	Boeke: cmake in the beginning gives you an overview what optional features you have installed
 Boeke	ok
 sonne|osx	Boeke: please paste that so we know hdf5 is among the detected libs
 Boeke	I will do that
-!- sonne|osx [~sonne@89.204.138.171] has quit [Quit: sonne|osx]
 Boeke	http://pastebin.com/HCD8FF5K
 Boeke	so it did find HDF5
@wiking	yes
 Boeke	ok ccmake can't find the directory but cmake knows the package is there. If I generate a make file with ccmake will it know I have HDF5?
@wiking	what?
@wiking	u might want to read this: https://github.com/shogun-toolbox/shogun/blob/develop/README_cmake.md
 shogun-buildbot_	build #1424 of rpm1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/rpm1%20-%20libshogun/builds/1424
 Boeke	ok will do
 besser82	wiking: Where do I find this `modshogun.i`-swig-file?
@wiking	besser82: src/interfaces/modular
@wiking	there are all the common swig .i files
 shogun-buildbot_	build #320 of precise - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/320  blamelist: Soeren Sonnenburg <sonne@debian.org>
 besser82	wiking: Thanks! As I suspected  ;)
 besser82	wiking: And there lies the source of shredding the ccache  ;)
 besser82	wiking: lot's of inlining and such....
 besser82	wiking: with basically the same filenames, but different behaviour depending on what's defined....
 besser82	wiking: that is what shreds the ccaches and make compiling that slow....
 besser82	wiking: or (at least) recompiling...
-!- Saurabh7 [~Saurabh7@115.248.130.148] has joined #shogun
@wiking	besser82: yes but u cannot simply run swig on those files alone
@wiking	besser82: i.e. you cannot use ccache-swig
-!- lisitsyn [~lisitsyn@80.252.20.67] has joined #shogun
-!- lisitsyn [~lisitsyn@80.252.20.67] has quit [Quit: Leaving.]
 shogun-buildbot_	build #2058 of deb3 - modular_interfaces is complete: Failure [failed examples and unit tests]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2058  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has joined #shogun
-!- zxtx [~zv@ool-2f110054.dyn.optonline.net] has quit [Ping timeout: 245 seconds]
-!- travis-ci [~travis-ci@ec2-54-235-6-45.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/14553487
-!- travis-ci [~travis-ci@ec2-54-235-6-45.compute-1.amazonaws.com] has left #shogun []
 besser82	wiking: I know... but there could be some possibility for a huge speed gain
 Boeke	Hi I got it working. I really appreciate your help and patience  with my low level of understanding. Thanks
-!- thoralf_ [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Ping timeout: 246 seconds]
-!- lisitsyn [~lisitsyn@80.252.20.67] has joined #shogun
-!- Saurabh7 [~Saurabh7@115.248.130.148] has quit [Quit: Leaving]
@wiking	besser82: again how?
 besser82	wiking: I'm not sure,yet... trying to find a solution...
-!- sonne|osx [~sonne@f053041026.adsl.alicedsl.de] has joined #shogun
 sonne|osx	lisitsyn: didn't help!
-!- Saurabh7 [~Saurabh7@115.248.130.148] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf_ [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Ping timeout: 245 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@wiking	besser82: yeah the solution would be to do swig modules
@wiking	but we had problems with that
-!- lisitsyn [~lisitsyn@80.252.20.67] has quit [Ping timeout: 245 seconds]
-!- lisitsyn [~lisitsyn@80.252.20.67] has joined #shogun
-!- sonne|osx [~sonne@f053041026.adsl.alicedsl.de] has quit [Quit: sonne|osx]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Client Quit]
-!- thoralf_ [~thoralf@91-65-142-97-dynip.superkabel.de] has joined #shogun
-!- thoralf_ [~thoralf@91-65-142-97-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
--- Log closed Wed Nov 27 00:00:42 2013
