--- Log opened Mon Sep 02 00:00:41 2013
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- hushell [~hushell@c-98-232-178-161.hsd1.or.comcast.net] has joined #shogun
-!- sonne|osx_ [~sonne@f053040230.adsl.alicedsl.de] has joined #shogun
-!- sonne|osx [~sonne@g225080229.adsl.alicedsl.de] has quit [Ping timeout: 240 seconds]
-!- sonne|osx_ is now known as sonne|osx
-!- gsomix [~gsomix@85.26.232.136] has joined #shogun
 gsomix	sonney2k, sonne|osx hey. I will be available today at evening.
 gsomix	I finally finished all works at home.
 gsomix	gtg
-!- gsomix [~gsomix@85.26.232.136] has quit [Client Quit]
-!- sonne|osx [~sonne@f053040230.adsl.alicedsl.de] has quit [Quit: sonne|osx]
-!- sonne|osx [~sonne@82.113.121.20] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * c00c71a / examples/undocumented/python_modular/ (167 files): https://github.com/shogun-toolbox/shogun/commit/c00c71a6cf13ed166dc52bb6395d4ec828741894
 shogun-notifier-	shogun: drop shogun.* structure and import from modshogun instead
-!- sonne|osx [~sonne@82.113.121.20] has quit [Quit: sonne|osx]
-!- travis-ci [~travis-ci@ec2-54-211-15-52.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10882296
-!- travis-ci [~travis-ci@ec2-54-211-15-52.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1951 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1951
 shogun-buildbot	build #1579 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1579  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1664 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1664  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1363 of cyg1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/cyg1%20-%20libshogun/builds/1363  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
 shogun-buildbot	build #1042 of rpm1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/rpm1%20-%20libshogun/builds/1042
-!- van51 [~van51@ppp-94-66-92-175.home.otenet.gr] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- lambday [67157d4c@gateway/web/freenode/ip.103.21.125.76] has joined #shogun
-!- iglesiasg [~iglesias@n157-p43.kthopen.kth.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	sonney2k, ping
-!- van51 [~van51@ppp-94-66-92-175.home.otenet.gr] has quit [Quit: Leaving.]
@iglesiasg	someone around here who has used / is using the octave modular interface?
-!- van51 [~van51@94.66.92.175] has joined #shogun
-!- thoralf [~thoralf@enki.zib.de] has joined #shogun
 thoralf	Hey.
@iglesiasg	Hello
-!- HeikoS [~heiko@nat-169-160.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 thoralf	iglesiasg: You're the guy who did the SO-learning in shogun, right?  Then you probably know something about the bundle method implementation?
 thoralf	HeikoShi
@HeikoS	thoralf: hi!
@iglesiasg	thoralf, at the phone
 lisitsyn	thoralf: I know a bit
@iglesiasg	thoralf, here I am
@HeikoS	lambday: hi!
@iglesiasg	thoralf, I have a very high level understanding of the method. Very little idea bout Michal's implementation
@iglesiasg	only that it is hardcore C code
 thoralf	lisitsyn: Okay, I'm using simple BMRM and getting mean results.  (First of all it had some severe memory issues, but I fixed it.)  So I'm thinking of using the other implemented methods and I'm not sure if it's worth fixing them as well. ;)
@iglesiasg	I think there were even gotos :O
@iglesiasg	thoralf, Michal mentioned that the other methods were much faster
 thoralf	lisitsyn: I have very high dimensional data (2^32) and it takes loooong time to converge, lots of memory (no wonder ;))
@HeikoS	thoralf: it would be cool if you could make these things work and maybe even probide some examples and unit-tests ;)
 thoralf	HeikoS: I'm not surprised that you're mentioning unit-tests. :)
@HeikoS	thoralf: haha :)
@HeikoS	thoralf: well, without them, this is what you get: memory issues and loads of problems
@HeikoS	especially if the original author is gone
 thoralf	HeikoS is the unit-test man.  While wiking is the RTFM man. :D
@HeikoS	and noone has an idea how things work
@HeikoS	thoralf: just trying to make our code sustainable ;)
@HeikoS	haha, yeah very true ,th
@HeikoS	, thoralf
 lisitsyn	thoralf: so what's the question? ;)
 thoralf	lisitsyn: Just some experience about the other methods.  Accuracy, time, memory, convergence... ;)
 thoralf	lisitsyn: But iglesiasg already answered that. :)
 thoralf	lisitsyn: Of course, only empirically.
 lisitsyn	thoralf: ah I see
 thoralf	lisitsyn: Btw. did you check that the implementation is correct?  Or can tell pathological cases to test that?
@iglesiasg	thoralf, but I suggest you to have a look at their paper
 lisitsyn	thoralf: well it works as multiclass svm
@iglesiasg	thoralf, Vojtech and Michal have a paper about these methods IIRC
@iglesiasg	thoralf, I tested it in multiclass SVM and HM-SVM and worked well. Michal tested that in his GSoC too
@iglesiasg	but I found some problems later on with my grid graph model
 thoralf	iglesiasg: I know the referenced papers (Teo, C.H., Vishwanathan, S.V.N, Smola, A. and Quoc, V.Le. as well as Tsochantaridis, I., Hofmann, T., Joachims, T., Altun, Y.)
 thoralf	iglesiasg: But I'll have a look at their paper.
@iglesiasg	Tsochantaridis doesn't talk about bundle methods, does it?
 thoralf	iglesiasg: He doesn't.
@iglesiasg	about Teo, I am not sure if it is just BMRM or the other ones as well
 thoralf	iglesiasg: But he has been cited in DualLibQPBMSOSVM.h
@iglesiasg	I see
@iglesiasg	thoralf, I have also spoken with Michal a few times over google chat and he has been pretty helpful, so I guess you can count on that too
 thoralf	iglesiasg: Yeah, but I should read the paper first.
 thoralf	You helped a lot so far.
@iglesiasg	Bundle Methods for Structured Output Learning--Back to the Roots
@iglesiasg	thoralf, I think that one contains what in Shogun is called PPBMRM and P3BMRM
 thoralf	iglesiasg: Btw. I've been pimping the SO-model/-machine implementation to parallelize across 32 cores. :)
@iglesiasg	thoralf, cool!
@iglesiasg	are you using some framework for parallelizing it?
 thoralf	iglesiasg: No, yes.  I tried both pthreads and openmp.
 thoralf	iglesiasg: But the resulting code looks more beautiful with openmp.
@iglesiasg	nice
@HeikoS	thoralf: go for openmp, we will soon have some mechanism for this in shogun
@HeikoS	and openmp is less work ;)
 thoralf	HeikoS: I know. :)
 thoralf	(both)
@HeikoS	thoralf: currently playing with PBS backend for independent jobs
@HeikoS	works pretty nice
 thoralf	PBS?
@HeikoS	and this gives a unified interface for any parallel thing
@HeikoS	thoralf: batch cluster system
@HeikoS	thoralf: where one can submit jobs to
 thoralf	HeikoS: Cool.  Which system?
 thoralf	HeikoS: SUN?
@HeikoS	thoralf: the qsub based one, we call it PBS here
@HeikoS	but the sun interface is same I think
 thoralf	HeikoS: qsub/sqsub... should be the same.
@HeikoS	thoralf: yep
@HeikoS	all the batch systems are similar, there is also this SLURM
@HeikoS	and its nice to (ab)use them for parallelization within algorithms
@HeikoS	doesnt make always sense, but sometimes its very useful
@HeikoS	thoralf: we also want to hapen openmp style parallelization
 thoralf	HeikoS: Cross validation/parameter tuning makes sense.
@HeikoS	thoralf: yep exactly, this will be one bigger example
 thoralf	HeikoS: I already have a experiment running using openmp/pthreads to parallelize locally.
@HeikoS	thoralf: cool, maybe we can share experience
@HeikoS	thoralf: I want to tackle this later in the year or early next one
@HeikoS	thoralf: maybe with lambday if he has time
 thoralf	HeikoS: I already did some fixed with this cross-validation-pthread-issue if you remember.
 thoralf	HeikoS: So shogun is ready for this.
@HeikoS	thoralf: nice!
@HeikoS	thoralf: if we had thread safe subsets then we can also parallelize x-bvalidation
 thoralf	HeikoS: (If you don't remember: It's the issue where I refused to do unit tests. ;))
@HeikoS	thoralf: currently, svm and x-validation doesnt work from mutliple threads
@HeikoS	thoralf: I remember :D
@iglesiasg	HeikoS, I remember now what I wanted to ask you the other day! haha
 thoralf	HeikoS: Building examples is very time consuming, so I'll take any help I get, because I really would like to help, but have other things to do. :)
@HeikoS	thoralf: I know this is why I am asking people all the time
@HeikoS	iglesiasg: ha! ok :)
@iglesiasg	HeikoS, about the ipython notebook. I have these i.pynb_checkpoints directory, no problem removing it I guess?
@HeikoS	iglesiasg: I think not
 thoralf	HeikoS: I have many other local changes to prepare for sparse computations.  (In my cases speeding up to factor 20)
@HeikoS	its all for storing the kernel
@HeikoS	thoralf: nice!
@HeikoS	very cool!
 thoralf	HeikoS: It's no rocket sience - just lot of work and testing. ;)
 thoralf	Gotta work, see you later and thanks for helping.
@HeikoS	ok, thanks also, bye!
-!- van51 [~van51@94.66.92.175] has quit [Quit: Leaving.]
 lambday	HeikoS: hey
@HeikoS	lambday: hi!
@HeikoS	lambday: how are things?
 lambday	HeikoS: sorry I didn't notice
 lambday	HeikoS: CG-M is bad :(
 lambday	I am currently running each and every thing step by step
 lambday	CG-M related
@HeikoS	lambday: what is bad?
 lambday	something is really off
@HeikoS	what exactly happens?
@HeikoS	lambday: and what works?
 lambday	the test I am doing, I took a small matrix.... and then solving it just for one shift... and then comparing it with a CG-solver moving that one shift into the diag
@HeikoS	ok?
 lambday	HeikoS: ideally these two should be converging towards the same point
 lambday	but CG-M moves somewhere else
 lambday	trying to figure out what causes this.. and if there is a mistake in my implementation than that of paper
@HeikoS	lambday: CIterativeShiftedLinearFamilySolver right?
 lambday	HeikoS: then I will try this approach - in the paper (the mail I sent you) they plotted the residual
 lambday	HeikoS: that's where it computes the shifted  stuffs
 lambday	zeta/beta/alpha_sh things
 lambday	HeikoS: well, one idea is thsi
@HeikoS	lambday: with these kind of problems, you should try to test all parts, starting from the very smallest
 lambday	the plot of residual in the paper - it seems to have a weird zigzag nature
 lambday	HeikoS: yes that's what I am trying to do
@iglesiasg	KTH completely closed one day due to Obama coming!
@HeikoS	lambday: then thats good, there are probably also some bugs in the code, there always are
@iglesiasg	no office for me on Wednesday :(
@HeikoS	lambday: so this will be good anyway
@HeikoS	iglesiasg: haha ;)
 lisitsyn	iglesiasg: instead of russia ;)
@HeikoS	lambday: keep in mind, usually errors are caused by simple thing
@HeikoS	s
@HeikoS	so dont get too involved in alternatives, testing is the best way to understand whats the problem
 lambday	HeikoS: I need to make it work :( .. I will plot the residual and then will see...
 lambday	yes
@HeikoS	so if you can find the exact point where things fail, this will be useful
@HeikoS	lambday: dont get stressed out, I am sure you will find the problem soon
 lambday	HeikoS: yes.. but its impossible to know prior to the iterations whether something will converge or not for shifted family solver
 lambday	that'
@HeikoS	lambday: try to focus on simpler things first, not too many other methods and plots
 lambday	s what the paper says
 lambday	alright
@HeikoS	lambday: you have to explain that ^
 lambday	HeikoS: we cannot know whether a shifted family with cg-m solver will converge or not
 thoralf	lambday: You're sure that the solution/the first step is canonical?
 lambday	there is another convergence test (after running the algorithm)
 lambday	HeikoS: I didn't get... first step??
@HeikoS	lambday: how do you terminate currently?
 lambday	HeikoS: based on the tolerence on residual
 lambday	which is 1E-5
@HeikoS	lambday: I mean if this is the case, then there has to be a warning to the user to increase accuracy, or even a restart with increased accuracy
 lambday	by default
 lambday	umm.. yes...
@HeikoS	lambday: its just important to be aware of that
@HeikoS	lambday: but I believe there is a bug or something
@HeikoS	lambday: the matrices you were using were all easy
 lambday	currently I have that "did not converge"...
@HeikoS	and the ones I tested were too
@HeikoS	lambday: what if you increase accuracy or number of its qiute a bit, what happens?
 lambday	HeikoS: yeah that's what I think... just like the probing sampler thing, it took me quite a long time where the mistake was coming from
@HeikoS	lambday: yeah
@HeikoS	lambday: so just keep on testing different things, this we you also know what you can rely on
@HeikoS	lambday: but make sure you use some non-trivial problems in the tests at some point to simulate difficulty
 lambday	what I have noticed, sometimes it doesn't converge at all... I tried with tolerence 0.01 even still doesn
 lambday	't work
 hushell	wiking: hey, how do we set up Mosek in CMake?
 lambday	HeikoS: yes.. but first things have to work for small things at least..
@HeikoS	lambday: yep true
@HeikoS	lambday: ok, keep on pushing it :) I will today finish the cluster stuff
 lambday	HeikoS: did you notice anything regarding CG-M convergence in your implementation
@HeikoS	lambday: I solved individually since I was in a rush
@HeikoS	lambday: but you can of course ask daniel/erlend
@HeikoS	though again, I would search for bugs first and try to understand why things break
@HeikoS	when does it diverge etc?
 lambday	yes that's what I was going to say
 lambday	:)
@HeikoS	does it depend on the smallest eigenvalues?
@HeikoS	or on something else
@HeikoS	usually those bastards cause trouble ;)
 lambday	nah.. not eigenvalues :(
 lambday	:D
 lambday	the ozone matrix has really horrible cond number
 lambday	:-o
@HeikoS	lambday: yes
@HeikoS	in fact its almost inf
@HeikoS	I added a ridge on the diagonal ;)
@HeikoS	be back soon
 lambday	okie
 lambday	I too am getting back to work :)
 lambday	ciao :)
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
@iglesiasg	is there a reason why we are changing in python to import everything from modshogun instead of shogun.*?
 lisitsyn	iglesiasg: I can say yes
 lisitsyn	but can't say why
 lisitsyn	I don't remember
@iglesiasg	haha ok
@iglesiasg	so should I expect that any time soon shogun.* imports won't be supported any more?
 lisitsyn	anything shogun.Whatever is just an alias to modshogun
 lisitsyn	you can from shogun.Features import SVM
@iglesiasg	hahaha
@iglesiasg	ok
@iglesiasg	that is a good reason to stop doing that then
 lisitsyn	that's just backcompatibility
@iglesiasg	it just adds a layer of confusion IMHO
 lisitsyn	yes the seventh layer of hell
 lisitsyn	or whatever level :)
@iglesiasg	hehe yeah
@iglesiasg	I am changing my local examples to modshogun then
-!- sonne|work [~sonnenbu@91-64-72-127-dynip.superkabel.de] has joined #shogun
@iglesiasg	sonne|work, hello hello
@iglesiasg	got a question about octave modular
@iglesiasg	sonne|work, if I open an octave session and do modshogun and then exit
@iglesiasg	it segfaults ?rettu badly
@iglesiasg	oh shit, ?rettu, was supposed to be pretty (bad hand position)
@iglesiasg	is that expected behaviour?
 sonne|work	iglesiasg: no
@iglesiasg	then we've got a problem
@iglesiasg	thoralf, very nice unit tests in that PR ;)
@HeikoS	iglesiasg: no need to do that I always do from shogun.Bla import Bla
@HeikoS	votjakovr: hi!
@iglesiasg	HeikoS, in Octave?
@HeikoS	iglesiasg: o that I dont know, just read the first bits of your dialog with sergey
@iglesiasg	I didn't know  that from .. import works in Octave as well
@HeikoS	votjakovr: could you give me a quick status update on what parts you are currently working?
@iglesiasg	HeikoS, aah all right. I actually prefer importing everything from modshogun. And now even more after knowing that all shogun.Bla are just alias for modshogun. I don't like the idea that from shogun.Features import SVM works
@HeikoS	iglesiasg: why? because its not really doing that but just faking it?
@iglesiasg	HeikoS, well what's the point on having to remember all shogun.Features, shogun.Classifier, etc if they just import from modshogun?
@iglesiasg	I rather just remember modshogun
@HeikoS	iglesiasg: yeah agreed
@iglesiasg	and even better do stuff like
@iglesiasg	import modshogun
@iglesiasg	modshogun.RealFeatures() ...
@iglesiasg	although I have not tried if that works yet
@iglesiasg	I guess it does
 votjakovr	HeikoS: hi! I'm currently working on gradient model selection, i've found some problems and thinking on it.
@HeikoS	votjakovr: what problems? which part exactly, being curious here ;)
 votjakovr	HeikoS: problem #1: As you said, we need to perform gradient descent on some subset of the all possible parameters
@HeikoS	votjakovr: yep, thats important. It is in principle possible via changing the parameter trees. However, since the GP model selection assumes that all parameters are there ,this breaks. Any plans for improving this oddity?
 votjakovr	HeikoS: for doing this we need to pass current parameter combination to GradientMachineEvaluation class
@HeikoS	votjakovr: yes, thats the way to go
 votjakovr	HeikoS: and then pass it to inference classes to find the derivatives
@HeikoS	votjakovr: that seems very sensible
@HeikoS	votjakovr: should be hidden to the outside world though, getting derivatives via parameter combinations
@HeikoS	votjakovr: since its a bit weird, a parameter combination is a fixed set of parameters with values
@HeikoS	votjakovr: and here you rather want a set of parameters as strings
 votjakovr	HeikoS: hmm.. don't understand a little bit, what you mean
@HeikoS	votjakovr: a parameter combination should not be passed to the GP objects
@HeikoS	votjakovr: parameter combinations are there to apply a fixed set of parameters to a machine
@HeikoS	votjakovr: asking for derivatives should rather work for the currently active paramters (set from parameter combination before), and the parameter could be selected via a set of strings or so
@HeikoS	votjakovr: but pls dont pass the parameter combination around
@HeikoS	votjakovr: see what I mean?
 sonne|work	iglesiasg: the reason for all that is that we really had different modules under shogun - really shogun.Features etc
@iglesiasg	sonne|work, aham, then it made sense before
 sonne|work	iglesiasg: however these created issues like the one you just said - octave crashed when two modules got loaded
 sonne|work	serialization was a problem
 sonne|work	it was a problem to keep objects accross modules
 votjakovr	HeikoS: yeah, but now we have, that derivatives are computed wrt all of the possible parameters (kernel, likelihood, etc) of the machine
@iglesiasg	sonne|work, any idea what can be wrong with this octave issue?
 sonne|work	iglesiasg: so that is why we removed this
@iglesiasg	sonne|work, it works fine when I do octave some_example.m
@iglesiasg	no segfault then
@HeikoS	votjakovr: I agree this is not good, one should provide a set of strings to select
 sonne|work	iglesiasg: well we don't have withe the stuff on the buildbot right?
@HeikoS	votjakovr: do you think that would work?
 sonne|work	iglesiasg: well give us a valgrind / gdb backtrace
@HeikoS	votjakovr: and then model selection applies the current parameter combinatzion first, then asks for derivatives via this set of strings?
@iglesiasg	sonne|work, all right. I will open an issue in a few minutes
 votjakovr	HeikoS: we could use current param_dict but as a parameter, not build it there
@HeikoS	votjakovr: and this string set is created from parameter tree that user gave
 votjakovr	HeikoS: yeah, that what i mean
@HeikoS	votjakovr: param dict should be ok
@HeikoS	votjakovr: ah no
@HeikoS	votjakovr: please dont pass those around
@HeikoS	contains too much
@HeikoS	pointers to data etc
@HeikoS	rather the gradients should be selected by name, this is sufficient information and everything else just makes things complicated
@HeikoS	names can be extracted easily internally
@HeikoS	get_derivatives(set of strings)
 votjakovr	HeikoS: Map<char*, SGObject*>?
@HeikoS	votjakovr: why an sg object when you call a method on the object?
@HeikoS	gp->get_derivatives(strings ) should do it shouldnt it?
 votjakovr	HeikoS: what if you have kernel and likelihood with the same parameter name?
@HeikoS	votjakovr: good point, what is currently done with that?
@HeikoS	are the TParameter instances matched?
@HeikoS	actually, you might be right, the param_dict might be the best way to do it
@HeikoS	match the unique TParameter instance rather than just name
@HeikoS	although its still a bit dirty, but ok, should do it
 votjakovr	HeikoS: now it isn't done
@iglesiasg	uhm something wrong with features_string_file_char_modular.py and features_string_file_modular.py_
@HeikoS	votjakovr: yeah I remember, that why we started the discussion ;)
@iglesiasg	https://travis-ci.org/shogun-toolbox/shogun/jobs/10890168
@iglesiasg	I will restart the job just in case it was something random, maybe worth to look at in any case
 votjakovr	HeikoS: also i'd like to ask about public m_parameters and m_model_selection_parameters members... Please could you explain why it is done like this?
@HeikoS	votjakovr: what exactly dont you like?
 votjakovr	HeikoS: i'm just asking:) when should i use m_parameters instead of m_model_selection_parameters?
@HeikoS	votjakovr: about m_parameters, you have to ask sonne|work, sonney2k, I added the model-selection parameters a few years ago during gsoc
@HeikoS	votjakovr: ah I see
@HeikoS	votjakovr: so shogun classes have parameters
@HeikoS	for serialization/clone/equals
@HeikoS	everything is registered
@HeikoS	votjakovr: and then the model-selection parameters are a subset of those, for which model-selection is possible
@HeikoS	votjakovr: but these things are pointing to the very same memory
@HeikoS	votjakovr: so all model-selection parameters are also in m_parameters
 votjakovr	HeikoS: yep, i see, thanks :) So is model selection working only with m_model_selection_parameters?
@HeikoS	 votjakovr, yes
@HeikoS	votjakovr: everything else should be blocked ;)
 votjakovr	HeikoS: i'm a little bit confused when i see m_parameters in build_parameter_dictionary() method since build_parameter_dictionary() is used only in GPs gradients
@HeikoS	votjakovr: yep, thats weird, feel free to improve this
 votjakovr	HeikoS: ok :) problem #2: don't get random values from the parameter tree
@HeikoS	votjakovr: you want to remove that?
@HeikoS	votjakovr: I totally agree, rather, use the currently set parameters to start. This way users can define starting values the same way as in GPML
 votjakovr	HeikoS: i think we should use current machine parameters instead of picking random form the tree
@HeikoS	votjakovr: I am with you there
@HeikoS	votjakovr: random search model selection should stay though, as its kind of nice to get initial good values
@HeikoS	votjakovr: another nice things would be not having to previously specify the range of the parameters to search for
@HeikoS	votjakovr: so the parameter tree would just consist of names and sgobjects, but no values
 votjakovr	HeikoS: yeah! i'd like to ask you about that, but you've done this first :)
@HeikoS	votjakovr: good! ok I got another point, things should be unit-tested and made work for regression.
@HeikoS	votjakovr: once this is done, classification should be easy to add right?
 votjakovr	HeikoS: yeah
@HeikoS	votjakovr: ok then, on which things of the discussed are you currently working?
@HeikoS	votjakovr: how long do you think this will take?
 votjakovr	HeikoS: 1-2 day without testing
 votjakovr	HeikoS: 3 days
 votjakovr	HeikoS: with testing
 votjakovr	:)
 votjakovr	HeikoS: i'd like to ask: can we now use the tree without specifying particular range of values for parameters?
@HeikoS	votjakovr: I am not sure about that. But if not, this should be easy to change
@HeikoS	votjakovr: there is a field in the tree elements which contains the data
@HeikoS	votjakovr: and it can be NULL or so
@HeikoS	checking
@HeikoS	votjakovr:
@HeikoS	void* m_values;
 votjakovr	HeikoS: ok, great :)
@HeikoS	votjakovr: the way I suggest to do this is to create trees with just names and no data
@HeikoS	and if assertions are in the way (I might have put them there), remove them :)
 votjakovr	HeikoS: yeah
@HeikoS	votjakovr: and you will have to excuse the code in there, its from when I started to really learn about c++. I wasnt a programmer as good as you back then ;)
 votjakovr	HeikoS: ok, no problem :)
 votjakovr	HeikoS: btw when thing will be done for regression we can use it for classification too without any changes, i think
 votjakovr	HeikoS: we'll minimize negative marginal likelihood in both cases
 votjakovr	HeikoS: btw, have a look at: http://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/machine/gp/InferenceMethod.cpp#L53
 thoralf	iglesiasg: Thanks for your comment.  Didn't realize that point - but you're right.
 votjakovr	HeikoS: why is model selection not available for mean there?
@iglesiasg	thoralf, it is fun to check the runtime of algorithms :)
 thoralf	iglesiasg: Normally this is my part - I must have been distracted. ;)
@iglesiasg	hehe
@iglesiasg	thoralf, let me know if you think the change I suggest makes sense
 thoralf	iglesiasg: I think you're wrong.  The while(left<=right) loop only produces a partition with (left: all elements < pivot) and (right: all elements >= pivot), but does not compare them pairwise.  So If I'm giving you a list with [10 times random(1,10)] + [10 times random(11,20)], then the swap-count is zero, but the list is still not sorted. ;)
 thoralf	iglesiasg: BUT: Having a is_sorted() check at the beginning does something like you said. ;)
@iglesiasg	thoralf, the swap count wouldn't be zero for the initial array
@iglesiasg	thoralf, it would be zero for the sorted half, in case it turns out that one of the splittings does not include anything from the random part
@iglesiasg	let me double-check in any case
 thoralf	iglesiasg: But it doesn't help us, since I found an example where the count is zero but the lists are still not sorted.
@iglesiasg	thoralf, mmm no
@iglesiasg	thoralf, I mean
 thoralf	[1;0;4;3] <-- Try this
 thoralf	split:=2
 thoralf	No swap takes place.
@iglesiasg	split is the value of the element I think
 thoralf	count would be zero
@iglesiasg	then split = 4
 thoralf	T split=output[size/2] <--4
@iglesiasg	yep
 thoralf	Okay, you're right.  Need another example.
@iglesiasg	:)
 thoralf	[1;0;3;4] <-- Try this
 thoralf	pivot:=list[4/2]=3
 thoralf	iglesiasg: A completly different argument: qsort is proved to have nlogn best-case complexity.  In case you're right, many other people would be wrong. ;)
 thoralf	I clever person is overruled by many dump persons.  Like Galileo. :D
 thoralf	s/I/A/
@iglesiasg	thoralf, does it break in your example?
@iglesiasg	I think there is actually a swapin there
 thoralf	iglesiasg: Shall I write an example program? ;)
@iglesiasg	thoralf, well now we are talking about your example first :)
@HeikoS	thoralf, iglesiasg so you are taking care of the PR? :) I was just about to merge
@iglesiasg	HeikoS, merge merge
@HeikoS	since it doesnt really hurt
@HeikoS	but doing
@iglesiasg	just discussing
@HeikoS	if (!sorted)
@HeikoS	    sort
@HeikoS	is not so nice
@HeikoS	that was my point
@HeikoS	anyway
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Thoralf Klein :develop * 8a2fe8a / / (3 files): https://github.com/shogun-toolbox/shogun/commit/8a2fe8a57c7c9acf82d14fee655cf71823a7933f
 shogun-notifier-	shogun: Added method "is_sorted()" to SGVector
 shogun-notifier-	shogun: * plus unit tests for SGVector::qsort() and SGVector::is_sorted().
 shogun-notifier-	shogun: Heiko Strathmann :develop * dbe34ba / / (3 files): https://github.com/shogun-toolbox/shogun/commit/dbe34baedc02fad0f67674b2a133f07c70c5b866
 shogun-notifier-	shogun: Merge pull request #1507 from tklein23/sgvector_is_sorted
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Added method "is_sorted()" to SGVector
 lisitsyn	oh guys you keep overloading sgvector with stuff ;)
@iglesiasg	that is a good point
@iglesiasg	thoralf, but I think you must be right due to the best-case complexity argument
 votjakovr	HeikoS: should model selection be available for mean function? http://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/machine/gp/InferenceMethod.cpp#L60
@iglesiasg	thoralf, but I am not 100% :P
@HeikoS	votjakovr: no, since the only way to do this is via grid-search
@iglesiasg	100% sure
@HeikoS	votjakovr: I would just register the ML2 things, i.e. real parameters
 votjakovr	HeikoS: Great! Thanks :)
 thoralf	iglesiasg: Again, you're right.  But different than you might think:
 thoralf	iglesiasg: it swaps output[2] against output[2]
@iglesiasg	yeah
@iglesiasg	I noticed that
@iglesiasg	hehe
 thoralf	iglesiasg: But I think this is a bug. ;)
 votjakovr	HeikoS: no sgobjects like kernel, likelihood function?
@HeikoS	votjakovr: ah sorry, I think you need to register them since they have sub-parameters
@HeikoS	votjakovr: so the mean function also should be registered
@HeikoS	votjakovr: but since it has no sub-parameters for ZeroMean, no need to register anything in there
 thoralf	HeikoS: Thanks for merging.
@iglesiasg	thoralf, yes, it might be that the if should only be executed for left<right
 votjakovr	HeikoS: but we may use not only ZeroMean
@iglesiasg	thoralf, not <=
@HeikoS	votjakovr: yeah so register it
 votjakovr	HeikoS: ok :)
@HeikoS	votjakovr: if we have a mean with a sub-parameter its useful
@iglesiasg	thoralf, anyhow I am cool with the is_sorted method and the current qsort
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
 thoralf	iglesiasg: There are two left<=right :)
@HeikoS	votjakovr: oh and one thing, it would be good to have some "default" mode, where a user doesnt have to pass a parameter tree, and *all* parameters are optimised by defauilt
@HeikoS	votjakovr: since this is the usual case people want, and no need for parameter trees there
@iglesiasg	thoralf, the if, I said
 besser82	Just want to say hello and tell you I am going to package shogun for Fedora && RHEL ;)
 votjakovr	HeikoS: yeah, that would be nice
@iglesiasg	besser82, cool, thanks!
@HeikoS	votjakovr: but its easy to add once other things work
 besser82	igleasiasg, ^^
@HeikoS	besser82: thats great! maybe we could add a buildbot for that?
@HeikoS	or even add it to our nightly generated packages?
@HeikoS	besser82: you should talk to sonney2k and/or wiking about that once you have made some progress, that would be very useful for us
 besser82	HeikoS, sure you can do, but I'm going to bring this into official repos ;)
 lambday	HeikoS: FIXED IT :D :D :D
@HeikoS	besser82: sweet! :)
@HeikoS	lambday: whoooo!
 lambday	more more more tests
@HeikoS	what was it?
@HeikoS	:D
 lambday	ARGH!!
 lambday	lot of them
@HeikoS	wrong {} ? _D
 lambday	I am the biggest idiot on the face of the earth :D
 lambday	no no
 lambday	many mistakes combination
 lambday	phew!
 lambday	wait wait!
 lambday	:D
@HeikoS	hehe :) so send the PR. and make sure all those bugs are added to tests ;)
@iglesiasg	besser82, I have no idea how all this packaging works, so maybe this is a stupid question. The code to do this will be in the Shogun repo or somewhere else?
 lambday	HeikoS: I added way too many debug msgs
 lambday	ah crunched each and every number
 besser82	HeikoS, thx ;) Will talk to sonney2k and wiking about this, but can I have you on some further words in a 1:1? I think we are both on same native (German) :)
@HeikoS	besser82: sure!
 lambday	HeikoS: brb :D
@HeikoS	lambday: ok! looking forward to the PR :)
 besser82	iglesiasg, the spec-file to build the rpms will be in fedora's SCM-git ;) The resulting rpms inside Fedora Repo or EPEL repo, so you can easy install with `yum install ...` ;)
 lambday	HeikoS: will send real soon
@iglesiasg	besser82, got it, thanks!
 shogun-buildbot	build #1580 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1580  blamelist: Thoralf Klein <thoralf.klein@zib.de>
 thoralf	HeikoS: if (!sorted) sort <-- Won't help out, because it's called recursively and will check sorting over-and-over on every iteration. :D
@iglesiasg	sonne|work, BTW, the pictures are not yet in the webpage! Do you have the ones you took with your phone? I can put them in the our team page if so
@iglesiasg	or maybe we can put the picture with all of us that Cheng sent to the mailing list
@HeikoS	iglesiasg: can you access the buildbot site?
 votjakovr	HeikoS: i've just sent a PR with some minor fixes, please, have a look (i'm trying not to blow up diffs in PRs)
@iglesiasg	HeikoS, http://buildbot.shogun-toolbox.org/? Access meaning change stuff of it?
@HeikoS	iglesiasg: didnt we have fedora in there a while ago?
@iglesiasg	HeikoS, there is this rmp1 libshogun
@iglesiasg	rpm1 sorry
@HeikoS	what os is that?
@HeikoS	redhat
@iglesiasg	aham, besser82 mentioned about rpms in Fedora Repo, that's why I thought
 shogun-notifier-	shogun: Roman Votyakov :develop * b871fbb / src/shogun/machine/gp/ (11 files): https://github.com/shogun-toolbox/shogun/commit/b871fbb81e36b7d660f81325dc9f2cf490e62393
 shogun-notifier-	shogun: minor fixes in GP framework
 shogun-notifier-	shogun: Heiko Strathmann :develop * 88efc31 / src/shogun/machine/gp/ (11 files): https://github.com/shogun-toolbox/shogun/commit/88efc31c40e5d25d28c6a43a1782f473d47c9eac
 shogun-notifier-	shogun: Merge pull request #1511 from votjakovr/feature/gp_refactoring
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Minor fixes in GP framework
@HeikoS	votjakovr: ^
 votjakovr	HeikoS: thanks :)
 votjakovr	HeikoS: btw i think we need a review for kernel's classes, probably write missing unit-tests, etc. But after GSoC
@HeikoS	votjakovr: absolutely! put it on your list :)
 besser82	sonne|work: are you free for a minute? Or shall I ping you later?
 shogun-buildbot	build #1581 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1581  blamelist: Roman Votyakov <votjakovr@gmail.com>
 lambday	HeikoS: sending the PR
 lambday	HeikoS: added a new test for log-det also, using CG-M
 lambday	:D
 lambday	gives equal accuracy as direct solver
 lambday	HeikoS: will add ozone data examples now in this week
 sonne|work	besser82: just quick please - gtg in 5 mins
 shogun-buildbot	build #1364 of cyg1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/cyg1%20-%20libshogun/builds/1364  blamelist: Thoralf Klein <thoralf.klein@zib.de>
 besser82	sonne|work: i want to know more about the elwms-interface...
 sonne|work	iglesiasg: yes no pictures no talk uploads...
 sonne|work	iglesiasg: we suck publicity wise
@iglesiasg	we shall continue being annoying with wiking for the talk uploads
@iglesiasg	I guess he will probably do them soon
 lambday	HeikoS: please have a look at the PR.. I'll come back later.. starving :)
@iglesiasg	sonne|work, but you do have the pictures, right? Just mail them to me if so
 shogun-buildbot	build #1582 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1582  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- lambday [67157d4c@gateway/web/freenode/ip.103.21.125.76] has quit []
 shogun-buildbot	build #1583 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1583  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-notifier-	shogun: lambday :develop * 675b19d / / (9 files): https://github.com/shogun-toolbox/shogun/commit/675b19d9e98134be132e598eaad9c3787a13e0fc
 shogun-notifier-	shogun: CG, COCG, CG-M solver fixed (log-det)
 shogun-notifier-	shogun: Heiko Strathmann :develop * b2b8af9 / / (9 files): https://github.com/shogun-toolbox/shogun/commit/b2b8af95e9b811bf0a659a1f6ad3a8e48a3ddd7e
 shogun-notifier-	shogun: Merge pull request #1512 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: CG, COCG, CG-M solver fixed (log-det)
-!- travis-ci [~travis-ci@ec2-174-129-83-121.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10894214
-!- travis-ci [~travis-ci@ec2-174-129-83-121.compute-1.amazonaws.com] has left #shogun []
@HeikoS	thoralf: MulticlassOCASTest.train fails
@HeikoS	is that your fault?
@HeikoS	I merged before travis was green  :(
 thoralf	HeikoS: I ran the tests locally and they were all green.
@HeikoS	thoralf: ok dont know what that is than
@HeikoS	then
 thoralf	HeikoS: I'll double check in a second.
@HeikoS	thoralf: thanks!
 votjakovr	HeikoS: have a look at the issue: http://github.com/shogun-toolbox/shogun/issues/1411
@HeikoS	votjakovr thanks!
@HeikoS	thoralf: ^
 thoralf	HeikoS: Ah, okay.
 shogun-buildbot	build #1665 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1665  blamelist: Thoralf Klein <thoralf.klein@zib.de>
-!- sonne|osx [~sonne@89.204.139.210] has joined #shogun
 sonne|osx	besser82: I have another 15 mins :)
 besser82	sonne|osx: What is the elwms-interface about? Is it worth to pacakage this for fedora/rhel?
 sonne|osx	besser82: I would focus on libshogun and its developer files first, then do python_modular, octave_modular maybe java_modular. These are IMHO the most important interfaces. Some will cry ruby_modular but hmmhh.
 besser82	sonne|osx: kk, will do ;) thx! and how about to run the integration tests in recent git-checkout?
 sonne|osx	besser82: so rather leave out all static interfaces like elwms_* and python_*
 besser82	sonne|osx: I think you meant *_static???
 sonne|osx	besser82: unit or integration tests?
 sonne|osx	besser82: yes
 besser82	sonne|osx: preferably both of them ;)
@iglesiasg	sonne|osx, BTW, there is not current way to build static, right? I realized yesterday that the configure script is gone.
 sonne|osx	besser82: our current build system runs unit tests already upon build
 sonne|osx	besser82: well there is now
 besser82	sonne|osx: will need them in %check-target of spec.  Other Fedora maintainer will complain on review otherwise ;)
 sonne|osx	besser82: agh ok then run ctest manually
 sonne|osx	besser82: you can look up how to separate the steps by reproducing what we do on the buildbot
 besser82	sonne|osx: kk, any source where to find the whole cli-switches needed?
 sonne|osx	besser82: look here http://buildbot.shogun-toolbox.org/waterfall
 sonne|osx	and then deb3 - modular interfaces
 besser82	sonne|osx: thx! Will do.
 sonne|osx	the stdio in the very beginning lists you exactly what we call cmake with
 besser82	sonne|osx: thx, ctest I'll find there as well, I guess?
 sonne|osx	besser82: yes that is part of cmake
* besser82 takes a look inside sonne|osx's provided link ;)
 sonne|osx	besser82: btw once you have sth - we could run it during our nightly builds...
 besser82	sonne|osx: sth?
 sonne|osx	besser82: might be easier this way to not break stuff. when I do deb's I intend to do the same
 sonne|osx	besser82: something
 besser82	sonne|osx: kk, long line today ;P
 besser82	sonne|osx: I could give you access to Koji as well. so you can run builds from my spec on RHEL and Fedora ;)
 sonne|osx	besser82: btw your work is highly anticipated by some ...
 sonne|osx	we got a couple of complaints lets say :)
 besser82	sonne|osx: why? what? ???
 besser82	what did I do wrong ???
 sonne|osx	well users that don't like compiling shogun from source :)
 sonne|osx	besser82: nothing
 sonne|osx	they want .rpm's
 besser82	:D
 besser82	sonne|osx: nice joke ;)
 sonne|osx	besser82: go please them :)
 besser82	sonne|osx: I'll do !
 besser82	sonne|osx: think I can push-out whole thing for review during this week...
 besser82	If someone want's to join-in: I can bring new contributors to Fedora ;)
* besser82 is Packager-Sponsor for Fedora ;)
 besser82	and knows half folks from Fedora's sci-tech SIG
 sonne|osx	besser82: I am a debian developer... but nice try :)
 shogun-buildbot	build #1584 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1584  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
 sonne|osx	besser82: but seriously I can have a look at the spec
 besser82	sonne|osx: sound good! Thanks for the offer will bring my spec to github asap.  btw .debian-folks didn't want me some years back :(
 sonne|osx	besser82: it always depends whom you get in touch with... I had a pretty good sponsor so it was fun back then when I still had lots of time
 shogun-buildbot	build #72 of osx1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/osx1%20-%20libshogun/builds/72  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Soeren Sonnenburg <sonne@debian.org>, Thoralf Klein <thoralf.klein@zib.de>, Roman Votyakov <votjakovr@gmail.com>
 sonne|osx	now I am mostly overwhelmed and doing shogun only at least ATM
 besser82	sonne|osx: yes, it surely depends on the persons you get in touch with...
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 6723325 / examples/undocumented/python_modular/graphical/ (39 files): https://github.com/shogun-toolbox/shogun/commit/6723325cd5bdb82ce23209054899d26230661aca
 shogun-notifier-	shogun: replace shogun.* modules with modshogun
 shogun-buildbot	build #1666 of deb3 - modular_interfaces is complete: Failure [failed install test python_modular]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1666  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Roman Votyakov <votjakovr@gmail.com>
 besser82	sonne|osx: thanks for the nice talk, I'll get back back to get my shogun.spec ready and in shape ;)
 sonne|osx	besser82: thanks and I gtg anyway now
 besser82	sonne|osx: Which will be the upcoming version in Oct?
 sonne|osx	besser82: thanks for your work and keep us updated
 besser82	sonne|osx: 2.2.0?
 sonne|osx	3.0.0
* sonne|osx off
-!- sonne|osx [~sonne@89.204.139.210] has quit [Quit: sonne|osx]
 besser82	So I guess I'll package 3.0.0 pre-release-snap from git ;)
@HeikoS	votjakovr: are you there?
 shogun-buildbot	build #1365 of cyg1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/cyg1%20-%20libshogun/builds/1365  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Roman Votyakov <votjakovr@gmail.com>
 shogun-buildbot	build #1046 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/rpm1%20-%20libshogun/builds/1046  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
 shogun-buildbot	build #1957 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1957  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
 votjakovr	HeikoS: yeap
@HeikoS	votjakovr: nevermind, had a build error with gp stuff, but that was my faiult
@HeikoS	cmake still tricks my sometimes
 votjakovr	HeikoS: ok
-!- foulwall [~zhengyang@114.255.40.7] has quit [Ping timeout: 246 seconds]
-!- foulwall [~zhengyang@114.255.40.7] has joined #shogun
-!- sonne|osx [~sonne@f053040230.adsl.alicedsl.de] has joined #shogun
 shogun-buildbot	build #74 of osx1 - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/osx1%20-%20libshogun/builds/74  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
 votjakovr	HeikoS: may i ask another question? Why do we need to have 2 classes of Gaussian distribution? I mean Gaussian and GaussianDistribution.
-!- pickle27 [~kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- travis-ci [~travis-ci@ec2-174-129-83-121.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10895761
-!- travis-ci [~travis-ci@ec2-174-129-83-121.compute-1.amazonaws.com] has left #shogun []
@HeikoS	votjakovr: thats a good point
@HeikoS	votjakovr: so historically, CGaussian was developed for Gaussian density estimation, ie EM
@HeikoS	votjakovr: so the interface is developed for that
@HeikoS	but the CGaussianDistribution is more a classical distribution interface: log_pdf and sampling
@HeikoS	votjakovr: I could not really merge them since the scope is too different.
@HeikoS	votjakovr: also CGaussianDistribution has no features attached
@HeikoS	CGaussian can probably be a subclass of CGaussianDistribution btw
 shogun-buildbot	build #1668 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1668  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
@HeikoS	but we have to base classes which are in conflict there
-!- HeikoS [~heiko@nat-169-160.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
 shogun-buildbot	build #1366 of cyg1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/cyg1%20-%20libshogun/builds/1366  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
-!- HeikoS [~heiko@nat-169-160.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 votjakovr	HeikoS: yep, now i see, thank you :)
@HeikoS	votjakovr: I di dnot really like the CGaussian also thats why I did a new one :)
@iglesiasg	sonne|work, can I get sicpy in the fatbot please? :)
@iglesiasg	sudo apt-get install python-scipy
@iglesiasg	sonne|osx, sonney2k ^
 votjakovr	pickle27: hi! while doing some refactoring of evaluation classes, i've found evaluation/ica. I think that this stuff should be moved to SGMatrix class, since it is pretty general and not related to machine evaluation
@iglesiasg	votjakovr, maybe in Math better?
@iglesiasg	I also support the idea that we shouldn't make out SGVector and SGMatrix classes fatter
@iglesiasg	out->our
-!- van51 [~van51@ppp-94-66-92-175.home.otenet.gr] has joined #shogun
 votjakovr	iglesiasg: hmm... i think, that these 2 functions might be useful for other people and i think it's better to call something like mat.is_permutation_matrix() rather then something else
@iglesiasg	votjakovr, it makes sense. But then at least have the main implementation in Math and just a wrapper in SGMatrix
 votjakovr	iglesiasg: probably, but i still don't understand, why implementation of these 2 functions in SGMatrix.cpp is bad
-!- iglesiasg [~iglesias@n157-p43.kthopen.kth.se] has quit [Ping timeout: 245 seconds]
 votjakovr	iglesiasg: pickle27: but i'm pretty sure, that this stuff should be moved from evaluation/ica
-!- iglesiasg [~iglesias@2001:6b0:1:1041:b8ef:b3e:75c0:30ef] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@sonney2k	iglesiasg, installed
@iglesiasg	sonney2k, thanks!
@iglesiasg	embarrassed of asking this but
@iglesiasg	how do I install Shogun so I can use the Python modular interface in a computer where I cannot sudo?
@iglesiasg	maybe defining the install dir in cmake?
@iglesiasg	although IIRC thoralf did something like install-local when we had the configure script
-!- lambday [67157f36@gateway/web/freenode/ip.103.21.127.54] has joined #shogun
 lambday	HeikoS: hi
@HeikoS	lambday: hi!
 lambday	HeikoS: I will add some more examples
@HeikoS	I am currently editing rational approx to automagically compute the number of shifts if wanted
@HeikoS	lambday: btw the thing works better now
@HeikoS	very slow though
 lambday	HeikoS: yeah :D
@HeikoS	but the shifts will speed it up at least
@HeikoS	then I will try it with the ozone
 lambday	HeikoS: number of shifts I will add to the class itself
@sonney2k	iglesiasg, well look at the output of cmake
@HeikoS	lambday: what?
@sonney2k	it says at the end
 lambday	HeikoS: I should test this with ozone
@HeikoS	what do you mean?
 lambday	HeikoS: number of shifts should be computed within LogDetEstimator itself given the accuracy the user wants
 lambday	right?
 lambday	that's a simple computation
@HeikoS	lambday: yeah but in the rational approx class
@iglesiasg	sonney2k, thank you, my bad
@HeikoS	I will add it to precompute
@HeikoS	once the eigenvalues are know, this can be done
 lambday	HeikoS: where we explicitly have to mention the number of shifts, right
 lambday	yes I will change that
@HeikoS	lambday: no let me do it
 lambday	but things work better now
@HeikoS	I already started ;)
 lambday	HeikoS: awesome
 lambday	:D
 lambday	HeikoS: I should also check this against the ozone matrix
 lambday	wait I am checking
-!- travis-ci [~travis-ci@ec2-107-20-114-62.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10896818
-!- travis-ci [~travis-ci@ec2-107-20-114-62.compute-1.amazonaws.com] has left #shogun []
 lambday	(just got back, kinda sloshed :( )
 lambday	what's the error? :)(
 lambday	:(
@HeikoS	?
 pickle27	iglesiasg: votjakovr yes I agree with re factoring those functions
 pickle27	iglesiasg: votjakovr I don't have a preference where though, whatever you think is best
 lambday	HeikoS: checking the travis msgs
 pickle27	also make sure you update all the ajd unit tests after you move it
@HeikoS	ah ok
@sonney2k	HeikoS, pickle27 - can anyone reproduce https://github.com/shogun-toolbox/shogun/issues/1509 ?
 lambday	HeikoS: argh I put display matrix and etc in RationalApproximation unit test
 lambday	changing
@HeikoS	lambday: oops I did not see that
 lambday	HeikoS: just saw
@HeikoS	lambday: next thing, we have to have a check that the minimum eigenvalue is positive. Happens quite often that it is not. We need an error message for the user in that case that tells him to increase accuracy of eigensolver or add a ridge
 pickle27	sonney2k: just tried on my system and no I can't reproduce
@HeikoS	lambday: btw never do this:
@HeikoS	CMath::log(max_eig/min_eig)
@HeikoS	if max_eig/min_eig is a very large number you get an overflow and the log fails
@HeikoS	log(a/b)=log(a)-log(b)
@HeikoS	I will chang ein the unit test
 lambday	HeikoS: okay
 lambday	:-/
 lambday	umm... I did that inside RationalApproximation, right?
@HeikoS	lambday: no, in the unit test
@HeikoS	lambday: I copy pasted it :)
@HeikoS	but just realised this might cause problems
 lambday	HeikoS: yeah you are right
@HeikoS	log of product should always be done in log-domain
@HeikoS	its a neat trick, helps very often
 lambday	HeikoS: but I also used similar things while computing shifts/weights...
@HeikoS	lambday: if the numbers are small thats fine
 lambday	HeikoS: yeah I should be changing those
@HeikoS	but maybe check later
@HeikoS	but a condition number of a matrix might be huge
 lambday	HeikoS: I thought float64_t has a really higher range so it should not create problems
 lambday	HeikoS: yup
 lambday	true
 lambday	I need to add this over next week
@sonney2k	pickle27, iglesiasg so which swig and octave versions?
@iglesiasg	sonney2k,  SWIG Version 2.0.4, GNU Octave, version 3.6.2
 shogun-buildbot	build #1667 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1667  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	lambday:
@HeikoS	I have this weird eigen error again
@HeikoS	lambday: see pm
@HeikoS	its only if I do the unit tests
@HeikoS	so disabling and relying on travis for now
 lambday	HeikoS: I didn't get :-/4
 lambday	HeikoS: wait let me see
@HeikoS	its the probing sampler who does it
@HeikoS	thats why travis doesnt detect it, no probing sampler in there since no colpaclk
 lambday	HeikoS: I don't get any such errors :( I have colpack
@HeikoS	lambday: whats your eigen version?
@HeikoS	its an eigen interface problem, they added or removed an assertion
@HeikoS	do you let shogun bundle it or use your own version?
-!- travis-ci [~travis-ci@ec2-107-20-114-62.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10898142
-!- travis-ci [~travis-ci@ec2-107-20-114-62.compute-1.amazonaws.com] has left #shogun []
 lambday	HeikoS: shogun cmake detects my own version
@HeikoS	lambday:  no its eigen
@HeikoS	lambday: did you update all unit tests after the last pr?
@HeikoS	unit tests break
@HeikoS	[ RUN      ] RationalApproximation.compare_direct_vs_cocg_accuracy/home/travis/build/shogun-toolbox/shogun/tests/unit/mathematics/logdet/RationalApproximation_unittest.cc:279: FailureThe difference between (map_xd-map_xs).norm() and 0.0 is 0.013105116035746187, which exceeds 0.01, where(map_xd-map_xs).norm() evaluates to 0.013105116035746187,0.0 evaluates to 0, and
@HeikoS	lambday: I guess you saw that ;)
 lambday	HeikoS: yeah I saw, but I changed it :-/
 lambday	anyway... I am not sure
 lambday	wait I am checking
 lambday	cocg sucks it means :-/
 lambday	I should test
@HeikoS	lambday: yes, everything has to be tested ;)
@HeikoS	I know its annoying
@HeikoS	lambday: whats your eigen3 version?
 lambday	checking
 besser82	is it intentional git-checkout FTBFS when .git-dir is removed?
@sonney2k	besser82, no - we switched to cmake recently and it looks like we still have some rough edges...
-!- van51 [~van51@ppp-94-66-92-175.home.otenet.gr] has quit [Read error: Connection reset by peer]
 besser82	sonney2k: kk, cmake complains about missing value in version.cmake line 48...
 lambday	HeikoS: can't find the version
 lambday	HeikoS: errr.... issues with fedora?
 lambday	HeikoS: where can I find the version?
 lambday	all headers are in /usr/include/eigen3/
 besser82	lambday: repoquery -a --installed | grep -i "eigen"
 besser82	lambday: which version of F you use?
 lambday	besser82: but I didn't download it from repo
 besser82	lamnday: custom build?
 lambday	besser82: I downloaded it manually and installed it
 lambday	yes
 lambday	besser82: I am not in ubuntu/deb but in fedora
 besser82	lambday: me, too ;)
 besser82	lambday: F19 ships Eigen3 in repos ;)
 lambday	besser82: I am an old man, I use F16
 lambday	:(
 besser82	lambday: then update to some supported version ;)
 lambday	besser82: no other way from the installed dirs?
 lambday	besser82: at this moment that is not being possible :(
 besser82	lambday: there might be more problems than just version
 besser82	lambday: used configure-flags and all ;)
 besser82	lambday: u know how to use rpmbuild?
 lambday	besser82: configure flags? for what?
@sonney2k	besser82, the version thing should be trivial to fix for someone with cmake skillz
 besser82	lambday: when building eigen3 ;)
@sonney2k	besser82, our expert is away for a week so it will take me a while
 lambday	besser82: I don't understand... eigen3 is just a bunch of headers :(
 besser82	sonney2k: i can fix, but just wanted to make sure if it is intentional ;)
 lambday	besser82: I always installed it by hand
 besser82	sonney2k: me wrote cmake-buildsys around libyui ;)
 besser82	lambday: let me check in pkgdb ;)
 lambday	sonney2k: wiking is getting married or he is attending some marriage :D
@sonney2k	besser82, IIRC we do the following: if .git exists we extract the version from git - actually from develop branch or master - the current branch
@sonney2k	lambday, he got married last GSoC so this time he is just attending :)
 lambday	hehe... ohkay :D
@sonney2k	besser82, if .git is not available we extract the date from NEWS - because then it is supposed to be a release
 lambday	besser82: no other way to know from the installed headers? they never tell it there, do they
 besser82	lambday: not really ;)
 lambday	:'(
@HeikoS	lambday: so did you find our the version?
 lambday	HeikoS: no :(
@HeikoS	lambday: maybe just tell cmake to bundle it
@HeikoS	then you are using the same version as me
 lambday	HeikoS: I think it was some 3.1.something
 besser82	lambday: if know how to handle rpmbuild, i can give you srpm from current fedora....
 lambday	HeikoS: how do I do that?
@HeikoS	lambday: could you try to compile with bundled eigen?
@HeikoS	BUNDLE_EIGEN=On
 lambday	HeikoS: alright
@HeikoS	I use ccmake for setting those
 lambday	HeikoS: ccmake? I only know how to use cmake for shogun
 lambday	:(
@HeikoS	ccmake is a "graphical" frontend
@HeikoS	ncurses based I think
 lambday	okay
 lambday	HeikoS: so from cmdline, BUNDLE_EIGEN=ON should do right?>
@iglesiasg	cmake .. -DBUNDLE_EIGEN=ON
 lambday	besser82: never used it :-/ ... can try
 besser82	lambday: kk, will generate srpm for you ;)  Can I have your email for sending, please?
 lambday	besser82: heavensdevil6909@gmail.com
 lambday	iglesiasg: thanks, trying
 besser82	lambday: srpm should be there in a minute ;)
 besser82	you need to `yum group install fedora-packager`
 lambday	besser82: ah, thanks :D
 lambday	besser82: so this will all go smooth from f16?
 besser82	I think so ;)
-!- iglesiasg [~iglesias@2001:6b0:1:1041:b8ef:b3e:75c0:30ef] has quit [Quit: Ex-Chat]
 besser82	in F16 there's eigen 3.0.6 in repos ;)
 lambday	besser82: I am definitely using a newer version
 lambday	probably 3.1.something
 lambday	anyway I am trying
 besser82	lambday: unpack srpm (with file-roller or such)
 besser82	lambday: you need to `yum group install fedora-packager`
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 besser82	lambday: then `sudo yum-builddep $PATH_TO/eigen3.spec`
 besser82	lambday: then mkdir -p ~/rpmbuild/SOURCES/
 lambday	besser82: alright
 lambday	besser82: :( "Warning: Group fedora-package does not exist."
 besser82	lambday: copy eigen3-tarball to ~/rpmbuild/SOURCES
 lambday	besser82: errr
 besser82	you forgot the "r" --> fedora-packageR
 lambday	sorry
 lambday	besser82: yes
 lambday	besser82: thanks :D
 besser82	lambday: np ;)
 besser82	lambday: when done with all previous steps run: rpmbuild -ba $PATH_TO/eigen3.spec
@HeikoS	lambday: and?
 lambday	besser82: HeikoS building
@HeikoS	ok
 lambday	phew! I thought installing eigen3 was easy
 lambday	:-/
 lambday	HeikoS: which version are you using?
@HeikoS	lambday: the bundled one
@HeikoS	lambday: and you now?
 lambday	HeikoS: that option didn't help me
 lambday	HeikoS: its 3.1.3
@HeikoS	lambday: why? oh you should fill in an issue and assign it to wiking then
 lambday	HeikoS: not installed yet
 lambday	HeikoS: yeah I will push him...
@HeikoS	I use 3.1.2 I think
@HeikoS	so lets see whether you get the error
 lambday	HeikoS: any idea what causes this error?
@HeikoS	yes some eigen interface change
 lambday	HeikoS: because my earlier version was also 3.1.something and I didn't get any error
@HeikoS	method not allowed for integer number
 lambday	HeikoS: errrr
@HeikoS	/home/heiko/Desktop/shogun/shogun/tests/unit/mathematics/logdet/ProbingSampler_unittest.cc:78:210:   required from here
@HeikoS	/home/heiko/Desktop/shogun/shogun/third_party/include/eigen/Eigen/src/Core/MathFunctions.h:429:5: error: static assertion failed: THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES
@HeikoS	one of those eigen static assertions that allow to hunt down type errors
 lambday	HeikoS: checking
 lambday	besser82: the part you said is complete
 lambday	besser82: that's it, right?
 besser82	lambday: so rpmbuild i finished?
 besser82	lambday: then you need to install built rpms ;)
 lambday	besser82: rpmbuild -ba $PATH_TO/eigen3.spec finished
 besser82	lambday: rpmbuild told which rpm were built and where they were put ;)
 besser82	lambday: you can usually find them in ~/rpmbuild/RPMS/$arch/
 besser82	lambday: you can use yum install $path_to/eigen3-devel.rpm
 lambday	besser82: I used rpm -ivh <the-rpm>
 lambday	besser82: that would do, right?
 lambday	HeikoS: its 3.1.4 btw :D
 besser82	lambday: will be another way to install properly ;)
 lambday	Found Eigen3: /usr/include/eigen3 (found suitable version "3.1.4", required is "3.1.2")
 lambday	HeikoS: argh, I would have found from this msg itself I think :-/
 lambday	anyway building
 lambday	besser82: thanks a lot, man!
 lambday	besser82: you are a lifesaver
 lambday	:) :)
 besser82	lambday: np ;)  make sure to kill eigen3 version in /usr/local ;)
 lambday	besser82: already moved
 lambday	to eigen3_old
 lambday	 :D
 besser82	lambday: kk, then all is fine ;)
 lambday	HeikoS: yep you are right
 lambday	I get this error
 lambday	HeikoS: wait I am checking
@HeikoS	lambday:  cool, if you found a fix, let me know ;)
@HeikoS	I need unit tests
 lambday	sure
@HeikoS	changing things...
 besser82	sonney2k: on make install built-examples get installed, too.  Thats nasty...  I wouldn't expect to get them installed ;)
 lambday	HeikoS: this is a stupid error :( the obvious way is to convert it to float64_t :(
 lambday	I can do that :(
 besser82	lambday: :D
 lambday	besser82: :D :(
@HeikoS	lambday: no let me do it
@HeikoS	sending a pr already
@HeikoS	which file and line?
 lambday	HeikoS: alright
 lambday	HeikoS: I already committed regarding the display_matrix/vector thing, so sending a PR with just that
@HeikoS	lambday: then put in the other thing too :)
 lambday	HeikoS: other things as in?
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
 lambday	HeikoS: in the sampler itself... nothing has to changed, just that eigen3 can't compute norms for ints it seems
 lambday	HeikoS: sorry I meant in the unit-test itself
 lambday	HeikoS: in the unit-test, I computed the coloring seperately, and used our Probing sampler to compute the coloring and then compare these two colorings
 lambday	HeikoS: these color things are in int32_t, for which eigen3 can't compute norm now :(
@HeikoS	lambday: weird
@HeikoS	lambday: put the fix for the eigen error in the pr
 lambday	HeikoS: really weird!
@HeikoS	lambday: it makes sense that eigen cannot do that
 lambday	HeikoS: why is that?
@HeikoS	prevents weird type errors
@HeikoS	if you want to stay in int domain
@HeikoS	and c is typed so thats the way it should be
@HeikoS	eigen vectors are typed too
@HeikoS	you can probably convert it explicitly
 lambday	but what's wrong with computing norm?
 lambday	implicit typecast is available all across the lang :(
@HeikoS	its not even defined for vectors over N^n
@HeikoS	well
@HeikoS	thats the way it is
@HeikoS	could you send the PR so that I can rebase against it?
 lambday	HeikoS: you mean, changing the unit-test as well?
@HeikoS	lambday: yes
 lambday	HeikoS: alright.. just a moment
 lambday	HeikoS: I need to change the default to DISTANCE_TWO coloring btw.. I will add some tests for checking against computing power first and then coloring 1-distance and computing 2-distance directly on the matrix
@HeikoS	lambday: ok thats good
@HeikoS	lambday: what do you think of the idea to add copies of all existing unit tests with the ozone matrix?
 lambday	HeikoS: that would be perfect!
 lambday	HeikoS: I have to put the big ozone_matrix in somewhere in the repo then, right?
@HeikoS	lambday: yes, how big is the sparse thing?
 lambday	70+ MB
 lambday	in smvlight format
 lambday	HeikoS: sent the PR
@HeikoS	lambday: phew!
@HeikoS	sonney2k: can we add a 70mb data matrix to data?
 lambday	sonney2k:  :(
@HeikoS	lambday: tests are green?
 lambday	HeikoS: just added
@HeikoS	at your machine?
 lambday	HeikoS: yes at my machine yes
@HeikoS	ah ok this doesnt change anything
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: lambday :develop * 1f0da69 / tests/unit/ (2 files): https://github.com/shogun-toolbox/shogun/commit/1f0da6923ce1af363070d881286124ca56195d81
 shogun-notifier-	shogun: removed display from unit-test (log-det)
 shogun-notifier-	shogun: Heiko Strathmann :develop * d918d1a / tests/unit/ (2 files): https://github.com/shogun-toolbox/shogun/commit/d918d1a1e21826160dc0a2e1e92a7c2b1242aafd
 shogun-notifier-	shogun: Merge pull request #1515 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: removed display from unit-test (log-det)
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has quit [Read error: Connection reset by peer]
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
@HeikoS	lambday: ok thanks for that
@HeikoS	lambday: I will add my changes soon
 lambday	for ozone, the method still doesn't converge
@HeikoS	lambday: are there any sub-parts we should check?
 lambday	HeikoS: hmm
@HeikoS	lambday: since the eigenvalues might be estimated negatively
 lambday	HeikoS: oh today is report day
@HeikoS	and other things might go wrong
 lambday	HeikoS: you mean some of the eigenvalues are negative?
 lambday	HeikoS: I just noticed that the Lanczos eigensolver didn't converge
@HeikoS	lambday: they are not negative, but arbitrarily close to zero
 lambday	for ozone
@HeikoS	lambday: so one needs to run things for longer
@HeikoS	lambday: where is the best place to assert that they are positive?
 lambday	HeikoS: none! we assume that the matrix is psd when someone is tries to use CG based solvers
 lambday	:(
 lambday	I can add that check thogh
@HeikoS	lambday:
@HeikoS	/home/heiko/Desktop/shogun/shogun/tests/unit/mathematics/logdet/RationalApproximation_unittest.cc:273: Failure
@HeikoS	The difference between (map_xd-map_xs).norm() and 0.0 is 0.017611379876991774, which exceeds 0.01, where
@HeikoS	(map_xd-map_xs).norm() evaluates to 0.017611379876991774,
@HeikoS	0.0 evaluates to 0, and
@HeikoS	0.01 evaluates to 0.01.
 lambday	argh what is wrong with my english :(
@HeikoS	this one is also still there
 shogun-buildbot	build #1958 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1958
@HeikoS	or did I introduce it? ;)
 lambday	HeikoS: this is related to the cocg solver, right?
@HeikoS	lambday: dont know, I had no unit tests before I started changing things :D
@HeikoS	lambday: I know we assume psd, but if the smallest eigenvalue is too small, the computer runs into troubles
 lambday	this is weird :(
@HeikoS	lambday: and the way to resolve this is to run the eigensolver for longer
 shogun-buildbot	build #1959 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1959  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	lambday: until the values get positive
@HeikoS	lambday: if not, throw an error
 lambday	HeikoS: what will be too small for our case :(
 lambday	the smallest is like 0.something and the largest is 1000000.something
@HeikoS	lambday: dont know, but even for toy matrices which have eigenvalues around 0.0001, the smallest estimated one is negative
 shogun-buildbot	build #75 of osx1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/osx1%20-%20libshogun/builds/75
 lambday	HeikoS: you're adding that #shifts related things?
 lambday	HeikoS: more tests :(
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has quit [Ping timeout: 241 seconds]
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
 shogun-buildbot	build #1585 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1585  blamelist: lambday <heavensdevil6909@gmail.com>
 lambday	:(
 lambday	HeikoS: just one thing I changed in the COCG today which is disastrous
 lambday	what is more weird is that, for fixed examples, we get different results... I should check this
 shogun-buildbot	build #1047 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/rpm1%20-%20libshogun/builds/1047  blamelist: lambday <heavensdevil6909@gmail.com>
@HeikoS	lambday: could you elaborate a bit more?
 lambday	HeikoS: regarding determining the number of shifts?
@HeikoS	lambday: no the cocg thing you mentioned
 lambday	HeikoS: changed the computation of beta parameter which earlier I made a mistake'
@HeikoS	ok?
 lambday	HeikoS: it should be ||r_{i+1)||_{2}/||r_{i}||_{2|
 lambday	HeikoS: the same thing that I changed for CG and CG-M based solvers
@HeikoS	ok
 lambday	HeikoS: you will be needing cocg to work for individual jobs too, right? :(
@HeikoS	lambday: so the broken unit test is a consequence of this patch
@HeikoS	https://travis-ci.org/shogun-toolbox/shogun/builds/10896573
@HeikoS	lambday: the family based solver is fine for now
 lambday	HeikoS: yes :)
@HeikoS	individual jobs are getting interesting once we precondition things to increase/decrease the eigenvalues
 lambday	HeikoS: will fix COCG soon
 lambday	HeikoS: checking the errors
 lambday	nice
 lambday	so, things to be added are -
 lambday	1) checks for too small eigenvalues
 lambday	2) automaticallt computing shifts in RationalApproximation (which you are adding, right?)
 lambday	3) fixing COCG
 lambday	4) ... :-/
@HeikoS	lambday: I just fixed 2
@HeikoS	lambday: btw if I compute 100 log-det estimates, everything that can be precomputed is precomputed right?
 lambday	HeikoS: yes... coloring and shifts are computed only once
@HeikoS	lambday: good :)
 lambday	I need to check the COCG solver
@HeikoS	lambday: so then, we should start adding tests for challenging matrices, once cocg is working
 lambday	:( one mistake fixed, another one pops out :(
@HeikoS	lambday: again, I am sure these problems are bugs, so dont worry too much, just systematically test things
 lambday	HeikoS: we can add these for CG-M as well, no?
 lambday	but for ozone, its tough to get things into convergence
 lambday	':-/
 lambday	HeikoS: hopefully these are bugs
@HeikoS	lambday: yeah, before ozone, try to fix more obvious problems
@HeikoS	for ozone, there are loads of things that can go wrong
 lambday	HeikoS: more obvious problems as in? too small eigenvalues, right?
@HeikoS	lambday: yes
@HeikoS	there is something wrong with the probing sampler
 lambday	HeikoS: I am confused regarding how small should we consider as "too small"
 lambday	:(
@HeikoS	lambday: ok so again on the eigenvalues
 lambday	HeikoS: what's wrong?
@HeikoS	lambday: matrices might have EV that are veeeery close to 0
@HeikoS	now we estimate those with lanczos and accuracy 1-5
@HeikoS	we get a negative value
@HeikoS	and everything breaks (so we have to throw an error and stop)
 lambday	alright..
@HeikoS	but with 1e-15, it might work so that the number we get is positive
 lambday	okay noted
@HeikoS	lambday: and for the probe sampler
@HeikoS	it seems to return the same sample all the time
@HeikoS	variance of the log-det estimate is zero
 lambday	same sample??
 lambday	but the thing is probabilistic :-o
@HeikoS	lambday: thats why something is strange
 lambday	wait cehcking
@HeikoS	variance zero=?
@HeikoS	or might that be my diagonal matrix causing it?
 lambday	HeikoS: might be
 lambday	HeikoS: could you please try with a different one?
@HeikoS	lambday: should not
@HeikoS	lambday: the matrix is
 shogun-buildbot	build #1669 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1669  blamelist: lambday <heavensdevil6909@gmail.com>
 lambday	HeikoS: it surely produces different sample vectors
@HeikoS	data=abs(randn(n)**2)
@HeikoS	is the diagonal
 lambday	HeikoS: the variance is absolutely zero??
 lambday	:-o
@HeikoS	lambday: let me show you a notebook
 lambday	alright
@HeikoS	lambday: http://nbviewer.ipython.org/6416583
@HeikoS	ah shit
@HeikoS	didnt save,wait
@HeikoS	lambday: ok reload
 lambday	horizontal! :|
 lambday	HeikoS: how this thing can be same every thing?? :'( https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/mathematics/logdet/ProbingSampler.cpp#L194
@HeikoS	lambday: but converges to the same value
 lambday	HeikoS: that should not happen?
 lambday	may be the matrix is trivial
 lambday	:-/
@HeikoS	lambday: it always return 0 samples in this case
 shogun-buildbot	build #1367 of cyg1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/cyg1%20-%20libshogun/builds/1367  blamelist: lambday <heavensdevil6909@gmail.com>
 lambday	HeikoS: that's not possible if it enters the else block
@HeikoS	lambday: reload again
 lambday	so, please check num_samples
@HeikoS	lambday: there is more weird stuff
 lambday	less than 0
 lambday	!
 lambday	index
 lambday	errr
@HeikoS	did I do anything wrong there?
 lambday	HeikoS: just one thing is causing all these
 lambday	I am trying to figure out
 lambday	HeikoS: why m_num_samples is 0??
 lambday	m_num_samples is the number of colors it uses to color the graph
 lambday	HeikoS: please check this https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/mathematics/logdet/ProbingSampler.cpp#L187
@HeikoS	lambday: yep, so forgotten set of this somewhere?
@HeikoS	lambday: maybe its my python code
 lambday	HeikoS: no no.. since its a diag matrix, it uses only one color
 lambday	earlier I made a mistake, did you rebase?
@HeikoS	lambday: btw this warning is not so useful, should be something that users understand :)
@HeikoS	lambday: let me try
 lambday	HeikoS: number of colors should be 1
@HeikoS	no my develop is up to date
 lambday	ummm
 lambday	HeikoS: could you please try to print the probing vector? :(
 lambday	HeikoS: this *has to* give it at least one https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/mathematics/logdet/ProbingSampler.cpp#L176
@HeikoS	lambday: ok
 lambday	:'(
 lambday	HeikoS: you are right regarding this warning... but I thought this should never happen
 lambday	HeikoS: please make sure that ColPack works properly :(
@HeikoS	lambday: ehm
@HeikoS	how? :D
@HeikoS	I installed it
 lambday	HeikoS: wait I am giving you a small program
 lambday	that should run
 lambday	HeikoS: https://gist.github.com/lambday/6416709
 lambday	HeikoS: refresh
 lambday	just pasted output from my machine
 lambday	HeikoS: I will get dc now argh :'( :'(
 lambday	HeikoS: please let me know if you discover any bug regarding this :(
@HeikoS	lambday: maybe its time for some break :)
@HeikoS	lambday: let me put up some changes to the python code
@HeikoS	I will update it then and merge my PR
@HeikoS	then you can test it, too
 lambday	HeikoS: hehe yes
 lambday	alright
 lambday	HeikoS: when is your presentation?
@HeikoS	lambday: next week
@HeikoS	lambday: so we really need to hurry, but if it doesnt work, I wont be killed
@HeikoS	would just be cool
 lambday	I hope all things work properly by then :-s
@HeikoS	tomorrow I am meeting a cluster guy to allocate 2000 nodes for me :)
 pickle27	HeikoS: did you see my new PR for the notebook?
@HeikoS	pickle27: not yet, should I have a look?
 pickle27	HeikoS: yeah, it should be a quick merge, slash I don't think you'll be able to see the diff
 pickle27	I added some text but mainly I cleared the graphics
@HeikoS	lambday: http://nbviewer.ipython.org/6416583
@HeikoS	check this out just ran everything from scratch
 lisitsyn	pickle27: let me
 lisitsyn	;)
 shogun-notifier-	shogun: Kevin :develop * 9e23773 / doc/ipython-notebooks/ica/bss_jade.ipynb: https://github.com/shogun-toolbox/shogun/commit/9e23773613b50b3bbc5a4e16cefa84700b22ee9f
 shogun-notifier-	shogun: updated jade notebook and cleared all the graphics
 lisitsyn	okay I can't see diff
 shogun-notifier-	shogun: Heiko Strathmann :develop * caf6ea2 / doc/ipython-notebooks/ica/bss_jade.ipynb: https://github.com/shogun-toolbox/shogun/commit/caf6ea2b4ccb3285a7536e8f0038791277f88f5c
 shogun-notifier-	shogun: Merge pull request #1514 from pickle27/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: updated jade notebook and cleared all the graphics
 lisitsyn	ahhh
 pickle27	lisitsyn: ah didn't notice you were here
 lisitsyn	heiko did the blind merge instead of me
 lisitsyn	:D
-!- lambday [67157f36@gateway/web/freenode/ip.103.21.127.54] has quit [Ping timeout: 250 seconds]
 lisitsyn	pickle27: how is it going?
 pickle27	lisitsyn: HeikoS well now that the graphics are done we should be able to see diffs on it if I make more changes
 pickle27	lisitsyn: good!
@HeikoS	pickle27: yeah hopefully!
 pickle27	lisitsyn: Im almost done ICA and the ECG example
 lisitsyn	pickle27: cool
 pickle27	I've been playing with the ruby_modular interface a bunch this week
 lisitsyn	pickle27: and how it was?
 pickle27	looking at updating to NMatrix / SciRuby from NArray
 pickle27	lisitsyn: its been kind of fun hacking around
 pickle27	nothing is working 100% yet though
 lisitsyn	pickle27: what problems have you met?
 pickle27	lisitsyn: namely just fighting with the NMatrix api
 shogun-buildbot	build #1961 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1961  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 pickle27	lisitsyn: I have an "in" typemap that works, then I added some stuff to nmatrix for my out but I get a segfault 25% of the time
 lisitsyn	pickle27: uh
 lisitsyn	I see
 pickle27	now I am trying a new approach
 lisitsyn	anything I can help you with?
 pickle27	lisitsyn: ummm I think I am good for the moment, but I will let you know!
 lisitsyn	alright
 lisitsyn	pickle27: where the segfault occurs? nmatrix?
 shogun-notifier-	shogun: Heiko Strathmann :develop * 2495ea3 / src/shogun/mathematics/logdet/ (2 files): https://github.com/shogun-toolbox/shogun/commit/2495ea3e15bbe2c7753b8c756accdb6573fb0de5
 shogun-notifier-	shogun: added method to compute number of shifts from accuracy and also added
 shogun-notifier-	shogun: a constructor to set this accuracy. Some minor refactoring otherwise
 shogun-notifier-	shogun: Heiko Strathmann :develop * 4d11dc6 / tests/unit/mathematics/logdet/RationalApproximation_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/4d11dc6b19ce20890201390d1eeee08dd419dda7
 shogun-notifier-	shogun: make unit test use newly added method to compute the number of shifts
 shogun-notifier-	shogun: Heiko Strathmann :develop * cd23cb8 / src/shogun/mathematics/logdet/ (5 files): https://github.com/shogun-toolbox/shogun/commit/cd23cb822ae06e82aac8e6466fa8502f80e6e76c
 shogun-notifier-	shogun: Added accuracy based constructors to implementations of rational approximation base class
 shogun-notifier-	shogun: Heiko Strathmann :develop * 6cf0a9a / src/shogun/mathematics/logdet/RationalApproximation.cpp: https://github.com/shogun-toolbox/shogun/commit/6cf0a9aa8d74b8064abeb3160813d805f4299ff2
 shogun-notifier-	shogun: provide information in case of negative accuracy
 lisitsyn	pickle27: I mean I have seen quite a lot shogun segfaults :D
 shogun-notifier-	shogun: Heiko Strathmann :develop * e324259 / tests/unit/mathematics/logdet/RationalApproximation_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/e324259cf25957903b4763701eb264d441df2261
 shogun-notifier-	shogun: using existing method to compute accuracy
 shogun-notifier-	shogun: Heiko Strathmann :develop * eb533ce / src/shogun/mathematics/logdet/ (2 files): https://github.com/shogun-toolbox/shogun/commit/eb533ce0e88cde59d4892c8305fb0a7fb8660df0
 shogun-notifier-	shogun: added my name to copyright
 shogun-notifier-	shogun: Heiko Strathmann :develop * 5745b0b / / (7 files): https://github.com/shogun-toolbox/shogun/commit/5745b0b5887c306ceb0bac63c8eead9d99896035
 shogun-notifier-	shogun: remove constructor with num shifts and offer a method to set that instead
 shogun-notifier-	shogun: Heiko Strathmann :develop * 4b56820 / tests/unit/mathematics/logdet/ (2 files): https://github.com/shogun-toolbox/shogun/commit/4b568200d1c05c6c09b533d81fce2357b3a4b6f5
 shogun-notifier-	shogun: replace constructor call with num_shifts with dummy value for accuracy and set num shifts by hand
 shogun-notifier-	shogun: Heiko Strathmann :develop * 00ad5d9 / tests/unit/mathematics/logdet/RationalApproximation_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/00ad5d96d46a6c836fa08606603b4eb1e0f31383
 lisitsyn	heiko-tron
@HeikoS	travis should go green with this, hopefully
 lisitsyn	HeikoS: you basically heikonized the channel
@HeikoS	lisitsyn: haha :)
@HeikoS	ok going home now
@HeikoS	see you guys
 lisitsyn	ciao!
 votjakovr	HeikoS: see you ;)
@HeikoS	lisitsyn: votjakovr: see you!
 lisitsyn	pickle27: I wanted to ask you about one thing with the saliency filter
 pickle27	lisitsyn: yeah?
 lisitsyn	well I can simplify it
 lisitsyn	how to make it work haha
-!- HeikoS [~heiko@nat-169-160.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
 pickle27	lisitsyn: my code or the idea in general?
 lisitsyn	pickle27: both - I tried your code but I don't get how does it work
 pickle27	lisitsyn: okay let me pull it up
 lisitsyn	pickle27: the problem is that I get quite low quality fg masks
 pickle27	lisitsyn: looking at my implementation I basically did this
 pickle27	I found all the "blobs" of connected foreground pixels in the low threshold mask
 lisitsyn	pickle27: I admit I don't get what should I expect
 lisitsyn	pickle27: how would you handle disconnected parts?
 shogun-buildbot	build #1960 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1960
 pickle27	then I check each pixel in each blob and mark if it is also foreground in the high threshold mask I inc a counter
 pickle27	a blob has to have a certain ratio or else it get filtered
 pickle27	so you want to set your low threshold lower
 pickle27	than you otherwise might
 shogun-buildbot	build #1963 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1963  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #1964 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1964
 lisitsyn	pickle27: can you take a look at fg/bg masks I get? may be I miss something
 pickle27	sure
 lisitsyn	pickle27: argh do you have any snippet to join a few images into one?
 pickle27	like as a video?
 lisitsyn	video1 | video2 | video3
 pickle27	hmm nothing that would be quick I don't think
 pickle27	I often would just writing something in opencv and python
 pickle27	but never really save it
 lisitsyn	I see
 lisitsyn	okay in a minute
 shogun-buildbot	build #1586 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1586  blamelist: Kevin <kevinhughes27@gmail.com>
 lisitsyn	pickle27: sent
 lisitsyn	pickle27: do you find it reasonable?
 pickle27	yeah Im trying to play in slow motion
 lisitsyn	I mean I can definitely detect something going on
 lisitsyn	but it is even hard to find proper ROI
 lisitsyn	pickle27: that's adaptive median
 shogun-buildbot	build #1048 of rpm1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/rpm1%20-%20libshogun/builds/1048
 pickle27	lisitsyn: and thats the lowest thresh you can go before it starts classifying too much?
 lisitsyn	pickle27: I haven't really tuned it
 pickle27	lisitsyn: also I find it easier to look at the masks than the contours output
 pickle27	try droping the thresh
 lisitsyn	pickle27: okay let me send you mask
 lisitsyn	pickle27: what would you say about adaptive median?
 shogun-buildbot	build #76 of osx1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/osx1%20-%20libshogun/builds/76  blamelist: Kevin <kevinhughes27@gmail.com>
 pickle27	lisitsyn: for a threshold? hmm
 lisitsyn	pickle27: no I mean the method
 lisitsyn	pickle27: is it ok at all?
 pickle27	lisitsyn: I think it should be okay for indoors
 shogun-buildbot	build #1587 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/bsd1%20-%20libshogun/builds/1587  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 pickle27	lisitsyn: I really think you are going to need something more than BGS though
 lisitsyn	pickle27: yes indeed
 pickle27	like use BGS to get a guess then do some kind of detection
 lisitsyn	pickle27: just want to make it more reliable before I go next steps
 pickle27	yeah probably a good call
 lisitsyn	https://dl.dropboxusercontent.com/u/10139213/share/processed.avi
 lisitsyn	pickle27: ^
 pickle27	lisitsyn: is the backgound always going to be the same? do you have data of just the background?
 lisitsyn	pickle27: the main thing that bothers me is lightning changes on the floor
 lisitsyn	pickle27: yes it is mostly the same
 lisitsyn	just speckles and some jittering
 pickle27	lisitsyn: you could look into training BG model beforehand
 lisitsyn	pickle27: please elaborate ;)
 pickle27	lisitsyn: this video won't play in browser, can you just link the folder
 lisitsyn	oh sorry
 lisitsyn	okay let me email it
 pickle27	lisitsyn: you run a method like adaptive median or any of the others on all the data you have of the BG and save the model
 pickle27	then don
 pickle27	't bother with learning or update while detecting
 lisitsyn	pickle27: what would be the best method that pre-learns?
 pickle27	lisitsyn: you can pre-learn any method
 pickle27	lisitsyn: but Eigenbackground can only pre learn and is pretty good
 pickle27	lisitsyn: also did my whole thesis on it lol
 lisitsyn	pickle27: eigenbackground is basically pca of the image right?
 shogun-buildbot	build #77 of osx1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/osx1%20-%20libshogun/builds/77  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 pickle27	lisitsyn: yeah
 lisitsyn	pickle27: have you ever seen any applications of a method that learns using some custom features (not just pixels)?
 pickle27	lisitsyn: some people have done some stuff with local binary patterns
 pickle27	I don't think this would work well for you though because there isn't a lot of texture
 lisitsyn	yeah lbp is good for real textures
 lisitsyn	well it works for faces though
 pickle27	at some point it transitions from being called BGS to being called segmentation, and I haven't done much work there
 pickle27	it works good for BGS too in some cases
 lisitsyn	pickle27: real segmentation is not going to be real-time :(
 pickle27	lisitsyn: yeah
 lisitsyn	pickle27: I wish I just graph cut it or whatever :D
 pickle27	lisitsyn: well you could try and do obj detection using SIFT features
 pickle27	sift is fast enough
 pickle27	and it might work
 lisitsyn	pickle27: yes that's going to work I believe
 lisitsyn	SIFT SURF whatever
 lisitsyn	pickle27: well probably the workflow would be BGS to detect changes
 lisitsyn	then start tracking keypoints
 pickle27	lisitsyn: you might even be able to skip the bgs and just use SIFT to detect if the car is there or not
 lisitsyn	pickle27: haha true
 lisitsyn	this would mean I spend a week for nothing
 lisitsyn	:D
 pickle27	lisitsyn: BGS is so frustrating because you can get so close to what you need but never quite enough
 lisitsyn	pickle27: oh I think I know why you find it frustrating
 lisitsyn	you did a thesis on that
 pickle27	haha yup
 lisitsyn	that's the best practice to start feeling X boring and frustrating
 pickle27	lisitsyn: but in other news, my ruby out typemap works now
 lisitsyn	yup
 lisitsyn	nice
 lisitsyn	pickle27: have you used FREAK btw?
 lisitsyn	I tried it once
 lisitsyn	interesting thing actually
 shogun-buildbot	build #1368 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/cyg1%20-%20libshogun/builds/1368  blamelist: Kevin <kevinhughes27@gmail.com>
 pickle27	lisitsyn: yeah isn't that made by University of Ottawa?
 lisitsyn	hmm it seems not
 lisitsyn	http://www.ivpe.com/pub.php
 lisitsyn	that's the author
 pickle27	lisitsyn: hmm oh they were MoFREAK
 pickle27	U of O made them 3D
 lisitsyn	pickle27: it was DAISY then it called FREAK
 lisitsyn	HOGs are dense SIFTS :D
 lisitsyn	SURFs are SIFTs but not patented
 pickle27	lisitsyn: heres a question, is there a way to make a function that returns a type?
 lisitsyn	uhh
 lisitsyn	by type you mean what?
 lisitsyn	class?
 pickle27	lisitsyn: here is my problem
 lisitsyn	C++ have no first-class citizenship for classes you know ;0
 lisitsyn	;)
 pickle27	NMatrix has a method for getting the data type in the API but it returns an int
 pickle27	I need to turn that int into a type
 pickle27	currently I am using a switch and it bothers me
 lisitsyn	just switch it
 lisitsyn	yeah what else can you do
 pickle27	lisitsyn: I dunno I was hoping to finding something cleaner
 pickle27	or even some way to encapulate
 lisitsyn	pickle27: that's compile-runtime tradeoff :)
 lisitsyn	pickle27: I guess you need SGMatrix<whatever>
 lisitsyn	but you can't put anything outside of <> inside <>
 lisitsyn	pickle27: I guess that's why cv::Mat is not templated :)
 pickle27	isn't cv::Mat templated?
 pickle27	I thought it was
 pickle27	oh nvm
 lisitsyn	pickle27: ;)
 lisitsyn	pickle27: I haven't looked inside it though
 pickle27	you can construct without a template arg
 lisitsyn	inside it is I believe
 pickle27	yeah they do some weirdness under there
 pickle27	because they use templates in the lib for sure but the user doesn't have to use them
 lisitsyn	pickle27: I find this solution not that bad
 pickle27	lisitsyn: anyways here is the inner loop of my typemap, any ideas to make it cleaner or is this as good as it gets?
 pickle27	http://pastebin.com/T3npGt5s
-!- travis-ci [~travis-ci@ec2-107-20-114-62.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10905742
-!- travis-ci [~travis-ci@ec2-107-20-114-62.compute-1.amazonaws.com] has left #shogun []
 pickle27	lisitsyn: I think I am going to at least move the switch into a function
 lisitsyn	pickle27: oh please don't move it
 lisitsyn	pickle27: you would interrupt some optimization here this way I think
 lisitsyn	see what I mean?
 pickle27	lisitsyn: no? but I have the same code for Vector and Matrix
 lisitsyn	pickle27: not a great deal
 pickle27	lisitsyn: not sure I totally understand but I think I can sort of see your point
 lisitsyn	pickle27: but w/o function it can move switch out of loops
 lisitsyn	by it I mean compiler
 pickle27	ahh interesting okay
 pickle27	I shall leave it then
 lisitsyn	pickle27: I don't know any better way to do that though
 pickle27	lisitsyn: fair enough
 lisitsyn	pickle27: it is just the place where compile stuff meets runtime stuff
 shogun-buildbot	build #1962 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb1%20-%20libshogun/builds/1962  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #1369 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/cyg1%20-%20libshogun/builds/1369  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #1671 of deb3 - modular_interfaces is complete: Failure [failed install test python_modular]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1671  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #1670 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.orgbuilders/deb3%20-%20modular_interfaces/builds/1670
 lisitsyn	pickle27: alright keypoint based approach probably looks better :D
 lisitsyn	pickle27: thanks a lot for you suggestions
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has quit [Quit: Leaving.]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
--- Log closed Tue Sep 03 00:00:42 2013
