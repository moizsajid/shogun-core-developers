--- Log opened Wed Sep 11 00:00:54 2013
-!- travis-ci [~travis-ci@ec2-54-234-113-13.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Fernando Iglesias's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/11210278
-!- travis-ci [~travis-ci@ec2-54-234-113-13.compute-1.amazonaws.com] has left #shogun []
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- hushell [~hushell@8-92.ptpg.oregonstate.edu] has quit [Ping timeout: 245 seconds]
-!- hushell [~hushell@c-98-232-178-161.hsd1.or.comcast.net] has joined #shogun
-!- sonne|osx_ [~sonne@f053034179.adsl.alicedsl.de] has joined #shogun
-!- sonne|osx [~sonne@f053039166.adsl.alicedsl.de] has quit [Ping timeout: 245 seconds]
-!- sonne|osx_ is now known as sonne|osx
-!- zxtx [~zv@rrcs-76-79-81-162.west.biz.rr.com] has quit [Ping timeout: 260 seconds]
-!- pickle27 [~Kevin@199.119.128.114] has quit [Quit: Leaving]
-!- foulwall [~zhengyang@114.255.40.22] has quit [Remote host closed the connection]
-!- foulwall [~zhengyang@114.255.40.22] has joined #shogun
-!- sonne|osx [~sonne@f053034179.adsl.alicedsl.de] has quit [Quit: sonne|osx]
-!- sonne|osx [~sonne@82.113.106.106] has joined #shogun
 sonne|osx	shogun-buildbot: force build --branch=develop 'deb3 - modular_interfaces'
 shogun-buildbot	build forced [ETA 33m29s]
 shogun-buildbot	I'll give a shout when the build finishes
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 8dc2b37 / src/shogun/base/DynArray.h: https://github.com/shogun-toolbox/shogun/commit/8dc2b37940f62e210eeba0d198c862ac3b3f78d0
 shogun-notifier-	shogun: fix potential memory leak in dynarray
-!- sonne|osx [~sonne@82.113.106.106] has quit [Quit: sonne|osx]
 shogun-buildbot	build #1776 of deb3 - modular_interfaces is complete: Failure [failed test libshogun]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/1776
@wiking	sonney2k: https://travis-ci.org/shogun-toolbox/shogun/builds/11225734
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has quit [Ping timeout: 245 seconds]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
 sonne|work	wiking: ahh ok
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
 shogun-buildbot	build #2088 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2088  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has quit [Quit: Leaving.]
-!- travis-ci [~travis-ci@ec2-54-234-113-13.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/11225734
-!- travis-ci [~travis-ci@ec2-54-234-113-13.compute-1.amazonaws.com] has left #shogun []
@wiking	sonne|work: i have a question. yesterday i've discovered some error in a unit test when i've compiled with thread-sanitizer: basically there's a class which has a SGVector and in it's constructor the init function did this: vector.resize_vector(0) this broke the unit test. unfortunately the error was a meaningless execption. but if i changed that line to vector = SGVector<type>(); then the error disappeared. ideas why this could be? and why it only happ
@wiking	thoralf: ^ if u are around
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
 sonne|work	wiking: the correct fix is SGVEctor<type>()
 sonne|work	wiking: the other is actually a BUG!!
@wiking	ok i get that
@wiking	but why only comes out if i enable thread-sanitizing? :D
@wiking	even more, what type of bug is that? :D
@wiking	i mean actually then it's good to have that buildbot running (thread analysis) as this bug was not catch any other way.... :P
 sonne|work	wiking: well the resize(0) basically frees the memory of the sgvector I guess accidentally
@wiking	so this already justifies that bot's existing :P
@wiking	sonne|work: btw -fPIC should be always set for gmock/gtest libraries right?
 sonne|work	wiking: only on PIC architecturs like AMD64
 sonne|work	wiking: on x86 it is not necessary
 sonne|work	(probably the only exception)
@wiking	sonne|work: but if we 'always' have it that doesn't hurt, right?
 sonne|work	wiking: except that you get a gazillion of warnings
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
@wiking	sonne|work: woah man
@wiking	we have like kazillions of bugs
@wiking	:)))
-!- besser82 [~besser82@77-22-24-208-dynip.superkabel.de] has joined #shogun
-!- besser82 is now known as Guest73782
-!- Guest73782 [~besser82@77-22-24-208-dynip.superkabel.de] has quit [Client Quit]
-!- besser82|laptop [~besser82@77-22-24-208-dynip.superkabel.de] has joined #shogun
-!- besser82|laptop [~besser82@77-22-24-208-dynip.superkabel.de] has quit [Changing host]
-!- besser82|laptop [~besser82@fedora/besser82] has joined #shogun
-!- besser82|laptop is now known as besser82
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	good morning guys
@wiking	ok so what are the non PIC archs?
 shogun-notifier-	shogun: Viktor Gal :develop * c83de51 / / (5 files): https://github.com/shogun-toolbox/shogun/commit/c83de5161c335d036440afd066fae0ca6108b931
 shogun-notifier-	shogun: Fix TSAN flags and add ENABLE_ASAN and ENABLE_MSAN cmake targets
 shogun-notifier-	shogun: Viktor Gal :develop * 07dc7a4 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/07dc7a45d01bd81b53a2411f15632a0bb5590cf4
 shogun-notifier-	shogun: Fix header protector in CanberraMetric
 shogun-notifier-	shogun: Fix initialization of SGVector in WeightedMajorityVote
 shogun-notifier-	shogun: Fix malloc dealloc mismatch in CombinedDotFeatures_unittest
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
@wiking	shogun-buildbot: force build --branch=develop 'clang34 - thread analysis'
 shogun-buildbot	build forced [ETA 6m14s]
 shogun-buildbot	I'll give a shout when the build finishes
 shogun-buildbot	build #2089 of deb1 - libshogun is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2089  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- travis-ci [~travis-ci@ec2-54-234-43-199.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/11228787
-!- travis-ci [~travis-ci@ec2-54-234-43-199.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #2090 of deb1 - libshogun is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2090  blamelist: Viktor Gal <viktor.gal@maeth.com>
@wiking	oh damn :(
 shogun-notifier-	shogun: Viktor Gal :develop * 8334b1e / / (3 files): https://github.com/shogun-toolbox/shogun/commit/8334b1eb2306aca190bfaba9817d44dc10601219
 shogun-notifier-	shogun: only set SANITIZER_FLAGS if it is set
 shogun-buildbot	build #3 of clang34 - thread analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20thread%20analysis/builds/3
@wiking	yeey new bugs
 shogun-buildbot	build #2091 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2091  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- van51 [~van51@athedsl-410351.home.otenet.gr] has joined #shogun
 van51	hello guys
@wiking	yo
 van51	sonne|work: I am doing the demo backend and I have a question
 van51	sonne|work: I was thinking of de-serializing a SVM since training it would take too much time
 van51	sonne|work: but even de-serializing takes about ~20secs
 van51	sonne|work: can we have a different thread load it upon a new request or something?
 sonne|work	van51: before serializing it please clear out all features etc
 sonne|work	van51: then loading should take <1s
 sonne|work	van51: store it as ascii to see yourself
@wiking	sonne|work: do you know how this is possible: for (i=0; i<n; i++)
@wiking	1 Assuming 'i' is >= 'n'
 sonne|work	van51: and then I would also load it just once on startup. foulwall did this
 sonne|work	too
 sonne|work	wiking: no way
@wiking	sonne|work: static analyzer still manages :D
@wiking	ok i'll ask around in llvm channel
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 498a280 / src/shogun/base/DynArray.h: https://github.com/shogun-toolbox/shogun/commit/498a28007e1b618f5e063ef4acef4c58fb4e9322
 shogun-notifier-	shogun: Revert "fix potential memory leak in dynarray"
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: This reverts commit 8dc2b37940f62e210eeba0d198c862ac3b3f78d0.
 sonne|work	wiking: there is no memory leak - static analyzer is wrong
 sonne|work	there is a corner case where realloc can return NULL when it fails
@wiking	sonne|work: ok i'll try to find out how we can supress that error
 sonne|work	but the array pointer stays the same
 sonne|work	so we should not overwrite the array pointer - because then we cannot delete it
 sonne|work	wiking: regarding the for loop - maybe i is incremented?
@wiking	sonne|work: within the loop no
 sonne|work	wiking: then valgrind it?
 sonne|work	wiking: ohh btw when doing valgrind disable optimizations otherwise it may not be 100% accurate
@wiking	sonne|work: yes i did that
@wiking	sonne|work: btw that loop condition can be true
@wiking	if n = 0
 sonne|work	ok
 sonne|work	if n == 0 ?
@wiking	for(i=0; i< n; i++) where n = 0
 sonne|work	or n= 0?
@wiking	so there it can happen that i >= n
 sonne|work	ahh >= yes
@wiking	sonne|work: i guess an assert( n > 0) should fix that
 sonne|work	wiking: yes
 sonne|work	no way i<n should not enter the loop
 sonne|work	I mean the for loop is never taken
@wiking	sonne|work: although here it did not
@wiking	http://buildbot.shogun-toolbox.org/static_analysis/2013-09-10-1/report-c8589a.html#EndPath
@wiking	sonne|work: mmm any ideas about this
@wiking	i have ASSERT(totdoc > 0);
@wiking	and then it say
@wiking	1) Loop condition is true. Entering loop body
@wiking	2_ Assuming 'j' is >= 'totdoc'
@wiking	how the fuck is that possible?
@wiking	ah ok
@wiking	totdoc = 1
@wiking	then first loop ok
 sonne|work	van51: OK?
@wiking	second time it's 1
 sonne|work	van51: or alternatively get the bias term and w vector and create a linearmachine just with them and serialize it
 van51	sonne|work: yeah I got the idea.. I'm testing
 van51	sonne|work: couldn't w be the bottleneck?
 van51	sonne|work: that specific svm was consifering a hash size of 20 bits
@wiking	sonne|work: ok maybe there we should just do an if kernel_cache.activenum > 0
 sonne|work	van51: 2**20*8
 sonne|work	8388608
 sonne|work	so 8MB
 sonne|work	no
 sonne|work	van51: how big is the file that you have
@wiking	shogun-buildbot: force build --branch=develop 'clang34 - thread analysis'
 shogun-buildbot	build forced [ETA 6m14s]
 shogun-buildbot	I'll give a shout when the build finishes
 van51	sonne|work: ~ 100Mb
 van51	sonne|work: so I guess I didn't remove the features
-!- iglesiasg_ [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 276 seconds]
 thoralf	<wiking> thoralf: if u r around would be great <-- Now? ;)
@wiking	thoralf: so ... basically we've managed to figure out what was there going on...
@wiking	thoralf: there was a vector.resize_vector(0); in the init part...
@wiking	and that caused troubles
@wiking	thoralf: it's just bad that the error was not more informative.... but at least it found the bug
 thoralf	wiking: Hope it was not in my code? ;)
@wiking	thoralf: nono it was mine
@wiking	thoralf: i'm just waiting for the new analysis output
@wiking	let's see what it finds this time
 thoralf	wiking: In the beginning I've seen that in general sgvector(0) *might* be a problem, because vector=NULL etc.  Interesting border cases.  But it wasn't broken, so I didn't touch. ;)
 thoralf	wiking: BTW., we once had an issue with "SGVector v();" vs. "SGVector v(0);" vs. "SGVector v;" - we found out that v() was bad, since leaving v uninitialized.  Do you know why?
@wiking	ok new tsan analysis will be out soon
@wiking	thoralf: no idea :(
 shogun-buildbot	build #4 of clang34 - thread analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20thread%20analysis/builds/4
@wiking	yey errors
 lisitsyn	"SGVector v()" is a pointer to function that returns SGVector
-!- travis-ci [~travis-ci@ec2-54-227-133-66.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/11229156
-!- travis-ci [~travis-ci@ec2-54-227-133-66.compute-1.amazonaws.com] has left #shogun []
 thoralf	lisitsyn: Wow, thanks.  At least it sounds more plausible than anything I could think about. ;)
 lisitsyn	thoralf: I don't think it makes sense to write SGVector v();
 thoralf	lisitsyn: I've been writing it accidently, but afterwards it didn't even look wrong. :)
 lisitsyn	thoralf: this also happens when you want some std::vector<int> v(10);
 lisitsyn	and then you decide oh I don't need capacity anymore
 lisitsyn	and you get compile error :)
 thoralf	Hehe, that's exactly what I did. :)
 thoralf	"Just remove that 0 to save space" ;)
 lisitsyn	thoralf: it is good interview question
 lisitsyn	if C++ programmer never had issue with that ()
 thoralf	lisitsyn: Oh yes.
 lisitsyn	he/she is probably not enough experienced
 lisitsyn	just haven't written enough code yet
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
@wiking	shogun-buildbot: force build --branch=develop 'clang34 - undefined behaviour analysis'
 shogun-buildbot	build #0 forced
 shogun-buildbot	I'll give a shout when the build finishes
 lisitsyn	wiking: undefined behaviour analysis?! ;D
@wiking	lisitsyn: you'll see
@wiking	it's like 1000+ lines of error
 lisitsyn	wiking: shogun must be aircraft control software now
 thoralf	Another one would be to tell something about: (int32_t)*(int32t) - (int64_t)
 thoralf	Had this a few days ago. :)
 lisitsyn	thoralf: well even (float) - (float) is full of surprises :)
 lisitsyn	wiking: I think we lack just one step now
 thoralf	Full of undefined behaviour? :)
 lisitsyn	infrastructure-wise
@wiking	lisitsyn: what? :)
 lisitsyn	wiking: we need to buy some outsourcing company that writes code
@wiking	:DDD
 lisitsyn	all the other things are here already
@wiking	welll fuck this shit
@wiking	if we do a release
@wiking	let's do it right
@wiking	:)
@wiking	especially if it's 3.0
@wiking	i mean i know that we had some really shitty releases in the past
@wiking	lisitsyn: basically the agenda of the next meeting should be
 lisitsyn	wiking: you deserve to be chief engineering officer :D
@wiking	lisitsyn: fix all the analysis errors... or suppress them if they are irrelevant
 thoralf	Is there a date for the release?
@wiking	thoralf: we wanted end of this month
@wiking	thoralf: imo it wont happened
@wiking	there's just too much stuff
 thoralf	wiking: Are you doing shogun full-time? ;)
@wiking	lisitsyn: clang 3.4 release will be really cool with all this sanitizing options + openmp
@wiking	seems like
@wiking	:D
 thoralf	60h/week in your country? ;)
@wiking	heheh
 lisitsyn	wiking: what's your plan?
@wiking	lisitsyn: for?
 lisitsyn	wiking: your time-wise
 shogun-buildbot	build #0 of clang34 - undefined behaviour analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20undefined%20behaviour%20analysis/builds/0
@wiking	okeeey
@wiking	let's check tht fucking error of this one
@wiking	ah this was worse before
@wiking	cool:)
 lisitsyn	wiking: I mean how long are you going to work on that more than full-time? :)
@wiking	heheheh
@wiking	lisitsyn: release
@wiking	lisitsyn: Serialization.liblinear search for this in here: http://buildbot.shogun-toolbox.org/builders/clang34%20-%20undefined%20behaviour%20analysis/builds/0/steps/test/logs/stdio
 lisitsyn	wiking: oh
@wiking	hehe ok one more bot is needed
@wiking	shall i just put all the sanitizing task into one buildbot task?
 thoralf	lisitsyn: "until release" -> shifting the release just became more attractive :D
@wiking	ok
@wiking	i think it's time to merge serialutest branch
@wiking	:DDDD
@wiking	will be heaps of fucking fun
 shogun-notifier-	shogun: Viktor Gal :feature/SerialUTests * 59466a8 / tests/unit/io/SerializationJSON_unittest.cc.jinja2: https://github.com/shogun-toolbox/shogun/commit/59466a831acc0f0573787da7eee15868fdae4883
 shogun-notifier-	shogun: Disable json serial utest temporarily
 shogun-buildbot	build #2092 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2092
@wiking	lisitsyn: what ya reckon: rebase + merge or just merge the branch?
 lisitsyn	wiking: just merge it I think
 shogun-buildbot	build #59 of FC19 - modular_interfaces is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20modular_interfaces/builds/59  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #72 of FCRH - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/72
-!- sekon [~harish@li291-152.members.linode.com] has joined #shogun
 sekon	Hello, does shogun implement the C4.5 algorithm ?
@wiking	sekon: no not yet... neither c5.0
 besser82	sekon: sry, then i was mistaking ;)
@wiking	besser82: how's the package creation going?
 besser82	wiking: pretty straight forward ;)
@wiking	oh fuck ... clang just doesn't wnat to compile some unit tests...
 besser82	wiking: clang is a pita ;)
@wiking	besser82: is it done?
 besser82	wiking: currently waiting for NLopt and ColPack to be reviewed for fedora....
@wiking	besser82: ah but it works without those :)
 besser82	wiking: yes, but it will miss some features then afaik...
@wiking	yesh some for sure
@wiking	:)
 sekon	wiking: thanks for the quick reply
 besser82	wiking: so when they are ready to be imported, I'm far enough to submit SHOGUN-rpm for review ;)
@wiking	ah ok
-!- sekon [~harish@li291-152.members.linode.com] has left #shogun []
 besser82	wiking: is it possible to have the data-set-tarball to be versioned to the corresponding shogung version for upcoming release?
 shogun-notifier-	shogun: Viktor Gal :feature/SerialUTests * a0a0712 / .travis.yml,tests/unit/io/SerializationJSON_unittest.cc.jinja2: https://github.com/shogun-toolbox/shogun/commit/a0a07125038664bbb6888d4eed05a1c3e6b28f11
 shogun-notifier-	shogun: Maybe we ran out of mem when compiling the big autogen utests?
@wiking	besser82: yeah possible
 besser82	wiking: would you be so nice to do so?
@wiking	besser82: somebody will do it for sure :)
@wiking	it's a small price for an rpm ;)
 besser82	wiking: would be a lot less work for on maintaining the whole thing ;)
@wiking	heh
@wiking	i never fucking watch again travis log html: https://api.travis-ci.org/jobs/11231308/log.txt?deansi=true
@wiking	:D
 besser82	wiking: since i can run the build with testsuite in one step, without need to lookup which data-set version is needed ;)
 thoralf	wiking: is watching travis log sth like space-night on TV?
 thoralf	wiking: Sit there and watch? :)
-!- travis-ci [~travis-ci@ec2-54-234-43-199.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/11230042
-!- travis-ci [~travis-ci@ec2-54-234-43-199.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1777 of deb3 - modular_interfaces is complete: Failure [failed install test python_modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/1777  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1150 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/rpm1%20-%20libshogun/builds/1150  blamelist: Soeren Sonnenburg <sonne@debian.org>
 thoralf	What to do with unit-test that produces output?  I just tested some error handling and it messes the screen output with stuff like "[ERROR] ..."
 thoralf	I think the [ERROR] might be confusing for those who are watching unit test output. :)
 sonne|work	besser82: the data .tgz is versioned already
 sonne|work	wiking: ^
 sonne|work	in NEWS there is data version ...
 besser82	sonne|work: i know, but my question was about having the version of data.tgz == SHOGUN-ver :)
 sonne|work	van51: look in the ascii file or create a new linear machine with the w & b from the old one and serialize that
 sonne|work	besser82: no doesn't make sense
 sonne|work	besser82: if we keep the data the same why should we upload a new .tgz with a different version name?
-!- Tuxa [808337b4@gateway/web/freenode/ip.128.131.55.180] has joined #shogun
 besser82	sonne|work: in this case, I'd like to ask at least for a tag on gh, please?
 sonne|work	besser82: for data you mean? We kind of always have this since data is a git submodule in shogun already
 besser82	sonne|work: my question is more about the following reason: In fedora I need to run testsuite during pkg-build and the need for a manual lookup of the correct data will make spec maintainance more time-consuming
 besser82	sonne|work: when having a tag on gh for the data repo, which points to the corect commit this would be lot of easier for me, since i just need to specifiy this tag as souce for srpm ;)
 besser82	sonne|work: I think of a tag which is the same version as shogun's version....
 sonne|work	besser82: I guess a download symlink would do the same job right?
 sonne|work	besser82: you only need some easy to grasp url right?
 besser82	sonne|work: yes, that would be fine as well ;)
 besser82	sonne|work: sure
 besser82	sonne|work: the perfect would be $url_to_download_loc/shogun-data-%{version}.tar* sth. ;)
 van51	can someone have a look at this PR: https://github.com/shogun-toolbox/shogun/pull/1569 ?
 van51	and we can discuss it there or here :)
 van51	lisitsyn: ^
 van51	lisitsyn: since the class was written by you and you would know better
@wiking	ok
@wiking	here weeee gooo
 shogun-notifier-	shogun: Viktor Gal :develop * 45ad889 / tests/unit/ (5 files): https://github.com/shogun-toolbox/shogun/commit/45ad889864df9ae6b10627b805bd8b30a59e1aa4
 shogun-notifier-	shogun: Refactor autogenerated clone_unittest
 shogun-notifier-	shogun: Add autogenerated unit tests for all the supported serialisation
 shogun-notifier-	shogun: backends
 shogun-notifier-	shogun: Viktor Gal :develop * 1e9118f / tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/1e9118f41bd6d31b9c77cbc1bddc14d1d13a22c5
 shogun-notifier-	shogun: Refactor autogenerated unit test creation in cmake
 shogun-notifier-	shogun: one will have to add manually the generation command
 shogun-notifier-	shogun: this way we support more flexible autogeneration
 shogun-notifier-	shogun: Viktor Gal :develop * 3455976 / tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/34559761f6bbbe53caa86a2ab04e2752b75e2582
 shogun-notifier-	shogun: Run unit testing with --only-on-failure when executing from ctest
 shogun-notifier-	shogun: The number of log line in travis is limited to 10000 and the
 shogun-notifier-	shogun: ever growing unit tests are eating up the lines, hence only print
 shogun-notifier-	shogun: the failed unit tests when running it from ctest
 shogun-notifier-	shogun: Heiko Strathmann :develop * b2ca266 / src/shogun/features/streaming/generators/GaussianBlobsDataGenerator.cpp: https://github.com/shogun-toolbox/shogun/commit/b2ca26607677d92d0f7ccf8a324c0b680d81768d
 shogun-notifier-	shogun: fixed uninitialised memory bug
 shogun-notifier-	shogun: Heiko Strathmann :develop * 6c4cbf8 / src/shogun/classifier/ (2 files): https://github.com/shogun-toolbox/shogun/commit/6c4cbf830f918abb0b050b339a8668ac434ba25d
 shogun-notifier-	shogun: fixed uninitialized memory bugs and changed SG_REF order in setter
 shogun-notifier-	shogun: Heiko Strathmann :develop * 58ff468 / src/shogun/multiclass/MCLDA.cpp: https://github.com/shogun-toolbox/shogun/commit/58ff468a24e44ec520e1f5a233574866be68bdda
 shogun-notifier-	shogun: Heiko Strathmann :develop * 2a84601 / tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/2a84601c7fd8c6fee3ea4410c54e333913729f95
 shogun-notifier-	shogun: activate hdf5 since it works
 shogun-notifier-	shogun: Heiko Strathmann :develop * 2741b0c / src/shogun/ (7 files): https://github.com/shogun-toolbox/shogun/commit/2741b0c8c10e49012fa51a6485387f2f506ba51a
 shogun-notifier-	shogun: removed spaces from parameter names that are registered
 shogun-notifier-	shogun: Heiko Strathmann :develop * e11517f / src/shogun/base/Parameter.cpp: https://github.com/shogun-toolbox/shogun/commit/e11517f0012428b96614094cd3a56ddcf20342af
 shogun-notifier-	shogun: only allow alnum and underscore for registered parameter names
 shogun-notifier-	shogun: Heiko Strathmann :develop * 9759434 / tests/unit/io/SerializationXML_unittest.cc.jinja2: https://github.com/shogun-toolbox/shogun/commit/97594343003d94a63293737877a0135a2dbeee01
 shogun-notifier-	shogun: introduce accuracy for xml serialization equal tests
 shogun-notifier-	shogun: Heiko Strathmann :develop * a022433 / tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/a0224338eabf701264a66dfd9b0551de00b8871a
 shogun-notifier-	shogun: activate XML serialization since it works
 shogun-notifier-	shogun: Heiko Strathmann :develop * e48b2b4 / tests/unit/io/ (2 files): https://github.com/shogun-toolbox/shogun/commit/e48b2b43c7667f12e6538e9808e21aaeeeb6c8fd
 shogun-notifier-	shogun: added accuracy for template classes
 shogun-notifier-	shogun: Heiko Strathmann :develop * 0610fb9 / tests/unit/io/SerializationJSON_unittest.cc.jinja2: https://github.com/shogun-toolbox/shogun/commit/0610fb952688155bcf938f386c45ac693e175ac0
 shogun-notifier-	shogun: json seems to have a low accuracy
 shogun-notifier-	shogun: Heiko Strathmann :develop * 92f01a9 / tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/92f01a96b686120c2c158928b20326101df07e8f
 shogun-notifier-	shogun: activate json since most things are working
 shogun-notifier-	shogun: Heiko Strathmann :develop * 3602ec7 / src/shogun/io/SerializableJsonFile.cpp: https://github.com/shogun-toolbox/shogun/commit/3602ec74749d86ec71d6af711a969d34b71f16c2
 shogun-notifier-	shogun: replace warning by error since otherwise shogun runs into uninitialized memory problems
 shogun-notifier-	shogun: src/shogun/structure/Factor.cpp
 shogun-notifier-	shogun: Viktor Gal :develop * 5fb7089 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/5fb7089ea44422d32bfa5aab97c30e7ebd6566a3
 shogun-notifier-	shogun: Speed up ctest on travis
@wiking	let the fun beging
@wiking	:)
 Tuxa	hello everyone! I'm new in machine learning and shogun and I tryed to implement a one-class classification (event: is a person getting up from a bed?). The code works, but the classification is pretty bad :(. can somebody take a look on my code please? feature_fustor.cpp: http://pastebin.com/gNyShp49 feature_fusor.h: http://pastebin.com/MQegiPw1  typedefs: http://pastebin.com/CEGE0y0n
@wiking	*begin
 shogun-buildbot	build #2093 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2093  blamelist: Viktor Gal <viktor.gal@maeth.com>
 shogun-buildbot	build #2094 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2094  blamelist: Viktor Gal <viktor.gal@maeth.com>
 shogun-buildbot	build #2096 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2096  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Viktor Gal <viktor.gal@maeth.com>
-!- Tuxa [808337b4@gateway/web/freenode/ip.128.131.55.180] has quit [Quit: Page closed]
-!- Tuxa [808337b4@gateway/web/freenode/ip.128.131.55.180] has joined #shogun
@wiking	Tuxa: why do u use combinedkernel when u dont use actually any kernel?
@wiking	ah ok i haven't seen the header
@wiking	so u always use gaussians
 thoralf	wiking: Something for the compiler-/valgrind-guy https://github.com/shogun-toolbox/shogun/pull/1570 :)
@wiking	cool cool
@wiking	i'll merge it as soon as i have back the unit tests running
 thoralf	wiking: Okay, then I'll write some more documentation into the file.  2 minutes. ;)
 lisitsyn	van51: ok let me see
 lisitsyn	van51: yes makes sense
 shogun-notifier-	shogun: van51 :develop * 57a5b4a / src/shogun/machine/LinearMulticlassMachine.h: https://github.com/shogun-toolbox/shogun/commit/57a5b4a7e7cda3b2c9c07a721766d96dab466539
 shogun-notifier-	shogun: Fix set_features for every machine in LinearMulticlassMachine
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * bc7abf7 / src/shogun/machine/LinearMulticlassMachine.h: https://github.com/shogun-toolbox/shogun/commit/bc7abf7fd822fbd3c4e6cca2fbf0daef646f86b6
 shogun-notifier-	shogun: Merge pull request #1569 from van51/feature/multiclass_serial
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Fix set_features for every machine in LinearMulticlassMachine
 van51	lisitsyn: travis was unhappy about something in python_modular.. not sure if it had anything to do with this
 Tuxa	@wiking: ist it bad to always use gaussians? should i use other kernel types?
 Tuxa	*is
 van51	lisitsyn: anyway, thanks for the merge :)
 lisitsyn	van51: oops
 shogun-buildbot	build #2097 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2097
 shogun-buildbot	build #2098 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2098  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 lisitsyn	van51: looks like serialization
 shogun-buildbot	build #60 of FC19 - modular_interfaces is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20modular_interfaces/builds/60  blamelist: van51 <vangelis_51@hotmail.com>
 van51	lisitsyn: should I do something?
 lisitsyn	van51: I don't think your commit caused that
 van51	lisitsyn: ok then, I won't argue :)
 shogun-buildbot	build #1151 of rpm1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/rpm1%20-%20libshogun/builds/1151
 shogun-buildbot	build #2095 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2095  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- iglesiasg_ [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 276 seconds]
 sonne|work	van51: was that the issue? I mean that is why it was that big?
 van51	sonne|work: the machines that were trained with the multiclass linear machine kept their features, despite a call to set_features(NULL)
 van51	sonne|work: I'm guessing that's why, yeah
 shogun-notifier-	shogun: Viktor Gal :develop * dfd8373 / tests/unit/io/ (3 files): https://github.com/shogun-toolbox/shogun/commit/dfd837373b1fb2dda72d82a3324d528b13e145ce
 shogun-notifier-	shogun: Disable bound to fail serialization unit tests
 shogun-notifier-	shogun: issue #1573 #1572 #1571 #1464
 sonne|work	van51: so how big is it now?
 shogun-buildbot	build #1778 of deb3 - modular_interfaces is complete: Failure [failed install test python_modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/1778  blamelist: van51 <vangelis_51@hotmail.com>
 shogun-buildbot	build #2099 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2099
 van51	sonne|work: I am training a new one atm, but by removing the features/labels from an older one it 's around 70Mb
 sonne|work	van51: still too big, did you have a look in the ascii file?
 van51	sonne|work: yea
 sonne|work	and?
 sonne|work	only the w in there or what else?
 van51	sonne|work: it's because of the 5 w's probably
 sonne|work	ahh 5 languages yes sure
 sonne|work	you used multiclassocas right?
 van51	sonne|work: multiclassliblinear
 sonne|work	or that same thing :)
@wiking	sonne|work: what should b the chmod for buidlsave being able to write to /usr/lib/x86_64-linux-gnu/octave/site/oct/api-v48+/x86_64-pc-linux-gnu
@wiking	?
 sonne|work	wiking: not chmod chown buildslave  usr/lib/x86_64-linux-gnu/octave/site/oct/api-v48+/x86_64-pc-linux-gnu -R
 shogun-buildbot	build #61 of FC19 - modular_interfaces is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20modular_interfaces/builds/61  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- Tuxa [808337b4@gateway/web/freenode/ip.128.131.55.180] has quit [Quit: Page closed]
-!- van51 [~van51@athedsl-410351.home.otenet.gr] has quit [Quit: Leaving.]
 shogun-buildbot	build #1779 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/1779
@wiking	yeye
@wiking	shogun-buildbot: force build --branch=develop 'clang34 - undefined behaviour analysis'
 shogun-buildbot	build #1 forced
 shogun-buildbot	I'll give a shout when the build finishes
 shogun-buildbot	build #1 of clang34 - undefined behaviour analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20undefined%20behaviour%20analysis/builds/1
@wiking	lisitsyn: here?
@wiking	shogun-buildbot: force build --branch=develop 'clang34 - static analysis'
 shogun-buildbot	build #10 forced
 shogun-buildbot	I'll give a shout when the build finishes
 lisitsyn	wiking: yes
@wiking	lisitsyn: /usr/include/eigen3/Eigen/src/Core/util/Memory.h:789:19: runtime error: load of misaligned address 0x00000537a66b for type 'const int', which requires 4 byte alignment
@wiking	0x00000537a66b: note: pointer points here 73  65 5d 00 47 65 6e 75 69  6e 65 49 6e 74 65 6c 00  41 75 74 68 65 6e 74 69  63 41 4d 44 00 41 4d
 lisitsyn	wiking: hehe
@wiking	even better
@wiking	/home/buildslave/clang34_-_undefined_behaviour_analysis/build/src/shogun/base/Parameter.cpp:3634:18: runtime error: member access within address 0x00000b4a1b40 which does not point to an object of type 'SGSparseVector<char>'
@wiking	0x00000b4a1b40: note: object is of type 'shogun::SGSparseVector<double>'
@wiking	 00 00 00 00  b0 70 97 55 43 7f 00 00  10 1f 4a 0b 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00
@wiking	              ^~~~~~~~~~~~~~~~~~~~~~~
@wiking	              vptr for 'shogun::SGSparseVector<double>'
 lisitsyn	wiking: no idea what's happening here :D
@wiking	well it's the undefined behaviour sanitizer shit :)
@wiking	lisitsyn: -fsanitize=vptr: Use of an object whose vptr indicates that it is of the wrong dynamic type, or that its lifetime has not begun or has ended
 shogun-buildbot	build #10 of clang34 - static analysis is complete: Failure [failed analyse]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20static%20analysis/builds/10
-!- sonne|osx [~sonne@82.113.121.127] has joined #shogun
 sonne|osx	wiking: I've checked the static clang analysis for a couple of more items
 sonne|osx	so far all were false positives
@wiking	sonne|osx: really? even the ones for Parameter.cpp?
@wiking	and thiese ones are for sure not false positives
@wiking	sonne|osx: Argument with 'nonnull' attribute passed null
 sonne|osx	wiking: I didn't check those but div by zero memleak and some nonnull
@wiking	http://buildbot.shogun-toolbox.org/static_analysis/2013-09-11-1/report-d7bc07.html#EndPath
@wiking	this ascii file really can get null parameter for strncpy
@wiking	in CAsciiFile::append_item
 sonne|osx	wiking: once I am done fixing the examples AsciiFile will be removed anyway
@wiking	ok
@wiking	sonne|osx: this is not false positive either http://buildbot.shogun-toolbox.org/static_analysis/2013-09-11-1/report-422c86.html#EndPath
@wiking	and same here for sparsefeatures
@wiking	http://buildbot.shogun-toolbox.org/static_analysis/2013-09-11-1/report-bddce3.html#EndPath
 sonne|osx	what is supposed to be null here?
 sonne|osx	param?
 sonne|osx	wiking: ^
@wiking	which one?
 sonne|osx	http://buildbot.shogun-toolbox.org/static_analysis/2013-09-11-1/report-422c86.html#EndPath
@wiking	sonne|osx: hdf5 case param can be nul
@wiking	yes
 sonne|osx	wiking: how?
@wiking	read_string_begin_wrapped
@wiking	go there
@wiking	as a second step
@wiking	read_scalar_wrapped(type, NULL);
@wiking	hence param = NULL
@wiking	and kaboom there u go
 sonne|osx	ahh I see
 sonne|osx	ok then
@wiking	in sparse case it's even more obvious
@wiking	actually there i think it's always null
@wiking	as tmp_feat_after is initialized as NULL
@wiking	and never set
@wiking	(the setter line is commented out)
@wiking	 //tmp_feat_after=((CSparsePreprocessor<ST>*) get_preproc(i))->apply_to_feature_vector(tmp_feat_before, tmp_len);
 sonne|osx	OK I will have a look later again then
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * b2a174e / examples/undocumented/python_modular/ (2 files): https://github.com/shogun-toolbox/shogun/commit/b2a174e81aead41492b5c8e44d156876d47fdb5e
 shogun-notifier-	shogun: CSVFile conversion
-!- sonne|osx [~sonne@82.113.121.127] has quit [Quit: sonne|osx]
@wiking	oooh goodie
 shogun-buildbot	build #1701 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/1701  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #62 of FC19 - modular_interfaces is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20modular_interfaces/builds/62  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-54-227-133-66.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/11235371
-!- travis-ci [~travis-ci@ec2-54-227-133-66.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :develop * 8b86afc / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/8b86afcf9f94f04f1216a894c17fe43115b83e80
 shogun-notifier-	shogun: Travis: turn off coveralls and lower the concurent make jobs to 2
 shogun-notifier-	shogun: otherwise we are sometimes running into weird (most probably out of
 shogun-notifier-	shogun: memory) behaviour of the compiler
-!- van51 [~van51@athedsl-410351.home.otenet.gr] has joined #shogun
 shogun-buildbot	build #63 of FC19 - modular_interfaces is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20modular_interfaces/builds/63  blamelist: Viktor Gal <viktor.gal@maeth.com>
 shogun-buildbot	build #1702 of bsd1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/1702
@wiking	did we have problems with StreamingHashedDocFeaturesTest.example_reading
@wiking	?
@wiking	lately?
 van51	wiking: nope and there shouldn't be
 van51	wiking: what's wrong with it?
@wiking	van51: http://pastebin.com/HbkShJD9
@wiking	it's the same for StreamingHashedDenseFeaturesTest.dot
 thoralf	wiking: InputParser and ParseBuffer are weird.
 thoralf	wiking: Thy're used in streamingsparsefeatures as well and quite tricky to use.
 thoralf	wiking: But I think I already fixed the most problematic parts.
@wiking	seems there's still something wrong
 thoralf	wiking: Maybe it helps: have a look on get_next_feature
 thoralf	wiking: Creating a sparse vector from what parser returns.
 thoralf	wiking: Assigning it manually to a new vector.
 thoralf	wiking: But the memory is still references (and reused) in parse.
 thoralf	wiking: It was the same pattern everywhere - i fixed it but creating a vector with refcounting=false to prevent freeing it on two places.
 thoralf	CStreamingHashedDocDotFeatures::get_next_example() looks like having the same problem, CStreamingHashedDenseFeatures<ST>::get_next_example() as well
-!- besser82 [~besser82@fedora/besser82] has quit [Remote host closed the connection]
 thoralf	CStreamingHashedSparseFeatures<ST>::get_next_example() is different, but *may* also be affected.
 thoralf	Everywhere the same: Creating a vector from data which is "owned" and reused by the Parser/ring buffer
 thoralf	CStreamingHashedSparseFeatures is okay.
 thoralf	van51: This one looks strange "index_t n_idx = vec.features[i].feat_index + vec.features[i].feat_index;" <-- HashedSparseFeatures
 thoralf	van51: Why "+"?
 van51	thoralf: where is this?
 thoralf	van51: HashedSparseFeatures::hash_vector
 van51	thoralf: I just wanted to create a virtual new index to has afterwards
 van51	hash*
 thoralf	van51: But then index 0 is mapped to 0 again, mapped index 1 becomes 2?
 thoralf	van51: Why not ndim+feat_index?
 thoralf	van51: So it's not easy to predict the collisions of "linear" hashed features and quadratic. ;)
 thoralf	van51: So a priori linear and quadratic features do not collide.
 thoralf	van51: In your case I can say: every second linear feature has a collision with a quadratic feature. ;)
 van51	thoralf: let me have a look
 van51	thoralf: why?
 van51	thoralf: there is also the seed there as a paremeter
 thoralf	van51: Oh right, did not see this!  But you cannot use a different seed in every iteration.
 van51	thoralf: maybe for index=0 it is as you are saying
 van51	thoralf: it's the same value + seed per feature though, so the same feature among examples will be mapped to the same bin
 thoralf	van51: Please talk to someone who's better with this.  But: (1) I think you should fix a seed in advance and use it for all indices (2) the "virtual" quadratic indices should not collide with the "linear" indices.
 thoralf	(before hashing)
 thoralf	Just to make sure to have no systematic collisions.
 thoralf	better with this (than me ;))
@wiking	thoralf: if i gdb this.... i exactly get what it says. current_example->fv is 0x0
 van51	thoralf: I had someone have a look at the code, but I 'll contact him again and ask him to look at this specifically :)
 thoralf	van51: Yeah, just to make sure.  And please tell me if I was wrong.
 van51	thoralf: sure
 thoralf	wiking: Errr.  I need more context.  First of all, you think your problems may be related to what I wrote?
@wiking	gdb) p current_example->fv
@wiking	$3 = {
@wiking	  <shogun::SGReferencedData> = {
@wiking	    _vptr$SGReferencedData = 0x0,
@wiking	    m_refcount = 0x0
@wiking	  },
@wiking	  members of shogun::SGVector<char>:
@wiking	  vector = 0x0,
@wiking	  vlen = 0
@wiking	}
@wiking	InputParser.h:533 + StreamingHashedDocFeaturesTest.example_reading
 thoralf	which line in the unit test?
@wiking	just a se
@wiking	imho StreamingHashedDocDotFeatures.cpp:156
@wiking	as it's in another thread
@wiking	so i might be wrong
@wiking	StreamingHashedDocDotFeatures_unittest.cc:54
@wiking	10 0x0000000103c94d6c in shogun::CStreamingHashedDocDotFeatures::get_next_example (this=0x10744e560) at StreamingHashedDocDotFeatures.cpp:156
@wiking	#11 0x00000001000b51b7 in StreamingHashedDocFeaturesTest_example_reading_Test::TestBody (this=0x10744c0b0) at StreamingHashedDocDotFeatures_unittest.cc:54
@wiking	this is the part of the stack of thread 1
 thoralf	wiking: line 122, line 131
@wiking	there's label in it
@wiking	but the vector is 0x0
 thoralf	wiking: sparsevector assignment
 thoralf	wiking: Sparse vector will be cleared after the loop.
 thoralf	wiking: Destroying internal memory of the parser.
 thoralf	wiking: try setting sparsevectors.features == NULL bfefore the iteration end.
 thoralf	wiking: If it changes something, it's "my" probelm.
@wiking	thoralf: which src we are talking about now?
@wiking	StreamingHashedDocDotFeatures_unittest.cc i guess
 thoralf	tests/unit/features/StreamingHashedDocDotFeatures_unittest.cc
 thoralf	wiking: you're debugging in dot_tests
 thoralf	wiking: since line 156 belongs to this file
 thoralf	s/file/test/
 van51	thoralf: I email-ed them.. when I hear back, I'll let you know :)
 thoralf	wiking: I'm guessing that "get_vector()" is evil. ;)
 thoralf	van51: Who is your mentor, if I may ask?
 van51	thoralf: ofc you can, it was Olivier Chapelle and Benoit Rostykus
@wiking	thoralf: wait i dont see what does this have to do with that null pointer thing ? :)
 van51	thoralf: along with sonney
 thoralf	CStreamingHashedDocDotFeatures(doc_collection)
 thoralf	SGSparseVector<float64_t> example = feats->get_vector();
 thoralf	feats is CStreamingHashedDocDotFeatures
@wiking	thoralf: but this happens in CInputParser<T>::main_parse_loop
 thoralf	wiking: Well, just an educated guess because almost all get_vector() implementations are problematic.
 thoralf	wiking: feats->get_vector() returns pointers to memory shared with input parser
 thoralf	s/shared with/owned by/
 thoralf	Took me a week.  Just commend everything between (1) this f***ing get_vector() and (2) finalize_example out. ;)
 thoralf	If it doesn't help, it's not the problem I'm talking about ;)
@wiking	oh woah
@wiking	editing unit test file
@wiking	does not trigger recompilation
 thoralf	I know ;)
@wiking	ah oooh nooo
 thoralf	Told you ;)
@wiking	wrong shell
@wiking	:))
 thoralf	lol
@wiking	it does
 thoralf	wiking: Wait, but adding unit test files does not trigger, right?
@wiking	yes that's another story
@wiking	thoralf: ok no... i've added example.features = NULL;StreamingHashedDocDotFeatures_unittest.cc
@wiking	i mean example.features = NULL;
@wiking	to StreamingHashedDocDotFeatures_unittest.cc:71
@wiking	but it's the same
@wiking	i'm saying that thre's a problem within get_next_example
 thoralf	wiking: they're related.  Since get_next_example prepares everything for get_vector.
 thoralf	But it should not be triggered when get_vector is not called.
 thoralf	At least it wasn't in streaming sparse features
@wiking	the vector is 0x0
 thoralf	Weird.
@wiking	non the less there's more shit
@wiking	soooo it's ok ;)
 shogun-buildbot	build #1781 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/1781  blamelist: Viktor Gal <viktor.gal@maeth.com>
 thoralf	wiking: I digged into it - and the tmp vector (with the "foreign" memory) is finally passed into ctokenizer.
 thoralf	What about  SGVector<char> foo = tmp.clone();  current_vector = converter->apply(foo);
 thoralf	in get_next_example
 thoralf	Oooor: Changing "SGVector<char> tmp;" to "SGVector<char> tmp(0,false);"
 thoralf	So at least nobody tries to free this beast. ;)
-!- van51 [~van51@athedsl-410351.home.otenet.gr] has quit [Quit: Leaving.]
-!- travis-ci [~travis-ci@ec2-23-23-8-204.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/11242248
-!- travis-ci [~travis-ci@ec2-23-23-8-204.compute-1.amazonaws.com] has left #shogun []
 thoralf	wiking: Are you still on the problem?  If not, how can I trigger it?  It's so tempting. ;)
-!- sonne|osx [~sonne@f053034179.adsl.alicedsl.de] has joined #shogun
-!- lisitsyn1 [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
 shogun-buildbot	build #1780 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/1780  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- lisitsyn2 [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
-!- lisitsyn1 [~lisitsyn@fb2-lo1.global63.net] has quit [Ping timeout: 264 seconds]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 264 seconds]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- vgorbati [~vgorbati@91.216.173.29] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 lisitsyn2	iglesiasg: but you have commit rights ;)
@iglesiasg	lisitsyn2, I think the button to merge it didn't appear
 lisitsyn2	iglesiasg: hmm strange
 lisitsyn2	I am lisitsyn2 haha
@iglesiasg	lisitsyn2, but anyway it was nothing important, I just like being annoying :P
-!- lisitsyn2 is now known as actual_lisitsyn
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- vgorbati [~vgorbati@91.216.173.29] has quit [Quit: vgorbati]
-!- thoralf_ [~thoralf@24-134-83-14-dynip.superkabel.de] has joined #shogun
 thoralf_	Hey there
 thoralf_	wiking: Did you dive deeper into your hashed features problem?
-!- vgorbati [~vgorbati@91.216.173.29] has joined #shogun
-!- vgorbati [~vgorbati@91.216.173.29] has quit [Client Quit]
-!- HeikoS [~heiko@213.190.120.70] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 thoralf_	Hey Heiko
@HeikoS	thoralf_: good evening!
-!- HeikoS [~heiko@213.190.120.70] has quit [Ping timeout: 264 seconds]
-!- HeikoS [~heiko@dab-crx1-h-30-10.dab.02.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 thoralf_	Does anyone know if it's possible to do Bundle Methods with Line Search in shogun?
-!- HeikoS [~heiko@dab-crx1-h-30-10.dab.02.net] has left #shogun []
 thoralf_	I only see BMRM, Proximal BMRM, etc.
 thoralf_	NCBM looks like having line search (there is at least a switch for that) and a switch telling convex true/false.
-!- HeikoS1 [~heiko@213.190.120.70] has joined #shogun
 thoralf_	HeikoS1: Can you say something about Bundle Methods? ;)
 HeikoS1	thoralf_: no idea about them, sorry
 HeikoS1	sorry my connection dropped before, did you say anything?
 thoralf_	No, you didn't
 thoralf_	except "good evening"
 HeikoS1	ok :)
 HeikoS1	greeting from Reykjavik btw
 thoralf_	HeikoS1: Cool :)
 thoralf_	HeikoS1: Where are you going to?  How long are you staying?
 HeikoS1	https://sites.google.com/site/lgm2013ice/ I come home Sunday night
 thoralf_	Been there last year and made a round trip on my own :)
 HeikoS1	sweet
 HeikoS1	I hope to have some time
 HeikoS1	my luggage was lost on the flight so today I had to stay in waiting for it
 HeikoS1	but going for some food now and exploring the town a bit by night
 thoralf_	Have fun and don't eat anything you don't know.  Could be a big surprise. ;)
 HeikoS1	thoralf_:  I like surprises :)
 HeikoS1	thoralf_: I might be back later, see you!
 thoralf_	Rotten shark? ;)
-!- HeikoS1 [~heiko@213.190.120.70] has quit [Quit: Leaving.]
-!- thoralf_ [~thoralf@24-134-83-14-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- hushell [~hushell@c-98-232-178-161.hsd1.or.comcast.net] has quit [Ping timeout: 260 seconds]
-!- actual_lisitsyn [~lisitsyn@fb2-lo1.global63.net] has quit [Ping timeout: 245 seconds]
--- Log closed Thu Sep 12 00:00:55 2013
