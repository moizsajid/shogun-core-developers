--- Log opened Thu Jul 05 00:00:17 2012
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Remote host closed the connection]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Remote host closed the connection]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
 shogun-buildbot	build #9 of nightly_none started, including []
 shogun-buildbot	build #9 of nightly_none is complete: Exception [exception interrupted]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/9
 shogun-buildbot	build #10 of nightly_none started, including []
 gsomix	sonney2k, I see
 gsomix	good night guys
 n4nd0	good night gsomix
-!- gsomix [~gsomix@109.169.225.254] has quit [Ping timeout: 246 seconds]
 shogun-buildbot	build #10 of nightly_none is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/10
 shogun-buildbot	build #65 of deb3 - modular_interfaces started, including []
 shogun-buildbot	build #65 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/65
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 alexlovesdata	I am the last active here :)
 shogun-buildbot	build #13 of nightly_default started, including []
 shogun-buildbot	build #13 of nightly_default is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/13
 shogun-buildbot	build #8 of nightly_all started, including []
-!- alexlovesdata [55b20f06@gateway/web/freenode/ip.85.178.15.6] has quit [Quit: Page closed]
 shogun-buildbot	build #8 of nightly_all is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/8
 shogun-buildbot	build #11 of nightly_none started, including []
 shogun-buildbot	build #11 of nightly_none is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/11
-!- uricamic [~uricamic@89.13.broadband14.iol.cz] has joined #shogun
-!- gsomix [~gsomix@109.169.246.7] has joined #shogun
-!- gsomix [~gsomix@109.169.246.7] has quit [Client Quit]
-!- uricamic [~uricamic@89.13.broadband14.iol.cz] has quit [Read error: Operation timed out]
-!- gsomix [~gsomix@109.169.246.7] has joined #shogun
 gsomix	good morning
-!- uricamic [~uricamic@89.13.broadband14.iol.cz] has joined #shogun
 gsomix	sonney2k, ok, you are right. documentation for python is not good.
 gsomix	headers are better :)
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
@sonney2k	gsomix, heh
@sonney2k	gsomix, btw I hope we didn't have a misunderstanding yesterday - matplotlib is not essential for shogun
@sonney2k	gsomix, however numpy is
@sonney2k	and numpy supports python3
 gsomix	sonney2k, but is essential for users I think
@sonney2k	if they need gfx output yes
 gsomix	sonney2k, it's strange that there are not references to new buffer protocol in python2.7 docs.
 gsomix	except new C API functions. like GetBuffer()
-!- blackburn [~blackburn@81.28.187.0] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
@sonney2k	gsomix, yeah it is not well documented
@sonney2k	gsomix, however I know that numpy implements it and also in python 3 the arrays
 gsomix	sonney2k, I just downloaded their code.
-!- nietpiet [52ad81c6@gateway/web/freenode/ip.82.173.129.198] has joined #shogun
 nietpiet	I'm sorry to bother anyone, but i tried to send my MKL issue to the mailing list, but my subscription email bounced, and thus i cannot post there.
 blackburn	nietpiet: bounced? why?
 blackburn	nietpiet: is you Jan? if so we have received your mail
 nietpiet	Ah!
 nietpiet	Sorry to be so impatient :)
 blackburn	heh no problem
 nietpiet	I sent it last night and got a delayed till 4 days mail :)
 blackburn	nietpiet: okay one question before - did you try latest shogun?
 nietpiet	yes.. downloaded it for the first time on tuesday
 nietpiet	(it is very nice!)
 blackburn	nietpiet: I actually can't remember whether we fixed something about MKL after 1.1.0 but it is worth to try
 nietpiet	True. I can make the kernel and labels of my post available for reproducability of course.
 nietpiet	But maybe i should just step away from the keyboard and patiently wait till the message hits the email list :)
 blackburn	nietpiet: there are two messages of you in the mailing list now
 nietpiet	ai.. they are probably the same. (Although I do not see any of them on the list)
 blackburn	hmm
 blackburn	strange
 nietpiet	The latest post I see is " GSoC weekly report - Latent SVM" from 2012-06-26 10:29:03
 blackburn	yeah I see
 blackburn	nietpiet: could you please try the same with latest git of shogun?
 nietpiet	OK, i will try that.
 blackburn	nietpiet: feel free to ask anything
 nietpiet	About the list, maybe it is because of: "Delivery is delayed to these recipients or groups: shogun-list-subscribe@shogun-toolbox.org (shogun-list-subscribe@shogun-toolbox.org) Subject: This message hasn't been delivered yet. Delivery will continue to be attempted. The server will keep trying to deliver this message for the next 3 days, 19 hours and 59 minutes. You'll be notified if the message can't be delivered by that time."
 blackburn	huh
 nietpiet	Well.. about the MKL, i was thinking that maybe i made a silly mistake somewhere.
 nietpiet	Also, i'm not sure if libSVM will also use the kernel weights that are learned by the MKL, (and probably put in the CombinedKernel?)
 blackburn	random results look strange for me
 blackburn	yes it will use any kernel that you provide
 blackburn	mkl training modifies CombinedKernel with setting learned weights
 nietpiet	Ah.. i thought so. But in the example i posted i only use 1 kernel. Perhaps that is a problem for MKL?
 blackburn	ahh only one
 blackburn	but why only one?
 nietpiet	Cause the others take long to load from disk :)
 nietpiet	I did try with multiple kernels, but strangely results got worse..
 blackburn	nietpiet: did you compare weights itself?
 blackburn	learned kernel weights I mean
 nietpiet	Yes, they were very low.
 blackburn	something e-19?
 nietpiet	ah.. no.. For one kernel like e-5, and the other two e-1
 nietpiet	I will try the latest git first, but will prob. lose this connection, since i have to start a vpn.
 nietpiet	So thank you very much for your time!
* wiking brb
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: leaving]
-!- wiking [~wiking@mobile-out-229-70.siminn.is] has joined #shogun
-!- wiking [~wiking@mobile-out-229-70.siminn.is] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 blackburn	nietpiet: sure - let me know if it become better or worse
-!- nietpiet [52ad81c6@gateway/web/freenode/ip.82.173.129.198] has quit [Ping timeout: 245 seconds]
 gsomix	sonney2k, wow! it works.
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- blackburn [~blackburn@81.28.187.0] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
-!- blackburn [~blackburn@81.28.187.0] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
@sonney2k	wiking, ACTION???
@sonney2k	gsomix, now with --verbose please - what works?
 gsomix	huh :) I have enabled buffer and sequence protocol for my vector3d class - works. memoryview may look a buffer, and vector3d+numpy.array also works
 gsomix	sonney2k, http://pastebin.com/E3pZXmQE my draft
 gsomix	sonney2k, http://pastebin.com/h5kjg8W1 output
@sonney2k	gsomix, coool!
@sonney2k	excellent work
 blackburn	sonney2k: can you git pull?
@sonney2k	gsomix, so the next step would be to use swig to overload these slots - I would again attempt this on some toy data not shogun
@sonney2k	blackburn, I cannot visit this page -> hang
@sonney2k	gsomix, err not toy data - I meant toy example
 blackburn	sonney2k: could you please git pull google && [git push to all 3 .gits]?
 gsomix	sonney2k, I see
 blackburn	sonney2k: both github and shogun-toolbox repo deny me to push
@sonney2k	gsomix, in the example will a+=b work?
@sonney2k	b+=a would surely
@sonney2k	or?
@sonney2k	blackburn, ?
 gsomix	sonney2k, b+=a works, but a+=b returns numpy.array as result.
@sonney2k	did you pull / rebase
 blackburn	sonney2k: argh sorry
 blackburn	I was setting up HW params and was root :D
 blackburn	hmm still
 blackburn	Permission denied (publickey).
 blackburn	fatal: The remote end hung up unexpectedly
@sonney2k	blackburn, what does not work
@sonney2k	pull?
 blackburn	sonney2k: both
 gsomix	sonney2k, I think I need to overload += and + for vector. right? hmmm, will look in the numpy code
@sonney2k	blackburn, pull works fine here
@sonney2k	gsomix, I am not so sure
@sonney2k	gsomix, but most important for now is that a + b works
@sonney2k	but maybe you should initialize a[0]=1
@sonney2k	a[1]=2
@sonney2k	a[2]=2
@sonney2k	a[2]=3
@sonney2k	in your example
@sonney2k	otherwise it is not 100% clear if it really works :D
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 265 seconds]
 gsomix	sonney2k, http://pastebin.com/0tDLWjS2
@sonney2k	gsomix, perfect
@sonney2k	gsomix, do you know where to look in swig docs for overloading tp_ * stuff?
 gsomix	sonney2k, --builtin?
@sonney2k	gsomix, uhh look at this http://www.swig.org/Doc2.0/SWIGDocumentation.html#Python_nn75
 CIA-18	shogun: Sergey Lisitsyn master * ra75088e / (28 files in 5 dirs): Moved task structures out of multitask submodule - http://git.io/jRJFvA
 CIA-18	shogun: Sergey Lisitsyn master * reea1b33 / (64 files in 19 dirs): Merge remote-tracking branch 'upstream/master' into slep - http://git.io/CbTqQA
@sonney2k	gsomix, yes -builtin
@sonney2k	like %feature("python:slot", "tp_hash", functype="hashfunc") Cheese::cheeseHashFunc;
 blackburn	argh lame merge
 blackburn	of me
 gsomix	sonney2k, thanks!
 shogun-buildbot	build #56 of deb1 - libshogun started, including [a75088e961e4e1cd8e6515a1653b0f852da6cfca]
 shogun-buildbot	build #57 of deb1 - libshogun started, including [eea1b33dde2297ed53d2c35ab4f46183bd761fd8]
@sonney2k	uhh now two of them build at the same time!
 shogun-buildbot	build #57 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/57
 shogun-buildbot	build #66 of deb3 - modular_interfaces started, including [eea1b33dde2297ed53d2c35ab4f46183bd761fd8]
@sonney2k	gsomix, what I would do is define the type again, wrap it with swig and override all the needed slots
@sonney2k	gsomix, then check in the generated source code if these are really set
@sonney2k	and try your numpy example again :)
 gsomix	ok, it's clear
* sonney2k is pretty excited to see if this works
 gsomix	sonney2k, I should to water my plants in garden.
 gsomix	see you later, ok?
@sonney2k	gsomix, sure - and good work!
 gsomix	tnx
 shogun-buildbot	build #56 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/56
 shogun-buildbot	build #67 of deb2 - static_interfaces started, including [eea1b33dde2297ed53d2c35ab4f46183bd761fd8]
 shogun-buildbot	build #67 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/67
 shogun-buildbot	build #67 of deb3 - modular_interfaces started, including [a75088e961e4e1cd8e6515a1653b0f852da6cfca]
 shogun-buildbot	build #67 of deb3 - modular_interfaces is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/67  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #68 of deb2 - static_interfaces started, including [a75088e961e4e1cd8e6515a1653b0f852da6cfca]
 shogun-buildbot	build #68 of deb2 - static_interfaces is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/68  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #66 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/66
 CIA-18	shogun: Sergey Lisitsyn master * r9c4e1d8 / (4 files in 2 dirs): Added FeatureBlockLogisticRegression - http://git.io/7R4MpQ
 shogun-buildbot	build #58 of deb1 - libshogun started, including [9c4e1d826fa8fb2b193f4ce344d6116c1b3a8b00]
 shogun-buildbot	build #58 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/58
 shogun-buildbot	build #68 of deb3 - modular_interfaces started, including [9c4e1d826fa8fb2b193f4ce344d6116c1b3a8b00]
 shogun-buildbot	build #69 of deb2 - static_interfaces started, including [9c4e1d826fa8fb2b193f4ce344d6116c1b3a8b00]
-!- alexlovesdata_ [82955843@gateway/web/freenode/ip.130.149.88.67] has joined #shogun
 shogun-buildbot	build #69 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/69
-!- heiko [~heiko@host86-174-148-28.range86-174.btcentralplus.com] has joined #shogun
 CIA-18	shogun: Heiko Strathmann master * r7418b63 / examples/undocumented/libshogun/statistics_quadratic_time_mmd.cpp : removed forgotten asserts to prevent fails - http://git.io/BHbzZw
 CIA-18	shogun: Heiko Strathmann master * r50f3d0e / examples/undocumented/libshogun/statistics_quadratic_time_mmd.cpp : Merge pull request #624 from karlnapf/master - http://git.io/ZYWKXg
-!- nietpiet [92329062@gateway/web/freenode/ip.146.50.144.98] has joined #shogun
 shogun-buildbot	build #59 of deb1 - libshogun started, including [7418b6368ba7e6bb369c108a2c96c07cd686da7d]
 shogun-buildbot	build #59 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/59
 shogun-buildbot	build #60 of deb1 - libshogun started, including [50f3d0ed93148e5b957d8a1a14d8bfb014aa50b7]
 nietpiet	Hi Blackburn: I tried the latest git, but now i get a: " terminate called after throwing an instance of 'shogun::ShogunException', and a dumped core. ". At the .apply() step of the MKL, but the same for the .apply() step for libSVM.. I had to change my code a bit to include BinaryLabel. The mkl_binary documented example still works though.. strange.. maybe my beforehand and hand-created test kernel is fishy.. Although in the prev. v
 shogun-buildbot	build #60 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/60
 shogun-buildbot	build #69 of deb3 - modular_interfaces started, including [7418b6368ba7e6bb369c108a2c96c07cd686da7d]
 blackburn	nietpiet: it means there are some internal error - could you please try to do svm.io.set_loglevel(MSG_DEBUG) and paste the output somewhere?
 nietpiet	um.. sorry.. do i have to import something from the shogun package to be able to run that command?
 blackburn	nietpiet: to ease imports just do 'from modshogun import *'
 shogun-buildbot	build #68 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/68
 shogun-buildbot	build #70 of deb2 - static_interfaces started, including [7418b6368ba7e6bb369c108a2c96c07cd686da7d, 50f3d0ed93148e5b957d8a1a14d8bfb014aa50b7]
 nietpiet	blackburn: um.. i did that import, but still: "NameError: name 'svm' is not defined"
 blackburn	nietpiet: [svm] is any shogun object you use
 blackburn	mkl classifier or anything else
 nietpiet	blackburn: i'm further, but still: AttributeError: 'getset_descriptor' object has no attribute 'set_loglevel'
 nietpiet	with MKLClassification.io.set_loglevel(MSG_DEBUG)
 blackburn	nietpiet: why mklclassification?
 blackburn	mkl itself
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has joined #shogun
 shogun-buildbot	build #70 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/70
 shogun-buildbot	build #70 of deb3 - modular_interfaces started, including [50f3d0ed93148e5b957d8a1a14d8bfb014aa50b7]
 nietpiet	blackburn: Sorry.. i'm a new to this. Still no go:  MKL.io.set_loglevel(MSG_DEBUG) AttributeError: 'getset_descriptor' object has no attribute 'set_loglevel' with doing MKL.io.set_loglevel(MSG_DEBUG)
 blackburn	nietpiet: MKL should be an object
 blackburn	not a class
 nietpiet	ahaaaa.. let me try that.
 blackburn	in your example before you were using mkl so try that
 nietpiet	Blackburn: shall i just paste it here? (risk of polluting the log?)
 blackburn	nietpiet: no please rather use pastebin.com or so
 nietpiet	Blackburn: nice, never used that before: http://pastebin.com/jJMZqbUk
 blackburn	nietpiet: can you paste the code as well?
 blackburn	nietpiet: what I can say is weight seems to be correct - 1.0
 nietpiet	Blackburn: Haha, yes, with one kernel. I can also try with 3 if you like. But libSVM also crashed with this single kernel. This is (a bit more) of the code: http://pastebin.com/mkQQ10wS
 nietpiet	Blackburn: One thing i had to do, is to transpose my test kernel, cause i had the training samples as the columns, wheras Shogun seems to see the training samples as the rows.
 nietpiet	(i think i used libSVM format for the precomputed kernel)
 blackburn	strange error is not being displayed
 nietpiet	Blackburn: and also strange that the mkl_binary example works, but this does not.
 blackburn	nietpiet: okay I think I know
 nietpiet	Great!!
 blackburn	nietpiet: are you able to recompile it now?
 nietpiet	yes.
 blackburn	nietpiet: could you please try to comment out /*  ... */  lines 257-266 of src/shogun/machine/KernelMachine.cpp
 blackburn	then reinstall it and try your example again
 blackburn	basically problem is that you use no features
 blackburn	and it checks for features
 nietpiet	Aha.. yes, i did not store the features.
 nietpiet	Thank you!
 nietpiet	I will try that now.
 blackburn	if it works I will commit some quickfix
 nietpiet	Yes! it worked! I can apply it now. But, still a small error in the evaluation, so i can't yet tell if the random output problem is solved. (     evaluatorAP.evaluate( BinaryLabels(predSVM), labelsTE) NameError: global name 'evaluatorAP' is not defined  ) will try and fix that now.
 shogun-buildbot	build #70 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/70
 nietpiet	Blackburn: hmm.. My problem is still there. And now it seems the performance is really bad (close to random?)
 nietpiet	Average Precision MKL:  run 1: 0.0385349355437, run 2: 0.0401661553578; libSVM: run 1: 0.03731640282, run 2: 0.037999599527
 blackburn	nietpiet: is kernel weight still 1?
 nietpiet	Yes,
 nietpiet	Maybe something i do with the labels is wrong? Now it seems like random noise
 shogun-buildbot	build #69 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/69  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 heiko	ehm
 heiko	wtf?
 heiko	command timed out: 1200 seconds without output, attempting to kill
 heiko	running modelselection_grid_search_krr_modular.py ..
 blackburn	heiko: he fell asleep
 blackburn	nietpiet: yeah that looks strange
 heiko	blackburn, does this happen at your machine?
 blackburn	heiko: no I don't think so
 heiko	any idea why the bot does this?
 heiko	too slow computer
 heiko	?
 blackburn	heiko: I would like to know too :D
 blackburn	no it is not slow I think
 heiko	mmh
 heiko	runs here in <2secs
 heiko	Ill just pretend the buildbot has gone crazy :D
 nietpiet	Blackburn: if I run the exact same problem 2x, then the nr of predicted +1 labels of mkl.apply().get_labels() with np.sum(predLabels==1) for the first run is 2102 and the 2nd run is 1176.. this seems close to random. With the prev. version of Shogun I got around 96% accuracy. quite strange..
 blackburn	is apply random??
 nietpiet	well.. haha. i hope not :). I will do the same test for the documented mkl_binary example now.
 blackburn	thanks
 nietpiet	for the mkl example it is constantly 73.
 puffin444	Hey heiko, can I ask something about parameter hashing?
 heiko	hej puffin444, sure
 puffin444	Instead of writing a new wrapper in CHash, do you think it makes sense just to use the full MurmurHash2() function.
 puffin444	And use the hashed value of previous parameters as the seed for the next parameters to be hashed.
 heiko	dont know, Ill check the function
 blackburn	nietpiet: could you please check alphas? get_alphas()
 heiko	mmh when you look at the functions, it seems to be something different
 heiko	If the result is the same, sure
 heiko	but the operations are not the same, are they?
 puffin444	Yes they are slightly different. It looks like the full function takes chunks of 4 bytes at a time.
 heiko	Also, there is something menioned about that data has to be aligned
 heiko	I think a new wrapper would be better then
 heiko	put "bytewise" in the name :)
 puffin444	Oh now I see that.
 puffin444	yeah I think a wrapper makes sense.
 heiko	yes, will make the code even easier to understand, and faster
 heiko	mmh
 heiko	I mean, the chunk wise thing is of course faster since fewer iterations .....
 puffin444	Yes but things could get really messy if there needs to be alignment
 nietpiet	Blackburn: Maybe something with precomputed kernels? If i do apply().get_labels() on the Training set, the nr of positives for 3 runs is: 14, 67, 70. Alphas for 2 runs are: http://pastebin.com/UuKthgWm
 heiko	yes, I actually dont know what that exactly means :D
 heiko	do you?
 heiko	the modulo is handled in the full hash method
 heiko	so perhaps it might be ok to use it
 puffin444	I have a vague recollection from my comp. architecture class. It means that the memory has to divisible by four I think
 blackburn	nietpiet: I do not understand why alphas are changed :D
 heiko	mmh, same here, thats some time ago :)
 heiko	Perhaps you could compare the speed of the chunk wise hashing with the byte wise hashing for a reasonable matrix size?
 heiko	say 1000x1000
 heiko	of float64_t
 heiko	and if there is a significant difference, we can think of it some more, maybe ask s?ren or whoever wrote the hashing code
 heiko	and if not, just use byte-wise
 heiko	(but for bytewise the loop has to be inside the function, otherwise it will definately loose)
 puffin444	Who is Austin Appleby
 puffin444	he wrote the murmur code
 heiko	puffin444, lol :) never heard that name :)
 puffin444	Looks like this was code not directly written by someone with shogun.
 heiko	yes, its MIT license also, we usually dont do that
 puffin444	Apparently Austin Appleby is the author of the murmur algorithm.
 heiko	lol really? :)
 heiko	well, then it proabably works correctly :)
 heiko	I would say just compare runtimes and then well decide (also compare if results are the same)
 nietpiet	Blackburn: here is the debug output for 3 runs.. http://pastebin.com/t02kUD8v maybe it is helpful.
 nietpiet	Blackburn: I can also make the Train and Test kernel available if that is helpful?
 blackburn	nietpiet: I can see objective values are very different
 puffin444	heiko, things are a little more complicated. I don't think the IncrementalMurmurHash2 is a "real" implementation of the true murmur has function.
 heiko	puffin444, oh, thats bad, ...or wait: is it still a hashing function? thats the only thing that matters
 puffin444	I don't know. I googled the name of the function and the only thing that comes  up is Shogun.
 puffin444	someone in shogun might have written that function.
 heiko	we can check on github, wait
 heiko	puffin444,
 heiko	https://github.com/shogun-toolbox/shogun/commit/022b47a562d8675f0db447ef2c1bc87bccc26026
 heiko	it was ?ren :)
 heiko	s?ren
 heiko	you can ask him why he did that
 puffin444	"Murmur-like"
 heiko	but the function should in my eyes do exactly do the same as the real hash
 heiko	only that you can bytewise pass data
 puffin444	hey sonney2k, what's the purpose of IncrementalMurmurHash2() ?
 puffin444	heiko, take a look at this: http://pyfasthash.googlecode.com/svn-history/r19/trunk/src/MurmurHash/MurmurHash2A.cpp
 puffin444	This is a variant by the author which he claims is better for incremental hashes
 heiko	mmh
 heiko	looks good
 heiko	I dont know :)
 puffin444	hey heiko what do you mean when you say "mmh"?
 heiko	it is an expression of thinking :D
 heiko	my fingers do their own stuff if the brain is busy with something else ;)
 puffin444	It looks like the author has written a third version that is optimized for 64 bit architectures
 puffin444	I was thinking you were always saying "meet me halfway"
 heiko	we could add all of this and check architecture before
 heiko	meet me halfway? :)
 heiko	no did not even know that one
 puffin444	yes I was confused
 blackburn	puffin444: I tend to say hmm - would you think I say hidden markov model? ;)
 puffin444	depends on the context
 heiko	funny :)
 puffin444	I was asking about solutions to an ML problem and you responded with hmm....
 puffin444	Then maybe yes :)
 heiko	hehe ;)
 puffin444	Another issue I see is that the murmur hashing function is non-cryptographic
 puffin444	Although I don't know how important that is for parameter hashing or not. Technically I think murmur could create the same hash for two different param combinations.
 puffin444	Although this would be exceedingly rare
-!- uricamic [~uricamic@89.13.broadband14.iol.cz] has left #shogun []
 heiko	puffin444, that is not important
 puffin444	okay
 heiko	any hashing function does that btw.
 heiko	there is no bijective map between the set of all hashs of a finite length and say all real numbers
 puffin444	Yes but I would think that something like MD5 would be stronger, but it may be overkill for this situation.
 heiko	I think most important here is speed
 heiko	since you will call that a few times
 CIA-18	shogun: Heiko Strathmann master * r7e96849 / (8 files in 2 dirs): Merge pull request #625 from karlnapf/master (+6 more commits...) - http://git.io/S2OhSA
 heiko	guys, I will head off now, bye bye
 puffin444	Okay see you heiko.
 heiko	see you! :)
 shogun-buildbot	build #61 of deb1 - libshogun started, including [ff91003d710f377a8707f41c1ec4c52ef814c4b0]
 shogun-buildbot	build #62 of deb1 - libshogun started, including [2bb5cdfb3043a3dcaa7c4378098850a42cf06db6, 4832dd40d53836b660bbd266566028b701552c97]
 shogun-buildbot	build #61 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/61
 shogun-buildbot	build #63 of deb1 - libshogun started, including [6d9ce338d5bf1be8bce90a5a12324086294789a8, 1b7374b4ec518307aad3c837a7e752fc3a40b6a3, e913b8ade1cad5654fd1c77470891ba45381f501, 7e9684929e8506d4f4fab6b7969c6edc8c7ce5eb]
-!- heiko [~heiko@host86-174-148-28.range86-174.btcentralplus.com] has left #shogun []
 shogun-buildbot	build #63 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/63
 shogun-buildbot	build #71 of deb3 - modular_interfaces started, including [ff91003d710f377a8707f41c1ec4c52ef814c4b0]
 shogun-buildbot	build #62 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/62
 shogun-buildbot	build #71 of deb2 - static_interfaces started, including [ff91003d710f377a8707f41c1ec4c52ef814c4b0, 6d9ce338d5bf1be8bce90a5a12324086294789a8, 1b7374b4ec518307aad3c837a7e752fc3a40b6a3, e913b8ade1cad5654fd1c77470891ba45381f501, 7e9684929e8506d4f4fab6b7969c6edc8c7ce5eb]
@sonney2k	puffin444, whats wrong with the incremental murmurhash2?
 shogun-buildbot	build #71 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/71
 shogun-buildbot	build #72 of deb3 - modular_interfaces started, including [6d9ce338d5bf1be8bce90a5a12324086294789a8, 1b7374b4ec518307aad3c837a7e752fc3a40b6a3, e913b8ade1cad5654fd1c77470891ba45381f501, 7e9684929e8506d4f4fab6b7969c6edc8c7ce5eb, 2bb5cdfb3043a3dcaa7c4378098850a42cf06db6, 4832dd40d53836b660bbd266566028b701552c97]
 puffin444	Is it a true implementation of murmur hash?
 puffin444	Because the author notes on his website that the murmur hash function is not incremental without special modifications.
@sonney2k	puffin444, even though I wrote this code I don't remember exactly but I *think* that it will give the exact same result as murmurhash
@sonney2k	2
@sonney2k	puffin444, you of course need to pass the old seed - but I guess that is clear
 puffin444	yes
@sonney2k	puffin444, but maybe you just try on some small example (some string of length 10000 or so)
 puffin444	I'll go and try that really quickly
 CIA-18	shogun: Soeren Sonnenburg master * rb20223c / src/shogun/statistics/TwoSampleTestStatistic.cpp : fix typo -> distribution - http://git.io/8FToUQ
 puffin444	Is library_hash supposed to yield the same result?
 CIA-18	shogun: Sergey Lisitsyn master * r2cf3002 / (11 files in 5 dirs): Fixed FeatureBlockLogisticRegression solver and added Task and TaskTree - http://git.io/SurCuQ
 blackburn	whoa
 puffin444	sonney2k, library_hash gives different results for murmur and incremental murmur hash. Is this supposed to happen?
@sonney2k	puffin444, what is library_hash?
 puffin444	in the examples folder for libshogun
 shogun-buildbot	build #71 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/71
 shogun-buildbot	build #72 of deb2 - static_interfaces started, including [2bb5cdfb3043a3dcaa7c4378098850a42cf06db6, 4832dd40d53836b660bbd266566028b701552c97]
 puffin444	sonney2k, if you are comfortable with it I found an updated version of murmur hash on the author's repro that does not require alignment and supports incremental processing.
 puffin444	I could use this instead.
 puffin444	http://smhasher.googlecode.com/svn/trunk/PMurHash.c
 nietpiet	Blackburn: Although i've not been able to use shogun yet, and i hope i can post to the list sometime soon too. But i'd like to thank you very much for your help. I'm gonna eat something now, and the VPN connection may time out in a while.
 blackburn	nietpiet: post what? :)
 blackburn	nietpiet: I'll check MKL example a little later
 shogun-buildbot	build #72 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/72
 shogun-buildbot	build #64 of deb1 - libshogun started, including [b20223ce963c643fe7c47edb2fd6596db65d7fb8, 2cf3002942ef891c9993959a8861878654018fae]
 nietpiet	oh i noticed that my question is still not online here http://news.gmane.org/gmane.comp.ai.machine-learning.shogun
 blackburn	that's strange
 shogun-buildbot	build #64 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/64
 shogun-buildbot	build #73 of deb2 - static_interfaces started, including [b20223ce963c643fe7c47edb2fd6596db65d7fb8]
 nietpiet	So i guess the list is still waiting for my subscription email that i sent last night :)
 blackburn	nietpiet: IIRC it usually works without subscription
 nietpiet	Blackburn: I first got this: You have sent a message to be posted on the gmane.comp.ai.machine-learning.shogun newsgroup.   This is a non-public mailing list, which means that you have to subscribe to the list to post to it.  If you're already subscribed to the list, Gmane can forward the message you sent to the list if you respond  to this message.  If not, you should sign up to the mailing list first, and then respond to this mess
 nietpiet	So i sent an email to subscribe
 blackburn	right
 nietpiet	to here: shogun-list-subscribe@shogun-toolbox.org
 nietpiet	But that one gave: Delivery is delayed to these recipients or groups: shogun-list-subscribe@shogun-toolbox.org (shogun-list-subscribe@shogun-toolbox.org) Subject: This message hasn't been delivered yet. Delivery will continue to be attempted. The server will keep trying to deliver this message for the next 3 days, 19 hours and 59 minutes. You'll be notified if the message can't be delivered by that time.
@sonney2k	puffin444, really? is this from the original author or somebody else
 nietpiet	So i guess it is still waiting :)
 puffin444	This is technically not from the original author, but it is on the original author's repro.
 puffin444	This particular version has been written to be platform independent, incrementable, and easily integrable into other projects.
 nietpiet	Blackburn: If ur interested, the kernels are here: http://staff.science.uva.nl/~jvgemert/shogun/ and thanks again for your help so far!
 shogun-buildbot	build #73 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/73
 shogun-buildbot	build #73 of deb3 - modular_interfaces started, including [b20223ce963c643fe7c47edb2fd6596db65d7fb8, 2cf3002942ef891c9993959a8861878654018fae]
 blackburn	pretty big heh
 nietpiet	Haha.. yes.. and i have a few more that i'd like to combine :)
 nietpiet	oh.. i set all 0 labels to -1, but that is not that important. (those are the "hard" examples, i guess i can leave them out)
 blackburn	nietpiet: all labels should be either -1 or +1
-!- gsomix [~gsomix@109.169.246.7] has quit [Remote host closed the connection]
 nietpiet	Blackburn: yeah, that is why i set the 0 labels beforehand to -1 :)
@sonney2k	blackburn, nietpiet strange with gmane - I am asking the administor maybe it is related to the change of shogun servers
@sonney2k	puffin444, well sounds good then
 puffin444	sonney2k, I am going to test this out now
@sonney2k	puffin444, there might be very few applications that potentially depend on this function but I don't expect too many so go ahead.
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 shogun-buildbot	build #72 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/72  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #74 of deb2 - static_interfaces started, including [2cf3002942ef891c9993959a8861878654018fae]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Client Quit]
 shogun-buildbot	build #74 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/74
 shogun-buildbot	build #74 of deb3 - modular_interfaces started, including []
 shogun-buildbot	build #73 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/73
@sonney2k	it is thunderstorm time!
-!- alexlovesdata_ [82955843@gateway/web/freenode/ip.130.149.88.67] has quit [Quit: Page closed]
 shogun-buildbot	build #74 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/74
-!- nietpiet [92329062@gateway/web/freenode/ip.146.50.144.98] has quit [Ping timeout: 245 seconds]
-!- gsomix [~gsomix@109.169.246.7] has joined #shogun
@sonney2k	gsomix, the recent thunderstorm really killed my power supply
@sonney2k	unit
@sonney2k	now I have ~50 EUR less and a new one but things are working
@sonney2k	and surprise new thunderstorm!
 gsomix	too many thunderstorm in Germany
 gsomix	*s
 gsomix	random pic http://piccy.info/view3/3225244/0c55735400d993a9ebeb0ba46756c81d/
 gsomix	good night guys
-!- gsomix [~gsomix@109.169.246.7] has quit [Quit: Ex-Chat]
@sonney2k	gsomix ??? black hole?
-!- emrecelikten [~emre@213.153.222.106] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- nietpiet [9232901a@gateway/web/freenode/ip.146.50.144.26] has joined #shogun
 nietpiet	Blackburn, @sonney2k, Thanks for your help with the list. It seems to be a stupid exchance server thing at my end at work. I just tried with my private gmail and subscription went like a charm. Sorry to bother you.. Thanks, Jan.
 blackburn	nietpiet: no problem you are welcome
 nietpiet	I'll try and send my MKL thing to the list, maybe others have also experienced this.
 blackburn	nietpiet: which one?
 nietpiet	Well, both of them :) The one with the small random output from the stable source, and the one with the completely random results with the git version.
 blackburn	ah ok
 blackburn	strange it is random
 nietpiet	yeah.. you've seen those alpha scores :)
 blackburn	brb
-!- blackburn [~blackburn@81.28.187.0] has quit [Remote host closed the connection]
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
 shogun-buildbot	build #75 of deb3 - modular_interfaces started, including []
@sonney2k	blackburn, nietpiet what?
@sonney2k	did I understand this correctly - totally random outputs with libsvm?
 nietpiet	@sonney2k, just thanking you for your help. The mailing list problem was a mistake on my end.
 nietpiet	Oh.. random, yes.. but only in my code :) The documented examples still work nicely.
@sonney2k	nietpiet, no something is still fishy with the gmane archive...
@sonney2k	nietpiet, where is your code
@sonney2k	a) did you try to use a single thread only?
@sonney2k	b) did you try to run the example under valgrind and see if there are uninited memory accesses
 nietpiet	@sonney2k, the code is here: http://pastebin.com/mkQQ10wS
 nietpiet	@sonney2k: I've never used valgrind with python before (only with c++). Yes! I can try to find out how i can turn off multi-threading
@sonney2k	nietpiet, on your first created shogun object do  obj.parallel.set_num_threads(1)
 nietpiet	@sonney2k, background info in the log from today: http://www.shogun-toolbox.org/irclogs/%23shogun.2012-07-05.log.html Blackburn was already very helpful.
 nietpiet	I will do that now.
@sonney2k	note that due to parallel stuff the output is not deterministic(!)
 shogun-buildbot	build #75 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/75
@sonney2k	nietpiet, and please lets try to get this to work with libsvm first...
@sonney2k	nietpiet, could you please get the real valued outputs of the svm too
@sonney2k	you can do this via outputlabels.get_confidences()
 nietpiet	@sonney2k: Ok.. libSMV it is. The first shogun object is a combined kernel, shall i put the obj.parallel.set_num_threads(1) on that? Or on the libSVM object?
@sonney2k	nietpiet, btw you don't need to do mkl.apply() twice
@sonney2k	predLabels = mkl.apply() once is sufficient
@sonney2k	and then predLabels.get_labels() to get the +1/-1 predictions
@sonney2k	and predLabels.get_confidences() to get the real valued outputs
@sonney2k	nietpiet, it doesn't matter
@sonney2k	so put it on the first possible :)
 nietpiet	@sonney2k: yes.. i only did apply twice because i had a core dump somewhere there, and i wanted every statement to be on it's own line :)
@sonney2k	k
@sonney2k	though that already shouldn't happen
 nietpiet	Blackburn helped me around the core dump by commenting out some C++ lines.
 nietpiet	The kernel was checking for features, and i do not have any features anymore, only precomputed kernels..
 blackburn	sonney2k: problem is that if you use only custom kernels and assign no features - kernel machine fails to apply
@sonney2k	blackburn, I wonder why
 n4nd0	sonney2k: btw, what is the trick that allows us to have templated classes separated in header and cpp files?
 blackburn	sonney2k: kernelmachine checks lhs
 n4nd0	I thought that was not possible
 blackburn	n4nd0: why not?
@sonney2k	blackburn, it should use has_lhs() and IIRC that is overloaded in customkernel to return true
 n4nd0	blackburn: I think thatit is defined like that in the standard
 blackburn	sonney2k: KernelMachine 283 or so
 n4nd0	blackburn: there are workarounds, but not recommended AFAIK
@sonney2k	n4nd0, you have to explicitly name the types you want in the .cpp file
@sonney2k	all others will not work
 n4nd0	blackburn: but here it works fine, the only "weird" thing I see is ...
 n4nd0	yeah exactly that
@sonney2k	(or your will have to include the .cpp file!)
 n4nd0	yes
 n4nd0	that is how I managed to get it to work once
 n4nd0	including the .cpp from the .h
 n4nd0	I didn't know the one of the types though
 n4nd0	nor the forums I read about a year ago to find a solution for this :D
@sonney2k	blackburn, that code is totally b0rken
 blackburn	sonney2k: could you please take care of this? I am stucked with adjacency matrix -> tree shity conversion
 n4nd0	blackburn: there was actually a sensible reason why, but I am afraid I do not remember
 blackburn	n4nd0: just like inline hehe
 n4nd0	inline + virtual you mean?
 blackburn	n4nd0: no, inline in .cpp doesn't work too
 n4nd0	aham, all right
 n4nd0	I didn't know about that
 n4nd0	funny details
 blackburn	actually that means something is wrong with C++ :D
 n4nd0	too big to keep everything right maybe
 blackburn	it is not that cool to know that hammer you used to clinch nails with tends to kill people by mistake
 nietpiet	@sonney2k, blackburn, output of 5 single threaded runs here http://pastebin.com/heSyQLhP
 blackburn	nietpiet: I see confidences are equal
 blackburn	nearly
 nietpiet	Nr +1 is number of +1 labels predicted. ACC = accuracy, AVP = avg Precision.
@sonney2k	blackburn, actually I understand now - we removed the apply() function - actually we merged apply() and apply(CFeatures* data) into one
 blackburn	sonney2k: yeah
 n4nd0	blackburn: dafuq is wrong with your hammer!?
 blackburn	n4nd0: C++ is that hammer
@sonney2k	so it now needs extra treatment to work
 blackburn	surgery
 n4nd0	blackburn: I should read more poesy so I can get the metaphors better ;)
@sonney2k	nietpiet, is that with a single thread already?
@sonney2k	because I see fluctuations... so something is not deterministic...
 nietpiet	@sonney2k: Yes, i put  kernelTR = CombinedKernel()    and then  kernelTR.parallel.set_num_threads(1)
--- Log closed Fri Jul 06 00:00:17 2012
