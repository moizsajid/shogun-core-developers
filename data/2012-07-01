--- Log opened Sun Jul 01 00:00:17 2012
-!- blackburn [~blackburn@81.28.187.0] has quit [Ping timeout: 248 seconds]
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
 CIA-18	shogun: Sergey Lisitsyn master * r4bc9001 / src/configure : Added Eigen3 configure check - http://git.io/--NGKw
 CIA-18	shogun: Sergey Lisitsyn master * rc86b318 / src/shogun/io/AsciiFile.cpp : Removed warning-causing empty backslashed line in AsciiFile - http://git.io/UTjdzQ
 CIA-18	shogun: Sergey Lisitsyn master * r6375108 / (3 files in 2 dirs): Fixed least squares multitask L1/Lq regressor and made it fit with SLEPs analogous method - http://git.io/2mDFcQ
 CIA-18	shogun: Sergey Lisitsyn master * rf408929 / (3 files in 2 dirs): Merge branch 'slep' of git://github.com/lisitsyn/shogun - http://git.io/g-4awQ
-!- blackburn [~blackburn@81.28.187.0] has quit [Ping timeout: 246 seconds]
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
 CIA-18	shogun: Sergey Lisitsyn master * r5643f9a / src/shogun/transfer/multitask/TaskGroup.h : Added a few doc lines for task group - http://git.io/yKmFqQ
 CIA-18	shogun: Sergey Lisitsyn master * rdf424fa / (10 files in 3 dirs): Added tree regularized logistic regression and fixed least squares regressors support - http://git.io/Wk65cw
 CIA-18	shogun: Sergey Lisitsyn master * r102ecb0 / (6 files in 3 dirs): Added PegasosSVM - http://git.io/8OdO2Q
 CIA-18	shogun: Sergey Lisitsyn master * rc586669 / (13 files in 6 dirs): Moved liblinear to optimization - http://git.io/LmFqHg
-!- blackburn [~blackburn@81.28.187.0] has quit [Ping timeout: 250 seconds]
 shogun-buildbot	build #14 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/14  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- pluskid [~pluskid@111.120.52.220] has joined #shogun
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
-!- blackburn1 [~blackburn@81.28.187.0] has joined #shogun
-!- blackburn1 [~blackburn@81.28.187.0] has quit [Quit: Leaving.]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 248 seconds]
@sonney2k	blackburn, you broke the build...
@sonney2k	...instead of fixing it
 blackburn	lol
 blackburn	nahh easy
@sonney2k	blackburn, please fix it then... we really need to get the buildbot back to green
 blackburn	sonney2k: but we have pegasos now :D
 CIA-18	shogun: Sergey Lisitsyn master * r88ff286 / (3 files in 3 dirs): Updated headers due to liblinear migration - http://git.io/nEwrMg
 blackburn	should work now
 shogun-buildbot	build #15 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/15
 CIA-18	shogun: Sergey Lisitsyn master * r6857283 / (2 files in 2 dirs): Fixed things causing compilation warnings - http://git.io/uCUJCw
 blackburn	sonney2k: hmm heiko stuff fails
 blackburn	the only thing that fails I guess
 blackburn	I disable it for now
 CIA-18	shogun: Sergey Lisitsyn master * r7ef9212 / (2 files): Disabled statistics tests and updated MT LR test - http://git.io/YIC4mA
-!- blackburn [~blackburn@81.28.187.0] has left #shogun []
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	sonney2k: around?
-!- pluskid [~pluskid@111.120.52.220] has quit [Quit: Leaving]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- heiko1 [~heiko@host86-179-33-254.range86-179.btcentralplus.com] has joined #shogun
@sonney2k	heiko1, seen what blackburn said?
@sonney2k	<blackburn> -sonney2k: hmm heiko stuff fails
@sonney2k	<blackburn> -the only thing that fails I guess
@sonney2k	<blackburn> -I disable it for now
@sonney2k	<CIA-18> -shogun: Sergey Lisitsyn master * r7ef9212 / (2 files): Disabled statistics tests and updated MT LR test - http://git.io/YIC4mA
 heiko1	oh no!
 heiko1	Ill fix it
@sonney2k	hmmhh actually sparse stuff is still broken for lots of static interfaces...
@sonney2k	blackburn - why did you add pegasos? it is the same as SGD but slow
 heiko1	blackburn, sonney2k, with an updated git version, both statistics examples dont fail here
 heiko1	what happened?
@sonney2k	heiko1, did blackburn not just deactivate them in the patch avove?
 heiko1	yes he did
 heiko1	I think I know
 heiko1	they might fail sometimes 1/100 times
 heiko1	Ill deactivate the assertions
 heiko1	actually stupid of me leaving them in there
-!- heiko1 [~heiko@host86-179-33-254.range86-179.btcentralplus.com] has left #shogun []
-!- blackburn [~blackburn@81.28.187.0] has joined #shogun
 blackburn	argh
 blackburn	sonney2k: I became bored and checked our main page
 blackburn	so we had no pegasos and I thought why not to add it :D
 blackburn	I'll fix sparse don't worry - I just forgot to do it for octave_*
@sonney2k	blackburn, so you converted it to use dotfeatures?
 blackburn	sonney2k: pegasos? yeah I think so
@sonney2k	and is it the original algorihtm?
@sonney2k	I meant what is the source?
 blackburn	a little modified though
 blackburn	from shai shalev
@sonney2k	hmmhh heiko is gone again
 blackburn	homepage
@sonney2k	ok
 blackburn	sonney2k: I even didn't really test and compare it
@sonney2k	blackburn, then file a bug for that
@sonney2k	otherwise we will forget that this doesn't work :D
 blackburn	sonney2k: I have no idea whether it works
 blackburn	may be it does
 blackburn	:D
 blackburn	sonney2k:  insomnia makes some crazy things with me
 blackburn	:D
@sonney2k	seems so :)
@sonney2k	better fix the sparse bugs for static/modular interfaces...
 blackburn	sonney2k: will do
@sonney2k	I would expect there are more in java/ etc to fix
 blackburn	hmm
@sonney2k	but I guess the bug is always the same
 blackburn	sonney2k: do we have sparse in java?
@sonney2k	if someone converts dense -> sparse :D
 blackburn	sonney2k: then it is not affected
 blackburn	sonney2k: basically bug is related with MALLOC
 blackburn	sonney2k: we allocate some crap and operator= tries to free it
 blackburn	so what I did is just added inplace new
@sonney2k	hmmhh wouldn't it be better to have just some simple struct for that internally and for I/O have some overhead with refcounts and copying?
 blackburn	sonney2k: I've never known about inplace new actually and pluskid helped with it
@sonney2k	I don't like the new[] crap
 blackburn	sonney2k: not new[]
 blackburn	new (&matrix[i]) SGSparseVector<float64_t>(); that is
 blackburn	sonney2k: when you allocate memory for sparse vectors you should initialize it somehow
 blackburn	that thing does this job
@sonney2k	looks horrible
@sonney2k	how many people can parse this expression?
 blackburn	sonney2k: there is no other way to have array of SGReferencedData
@sonney2k	blackburn, that is why I mean we better don't
 blackburn	sonney2k: what do you suggest then?
@sonney2k	so we could just use some sparse vector struct as we had internally
 blackburn	I'd like to easyfix it now rather than changing internals again
 blackburn	struct like?
@sonney2k	like we had
@sonney2k	and then on top of it have the SGReferencedData derived sparse vector class that copies though
 blackburn	I am not so unhappy with it - you only should do it once you allocate memory
@sonney2k	blackburn, but don't we have the overhead now?
 blackburn	sonney2k: no overhead at all
@sonney2k	wait - so sparse features uses sparse matrix
@sonney2k	and sparse matrix doesn't use sparse vector?
 blackburn	sonney2k: sparse features make no use of sparse matrix
 blackburn	only input
 blackburn	it contains array of sparse vectors
 blackburn	so each time you allocate new array you have to initialize refs
@sonney2k	blackburn, well it should make use of sparse matrix
 blackburn	sonney2k: it will be the same - but in sparse matrix then
@sonney2k	like CDenseFeatures
 blackburn	sonney2k: you *have* to new each sparse vector of array
 blackburn	because operator= will corrupt it in other case
@sonney2k	blackburn, well you don't if we don't use SGReferecedData right?
 blackburn	yes
@sonney2k	so now we add the overhead to each sparse vector
 blackburn	???
 blackburn	overhead like?
 blackburn	reference count?
@sonney2k	yes
 blackburn	sonney2k: I thought we discissed it is ok
@sonney2k	I don't remember...
@sonney2k	it is 12 byte / vector
@sonney2k	lets consider 100 Mio examples
@sonney2k	so just 1.2G
@sonney2k	looks OK I gues
@sonney2k	ss
 blackburn	sonney2k: but much easier to work with
@sonney2k	blackburn, yeah except for expressions like (&sparse_matrix[i])->~SGSparseVector<T>(); and the one above :/
 blackburn	sonney2k: hah well I can live with it - it appears only once
 blackburn	we have some uglier code
@sonney2k	blackburn, where ?
@sonney2k	well ok if it just appears once
@sonney2k	blackburn, so then convert the sparsefeatures also to use sgsparsematrix
@sonney2k	then it is ok
 blackburn	sonney2k: pthreads are unparseable
@sonney2k	yeah but that is easily fixable
@sonney2k	if we treat sparse features like this
@sonney2k	we should do the same with strings later
 blackburn	yeah but I'd like to not convert sparse features just now
@sonney2k	blackburn, btw I really wonder if we shouldn't have something like that instead of the dense feature matrix
 CIA-18	shogun: Sergey Lisitsyn master * r6637f20 / (2 files in 2 dirs): Fixed sparse matrix handling in octave interfaces - http://git.io/JpzEsw
@sonney2k	I mean also just list of vectors
 blackburn	why?
@sonney2k	one can permute vectors nicely...
 blackburn	well it makes sense for me actually
@sonney2k	on the other hand blas/lapack stuff needs such fortran style matrice
@sonney2k	s
 blackburn	sonney2k: well we rarely work on full matrices
 blackburn	sonney2k: do we work on matrices at all?
@sonney2k	blackburn, don't GMM / GPs do?
@sonney2k	blackburn, I guess not an issue now though
@sonney2k	much more important is get things back to stable
@sonney2k	then sparsefeatures -> sparsematrix, GMMs, buildbots, tests running lalal
@sonney2k	a
 blackburn	sonney2k: lets see if tests will go now
@sonney2k	examples you mean :)
@sonney2k	tests are all disabled unfortunately :/
 blackburn	nearly no difference
@sonney2k	hmmhh
@sonney2k	I would wish
@sonney2k	last time we said that too :D
@sonney2k	and we were fixing things for a few weeks
 blackburn	if it compiles - nice
 blackburn	:D
 blackburn	if it does not produce segfaults - awesome :D
 blackburn	sonney2k: what is treesize?
 blackburn	573276 KiB??
 blackburn	573 mb?
@sonney2k	yes
@sonney2k	the compiled stuff including data
 blackburn	pretty much
 blackburn	argh
 blackburn	that didn't help
 blackburn	beautiful
 blackburn	sonney2k: any idea what can be wrong with kernel_lik?
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has joined #shogun
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has quit [Quit: Page closed]
 CIA-18	shogun: Sergey Lisitsyn master * rf482b5d / examples/undocumented/matlab_and_octave/kernel_lik.m : Temporary commented out kernel_lik.m example - http://git.io/hNnE9w
--- Log closed Mon Jul 02 00:00:17 2012
