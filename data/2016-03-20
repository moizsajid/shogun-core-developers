--- Log opened Sun Mar 20 00:00:38 2016
-!- timsl [54d8e30b@gateway/web/freenode/ip.84.216.227.11] has quit [Quit: Page closed]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 shogun-buildbot	build #974 of nightly_all is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_all/builds/974  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, trevor <trevor.ballard@outlook.com>, Wu Lin <yorker.lin@gmail.com>
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has quit [Client Quit]
 shogun-buildbot	build #1101 of nightly_default is complete: Failure [failed test notebooks]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/1101  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, trevor <trevor.ballard@outlook.com>, Wu Lin <yorker.lin@gmail.com>
-!- lambday [6a33e9dd@gateway/web/freenode/ip.106.51.233.221] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
-!- sonne|osx [~sonne@x4db4d6d7.dyn.telefonica.de] has joined #shogun
-!- lambday [6a33e9dd@gateway/web/freenode/ip.106.51.233.221] has quit [Ping timeout: 252 seconds]
-!- sonne|osx [~sonne@x4db4d6d7.dyn.telefonica.de] has quit [Quit: sonne|osx]
-!- lambday [6a33f351@gateway/web/freenode/ip.106.51.243.81] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- curiousguy13 [~curiousgu@59.177.196.139] has joined #shogun
-!- curiousguy13 [~curiousgu@59.177.196.139] has quit [Ping timeout: 260 seconds]
-!- sshkhr [7d1409e6@gateway/web/freenode/ip.125.20.9.230] has joined #shogun
-!- curiousguy13 [~curiousgu@120.57.233.223] has joined #shogun
 sshkhr	I have a small confusion in the Install wiki instructions. Anyone online to help me out ?
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has joined #shogun
 sanuj	lambday: there?
-!- besser82 [~besser82@fedora/besser82] has quit [Ping timeout: 240 seconds]
-!- mizari [~mizari@95-174-213-100.nts.su] has quit [Read error: Connection reset by peer]
-!- mizari [~mizari@95-174-213-100.nts.su] has joined #shogun
-!- lambday [6a33f351@gateway/web/freenode/ip.106.51.243.81] has quit [Ping timeout: 252 seconds]
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has quit [Ping timeout: 252 seconds]
-!- sonne|osx [~sonne@x4db4d6d7.dyn.telefonica.de] has joined #shogun
-!- sonne|osx [~sonne@x4db4d6d7.dyn.telefonica.de] has quit [Quit: sonne|osx]
-!- Nebula_ [~chatzilla@1.39.63.29] has joined #shogun
-!- Nebula_ [~chatzilla@1.39.63.29] has left #shogun []
-!- sshkhr [7d1409e6@gateway/web/freenode/ip.125.20.9.230] has quit [Quit: Page closed]
-!- lambday [6a33f351@gateway/web/freenode/ip.106.51.243.81] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has joined #shogun
-!- mizari [~mizari@95-174-213-100.nts.su] has quit [Ping timeout: 276 seconds]
-!- mizari [~mizari@95-174-213-100.nts.su] has joined #shogun
-!- livus [~suvil@196.207.84.20] has joined #shogun
-!- mizari [~mizari@95-174-213-100.nts.su] has quit [Ping timeout: 268 seconds]
-!- mizari [~mizari@95-174-213-100.nts.su] has joined #shogun
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has quit [Quit: Page closed]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- witness_ [uid10044@gateway/web/irccloud.com/x-lxxoegdxpfzkglbv] has joined #shogun
-!- livus [~suvil@196.207.84.20] has quit [Ping timeout: 240 seconds]
@lambday	HeikoS: there?
@HeikoS	lambday: jojo
@lambday	jojo
@lambday	HeikoS: https://github.com/lambday/flash/blob/develop/tests/MMDTest.cpp
@lambday	MMD more or less complete
@lambday	HeikoS: will feature branch it from tomorrow
@HeikoS	checking
@HeikoS	compute_variance computes variance of the estimate?
@HeikoS	that is, variance of the h-terms?
@HeikoS	where mmd itself is mean of the h-terms?
@lambday	HeikoS: no it is variance estimation under null..
-!- livus [~suvil@196.207.84.20] has joined #shogun
@lambday	HeikoS: it uses the variance of h-terms when the estimation method is PERMUTATION.. otherwise, WITHIN_BLOCK_DIRECT is somewhat different
@HeikoS	lambday: cool looks like all interfaces seem to wrk?
@HeikoS	ok I see
@lambday	HeikoS: almost
@HeikoS	lambday: is this stuff running on multiple threads already?
@lambday	HeikoS: yep!
@HeikoS	lambday: cool stuff :)
@HeikoS	lambday: looks very clean to use the interface
@lambday	HeikoS: will add gpu stuff when it's inside shogun
@HeikoS	lambday: yeah later is fine for that
@HeikoS	lambday: cool so I can start putting examples in soon
@lambday	HeikoS: API-wise it is pretty similar.. but the internals are quite different
@HeikoS	yeah
@HeikoS	cool
@HeikoS	I will do some high level experimental sanity checks once all this is in feature branch
@HeikoS	on the base of the existing notebook
@lambday	HeikoS: absolutely..
@lambday	HeikoS: I was thinking of adding all of these as it is inside the feature branch.. so that we can start writing API examples.. then I'll iteratively add proper licensing, documentation and unit-tests
@HeikoS	lambday: yes
@HeikoS	good
@HeikoS	lambday: then we can parallelise the work a bit
@lambday	yeah that's what I was thinking
@HeikoS	lambday: I will first write cookbook examples for all basic cases
@HeikoS	lambday: and then do some simple statistical tests to make sure these things behave as expected
 lisitsyn	hey
@lambday	HeikoS: yeah that sounds like a plan
@lambday	HeikoS: BTW I'll be going home next week on Wednesday.. will come back on Tuesday.. hopefully I can still work while I'm at home..
@lambday	lisitsyn: hola senor
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has joined #shogun
@HeikoS	lisitsyn: yoz!
@HeikoS	lambday: ok cool
 lisitsyn	HeikoS: git-deploy is on hold as I need some help from wiking
 lisitsyn	(no rights, as usual)
@HeikoS	lambday: good if the feature branch was running before you left ... so I can play
@HeikoS	lisitsyn: ah man :)
@lambday	HeikoS: BTW I created an issue for linalg that we discussed.. would start working on that as well
@HeikoS	lambday: cool
@HeikoS	yeah just checking emails
@lambday	HeikoS: yes I'll do most of it by today/tomorrow
@HeikoS	lambday: maybe create an entrance task if there are simple bits
@lambday	HeikoS: first few bytes I'll write.. entrance tasks shouldn't be this much confusing :D I'll write once I refactor some of it, get the skeleton running
@HeikoS	lambday: I guess thats a good point
@HeikoS	lisitsyn: did you ahve a look on this?
 lisitsyn	HeikoS: this = ?
@HeikoS	lisitsyn: the linalg updates lambday thought of
@lambday	lisitsyn: I guess he was talking about https://github.com/shogun-toolbox/shogun/issues/3100
@HeikoS	lisitsyn: more clean distinction between library and hardware backend
 lisitsyn	wow that's big
@lambday	hahaha
@lambday	read it, it's funny
@HeikoS	lambday: haha
@lambday	specially if you
@lambday	're following news
@HeikoS	just reading it
@HeikoS	haha
@HeikoS	deep drump ;)
@lambday	trumped :D
-!- besser82 [~besser82@fedora/besser82] has quit [Ping timeout: 268 seconds]
@HeikoS	haha man cracking here ;)
@lambday	HeikoS: it was last night's beer talking maybe in the morning :D
 lisitsyn	lambday: ok I like the idea of no switch
@lambday	lisitsyn: I hate that linalg::backend::fuckthisshit stuff
@lambday	lisitsyn: check the API suggestions I proposed later as a comment
 lisitsyn	lambday: I have a suggestion for you how to develop the api
@lambday	lisitsyn: sure man
 lisitsyn	it is - start porting some matrix intensive code
 lisitsyn	you will get all the troubles
@lambday	lisitsyn: could you elaborate a bit?
 lisitsyn	lambday: just take any svm whatever
 lisitsyn	and try to port it to linalg
 lisitsyn	if it doesn't work - patch linalg :)
@lambday	aha
@lambday	yeah that sounds like a good plan
@HeikoS	just got a good email for easy installation project
@HeikoS	*finally*
@HeikoS	really want this project to happen ;)
 lisitsyn	lambday: I mean it would be really hard to not miss some detail
@HeikoS	lisitsyn: good point actually
 lisitsyn	lambday: https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/regression/LeastAngleRegression.cpp
 lisitsyn	try porting that :D
@lambday	lisitsyn: problem with this approach is, we already need to have a good enough stuffs inside linalg to port existing things.. but that should be the goal
@HeikoS	lambday: I thought this a while ago too ... rather than making thing broad, porting algorithm by algorithm might be a good idea
 lisitsyn	lambday: ah you can just skip what you've ported so far
@HeikoS	lambday: so going deep first might be good
 lisitsyn	the thing is that mutates the framework
 lisitsyn	so it actually can do this thing
@HeikoS	lisitsyn: I guess it needs to be both
 lisitsyn	otherwise we will get all these problems later
@HeikoS	since high level design is also important
@HeikoS	lisitsyn: ah man that LARS has cholesky updates implemented in it
@HeikoS	ARGH
 lisitsyn	HeikoS: lol
@HeikoS	this is needed in like 10 places in shogun
 lisitsyn	why not write good ol' cholesky
@HeikoS	why is it in the f** lars class ;)
 lisitsyn	poor french
@HeikoS	haha
@lambday	holy shit man this is nightmare
 lisitsyn	haha
 lisitsyn	ok we need property based testing
@lambday	I get scared every time I see cblas
 lisitsyn	otherwise you can't patch any function
@HeikoS	lambday: lets do the draft for linalg, once the basic changes are in
@lambday	good point
@HeikoS	we should try to port whole algorithms
@HeikoS	rather than adding single functions
@HeikoS	but rather try to really make use of it
@HeikoS	GP stuff is a good one for that
@HeikoS	and things like LARS
@lambday	HeikoS: you mean, the entire thing should reside inside linalg?
@HeikoS	entire thing?
@lambday	cholesky_delete, cholesky_insert
@lambday	yeah these can be there
@lambday	lisitsyn: dude you found some file to give an example
@HeikoS	lambday: oh yes
@HeikoS	lambday: cholesky updates are used everywhere
 lisitsyn	haha
@HeikoS	my python code is full of them
@HeikoS	haha
@HeikoS	indeed
@HeikoS	I gotta run now guys, dinner is ready
 sanuj	HeikoS: wait :P
@HeikoS	sanuj: jo
@lambday	HeikoS: I haven't yet cooked my dinner :( and it's 2300 in India
@HeikoS	mine is warmed up ;)
@HeikoS	from this morning
@HeikoS	really gotta go
@HeikoS	sanuj: gotta talk later
 sanuj	HeikoS: hi, i wanted to ask....shall i make separate pages for svm in cookbook?
@HeikoS	Ill check more emails tonight
 sanuj	like linear, kernel etc
@HeikoS	sanuj: yes
 sanuj	HeikoS: cool
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has quit [Quit: Leaving.]
 lisitsyn	lambday: have you looked at torch design?
@lambday	lisitsyn: nope.. what's torch?
 lisitsyn	lambday: ah btw don't we need some tensorflow compatibility nowadays?
 sanuj	lambday: dp framework in lua
 lisitsyn	lambday: https://github.com/torch/torch7/blob/master/doc/tensor.md
 sanuj	it's good
 sanuj	dp - deep learning
 lisitsyn	how's that dp ;)
 lisitsyn	just kidding
 sanuj	lisitsyn: :P
@lambday	yeah dp is misleading ;)
@lambday	anyway what should I be looking for here?
 sanuj	lisitsyn: even i thought the same
 lisitsyn	lambday: well just general things maybe
 sanuj	lisitsyn: but then i used this for one of my projects
 sanuj	lisitsyn: https://github.com/nicholas-leonard/dp
 lisitsyn	I mean I think they have spent some time designing this
 lisitsyn	sanuj: that's funny everybody has a deep learning framework now
 lisitsyn	oh from wikipedia I just got to know yandex uses torch
 lisitsyn	:D
 sanuj	lisitsyn: yes, deep learning is very popular
@lambday	it's funnier when they make the acronym out of (d)ee(p) as dp
 sanuj	lol
 lisitsyn	going to tell all my colleagues we're using torch :P
@lambday	lisitsyn: hahaha
 sanuj	mlpack is also going to add deep learning algorithms
 lisitsyn	I think we should either drop our nns
 lisitsyn	or no idea
 lisitsyn	develop it
@lambday	what's nns
 sanuj	neural nets
 sanuj	i guess
 lisitsyn	yeah
@lambday	I am really bad at acronyms, aren't I
 lisitsyn	no
 sanuj	no :)
 sanuj	there are many libs for deep learning which are very good and popluar - caffe, torch, tensorflow, theano, keras, CNTK........
 sanuj	lisitsyn: can't we use one of these in shogun?
 sanuj	like we use opencv
 sanuj	but i think that's a bad idea
 lisitsyn	sanuj: I think we should have fancy models not available in all these
 lisitsyn	like bayesian
@lambday	sanuj: I don't think we're gonna use other libs for deep learning - we gotta develop one on our own
 lisitsyn	but not sure we should even have convolutional nn
 lisitsyn	because we will never be as good
 sanuj	cool
 sanuj	but if we are competitive then people will use it
 lisitsyn	but for bayesian stuff we should have all the basic stuff
 sanuj	i mean shogun users
@lambday	lisitsyn: why won't we be ever as good?
 lisitsyn	lambday: they already put millions of hours there
 lisitsyn	I think a few people died there :D
 sanuj	yes and some of them support multiple gpu training
@lambday	lisitsyn: okay so the problem is, we don't wanna die
 lisitsyn	people trained millions of models with caffe and stuff like that
 lisitsyn	we'd have to go this way again
 sanuj	and we have limited resources
 lisitsyn	doesn't sound possible for me
 sanuj	compared to google and facebook :P
 lisitsyn	we should take some short route
@lambday	sanuj: you're forgetting baidu
 sanuj	lambday: oh yeah
@lambday	lisitsyn: we don't wanna be excellent at a single thing, do we...
 lisitsyn	yeah but even to be competitive at neural networks we would need like 5 people working on that
@lambday	amen to that
@lambday	maybe next year
 lisitsyn	but I hope neural networks die next year
 lisitsyn	;)
@lambday	nah they are here to stay
 sanuj	agreed
@lambday	I feel illiterate because I never worked on any
 lisitsyn	unfortunately hehe
 sanuj	everything is getting deep in ml :P
@lambday	all this SVM and feature selection and other convex/submodular optimizatons - that's all I've worked on :(
 lisitsyn	I know all the stuff but I have no time
 sanuj	lambday: there are very cool deep learning courses online ;)
 sanuj	if you want to learn
@lambday	gotta get into an ML company.. this oracle is sucking my blood out for nothing
@lambday	sanuj: I hardly get any time bro :(
 lisitsyn	lambday: well I don't get gps as well as I do neural networks
 sanuj	lambday: even i'm graduating in June....got placed at samsung :(
@lambday	after months I've been active doing some good work :'(
 lisitsyn	because you have to think a bit when it comes to gps
 lisitsyn	neural networks are dumb as hell
@lambday	sanuj: congratulations
@lambday	lisitsyn: really
@lambday	that's another thing I don't know
 sanuj	lambday: not sure what to do :P
 sanuj	feel like doing research
@lambday	got the book, got the lecture serieses, but hardly get time
@lambday	sanuj: good idea.. I'm leaving my job
 sanuj	lambday: haha
@lambday	sanuj: gotta get another one for now cause I'm getting married.. after that, I'm out!
 sanuj	lambday: oh good luck ;)
 sanuj	and congratulations :)
 lisitsyn	lambday: are you going to have that fancy thing with one thousand people?
@lambday	sanuj: thanks :D
 sanuj	lisitsyn: haha
@lambday	lisitsyn: pretty close - I am expecting 600+ people at lesat - like one of those bollywood movies
 lisitsyn	hahaha
@lambday	withing singing and dancing and colors
@lambday	haha yeah that's how we roll ;)
@lambday	lisitsyn: I told HeikoS once about this 600+ people thing - he was shocked :D
 lisitsyn	hahah that's too funny
 sanuj	rofl
 lisitsyn	you don't even know them, do you?
@lambday	lisitsyn: never talked to >= 85% of them in my life
@lambday	and in case I did, I don't remember
 sanuj	lisitsyn: it's complicated
 sanuj	i'm also from india :)
 lisitsyn	sanuj: yeah I know :)
 lisitsyn	you're guys having fun there
@lambday	lisitsyn: actually, over last few months, I started to kinda root for this large wedding thing - I guess that's the India in me talking :D
 lisitsyn	lambday: when is it happening?
@lambday	lisitsyn: 22nd Jan 2017, if things go smooth
 lisitsyn	holy sheatz and you're already preparing?
 sanuj	lisitsyn: haha
@lambday	lisitsyn: ...and we're late at that, as it turns out
 lisitsyn	well I guess that caused by that 600+ count
@lambday	things get booked even before 1 year
@lambday	and there are a lot of things to think of man, you won't understand
@lambday	things **have** to be the way the bride wants it
 sanuj	lisitsyn: there will be many more events before lambday gets married
 lisitsyn	ohoha
@lambday	sanuj: donald trump as US president
 lisitsyn	make shogun work again pleaze
 sanuj	lambday: are u planning to move to USA?
 sanuj	lisitsyn: +1
@lambday	for example
@lambday	sanuj: it's tough, maybe I'll apply for PhD at some US schools but cannot settle there
 sanuj	lisitsyn: how difficult is that MCMC stan thing? assuming i don't know much about MCMC
 lisitsyn	sanuj: what thing exactly?
 sanuj	lambday: PhD is cool (y)
 lisitsyn	sanuj: the library itself?
@lambday	sanuj: and tough! ;)
 sanuj	lisitsyn: https://github.com/shogun-toolbox/shogun/wiki/GSoC_2015_project_MCMC_Stan
 sanuj	this :)
 sanuj	i won't write a proposal for this
 lisitsyn	ah ok
@lambday	sanuj: you're from which college?
 sanuj	but if i get selected for some other project, then i could learn MCMC also
 sanuj	lambday: IIT guwahati final year
@lambday	sanuj: ah I've been there :D
@lambday	nice place
 sanuj	lambday: i know you did your masters from IIT-B
 lisitsyn	sanuj: stan has a good codebase
 lisitsyn	I don't think its really tough
 sanuj	:)
@lambday	sanuj: great girls! mostly bong professors
 sanuj	lisitsyn: okay
 sanuj	lambday: haha
 sanuj	lambday: i'm scared about graduating...dunno what i'll do
 lisitsyn	sanuj: all you need to know about MCMC is that it is what you use when you're lazy or can't compute some integral ;)
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 sanuj	lisitsyn: okay
 lisitsyn	sanuj: in this project the plan is to employ its solvers and autograd
@lambday	sanuj: on don't worry you'll be fine.. figuring things out on the way - that's the key :)
 sanuj	lisitsyn: i was planning to submit my proposals for these 2 projects
 lisitsyn	HeikoS: you're back?
 sanuj	https://github.com/shogun-toolbox/shogun/wiki/GSoC_2016_project_approx_kernels
 sanuj	https://github.com/shogun-toolbox/shogun/wiki/GSoC_2015_plugin
@HeikoS	lisitsyn: not really ;) but listening on one ear
 lisitsyn	sanuj: good!
 sanuj	lambday: thanks
 lisitsyn	sanuj: plugin thing would give one all the fame
 sanuj	lisitsyn: yeah, this is my first priority...guess this is important for shogun
 sanuj	lisitsyn: and i would get to learn about ml in general
@lambday	go plugin
 lisitsyn	HeikoS: are our gp classification sampling based?
-!- Nebula_ [~chatzilla@1.39.61.226] has joined #shogun
@HeikoS	lisitsyn: no
 lisitsyn	HeikoS: what kind of approximation?
@HeikoS	ep and mostly variational
 lisitsyn	I see
 lisitsyn	HeikoS: btw does sampling works at all?
 lisitsyn	HeikoS: takes unreasonable time?
 lisitsyn	or? %)
 lisitsyn	:)
@HeikoS	lisitsyn: it works very nicely
@HeikoS	most general method
@HeikoS	bust obviosly slower
 lisitsyn	HeikoS: I see
@HeikoS	variational methods are quick but not accurate
@HeikoS	if you need accuracy of uncertainty, mcmc is king
@HeikoS	lisitsyn: but if you only care about predictive RMSE, then EP or variational is totally fine
@HeikoS	if model is complex, variational methods fail
@HeikoS	but for GPS ,which are simple, all good
@HeikoS	really depends
 sanuj	HeikoS: i got this education from a shogun talk on youtube by emtiyaz :)
@HeikoS	these methods are not better than one another
@HeikoS	sanuj: haha :)
 sanuj	i watched it today
@HeikoS	nice
@HeikoS	emt was at UCL and gave a talk on Friday
 lisitsyn	HeikoS: nice to know, thanks!
 sanuj	cool
 lisitsyn	HeikoS: I think we can do some kind of experiment
@HeikoS	lisitsyn:  which is?
 lisitsyn	I can implement a few methods to use our class_list.cpp
 lisitsyn	and then disable everything in swig, but these methods
 lisitsyn	this is not plugins but we get this narrow interface we expect from plugins
 lisitsyn	we're already collecting classes by their names
@HeikoS	whats the goal?
@HeikoS	ah I see
@HeikoS	to design the interface?
-!- Nebula_ [~chatzilla@1.39.61.226] has left #shogun []
@HeikoS	good entrance task!
 lisitsyn	shogun.classifier("LibLinear")
@HeikoS	lisitsyn: yeah
 sanuj	nice talk guys, i gotta leave.
 lisitsyn	sanuj: see ya
@HeikoS	sanuj: take care!
 sanuj	bye :)
@HeikoS	lisitsyn: I also goota go soon
 lisitsyn	HeikoS: I think I have to try it first because we can't merge it yet
 sanuj	some PRs coming tomorrow
@HeikoS	lisitsyn: yeah definitely
 lisitsyn	so not really a good task for a student
@HeikoS	it is a good start for a project
-!- mizari [~mizari@95-174-213-100.nts.su] has quit [Read error: Connection reset by peer]
@HeikoS	lisitsyn: well
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has quit [Quit: Page closed]
 lisitsyn	they need merged code ;)
@HeikoS	after your draft is done
 lisitsyn	ok lets see
@HeikoS	lisitsyn: feature branch drafts are also fine I guess?
 lisitsyn	yeap
 lisitsyn	that's what I am going to try
@lambday	very useful
@HeikoS	yeah thats the way to go I guess
@HeikoS	worked well for the cookbook as well
@HeikoS	the build was only broken a bit
@HeikoS	lisitsyn: speaking of, can you fix ctags on bsd?
@HeikoS	ok gotta really go now .... see you later
 lisitsyn	HeikoS: ctags - ok, will check
 lisitsyn	see you
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has quit [Quit: Leaving.]
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- lambday [6a33f351@gateway/web/freenode/ip.106.51.243.81] has quit [Ping timeout: 252 seconds]
-!- lambday [6a33f351@gateway/web/freenode/ip.106.51.243.81] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
-!- curiousguy13 [~curiousgu@120.57.233.223] has quit [Remote host closed the connection]
@lambday	lisitsyn: shit shogun doesn't build on my laptop!
-!- Saurabh7 [~Saurabh7@103.225.100.51] has joined #shogun
-!- witness_ [uid10044@gateway/web/irccloud.com/x-lxxoegdxpfzkglbv] has quit [Quit: Connection closed for inactivity]
-!- Saurabh7 [~Saurabh7@103.225.100.51] has quit [Ping timeout: 248 seconds]
-!- livus [~suvil@196.207.84.20] has quit [Ping timeout: 260 seconds]
 lisitsyn	lambday: why?
@lambday	lisitsyn: some issue with gpumatrix.. GPUMatrix.cpp:40: error: redeclared with 4 template parameters
@lambday	I have outdated viennacl
-!- GandalfTheWizard [~ian@112.10.107.176] has quit [Ping timeout: 244 seconds]
-!- GandalfTheWizard [~ian@112.10.107.176] has joined #shogun
-!- GandalfTheWizard [~ian@112.10.107.176] has quit [Ping timeout: 248 seconds]
-!- sonne|osx [~sonne@x4db4d6d7.dyn.telefonica.de] has joined #shogun
@lambday	lisitsyn: can't we have sub namespaces under shogun? seems like class-list.cpp only works with shogun namespace
 lisitsyn	lambday: well we'd have to patch it then I guess
@lambday	lisitsyn: seems so.. I just noticed this
@lambday	lisitsyn: how bad it would be if I add some c++14 checks in cmake and enable -std=c++14 if a compiler supports this? not saying that we'd make it hardcode requirement
 lisitsyn	lambday: no idea
 lisitsyn	we are not C++11 still..
@lambday	lisitsyn: would it hurt? it's not like build will break if it's not there
 lisitsyn	lambday: I don't think it would hurt
@lambday	lisitsyn: actually the auto param type in lambdas is quite useful..
@lambday	probably that's the only c++14 stuff I used in my code
@lambday	nah it's better if I change those
-!- Nebula_ [~chatzilla@1.39.61.32] has joined #shogun
-!- Nebula_ [~chatzilla@1.39.61.32] has quit [Client Quit]
-!- sonne|osx [~sonne@x4db4d6d7.dyn.telefonica.de] has quit [Quit: sonne|osx]
 lisitsyn	lambday: still here?
@lambday	lisitsyn: yessir
 lisitsyn	lambday: going to show you something
@lambday	lisitsyn: sure what is it
-!- GandalfTheWizard [~ian@112.10.107.176] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Sergey Lisitsyn :narrow_interface * a9d5428 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/a9d5428912bc08f11d0937b18dccfc5bc1127c50
 shogun-notifier-	shogun: Introduce a function to create SGOBject by name
 lisitsyn	lambday: https://github.com/shogun-toolbox/shogun/commit/a9d5428912bc08f11d0937b18dccfc5bc1127c50
 lisitsyn	ah shogun-notifier- made this for me
 lisitsyn	lambday: check the unit-test
@lambday	lisitsyn: hehe classy.. this is useful!
 shogun-buildbot	build #3668 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/3668  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
@lambday	lisitsyn: maybe useful for class_list
 lisitsyn	lambday: well it uses the class_list
 lisitsyn	lambday: the thing is
 lisitsyn	I want to try to add some more methods and then disable *everything* in swig :)
 lisitsyn	and see how fast it is
@lambday	lisitsyn: how do you plan to use this one for that?
 lisitsyn	lambday: we could change how objects are created under the hood later
 lisitsyn	so it uses plugins
 lisitsyn	HeikoS: oh u here?
 lisitsyn	lambday: there is a thing with new_sgserializable
 lisitsyn	there is a hack for templated classes
@lambday	lisitsyn: that's what I was thinking - how to instantiate template classes
@lambday	what's the hack
 lisitsyn	lambday: some enum
 lisitsyn	lambday: check the definition at shogun/base/class_list.h
@lambday	lisitsyn: only for primitive typees
 lisitsyn	lambday: yes
 lisitsyn	I don't think we need templates for non-primitives
@lambday	lisitsyn: in the present stuff I am working on, I used a few :|
 lisitsyn	lambday: should they be interfaced?
@lambday	lisitsyn: they are base classes, so, yes
 lisitsyn	meh
@lambday	lisitsyn: I didn't put all these stuffs under shogun yet... so I missed to consider a few things
@lambday	now having the pain
 lisitsyn	lambday: I see
@lambday	lisitsyn: e.g. https://github.com/lambday/flash/blob/develop/src/flash/statistics/HypothesisTest.h#L42
 lisitsyn	lambday: what's test type?
@lambday	lisitsyn: custom struct
 lisitsyn	lambday: can you make it dynamic? ;)
@lambday	https://github.com/lambday/flash/blob/develop/src/flash/statistics/internals/TestTypes.h
@lambday	lisitsyn: doable - painful :D
 lisitsyn	lambday: I mean you don't really get much speedup by that
 lisitsyn	but interfacing is painful
@lambday	lisitsyn: yeah that's what I am noticing
@lambday	lisitsyn: BTW when the template param is another SGObject, we're good I guess
@lambday	PT_SGOBJECT is there
 lisitsyn	lambday: yeah somewhat ok
@lambday	not saying that I'll make these test types SGObjects.. but it's about another case where I used a static polymorphism
 lisitsyn	lambday: I'd keep static polymorphism for something internal ;)
 lisitsyn	lambday: oh I just realised 'object' is not a good name hah
 lisitsyn	in the python context
@lambday	lisitsyn: how about instance?
 lisitsyn	lambday: yeah good
@lambday	it works like a factory - instance sounds reasonable
 lisitsyn	lambday: anyway, this function is not expected to be used directly
 lisitsyn	I will add some classifier which is just instance + cast
 lisitsyn	and stuff like that
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- besser82 [~besser82@fedora/besser82] has quit [Ping timeout: 268 seconds]
@HeikoS	lisitsyn: im here now
@HeikoS	lambday: hi
@HeikoS	had a discussion?
 lisitsyn	HeikoS: I am currently experimenting with disabling everything but this very method
 lisitsyn	object(const char*)
@lambday	HeikoS: hey.. yeah
@HeikoS	uh
@HeikoS	scary stuff ;)
 lisitsyn	HeikoS: without actual classes swig compiles instantly :)
 lisitsyn	that's predictable tho
@HeikoS	lisitsyn: thats also desirable ;)
@HeikoS	lisitsyn: that will be a good draft for gsoc project
@HeikoS	lisitsyn: is it that tricky?
 lisitsyn	HeikoS: it seems not really
 lisitsyn	HeikoS: I am now having fun with swig segfault
 lisitsyn	usual mac problem now
@HeikoS	haha
 lisitsyn	I don't even feel angry anymore
@lambday	HeikoS: merging this thing to shogun is gonna give me some pain
@HeikoS	lambday: the flash?
@lambday	HeikoS: yep
@HeikoS	lambday: whats the painkiller? :D
@lambday	HeikoS: apparently, patience :|
@lambday	sent a patch though - with the internals..
@lambday	will send SGObjects patches one by one
* lisitsyn compiles python because it is easier than to use system one
@HeikoS	lambday: haha
@HeikoS	lambday: in a feature branch?
@lambday	HeikoS: yes
@HeikoS	lambday: cool, travis passes?
@lambday	HeikoS: https://github.com/shogun-toolbox/shogun/pull/3103
@lambday	it was doing some previous build, last time I checked
@HeikoS	lambday: hey btw just push into this, no nee to do PRs in this feature branch
@lambday	I am adding documentation and making the code look Shogun style
@lambday	HeikoS: oh
@HeikoS	merge it, then I can compile here :)
@lambday	HeikoS: cool
 shogun-notifier-	shogun: lambday :feature/bigtest * ba67219 / src/shogun/statistics/experimental/internals/ (34 files): https://github.com/shogun-toolbox/shogun/commit/ba67219ea44488a525b46c48db2099b4b8345409
 shogun-notifier-	shogun: added first version of bigtesting framework
 shogun-notifier-	shogun: Soumyajit De :feature/bigtest * fbe78df / src/shogun/statistics/experimental/internals/ (34 files): https://github.com/shogun-toolbox/shogun/commit/fbe78df6ceb7c41b6ca0d9b2c6849e9e4ee69157
 shogun-notifier-	shogun: Merge pull request #3103 from lambday/feature/bigtest
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: added first version of bigtesting framework
@lambday	HeikoS: didn't add any of the SGObjects yet.. so not yet usable :(
@HeikoS	lambday: ok
@HeikoS	ill compile anyways
@lambday	got gazillions of errors
 shogun-buildbot	build #3669 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/3669  blamelist: lambday <heavensdevil6909@gmail.com>, Soumyajit De <heavensdevil6909@gmail.com>
@HeikoS	compiling ...
 lisitsyn	HeikoS: we need features 2.0
 lisitsyn	separating features layout and structure
 lisitsyn	to mix up categorical and numeric things
@HeikoS	lisitsyn: yes please
@HeikoS	lisitsyn: maybe can be optional part of plugin framework
@HeikoS	but not sure
@HeikoS	maybe something for later
@HeikoS	lambday: compiles
@HeikoS	but I cant run I guess?
@lambday	HeikoS: nah the wrappers are not there yet
@lambday	HeikoS: BTW can you please try compiling flash once? it's the same API..
@lambday	just wanna make sure that the sanity tests work
@lambday	HeikoS: just run the sanity script
@HeikoS	lambday: ok cloning
 shogun-notifier-	shogun: youssef :develop * 18686e5 / src/shogun/multiclass/QDA.cpp: https://github.com/shogun-toolbox/shogun/commit/18686e5cc7850c8c2523ab352f8fa52a79e722ae
 shogun-notifier-	shogun: remove rotations transpose
 shogun-notifier-	shogun: Heiko Strathmann :develop * a77c561 / src/shogun/multiclass/QDA.cpp: https://github.com/shogun-toolbox/shogun/commit/a77c56150af82255f3c163df267effe4af89adc6
 shogun-notifier-	shogun: Merge pull request #3102 from youssef-emad/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Remove transpose of rotations in QDA
 lisitsyn	SHEATZ swig swig swig
 lisitsyn	Y U NO WORK
@HeikoS	lambday: I get lots of no such file or dir
@lambday	lisitsyn: changing that base template to non-template.. making the enums as static int.. essentially serves the same purpose
@lambday	HeikoS: err.. this is an old school makefile.. maybe I missed something
 shogun-buildbot	build #3670 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/3670  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, youssef <youssef.emad.attia@gmail.com>
@lambday	HeikoS: which dir is missing
@HeikoS	https://gist.github.com/karlnapf/10f5d794b53451e58abc
@HeikoS	https://gist.github.com/karlnapf/10f5d794b53451e58abc
@HeikoS	https://gist.github.com/karlnapf/10f5d794b53451e58abc
@HeikoS	ah sorry
@HeikoS	lag
@lambday	HeikoS: oh crap it won't compile without c++14.. your compiler doesn't have that! :|
@HeikoS	haha
@lambday	HeikoS: I'll finish the merging with Shogun tomorrow..
@HeikoS	i can install one
@lambday	then we can check
@HeikoS	got c++ 4.8.4-2
 lisitsyn	I want to see viktor's face when you merge C++14 code
 lisitsyn	HeikoS: your grandma C++
@lambday	lisitsyn: I swear I don't
@lambday	I am using 5.3
@HeikoS	lisitsyn: hey btw we should push the c++11 thing soon
 lisitsyn	how?
@HeikoS	sonney2k: is also for it
@HeikoS	I think wait until next year and then do it
@HeikoS	lets face it, nobody uses shogun anyways
@HeikoS	so no need to block ourselves
 lisitsyn	yes
@HeikoS	I mean I am all in for multiplatform and compatible etc etc
@HeikoS	but with this, I think we can compromise
 lisitsyn	yes if you're grep
 lisitsyn	or curl
@HeikoS	got more important issues
 lisitsyn	:D
@HeikoS	yeah exactly
@HeikoS	but we can do it after gsoc
@lambday	would be great to get rid of those macros
@HeikoS	one thing for sure: I dont want these double implementations
 lisitsyn	I give up this shit doesn't work again
@HeikoS	haha
 lisitsyn	swig + mac = segfault
@HeikoS	lambday: just reading your thing in detail and laughing here
@lambday	HeikoS: which one?
@lambday	ah linalg :D
@HeikoS	lambday: yeah
@HeikoS	pretty_please_put_data_on_gpu_if_possible_and_yes_I_know_it_is_costly
@HeikoS	thats a good method name
@HeikoS	lisitsyn would like it
@lambday	hahahahaha
@lambday	got the inspiration from eigen guys
 lisitsyn	haha
@lambday	#define YES_I_KNOW_SPARSE_MODULE_IS_NOT_STABLE_YET
-!- travis-ci [~travis-ci@ec2-54-144-82-39.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Wu Lin's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/117327021
-!- travis-ci [~travis-ci@ec2-54-144-82-39.compute-1.amazonaws.com] has left #shogun []
@HeikoS	yes
@HeikoS	lambday: hey I agree to change this soon, before we get too many patches and students get used to linalg
@HeikoS	already happening, we have like 3-5 patches on this
@lambday	HeikoS: yeah.. this is the first thing I am gonna do after I finish merging flash
@HeikoS	great
@HeikoS	lambday: ah man I love these second details you write there
@HeikoS	linalg::elementwise(m).custom([](auto& v) { v = something_fun(v); });
@lambday	HeikoS: BTW how did you like the proposed API for elementwise
@HeikoS	very good
@lambday	HeikoS: yeah these would be neat
@HeikoS	haha thats what I just meant
@lambday	will create issues for students to achieve these effects
@HeikoS	lambday: yeah thats a good idea
@HeikoS	lambday: maybe we can do this in another feature branch and ppl can send their patches there?
@HeikoS	lambday: not sure how to best organise this
@HeikoS	lambday: should happen before gsoc start definitely
@lambday	HeikoS: absolutely.. I won't take more than a week to do the rafactoring.. I'll be merging in some feature branch.. but then I think it's better to put it back to dev
@lambday	(similar to your argument for shogun) no one uses linalg anyways..
@HeikoS	lambday: yeah haha
@lambday	so we won't break anything hopefully
@HeikoS	lambday: should be ok
@HeikoS	we have the tests etc
@HeikoS	linalg has like 100% coverage
@lambday	yeah
@lambday	HeikoS: getting rid of the NATIVEBLABLA thing would be the biggest gain API-wise IMO
--- Log closed Mon Mar 21 00:00:05 2016
