--- Log opened Wed Jul 31 00:00:54 2013
-!- FSCV [~FSCV@216-230-229-167-colo.oplink.net] has joined #shogun
-!- lisitsyn [~lisitsyn@213.87.131.211] has quit [Read error: Connection reset by peer]
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 3c689be / src/shogun/mathematics/Math.h: https://github.com/shogun-toolbox/shogun/commit/3c689be2c6946095298a0963bd275e2f350430c1
 shogun-notifier-	shogun: define M_PI if not available
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9664622
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1128 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1128  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- FSCV [~FSCV@216-230-229-167-colo.oplink.net] has quit [Quit: Leaving]
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * 8ff0791 / / (9 files): https://github.com/shogun-toolbox/shogun/commit/8ff0791e0d026e8144d83d00bad38ae698955355
 shogun-notifier-	shogun: Define CPack components,preliminary CPack settings
 shogun-notifier-	shogun: Fix FindOctave cmake script
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9668761
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has left #shogun []
@iglesiasg	wiking: hey! So feature/cmake is ready to start trying it out?
@wiking	iglesiasg: it was already ready before
@wiking	but yeah
@wiking	although it's not rebased yet
@iglesiasg	wiking: I just played around with ccmake and I am building right now!
@wiking	and it was branched quite some time ago
@wiking	yeah cool
@wiking	let me know wha's happening
@iglesiasg	wiking: I thought it was very WIP before and could not be yet used
@wiking	noup
@wiking	libshogun + python_modular was working already before the WS
@iglesiasg	wiking: I see, cool
@iglesiasg	wiking: out of curiosity, why do you think rebase will cause problems?
@wiking	iglesiasg: i've tried yesterday
@wiking	:P
@wiking	had to abort it
@wiking	although i havent really checked how serious that manual merge would be
@wiking	buuut it wasnt working automatically
@wiking	so i just postponed it
@iglesiasg	got it
@wiking	as there's still some stuff to be done
@iglesiasg	such as?
@wiking	make tests target
@wiking	that's completely missing
@wiking	as well as matlab static
@wiking	and kind of like that's it
@iglesiasg	wiking: btw I got this at the beginning, but it continued
@iglesiasg	[  1%] Generating version header
@iglesiasg	fatal: Not a valid object name master
@wiking	mmm yeah i saw that on travis as well
@wiking	no fucking idea wtf is that
@iglesiasg	wiking: it is working good here
@iglesiasg	just tried libshogun for the moment
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9670226
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9671355
-!- travis-ci [~travis-ci@ec2-23-22-148-84.compute-1.amazonaws.com] has left #shogun []
@iglesiasg	good night!
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
 shogun-buildbot	build #1438 of deb3 - modular_interfaces is complete: Failure [failed test octave_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1438  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- gsomix [~gsomix@95.67.160.18] has quit [Quit: Leaving]
-!- zxtx [~zv@rrcs-76-79-81-162.west.biz.rr.com] has quit [Ping timeout: 264 seconds]
 shogun-buildbot	build #474 of nightly_default is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/474
-!- foulwall [~user@110.17.4.161] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * 8afb189 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/8afb1899bc1dedf39fdc819ed07c77648cde1427
 shogun-notifier-	shogun: travis: add headers pkg of octave
-!- travis-ci [~travis-ci@ec2-174-129-100-76.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9676827
-!- travis-ci [~travis-ci@ec2-174-129-100-76.compute-1.amazonaws.com] has left #shogun []
@wiking	sonney2k: ideas: https://travis-ci.org/shogun-toolbox/shogun/jobs/9676836  ??
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- foulwall [~user@110.17.4.161] has quit [Remote host closed the connection]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- az_de [82954e22@gateway/web/freenode/ip.130.149.78.34] has joined #shogun
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- lisitsyn1 [~lisitsin@mxs.kg.ru] has joined #shogun
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Ping timeout: 264 seconds]
 lisitsyn1	http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/pubs/archive/41159.pdf
-!- van51 [~van51@ppp-94-66-58-79.home.otenet.gr] has joined #shogun
-!- van511 [~van51@athedsl-225195.home.otenet.gr] has joined #shogun
-!- van51 [~van51@ppp-94-66-58-79.home.otenet.gr] has quit [Ping timeout: 264 seconds]
-!- van511 is now known as van51
 az_de	quit
-!- az_de [82954e22@gateway/web/freenode/ip.130.149.78.34] has left #shogun []
 van51	I'm having some trouble with cmake
 van51	I'm getting stuff like "/shogun/mathematics/eigen3.h:17:24: fatal error: Eigen/Eigen: No such file or directory compilation terminated."
 van51	while with make it is doing ok
 van51	maybe I'm using it wrong
 van51	if someone has an idea let me know :)
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	good morning!
 van51	iglesiasg: hi!
 van51	iglesiasg: you used cmake yesterday, right?
@iglesiasg	van51: yeah!
@iglesiasg	van51: I compiled libshogun with it
@iglesiasg	everything went pretty smooth
 van51	iglesiasg: I'm getting some errors, like clapack.h: No such file or directory :S
@iglesiasg	van51: I see
 van51	iglesiasg: while with the other way it was fine
@iglesiasg	van51: can you take a look with ccmake maybe what is recognized in your system?
@iglesiasg	van51: I had for instance to set the gmock path by hand using ccmake
 van51	iglesiasg: and how did you do that?
 van51	iglesiasg: I can't really tell if something is off tbh :)
@iglesiasg	van51: let me check about lapack in particular
@iglesiasg	van51: all right, this is a doubt I always have but I think arpack and lapack are actually the same
@iglesiasg	van51: so go to the directory <your shogun root dir>/build
@iglesiasg	van51: and do ccmake ..
@iglesiasg	van51: not the two cs, what do you see?
@iglesiasg	not -> note*
 van51	iglesiasg: <shogun>/build or <shogun>/src?
@wiking	van51: https://github.com/shogun-toolbox/shogun/issues/1166
@iglesiasg	van51: I build with cmake from shogun/build
@wiking	please add here your error
@wiking	otherwise i cannot help u
@wiking	cmake needs testing
@wiking	and i just test it on travis and my own machine
@wiking	so maybe some things are not yet working smoothly on other systems
@iglesiasg	wiking: here libshogun worked fine too, I am to test python_modular now
 van51	maybe I need to initialize something? because I don't see a build directory
@wiking	iglesiasg: that should work too as i've tested that intensively
@iglesiasg	van51: yeah sure, mkdir build
@wiking	van51: # Instructions:
@wiking	# $ mkdir build
@wiking	# $ cd build
@wiking	# $ cmake ..
@wiking	# $ make
@iglesiasg	van51: sorry, I didn't mention that
@wiking	as it says
@wiking	in the beginning of the main cmakelists.txt
@wiking	anyhow i'm back to finish up some of the cmake shit
@iglesiasg	van51: with cmake you normally do those steps wiking just copied from the CMakelist.txt
@wiking	hopefull i'll have make tests within some hours
@wiking	if u really need help
@iglesiasg	wiking: all right, I will go with another interface too as well then
@wiking	with cmake
@wiking	iglesiasg: yeah test other interfaces plz
@wiking	python should really work
@wiking	van51: if u got really really stuck or something is not working add your comment to that bug
@wiking	that way i know what i should fix
@wiking	i'm now not looking at irc that reguraly
@wiking	as i really want to finish up this one
 van51	wiking: ok! if I don't manage to do something I will comment there
-!- HeikoS [~heiko@nat-182-213.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 thoralf	HeikoS: Hey.
 thoralf	HeikoS: I'm unable to add a label to my ticket.  Maybe you have got the permissions to do so?
 thoralf	https://github.com/shogun-toolbox/shogun/issues/1332
@HeikoS	thoralf: yeah I can do this
@HeikoS	thoralf: sorry for not getting back, NIPS reviews got in :=)
@HeikoS	thoralf: labelled
 thoralf	HeikoS: That's okay.  Issues are patient. ;)
@sonney2k	wiking, use a recent octave! octave and clang don't work well together
@sonney2k	shogun-buildbot, force build cyg1 - libshogun --branch=develop
 shogun-buildbot	no such builder 'cyg1'
 thoralf	HeikoS: My eclipse (kepler) does not work any more... it dies with a java.lang.StackOverflowError, even after clean shogun-checkout and removing caches/workspaces/etc.
 thoralf	HeikoS: Ever seen this on shogun?
@sonney2k	shogun-buildbot, force build 'cyg1 - libshogun' --branch=develop
 shogun-buildbot	build forced [ETA 16m09s]
 shogun-buildbot	I'll give a shout when the build finishes
 lisitsyn1	hahah stackoverflow
 lisitsyn1	really?
-!- lisitsyn1 is now known as lisitsyn
 thoralf	lisitsyn: Yes. :)
 lisitsyn	what a programmers
 thoralf	lisitsyn: The logfile is 100KiB big.
 thoralf	(for one crash)
 lisitsyn	thoralf: that's okay
 lisitsyn	I used to dig into 10MB logs :D
 thoralf	lisitsyn: I won't dig... imagine I would do so, then I am fixing eclipse to fix my shogun problems to fix my ML problems.
 thoralf	lisitsyn: What's next?  Fixing Java?
 lisitsyn	thoralf: yeah indeed you don't have to
 lisitsyn	thoralf: I mean 100kb is not the thing to crash anything
 lisitsyn	recursion or something like that
 thoralf	lisitsyn: No, 100kb is the stack trace. ;)
 lisitsyn	thoralf: then you know what happened
 thoralf	lisitsyn: Yes.  Recusion. ;)
 thoralf	Recursion
 lisitsyn	HeikoS: your evaluations are the only to go
 lisitsyn	;)
@HeikoS	lisitsyn: ok I will do them today
@HeikoS	wanted yesterday but had too many meetings
@sonney2k	HeikoS, bad excuse ... takes 2 minutes
@sonney2k	hurray all builds except cyg1 are green since last night!
@HeikoS	sonney2k: okok Ill do them now
 lisitsyn	HeikoS: sonney2k: have you decided anything on doc camp thing?
@sonney2k	lisitsyn, on travis transfer_multitask_clustered_logistic_regression.py is still failing - any updates on that?
@HeikoS	sonney2k, lisitsyn we should write a good applicatoin, but not recycle the one from last year, we should have  amore clear vision what we will get
 lisitsyn	sonney2k: if you can live with removing it for now - lets do that
 lisitsyn	it takes a lot of time to compare with matlab impl I made it from
@sonney2k	lisitsyn, I would prefer you fixing it and adding a test
 lisitsyn	HeikoS: I think it should be something like that 'X for hackers' or whatever
 lisitsyn	sonney2k: I am afraid I won't be able to do that next days
@sonney2k	lisitsyn, when?
 lisitsyn	sonney2k: I have time this weekend for sure
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Roman Votyakov :develop * 4c15b21 / src/NEWS: https://github.com/shogun-toolbox/shogun/commit/4c15b214f5753e96c8c2da12ad3c8d3154d1d36a
 shogun-notifier-	shogun: update news
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * f7d66ef / src/NEWS: https://github.com/shogun-toolbox/shogun/commit/f7d66ef1c7d49115b42509b86c1498506dbda7b0
 shogun-notifier-	shogun: Merge pull request #1337 from votjakovr/feature/numerical_integration
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Update news
@iglesiasg	hi sonney2k! how is it going?
@wiking	iglesiasg: mmm
@wiking	iglesiasg: travis gave me this
@iglesiasg	sonney2k: I saw that the SGMatrixList patch fixed the problem in the buildbot, however valgrind still complains about python examples here :S
@iglesiasg	sonney2k: let me know if you want to have a look at the trace
@wiking	https://travis-ci.org/shogun-toolbox/shogun/jobs/9676836
@wiking	iglesiasg: what is your distrib?
@iglesiasg	wiking: linux mint
@wiking	iglesiasg: do you have the HEAD of the feature/CMake?
@wiking	commit 8ff0791e0d026e8144d83d00bad38ae698955355
 shogun-buildbot	build #1129 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1129
@wiking	iglesiasg: since there's a fix for octave detection
@wiking	try to do a git pull on that branch
@wiking	and rerun cmake
@HeikoS	sonney2k, lisitsyn done
@sonney2k	lisitsyn, ok then this weekend is what we could still bear but we really need it then
@sonney2k	HeikoS, thanks!!
@sonney2k	iglesiasg, w/o traces you could say anything :P
@sonney2k	man all green
@HeikoS	sonney2k, wiking we should enable valgrind to break the unit tests at some point, same for the libshogun examples
@HeikoS	thoralf: ^
 lisitsyn	sonney2k: ok I'll either fix it or remove ti
@wiking	HeikoS: yeah we should... :) no time sorry want to finish cmake ;P
@HeikoS	wiking: yeah dont worry
@wiking	sonney2k: what is a good octave version? :)
@iglesiasg	sonney2k: http://pastebin.com/A0996D3g
@HeikoS	wiking: just to keep in mind :)
@sonney2k	wiking, the latest and greatest but I am not sure any works with clang yet
@iglesiasg	sonney2k: that is for structure_plif_hmsvm_bmrm.py
@sonney2k	wiking, try it with g++ rather
 thoralf	HeikoS: I'm valgrinding every code I write - if I find something, I'll fix it.
@sonney2k	van51, hey how is it going?
@wiking	sonney2k: 3.2?
@wiking	sonney2k: as this is what we have by default on travis :(
@sonney2k	wiking, would work with gnu
@sonney2k	wiking, no way with clang
@iglesiasg	wiking: I just saw you made a commit 8h ago for octave package, I was missing that one
@wiking	sonney2k: ok will switch in travis
@wiking	iglesiasg: cool try that one
@wiking	iglesiasg: u using gcc?
@iglesiasg	wiking: my bad I didn't check it first
@iglesiasg	wiking: yeah, I think that one is set by default, I have clang too
@wiking	iglesiasg: ok try with gcc
@wiking	lets see if it fails for u
@wiking	sonney2k: http://pastebin.com/97H5iXc9
@wiking	sonney2k: ideas?
@wiking	i have jblas 1.2
@wiking	1.2.0 to b precise
 shogun-buildbot	build #1130 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1130  blamelist: Soeren Sonnenburg <sonne@debian.org>
@iglesiasg	wiking: same error after rebase
@wiking	iglesiasg: did you: rm -rf build
@wiking	because if u just rebased
@wiking	and rerun cmake
@wiking	you might have some cached values there
@wiking	so just rm -rf build && mkdir build etc...
@iglesiasg	wiking: I didn't, thanks! trying atm
@iglesiasg	wiking: still the same, unfortunately
@wiking	mmm
@wiking	well have fun with the FindOctave.cmake script ;)
@sonney2k	iglesiasg, the bug is with ParameterMapElement being stored in a Dynarray...
@sonney2k	HeikoS, ^
@sonney2k	iglesiasg, so this is sth else
@sonney2k	HeikoS, do you need ParameterMapElement to be virtual?
@HeikoS	sonney2k:  I did not write that
@sonney2k	HeikoS, any ideas who did?
@sonney2k	HeikoS, what is this for?
@HeikoS	of wow
@HeikoS	I wrote it
@HeikoS	no idea let me check
@HeikoS	sonney2k: ah thats migration
@sonney2k	HeikoS, if it would work as a CSGObject one could use DYnamicObjectArray
@HeikoS	sonney2k: I want to drop that anyways
@HeikoS	migration is useless
@HeikoS	what problem does it cause?
@sonney2k	HeikoS, errm but this means we have no serialization
@HeikoS	sonney2k: no
@HeikoS	sonney2k: why that?
@HeikoS	sonney2k: migration never worked so when did we have serialization?
@sonney2k	HeikoS, because when you save data with one version of shogun you won't be able to load it in the next
@HeikoS	sonney2k: I think it is way better to just ignore new elements
@HeikoS	sonney2k: since that is what usually changes, new members are added
@sonney2k	HeikoS, and renames are done...
@HeikoS	sonney2k: nobody used the migration framework for something else ever
@HeikoS	sonney2k: we cannot support that, it is too much hassle
@HeikoS	sonney2k: check the code and you will see, it is horrible
@HeikoS	and it is also horrible to use
@HeikoS	so I dont know about that
-!- travis-ci [~travis-ci@ec2-23-22-48-223.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9686791
-!- travis-ci [~travis-ci@ec2-23-22-48-223.compute-1.amazonaws.com] has left #shogun []
@HeikoS	we are open-source so why support old formats, companies can do that but I think we cannot
-!- foulwall [~user@110.17.4.161] has joined #shogun
@HeikoS	or re-write parameter framework with migration in mind
@sonney2k	HeikoS, well if you cannot maintain it then we better drop it
@HeikoS	sonney2k: strongest reason to drop it is that it is not used
@sonney2k	it is only a convenience for users
@HeikoS	sonney2k:  and that it doesnt really work
@HeikoS	yeah, I mean it would be nice to have
@HeikoS	but not in the way it is currently done
@HeikoS	sonney2k:  and I would also drop the integration tests for that reason
@sonney2k	HeikoS, no way
@HeikoS	sonney2k: since they always break and are hard to replace
@HeikoS	rather unit test results
@sonney2k	HeikoS, they are worth more than the unit tests
@HeikoS	sonney2k: currently yes, in a year, I would say no
@sonney2k	HeikoS, currently unit tests work but lots and lots of integration tests are broken
@sonney2k	and I mean really not working
@HeikoS	they dont test the correct thing
@sonney2k	HeikoS, what is the correct thing then?
@HeikoS	to assert correct results
@sonney2k	if not checking that we have corerct results
@HeikoS	the integration tests include that, but so much more useless stuff
@HeikoS	so they kind of block development
@HeikoS	since you always have to update them
@HeikoS	I would prefer if all integration tests were replaced by simple unit tests and then the examples would be changed to be more illustrative
@HeikoS	this way we have the same testing power, easier development and examples that are useful rather than being abused for testing
@sonney2k	HeikoS, what?
-!- az_de [82954e22@gateway/web/freenode/ip.130.149.78.34] has joined #shogun
@HeikoS	sonney2k: some work involved but thats what I would find ideal
@sonney2k	HeikoS, with the same argument unit tests block development
@sonney2k	HeikoS, and examples
@HeikoS	sonney2k: no
@sonney2k	you always need to update them
@HeikoS	sonney2k: if you change a class, say add a member the unit tests dont break
@HeikoS	sonney2k: they just assert correct mathematical results
@HeikoS	which are invariant of the implementation (more or less)
@HeikoS	but all class changes dont affect them
@sonney2k	HeikoS, same with integration tests
@HeikoS	sonney2k: no, the tests break if you add a member
@sonney2k	no
@HeikoS	take for example labels
@sonney2k	only if you add sth to the serialization framework
@sonney2k	and then it is actually good
@HeikoS	sonney2k: yeah
@wiking	sonney2k: wtf is the purpose of .scrub_docstrings.py?
@sonney2k	because you want that tested too
@HeikoS	sonney2k: thats why we dont do that, we have all these warnings: add parameters
@HeikoS	and parameters are not added since they break the tests
@HeikoS	which is annoying
@sonney2k	HeikoS, but that is bullshit
@HeikoS	and doesnt help detecting errors at all
@sonney2k	we can just check if everything is still fine
@sonney2k	then run generator.py <changed_file.py>
@sonney2k	and commit the new data
@HeikoS	sonney2k: most developers (including me) have problems updating them
@HeikoS	and it is very annoying
@HeikoS	see my point is just: if we replace them, we have the same test power
@HeikoS	but minus all the hassle
@sonney2k	well maybe giving you a script doing that would help
@sonney2k	it is just 3 lines of git commit -a / push / commit push
@sonney2k	4
@HeikoS	sonney2k: but what do we gain from the serialisation stays fixed test?
@wiking	sonney2k HeikoS we can create a pre-commit hook ;)
@sonney2k	HeikoS, we gain that the *whole* pipeline is tested
@sonney2k	HeikoS, unit tests don't cover bigger stuff
@HeikoS	sonney2k: why is that helpful?
@HeikoS	for example?
@sonney2k	HeikoS, because several small units may work
@sonney2k	but their integration might not be well tested
@HeikoS	for example?
@sonney2k	HeikoS, everyone in industry is doing that
@HeikoS	most integration test do not test bigger stuff
@sonney2k	HeikoS, what for example?
@HeikoS	example of such a situation where the big thing cannot be tested by unit tests?
@HeikoS	sonney2k:  I would rather test that all steps of the pipeline work correctly than testing the final byte-result
@HeikoS	because then you know what broke if something breaks
@HeikoS	also in shogun we dont have large parts of framework parts interacting with each other
@HeikoS	rather multiple small algorithms
-!- foulwall` [~user@110.17.4.161] has joined #shogun
@sonney2k	HeikoS, sure that is what unit tests are for
@HeikoS	sonney2k: I agree with you that integration tests are useful if you have such big frameworks, but we dont, look at our integration tests, they can all be replaced units
@HeikoS	sonney2k: for example all these kernels
@sonney2k	HeikoS, yeah but why would one do that? You need to write an example per algorithm anyways
@sonney2k	and you get a test *for free*
@sonney2k	and it is very readable to users and a test
@HeikoS	sonney2k: I think they are causing more trouble than they are useful
@HeikoS	(given that they are replaced by units)
-!- foulwall [~user@110.17.4.161] has quit [Ping timeout: 268 seconds]
@HeikoS	sonney2k: also they dont tell you what is wrong when they fail, just THAT its wrong
@sonney2k	so far I have seen them only to detect bugs we would not have detected
@sonney2k	HeikoS, yeah but you can then just run tester.py -d and you get a shell where you can investigate the objects that are different
@HeikoS	sonney2k: its so much easier to get a failing assertion
@sonney2k	HeikoS, I guess you didn't notice that GaussianProcessRegression was no longer working since your last commit did you?
@sonney2k	HeikoS, the integration test failed and so I could have a look and fix it
@HeikoS	what failed?
@HeikoS	the python example or the test?
@sonney2k	GaussianProcessRegression was no longer available
@sonney2k	in modular interfaces
@HeikoS	so the example failed
@HeikoS	not the test
@sonney2k	the integration test
@sonney2k	the example works
@HeikoS	running the examples is good
@HeikoS	why does it work if the class is not available?
@sonney2k	if eigen3 is not available the example will give an OK
@HeikoS	and if it is available?
@HeikoS	if eigen is not available the integration test cannot be ran
@sonney2k	should fail but didn't check
@sonney2k	HeikoS, you can look up the failure yourself in travis
@HeikoS	these type of api-interface problems can be detected by running the examples
@HeikoS	no need for comparing serialised objects for that
@sonney2k	in addition it is also a good test for serializtion
@HeikoS	sonney2k: yep agree, but that will be handled by automatic unit tests soon in a way better way (all classes etc)
@HeikoS	like clone and equals
 thoralf	HeikoS: What happens if someone add members to the serialization (i.e. the parameters i guess?)
@HeikoS	thoralf: the integration test breaks
 thoralf	HeikoS: No, technically.
@HeikoS	it is been written to the file upon save, so gives a different binary object on disc
 thoralf	And the binary objects will be compared?
@HeikoS	yes
 thoralf	Uh.
@HeikoS	thoralf: we want to replace this by an equals instead
 thoralf	Is there a text-representation to compare with diff?
@HeikoS	thoralf: yes
@sonney2k	HeikoS, so back to my original question: we can drop the parametermap* class right?
 thoralf	So why don't do this?
@HeikoS	sonney2k: migration will stop working immediately
@sonney2k	thoralf, we do this
@HeikoS	sonney2k: So I would rather discuss this a bit more
@HeikoS	sonney2k:  see my git issues on dropping migration
 thoralf	sonney2k: HeikoS just told you're comparing the binary.
@sonney2k	thoralf, no on travis you see a ascii diff of what has changed
@sonney2k	so you could see that a variable is added/removed/changed
@sonney2k	also when sth crashes
@sonney2k	you will get a gdb backtrace
@HeikoS	sonney2k: I would only drop migration if integration is changed, because otherwise its too painful to change things
@HeikoS	sonney2k: but I dont know, I would like to discuss this with others also before actually dropping things
@HeikoS	sonney2k: so rather not drop now but after GSoC or so
@sonney2k	HeikoS, but didn't you just say that migration is not used?
* sonney2k gets confused
@HeikoS	sonney2k: I think so, but not sure, its deep down in the parameter framework so dropping classes can be dangerous
@sonney2k	I mean yes integration tests fail as soon as some variable name is changed/added/removed/meaning is changed/
@HeikoS	There are some add calls on the migration maps done by some classes
 thoralf	HeikoS: Is there a way to recover if a parameter was added?  Lets say: "load serialization; apply default parameters; save serialization"?
@HeikoS	thoralf: thats what migration does
@sonney2k	thoralf, yes that would work
@sonney2k	thoralf, also the other way around if some parameter is missing it will just not be loaded
@HeikoS	thoralf: but we would need a person working full time on that to be able to maintain it, its hard stuff to do
 thoralf	HeikoS: Okay, missed that.  Too much text in this thread now. ;)
@HeikoS	ok back to NIPS :)
@sonney2k	HeikoS, thoralf migration rather does the conversion - so you could *reanme* a variable and it could still work
@sonney2k	or you could change its meaning
@sonney2k	and add some code to load older revisions
@HeikoS	sonney2k: or type or even more things
@sonney2k	HeikoS, I need a short term fix then
@HeikoS	sonney2k: I think its too ambitios
@HeikoS	sonney2k: whats the problem?
@HeikoS	sonney2k: the parameter stuff does not to be mapped with swig btw
@sonney2k	ParameterMapElement is in a DynArray
@sonney2k	and since it has virtual methods -> malloc/realloc -> kaboom
@sonney2k	so either drop these methods or make it a derivative of CSGObject
@sonney2k	and use DynamicObjectArray
@HeikoS	sonney2k: why did that pop up now?
@HeikoS	and not before?
@sonney2k	no idea
@HeikoS	what fails?
@sonney2k	or maybe I am misinterpreting the error
 shogun-buildbot	build #1131 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1131  blamelist: Roman Votyakov <votjakovr@gmail.com>
@HeikoS	sonney2k:  I did not change anythjing in there
@sonney2k	HeikoS, iglesias posted it here http://pastebin.com/A0996D3g
 thoralf	sonney2k: Now I'm confused.  According to HeikoS it's a lot of work, but you're suggesting it can be done automatically.  Yes/no/maybe? ;)
 thoralf	i.e. 4 lines of shell code
@sonney2k	thoralf, what?
@sonney2k	thoralf, what do you mean?
 thoralf	sonney2k: The migration of serialized examples.
@HeikoS	sonney2k: what code caused this?
@HeikoS	sonney2k: I am pretty sure this can be solved without dropping the class
@sonney2k	thoralf, errm I am still not following
@sonney2k	HeikoS, running the *structur*py examples
@HeikoS	sonney2k: since when is this?
@sonney2k	thoralf, let me explain a bit more
@HeikoS	what patch broke them?
@sonney2k	HeikoS, no idea. I did dig to several bugs until this one popped out
@sonney2k	thoralf, we have examples/*/python_modular
@sonney2k	thoralf, these are written in a way that these are functions returning some stuff
@HeikoS	sonney2k: this is probably some add call to the migration map, but it worked before, so should not be solved this way
@sonney2k	thoralf, so a function can be called with certain parameters and the returned result is pickled to disk by a generator.py script to create reference data. if among this stuff are shogun objects these are serialized with shogun's framework
@sonney2k	thoralf, now when we run integration tests with tester.py the example is run again and results are compared with the serialized stuff
@sonney2k	HeikoS, which way?
 thoralf	sonney2k: Yes, and HeikoS point is that it's hard to maintain the serialized stuff.  Right?
@sonney2k	thoralf, well one just has to run generator.py <example.py> and then git commit in shogun-data & push and git add data in shogun and push
@HeikoS	sonney2k: dropping parameter map, too risky for now, and I dont have time to go into it and fix/drop things properly currently, so I propose we do this after GSoC in a clean way and fix this bug in anther way, for exampling by finding our what caused it
@HeikoS	thoralf: migration is hard to maintain, one needs full time people for that
@sonney2k	HeikoS, not sure what you are referring to - watching that stuff is changed in a compatible way or code?
@sonney2k	or both?
@HeikoS	sonney2k: fixing the bug without dropping parameter map
@HeikoS	drop migration after gsoc
@HeikoS	(since dropping it might break things)
@HeikoS	(and currently too  overloaded to deal with that)
@sonney2k	yeah no that was I mean wrt what you said to thoralf
@HeikoS	sonney2k: ah sorry
@HeikoS	what? :)
@HeikoS	whats the question?
@sonney2k	HeikoS, thatmigration is hard to maintain, one needs full time people for that
@sonney2k	HeikoS, so for watching that stuff is changed in a compatible way or code?
@sonney2k	<sonney2k> or both?
@HeikoS	sonney2k: yeah, its beyond our manpower, if we had some full time developers, we could do that, like a company
@HeikoS	sonney2k: no the idea of loading older file formats
@HeikoS	aka migration
@sonney2k	I just don't understand what requires the manpower here
 thoralf	HeikoS: But which part requires the man power?
@sonney2k	yeah that is my question
@wiking	CMAKE!
@wiking	fucking hell
@wiking	:D
@HeikoS	re-writing the parameter framework in such way that migration is easy ;)
@sonney2k	wiking, :D
@HeikoS	wiking: haha :)
@wiking	this conversation that you have
@wiking	here for the last 30 mins
@wiking	is fucking pointless
@wiking	there are far more urgent things
@wiking	and there are real concrete problems
@sonney2k	wiking, I only wanted to fix a bug
@HeikoS	actually, yes
@wiking	would be great if you could concentrate on that
 thoralf	wiking: Yeah. ;)
@wiking	sonney2k: get it... but still this is too mcuh
@wiking	sonney2k: for a bugfix
@HeikoS	sonney2k: so pls fix it without dropping things for now, I will take care of that later
@wiking	so
@sonney2k	HeikoS, yes yes yes!
@wiking	how the fuck can happen this
@HeikoS	sonney2k: since it worked before, that must be possible
@sonney2k	HeikoS, yes yes yes ...sir!
@wiking	Users/wiking/shogun/examples/undocumented/java_modular/classifier_averaged_perceptron_modular.java:24: set_feature_matrix(org.shogun.RealMatrix) in org.shogun.RealFeatures cannot be applied to (org.jblas.DoubleMatrix) feats_train.set_feature_matrix(traindata_real);
@wiking	did i fuckup something in the modular generation?
@sonney2k	wiking, I recall seeing things like this (2 years ago)
@sonney2k	so no clue
@wiking	iglesiasg: can u test some of the examples of python_modular with the cmake generated python_modular?
@wiking	you'll have to do that by hand, as the make tests is not working yet
@wiking	iglesiasg: if there's any errors just paste it into the common cmake bug
@sonney2k	foulwall`, did you manage to put the data into a .zip?
@iglesiasg	wiking: so cmake for python modular, make and then in src make check-tests?
@sonney2k	wiking, btw are you only working on the Cmakefiel.txt?
@wiking	iglesiasg: nonono as said that will not work
@wiking	sonney2k: yes indeed
@sonney2k	wiking, I mean if so you should just do that in develop
@sonney2k	you cannot break a build until we switch
@wiking	sonney2k: need a rebase still in that branch
@iglesiasg	wiking: well I don't get why not, I can sudo make install and the make check-tests should use the python that is intalled in the system, or??
@wiking	iglesiasg: cmake with python_modular
@wiking	iglesiasg: dude....
@wiking	iglesiasg: make check-tests is based on ./configure shit
@iglesiasg	wiking: all right :)
@wiking	so just fucking try to run a python_modular example
@sonney2k	iglesiasg, which example fails again?
@iglesiasg	wiking: lol much coffee this morning? :P
@sonney2k	iglesiasg, AdReNALiN!!
@wiking	and make it sure that it try to use the python_modular that is generated/installed by cmake ;)
@wiking	iglesiasg: yeah + no food
@wiking	iglesiasg: i'm on this shit since 5am
@wiking	i want to finish
@wiking	since it's really near
@sonney2k	wiking, do it!
@iglesiasg	sonney2k: the valgrind trace above was for structure_plif_hmsvm_bmrm.py
@sonney2k	wiking, and merge it dammit
@wiking	i have to go away now for 1 hour
@wiking	bbl
@wiking	iglesiasg: if u have some output let me know via the bug
@wiking	iglesiasg: dont want to browse the irclog
@wiking	iglesiasg: just paste it to github
@iglesiasg	wiking: will do
@wiking	thjnx heaps
@wiking	sonney2k: your c++11 checker in ./configure only supports gcc
@wiking	sonney2k: but no worries i've fucking nailed it in cmake
@wiking	:P
@sonney2k	wiking, no it should also work with clang
@sonney2k	and any other comp
@wiking	sonney2k: no it wont
@wiking	sonney2k: as -stdlib=libc++ is missing from the compiler flags
@wiking	and w/o that it'll die with clang
@wiking	wont find <atomic>
@sonney2k	wiking, errm but it is unsing cxx_check so that should be in there
@wiking	lisitsyn: your spinlock checker with cmake fails on travis.... cannot find it...
@sonney2k	iglesiasg, I don't that error
@iglesiasg	sonney2k: what?
@sonney2k	iglesiasg, I just ran valgrind python structure_plif_hmsvm_bmrm.py
@iglesiasg	sonney2k: mmm that's funny
@sonney2k	I see some leaks but these are rather due to pytnon not calling exit_shogun()
@iglesiasg	sonney2k: I run that yesterday night with the last commit message being "define M_PI if not available"
@sonney2k	iglesiasg, weird... same version here
@sonney2k	van51, any updates or still asleep?
@sonney2k	or beaching :)
 van51	sonney2k: hey I was waiting for you guys to finish :)
@iglesiasg	sonney2k: what about structure_discrete_*?
 van51	sonney2k: I have sent a PR for normalization in the converter
 van51	sonney2k: I think it's fine
 van51	sonney2k: even on the webspam they give very close results
@sonney2k	van51, did it give the same results?
 van51	sonney2k: w/o normalization y
 van51	sonney2k: but the converter normalizes every dimension of the vector
 van51	sonney2k: while the dense dot normalizes the end result
 van51	sonney2k: so there must be rounding errors or something
@sonney2k	van51, yeah sure but it should be the same up to flaoting point precision issues
@sonney2k	van51, well you could just compare things - get the feature vector from dotfeatures and the converted one
@sonney2k	they must be exactly the same
 van51	sonney2k: I have added a test case doing that
 van51	sonney2k: but by using the dot product
@sonney2k	iglesiasg, no leaks or anything
@sonney2k	iglesiasg, with that script...
@sonney2k	van51, dot is not a good way for comparison though there will be minimimal pertubations
@sonney2k	as in 1e-14 or so
@sonney2k	van51, did you compute the linear kernel for that? what was the deviation?
@sonney2k	iglesiasg, maybe you should check again then
@iglesiasg	sonney2k: yeah
@iglesiasg	sonney2k: I will make an issue in case they keep on appearing
@sonney2k	iglesiasg, and assign it to yourself :D
@sonney2k	ohh nice strong winds - sea I am coming
 van51	sonney2k: they gave the same results
 van51	sonney2k: I'm trying to reach my remote machine to copy the results but I can't :/
 van51	sonney2k: also by tonight I will have a PR for "quadratic" support in the hashedDoc class
 van51	sonney2k: what I'm doing actually is a k-skip ngram strategy
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has quit [Read error: Connection reset by peer]
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has joined #shogun
-!- az_de [82954e22@gateway/web/freenode/ip.130.149.78.34] has quit []
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has quit [Remote host closed the connection]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has joined #shogun
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has quit [Quit: Leaving.]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- iglesiasg [~iglesias@2001:6b0:1:1da0:8c2b:7874:f378:ae37] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	sonney2k, around?
@iglesiasg	sonney2k, the valgrind errors still remain. Just created an issue, let me know about it
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has joined #shogun
@wiking	iglesiasg: any luck?
@iglesiasg	wiking, yes, I run a few examples without any trouble
@wiking	iglesiasg: cool thnx then i can add that to the tests straight away
@wiking	iglesiasg: can u tell me what's the output on your machine of spinlock check with cmake
@wiking	?
@iglesiasg	wiking, yes, sure
@iglesiasg	wiking, is it enough with the entry that can be read with ccmake?
@wiking	noup
@wiking	just run a cmake ..
@wiking	it should be there
@wiking	regardless of your cmake state
@iglesiasg	wiking, all right, give me a second. I am with the uni laptop right now and didn't have hear a copy of the repo to play with cmake
@iglesiasg	wiking, -- Spinlock support found
@iglesiasg	I guess that is not very useful
@iglesiasg	or maybe it is, you tell me :)
@wiking	yep
@wiking	that's what i needed
@iglesiasg	wiking, I am going to try octave here too. Let's see what happens
@HeikoS	votjakovr: I think evaluate_log_probabilities should be renamed to something that contains "predictive distribution"
@wiking	iglesiasg: cool
@HeikoS	votjakovr: since it is a bit misleading
 votjakovr	HeikoS: yep, i agree
 votjakovr	HeikoS: btw is it ok for example: https://dl.dropboxusercontent.com/u/21557917/plot.png
@HeikoS	votjakovr: very nice! for what is that?
@HeikoS	gotta go, will be back in 15
 votjakovr	HeikoS: this is python example for laplace logit/probit classifiers
@iglesiasg	wiking, we have a new hint: octave 3.2 here was correctly detected
@wiking	iglesiasg: ok that's something
@wiking	but now try to build it
@wiking	i had problems there
@iglesiasg	wiking, already 25% done
@iglesiasg	wiking, is there an option to explicitly desactivate doxygen generation?
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has quit [Quit: Leaving.]
@iglesiasg	wiking, make worked fine, make install afterwards too but octave_modular examples fail
@iglesiasg	wiking, init_shogun undefined
@iglesiasg	wiking, I noticed this when running make install
@iglesiasg	/usr/local/lib/lua/liboctave_modular.so
@iglesiasg	to me it looks weird that liboctave appears inside a lua dir, but who knows
 pickle27	iglesiasg: lisitsyn my PR is up to date with the style changes
@wiking	iglesiasg: woah
@wiking	iglesiasg: ok make install is not working well
@wiking	iglesiasg: we need there somekind of a magice
@wiking	to figure out the octave install dir
@iglesiasg	wiking, so the lua thing is not normal
@wiking	of course not
@wiking	but i didn't have the patients for that
@wiking	so that still need to be fixed
@wiking	in the cmake
@iglesiasg	wiking, all right
@iglesiasg	pickle27, nice, let's check that everything is fine with travis and then we can merge
@iglesiasg	pickle27, so you solved finally the bugs you mentioned in the original implementation?
@iglesiasg	gtg, see you later
-!- iglesiasg [~iglesias@2001:6b0:1:1da0:8c2b:7874:f378:ae37] has quit [Quit: Ex-Chat]
@wiking	heheh great bug comment "yes Jedi is fixed now"
@wiking	:D
 lisitsyn	gsomix!
 lisitsyn	sonney2k: gsomix don't want money :D
 lisitsyn	ohh hushell you too, please submit your gsoc thing
 lisitsyn	ahhh
 lisitsyn	you all
 lisitsyn	:D
 lisitsyn	wiking: what is jedi?
@HeikoS	votjakovr: very nice, could you make that a non-graphical one too?
@HeikoS	in fact, I think you dont need to show all the inference methods at once, but just one and then offer replacement lines to switch
@HeikoS	this way, this can also be extended with EP
@wiking	lisitsyn: ica realted afaik
 votjakovr	HeikoS: ok, btw what do you think about plotting predictive distribution? i mean, we can choose the line, say y = 0, and plot mean and 95% confidence intervals on predictive distribution
 lisitsyn	wiking: AH :D
 lisitsyn	I thought some software but now I recall
@HeikoS	votjakovr: but didnt you plot the predictive distribution in the example?
 lisitsyn	funny because I am ehm co-mentoring that project
 votjakovr	HeikoS: i did it:) i mean we can plot confidence
@HeikoS	votjakovr: ah I see, I think the way you did it is fine, just include a colorbar and mark the decision surface :)
 votjakovr	HeikoS: oh, ok. i'd just like to use mean and variance
 votjakovr	HeikoS: there is p(y=1) on the plot
@HeikoS	votjakovr: ok
@HeikoS	votjakovr: remember that these examples should be simple to demonstrate api usage. No fancy plotting involved
@HeikoS	votjakovr: the cool stuff should go into your ipython notebook example, and there you should do as many cool things as possible :
@HeikoS	:)
 votjakovr	HeikoS: ok
@HeikoS	votjakovr: you know, just to find out how things work (the current examples)
@HeikoS	votjakovr: and the fancy ones: to show off with your cool framework :) to explain how things work, to compare etc etc
@HeikoS	but fancy examples later, now some simple and then EP :)
 votjakovr	HeikoS: ok, btw didn't you see my "warnings" PR?
 votjakovr	HeikoS: i've fixed some of them
@HeikoS	votjakovr: I did, sorry, busy day. I will have a look soon
@HeikoS	Thanks a lot for that!
 votjakovr	HeikoS: alright :)
-!- thoralf [~thoralf@enki.zib.de] has quit [Quit: Konversation terminated!]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * 68044ee / / (29 files): https://github.com/shogun-toolbox/shogun/commit/68044ee7c150ebc78c6d842d31fd7a72b9c0db19
 shogun-notifier-	shogun: Add C++11 cmake detection scripts
 shogun-notifier-	shogun: Fix lua modular installation directory
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * 0ec5151 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/0ec5151d391ff2e1c0ae48318066234f1050295f
 shogun-notifier-	shogun: Travis: use gcc for octave_modular compilation
 lisitsyn	wiking: you're doing great stuff with cmake
@wiking	mmm soon soon
@wiking	i though this fucking tests should go faster
@wiking	i'm having problem reseting the compiler flags at one point in cmake :S
 hushell	lisitsyn: submitted :)
 hushell	lisitsyn: Thanks for reminder
-!- travis-ci [~travis-ci@ec2-23-22-12-85.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9701078
-!- travis-ci [~travis-ci@ec2-23-22-12-85.compute-1.amazonaws.com] has left #shogun []
-!- foulwall` [~user@110.17.4.161] has left #shogun ["ERC Version 5.3 (IRC client for Emacs)"]
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has joined #shogun
-!- gsomix [~gsomix@109.169.241.214] has joined #shogun
 gsomix	good evening
 gsomix	just returned from big city
 gsomix	*just have
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- foulwall [~user@110.17.4.161] has joined #shogun
-!- lisitsyn [~lisitsyn@213.87.128.66] has joined #shogun
 foulwall	sonney2k , I solved javascript zip extracting, but got some little bug on display the pic, I'm trying to solve it
 shogun-notifier-	shogun: Roman Votyakov :develop * 1559b33 / examples/undocumented/python_modular/graphical/classifier_gaussian_process_binary_classification.py: https://github.com/shogun-toolbox/shogun/commit/1559b338a2ee9410bd1885fe0363ba7c99d04f28
 shogun-notifier-	shogun: add very basic python graphical example of GP binary classification
 shogun-notifier-	shogun: Heiko Strathmann :develop * ba3603f / examples/undocumented/python_modular/graphical/classifier_gaussian_process_binary_classification.py: https://github.com/shogun-toolbox/shogun/commit/ba3603fff4043639ef841db490646ae4f45f07f3
 shogun-notifier-	shogun: Merge pull request #1340 from votjakovr/feature/gp_binary_classification
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Added very basic python graphical example of GP binary classification
@HeikoS	votjakovr: hey, you might like this here: https://github.com/shogun-toolbox/shogun/pull/1341
@HeikoS	votjakovr: I use that for my research and it is massively based on your work ! :)
@HeikoS	going home now, bye!
-!- HeikoS [~heiko@nat-182-213.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
@wiking	lisitsyn: wazzzaaaaaaaaaaaaa
 lisitsyn	wiking: hey!
 lisitsyn	wiking: any help with cmake? I have some power left - just got home
@wiking	lisitsyn: so here i am
@wiking	lisitsyn: libshogun examples
@wiking	lisitsyn: trying to add all the .cpps as a new add_executable
@wiking	which would all be good
@wiking	apart from the fact that i cannot clear the compiler flags
 lisitsyn	wiking: ahh yeah
 lisitsyn	could be a problem
 shogun-buildbot	build #1132 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1132  blamelist: Roman Votyakov <votjakovr@gmail.com>
@wiking	which means it's trying to compile the stuff like this
@wiking	/usr/bin/c++   -DDSFMT_MEXP=19937 -DHAVE_ARPACK -DHAVE_CXX11_ATOMIC -DHAVE_DOXYGEN -DHAVE_EIGEN3 -DHAVE_HDF5 -DHAVE_LAPACK -DHAVE_LARGEFILE -DHAVE_LGAMMAL -DHAVE_LOG2 -DHAVE_POWL -DHAVE_PTHREAD -DHAVE_PYTHON -DHAVE_SQRTL -DHAVE_SSE2 -DHAVE_XML -DLOFASZ -DSFMT_MEXP=19937 -DSHOGUN -DSWIG_TYPE_TABLE=shogun -DUSE_BIGSTATES -DUSE_BOOL -DUSE_BZIP2 -DUSE_CHAR -DUSE_FLOAT32 -DUSE_FLOAT64 -DUSE_GLPK -DUSE_GZIP -DUSE_HMMCACHE -DUSE_INT32 -DUSE_INT64 -DUSE_LZMA -D
@wiking	and obviously this is not what should happen
 lisitsyn	wiking: http://www.cmake.org/pipermail/cmake/2010-April/036664.html
 lisitsyn	wiking: what about that?
@wiking	reading
@wiking	lisitsyn: yeah tried that
@wiking	it appends to the list
 lisitsyn	argh
@wiking	Additional flags to use when compiling this target's sources.
@wiking	The COMPILE_FLAGS property sets additional compiler flags used to build sources within the target.  Use COMPILE_DEFINITIONS to pass additional preprocessor definitions.
@wiking	see 'additional'
-!- van51 [~van51@athedsl-225195.home.otenet.gr] has quit [Quit: Leaving.]
 lisitsyn	wiking: yes yes got it
@wiking	lisitsyn: so of course there's a way around
 lisitsyn	wiking: how?
@wiking	but that requires a minor refactoring of this fucking thing
@wiking	lisitsyn: well create a custom cmake variable and store all the compiler flags and definitions in that
 lisitsyn	wiking: and add them each time?
@wiking	yes
 lisitsyn	would be ok I think
@wiking	so for the target that requires all those shit
@wiking	then do the set_target_properties
@wiking	otherwise dont
@wiking	which would be 'all the current targets apart the libshogun-examples target'
@wiking	i hope u feel the irony
@wiking	i.e. for one fucking target we have to redo now everything :)
 lisitsyn	wiking: hah yes
@wiking	apart from this if u wanna help
 pickle27	wiking: lisitsyn is it neccessary to use cmake for the examples?
@wiking	pickle27: well it would be good
 lisitsyn	pickle27: what else?
@wiking	pickle27: since then we can package them as well
 pickle27	I seem to recall opencv uses cmake for the lib and a reg makefile for the examples
@wiking	pickle27: fuck ocv :D
@wiking	lisitsyn: so what i was saying
 lisitsyn	wiking: yes?
@wiking	lisitsyn: can u find out how we can add to ctest non-binary tests
@wiking	lisitsyn: e.g. a python test or a java test?
@wiking	if u know what i mean
@wiking	because until now i was doing
 lisitsyn	wiking: yeah I'll check
@wiking	add_executable(targetname srcs)
@wiking	add_test(<whatevertestname targetname)
@wiking	but i dont know if for example we can do this
 lisitsyn	wiking: yes that's the common way
@wiking	like
@wiking	add_custom_target(OUTPUT? whatever COMMAND PYTHON_EXECUTABLE pythonscript.py ...)
@wiking	and then
@wiking	add_test(<wtf> whatever)
 lisitsyn	okay I'll try to do that locally
@wiking	lisitsyn: nono
@wiking	here's your friend
@wiking	http://cmake.org/cmake/help/v2.8.8/cmake.html#command:add_test
@wiking	lisitsyn: can u test the more advanced add_test macro?
@wiking	add_test(NAME <name> [CONFIGURATIONS [Debug|Release|...]] [WORKING_DIRECTORY dir] COMMAND <command> [arg1 [arg2 ...]])
@wiking	this should do it
@wiking	see COMMAND there
 lisitsyn	yeah that's what I wanted to do
@wiking	but would be great if u could test it
@wiking	thnx
@wiking	let me know how's that working out
 lisitsyn	alright
@wiking	in the meanwhile i'll do the fucking refactoring :)
@wiking	as i was googling about this for a long time now (i.e. 3 hours) w/o success -- reseting compiler flags
@sonney2k	foulwall, why javascript zip extracting? why not on the server side serve a file inside a zip?
 votjakovr	sonney2k: hi! please have a look at my "silence warnings" PR
@sonney2k	votjakovr, did already
@sonney2k	votjakovr, is this for clang warnings?
 votjakovr	sonney2k: yep
 shogun-notifier-	shogun: Kevin :develop * b9771de / / (5 files): https://github.com/shogun-toolbox/shogun/commit/b9771de1a416572f9a5e236c172854e1648da662
 shogun-notifier-	shogun: added QDiag and Jedi AJD methods
 shogun-notifier-	shogun: Kevin :develop * 42b7d5b / tests/unit/mathematics/ajd/JADiagOrth_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/42b7d5b82a905c7ab3407523324a1a3dd1087431
 shogun-notifier-	shogun: added JADiagOrth unit test
 shogun-notifier-	shogun: Kevin :develop * 4625e4e / / (9 files): https://github.com/shogun-toolbox/shogun/commit/4625e4ecd8da9cb114cee08fbc276419890a6345
 shogun-notifier-	shogun: fixed Jedi, added Jedi unit test and some cleanup to all the ajd headers
 shogun-notifier-	shogun: Kevin :develop * e33f051 / src/shogun/ (7 files): https://github.com/shogun-toolbox/shogun/commit/e33f051a95d3ddd8808f25526766936b61c1fb1c
 shogun-notifier-	shogun: coding style fixes in AJD
 shogun-notifier-	shogun: Kevin :develop * b6b17e6 / src/shogun/mathematics/ajd/ (6 files): https://github.com/shogun-toolbox/shogun/commit/b6b17e6f8948001b310b3910cdd3a11664ec4c31
 shogun-notifier-	shogun: ajd double -> float64_t
 shogun-notifier-	shogun: Kevin :develop * 380249f / tests/unit/mathematics/ajd/ (5 files): https://github.com/shogun-toolbox/shogun/commit/380249f55101e9d61903bd170efc36e7eb08a1e5
 shogun-notifier-	shogun: coding style changes in ajd unit tests
 shogun-notifier-	shogun: Kevin :develop * ee75cd5 / src/shogun/mathematics/ajd/FFDiag.cpp,src/shogun/mathematics/ajd/Jedi.cpp: https://github.com/shogun-toolbox/shogun/commit/ee75cd50962df9e5edaf9d213712af9d2331d096
 shogun-notifier-	shogun: ajd updated to cpp style loops
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * fc13467 / / (18 files): https://github.com/shogun-toolbox/shogun/commit/fc13467a125e150f9f2106f95a3bcef6aea82048
 shogun-notifier-	shogun: Merge pull request #1326 from pickle27/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: added QDiag and Jedi AJD methods
 shogun-buildbot	build #1133 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1133  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 245 seconds]
 shogun-buildbot	build #1134 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1134  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>, Kevin <kevinhughes27@gmail.com>
 shogun-notifier-	shogun: Roman Votyakov :develop * d864ec6 / src/shogun/ (7 files): https://github.com/shogun-toolbox/shogun/commit/d864ec61d49d8887f24256da2a17dcac51178d06
 shogun-notifier-	shogun: silence some warnings
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 67344b1 / src/shogun/ (7 files): https://github.com/shogun-toolbox/shogun/commit/67344b147f4a58ef8fbdf7b23065e08c27e87fcf
 shogun-notifier-	shogun: Merge pull request #1336 from votjakovr/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Fix various errors and warnings detected by clang.
@sonney2k	votjakovr, excellent patch!
@sonney2k	votjakovr, more of that kind please :)
 votjakovr	sonney2k: thank you :) ok, i'll keep going
-!- lisitsyn1 [~lisitsyn@213.87.128.66] has joined #shogun
-!- lisitsyn [~lisitsyn@213.87.128.66] has quit [Read error: Connection reset by peer]
-!- travis-ci [~travis-ci@ec2-23-20-234-231.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9705804
-!- travis-ci [~travis-ci@ec2-23-20-234-231.compute-1.amazonaws.com] has left #shogun []
@wiking	lisitsyn1: ok i think i'm almost there ;)
@wiking	good that i wrote modular interface handling modular in cmake ;P
 lisitsyn1	wiking: well it works when you just write the command here
 lisitsyn1	I just tried
@wiking	cool
 lisitsyn1	wiking: though we'd have to use sth like $PYTHON
 lisitsyn1	not just python blabla.py
 lisitsyn1	I guess
@wiking	tyeye of course
@wiking	but that's handled by FindPythonInterperter
@wiking	that defines ${PYTHON_EXECUTABLE}
@wiking	so that's all cool
@wiking	same with java and csharp...
@wiking	as well as ruby and the others
 lisitsyn1	add_test(NAME shit COMMAND "${PYTHON_EXECUTABLE} ${TEST_SCRIPT}")
 lisitsyn1	essentially that's it I think
@wiking	cool
@wiking	good
 lisitsyn1	may be some paths stuff
@wiking	yeye that's alright ;)
 lisitsyn1	wiking: can I help with anything else here then?
@wiking	i'm in the last stage of this refactoring
@wiking	yes it worked! \o/
@wiking	ok this is cooool
@wiking	cmake is really amazing ;)
@wiking	lisitsyn1: have i told you that i've created a .dmg osx package
@wiking	of shogun
 lisitsyn1	wiking: yeah with cpack
@wiking	a native osx package :)
@wiking	and it was just out of box
 lisitsyn1	I am lame with osx
@wiking	no worries
@wiking	it's just that after this
 lisitsyn1	how native it is?
@wiking	totally
 lisitsyn1	like deb for debian?
@wiking	the package is created by the native package maker of osx
 lisitsyn1	so you just download it
-!- lisitsyn1 is now known as lisitsyn
@wiking	double click
 lisitsyn	double click or whatever
@wiking	and tada
 lisitsyn	and it is here
@wiking	yes yes
 lisitsyn	:D
 lisitsyn	okay it would make Heiko happy
@wiking	cd /Users/wiking/shogun/build/examples/undocumented/libshogun && /usr/bin/c++    -g   -o CMakeFiles/basic_minimal.dir/basic_minimal.cpp.o -c /Users/wiking/shogun/examples/undocumented/libshogun/basic_minimal.cpp
@wiking	so now i have this ;P
@wiking	ah shit i have to fix unit-test flags
@wiking	just a sec
@wiking	ok that's not generated yet with all the compiler flags
@wiking	lisitsyn: yeah i mean after this we can setup our own repos for rpm, deb
@wiking	and just fucking upload there the nightlies
 lisitsyn	wiking: is there exe?
@wiking	lisitsyn: ?
@wiking	you mean if we could use MSVC?
@wiking	:)
 lisitsyn	wiking: some setup.exe for poor windows users?
@wiking	lisitsyn: yes yes
@wiking	NSIS
@wiking	generator
 lisitsyn	I feel sorry people use windows but .exe stuff would be cool still
@wiking	lisitsyn: http://www.cmake.org/Wiki/CMake:Component_Install_With_CPack
@wiking	lisitsyn: check the screenshots
@wiking	;)
@wiking	i've already defined the components
@wiking	so that's done ;P
@wiking	make package creates libshogun libshogun_headers and <whatever>_modular_interface packages
@wiking	or of course a monolitic tar.gz/bz2
@wiking	couldnt test it yet on a deb machine
@wiking	as i dont have access to it now
@wiking	anyhow we should have sooooonish the make tests ;P
@wiking	lisitsyn: ah if u wanna play around: find some cool cmake scripts on github and elsewhere to detect compiler flags
@wiking	you know for optimizations
@wiking	like is sse2 available et
@wiking	etc
 lisitsyn	wiking: okay I am on it
 lisitsyn	wiking: well
@wiking	for sure there's heaps
 lisitsyn	sse
 lisitsyn	I would just let compiler decide
@wiking	and i've even saw a cpuid.c based cmake script
 lisitsyn	really
 lisitsyn	compilers are ok already
 lisitsyn	they know what cpu it is
 lisitsyn	wiking: I think we should drop that thing at all
@wiking	so go with the
@wiking	-native
@wiking	-march=native ?
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 lisitsyn	wiking: yeah I'd do that
@wiking	kk
@iglesiasg	hello hello
 lisitsyn	wiking: I'll check what native skips
@wiking	mmm i wonder what detection i still miss then from ./configure
@wiking	ok cool i'll finish now the unit testing
 lisitsyn	sonney2k: do you think we need these CPU deals?
 lisitsyn	iglesiasg: hey
@wiking	and then go back to make tests
@wiking	lisitsyn: ah there's one task... octave_modular
@wiking	lisitsyn: where the fuck the created modular interface binary should be installed
@wiking	and how we can find that out from cmake :P
 lisitsyn	oh okay
 lisitsyn	let me check that
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun ["Fallen asleep!"]
@wiking	lisitsyn: what do u think about having gmock/gtest in cmake with http://www.cmake.org/cmake/help/v2.8.8/cmake.html#module%3aExternalProject
@wiking	?
 lisitsyn	wiking: let me recall how I did that in tapkee
@wiking	although i should somehow enable the case where one has already the gmock/gtest localhost... so one does not really need to have internet connection for having unit testing
 lisitsyn	wiking: I wasn't very satisfied with gtest finder btw
 lisitsyn	I found a few finders and they all were a bit weird
@wiking	lisitsyn: ah yeah they are shit
@wiking	i didnt even bothered
@wiking	lisitsyn: but as u can see with ExternalProject we can just tell cmake to download the src from code.google.com
 lisitsyn	wiking: yes
 lisitsyn	wiking: what about trying some default location or user defined dir
 lisitsyn	else download
@wiking	yeah something like that
@sonney2k	wiking, lisitsyn yeah -march=native but IIRC we needed -msse2 -msse3 -msse or so too - better check
@wiking	sonney2k: what about -fvectorize-tree?
 lisitsyn	wiking: sonney2k: we should revise flags not included to O3
@sonney2k	and also warning flags
@sonney2k	some of these don't exist on some compilers
@wiking	sonney2k: although that is enabled in clang in -O3
 shogun-buildbot	build #1135 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1135  blamelist: Soeren Sonnenburg <sonne@debian.org>, Roman Votyakov <votjakovr@gmail.com>
@wiking	lisitsyn: gcc -v -Q -O3 -march=native --help=target
@wiking	lisitsyn: all the sse instructions are enabled that are available for my cpu
 lisitsyn	wiking: well all SSEs and AVX
 lisitsyn	and mtune is correct
 lisitsyn	not all SSEs though
 lisitsyn	SSE5
 lisitsyn	:D
 lisitsyn	what is SSE5
@wiking	dunno
 lisitsyn	is it supported by any processor?
 lisitsyn	ah whatever
 lisitsyn	wiking: anyway I see most of the things are here already
 lisitsyn	so not sure it makes a lot of sense
 lisitsyn	to tune stuff
@wiking	lisitsyn: ok let's go with "-march=native"
@wiking	and if somebody has a better idea
@wiking	he can contribute
@wiking	lisitsyn sonney2k do we want that in DEBUG mode as well?
@wiking	or let's go on with the DISABLE_OPTIMIZATION option and then we won't have that
@sonney2k	wiking, we also need support for generic cpu flags as in -O2 and no further tuning
@sonney2k	wiking, I would always keep -g
 lisitsyn	wiking: I guess that's done through custom targets
 lisitsyn	like release debug
@wiking	lisitsyn: no not really ;)
@wiking	lisitsyn: one has to do that
@wiking	lisitsyn: realase by default won't have -g i think
 lisitsyn	wiking: we can change it
@wiking	and realase will have -O(something)
@wiking	lisitsyn: yep indeed
@wiking	but this "-march=native" should be possible to disable
@wiking	so i'll add a cmake variable
@wiking	DISABLE_OPTIMIZATIONS
@wiking	or something like that
@sonney2k	wiking, please make it have -g always
@wiking	sonney2k: o
@wiking	k
@sonney2k	if someone wants to strip of symbols he can do it later with strip
@sonney2k	iglesiasg, I figured that doing
@sonney2k	    model = TwoStateModel.simulate_data(num_examples, example_length, num_features, num_noise_features)
@sonney2k	    sosvm = DualLibQPBMSOSVM(model, model.get_labels(), 5000.0)
@sonney2k	is enough to trigger the issue
@iglesiasg	sonney2k: oh, I see
@iglesiasg	sonney2k: did you see if it also appears in libshogun interface?
@sonney2k	iglesiasg, no didn't
@wiking	is this broken
@wiking	classifier_nearest_centroid.cpp
@wiking	?
@wiking	seems so
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
@sonney2k	iglesiasg, any ideas how this is possible?
@wiking	sonney2k lisitsyn would u mind if test would be built by make command?
 lisitsyn	wiking: why?
@wiking	one one could disable example build
@wiking	lisitsyn: http://stackoverflow.com/questions/733475/cmake-ctest-make-test-doesnt-build-tests
@wiking	coz it's tricky ;)
@wiking	although i can add that trick...
@iglesiasg	sonney2k: not really, this was actually the party I studied and fixed something last week
@iglesiasg	sonney2k: it seems I have to check it further
 lisitsyn	wiking: crazy!
@sonney2k	iglesiasg, I mean doing
@wiking	lisitsyn: indeed
@sonney2k	    CTwoStateModel* tsm = new CTwoStateModel();
@sonney2k	    CHMSVMModel* model = tsm->simulate_data(100,250,10,2);
@sonney2k	    CStructuredLabels* labels = model->get_labels();
@sonney2k	    CDualLibQPBMSOSVM* sosvm = new CDualLibQPBMSOSVM(model, labels, 5000.0);
@sonney2k	vs
@sonney2k	    model = TwoStateModel.simulate_data(num_examples, example_length, num_features, num_noise_features)
@sonney2k	    sosvm = DualLibQPBMSOSVM(model, model.get_labels(), 5000.0)
@sonney2k	should not make a difference
@iglesiasg	sonney2k: aah ok that the issue doesn't appear in C++
@iglesiasg	sonney2k: I read as you didn't check that
@sonney2k	iglesiasg, sure I did
@sonney2k	iglesiasg, but it does not appear
@sonney2k	there
@sonney2k	but just python
@iglesiasg	understood
@sonney2k	but why???
@iglesiasg	it shouldn't matter indeed
@iglesiasg	sonney2k:  do you find weird the model.get_labels() thing?
@iglesiasg	instead of doing something like
@iglesiasg	Labels labels = model.get_labels()
@iglesiasg	DualLibQPBMSOSVM(model, labels, 5000.0)
@iglesiasg	arggh, labels = model.get_labels()
@wiking	lisitsyn: so it's either the trick or the default stuff... i think on some level having the example built by default will somehow make people aware if there was really something going wrong with the modifications
 lisitsyn	wiking: yeah
 lisitsyn	may be it makes sense to build everything
@wiking	lisitsyn: i mean if u disalbe BUILD_EXAMPLES variable in cmake then one can turn it off ;)
 lisitsyn	yeah
@wiking	but i'll leave that option turned ON by default
-!- zxtx [~zv@rrcs-76-79-81-162.west.biz.rr.com] has joined #shogun
@wiking	ok i don't know how to make make test more verbose
 lisitsyn	wiking: what verbosity?
@wiking	ok no worries i've figured it out
@wiking	woah output looks cool
 lisitsyn	wiking: like ctest -VV?
@wiking	lisitsyn: http://pastebin.com/zTXTpJHW
@wiking	solution for more verbose log: http://stackoverflow.com/questions/5709914/using-cmake-how-do-i-get-verbose-output-from-ctest
 lisitsyn	wiking: ctest can also send reports and etc
 lisitsyn	no idea if we can use it
@wiking	lisitsyn: yeah i saw
@wiking	well at least we have the option for it
@wiking	none the less
@wiking	it's working
@wiking	;)
@wiking	lisitsyn: do u know how to group ctest?
 lisitsyn	wiking: group?
@wiking	so that i have like libshogun-example and then under that i have the various tests
 lisitsyn	ahh
 lisitsyn	no I don't know how this is done
@wiking	nevermind it's good like this
@wiking	i'll add all the example runs with ctest
@wiking	as well as integration test
-!- lisitsyn [~lisitsyn@213.87.128.66] has left #shogun []
--- Log closed Thu Aug 01 00:00:56 2013
