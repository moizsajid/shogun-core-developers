--- Log opened Wed Aug 17 00:00:09 2016
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 04e3f7e / src/shogun/io/streaming/InputParser.h,src/shogun/io/streaming/ParseBuffer.h: https://github.com/shogun-toolbox/shogun/commit/04e3f7e53bd1a69a142a4c89d3a250e4c9ce0f24
 shogun-notifier-	shogun: Add c++11 based implementation for threading in InputParser and ParseBuffer
 shogun-notifier-	shogun: Viktor Gal :feature/windows * abee797 / src/shogun/lib/Time.cpp,src/shogun/lib/Time.h: https://github.com/shogun-toolbox/shogun/commit/abee797846e6fba73b5cd52579907659bfb02213
 shogun-notifier-	shogun: Fix struct timeval definition for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 79a3dbc / src/shogun/mathematics/ajd/FFDiag.cpp,src/shogun/mathematics/ajd/JediDiag.cpp: https://github.com/shogun-toolbox/shogun/commit/79a3dbc8ed7f0a72069ae525b5f92d9e63fb5bbc
 shogun-notifier-	shogun: Fix implementation where runtime variable was used for array size on the stack
 shogun-notifier-	shogun: use SGMatrix or SGVector instead
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 97af9bf / src/shogun/features/StringFeatures.cpp,src/shogun/io/SGIO.cpp: https://github.com/shogun-toolbox/shogun/commit/97af9bfcf3d3d97a2e1ee437bd37085fbbd18278
 shogun-notifier-	shogun: Add MSVC implementation of directory listing to StringFeatures
 shogun-notifier-	shogun: Viktor Gal :feature/windows * eadd291 / src/shogun/lib/external/PMurHash.h: https://github.com/shogun-toolbox/shogun/commit/eadd29171efaaaa916d07ef20de1ae00ece0bc41
 shogun-notifier-	shogun: Use uint32_t for MurMurHash3 when MSVC defines it
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 28a0160 / src/shogun/io/SGIO.h: https://github.com/shogun-toolbox/shogun/commit/28a0160ac69d4bd80325b61025f5dee906faf386
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 1649cf5 / / (9 files): https://github.com/shogun-toolbox/shogun/commit/1649cf57d75ceb9809580507fcd3e3522a08f30d
 shogun-notifier-	shogun: Fix unit tests for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * b997a73 / CMakeLists.txt,cmake/external/GoogleTestNMock.cmake: https://github.com/shogun-toolbox/shogun/commit/b997a7303c44d2e8a97860e4c6378eacb91ae529
 shogun-notifier-	shogun: Fix unit test framework compiler flags
 shogun-notifier-	shogun: Viktor Gal :feature/windows * c1b2115 / appveyor.yml,tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/c1b21156f96c0199fc610cee895490347879fade
 shogun-notifier-	shogun: [WIP] fix unit test discovery on windows
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 549d97a / src/shogun/base/Parallel.cpp: https://github.com/shogun-toolbox/shogun/commit/549d97a1c7cbc370b0284f47371b44cf895b678c
 shogun-notifier-	shogun: Fix assertation in Parallel::set_num_threads
-!- travis-ci [~travis-ci@ec2-54-224-54-119.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/152865513
-!- travis-ci [~travis-ci@ec2-54-224-54-119.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 1e85d2f / appveyor.yml: https://github.com/shogun-toolbox/shogun/commit/1e85d2f55a1d1623257ea1975d11b54c38edc82a
 shogun-notifier-	shogun: Add appveyor.yml for windows CI
 shogun-notifier-	shogun: and where we go
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 7dec0b6 / CMakeLists.txt,cmake/external/MSIntTypes.cmake: https://github.com/shogun-toolbox/shogun/commit/7dec0b6efdc55d2abaaf59ef8b5a4eb41b23bff9
 shogun-notifier-	shogun: Update MSIntTypes repo location
 shogun-notifier-	shogun: only use MSIntTypes when VS version < 11.0
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 09fa117 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/09fa117a81ed6c47f94ef51722976c8a44dcbfd0
 shogun-notifier-	shogun: Add cmake detection for CxaDemangle
 shogun-notifier-	shogun: Viktor Gal :feature/windows * e319419 / CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/e319419b3b1f4400312504d891d137f7d5813fe9
 shogun-notifier-	shogun: Set properly the compiler flags for visual studio
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 252e2ba / src/shogun/classifier/vw/cache/VwNativeCacheReader.h: https://github.com/shogun-toolbox/shogun/commit/252e2ba9a47aa93fe9a9318ba6861e29328eb7d4
 shogun-notifier-	shogun: Add portable packed attribute implementation
 shogun-notifier-	shogun: VwNativeCacheReader uses __attribute__((__packed__)) GNUC extension
 shogun-notifier-	shogun: this patch provides the equivalent implementation for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * ac8b5e1 / src/shogun/ (3 files): https://github.com/shogun-toolbox/shogun/commit/ac8b5e1d1a198c34d73de445c141e4fd0f3a8a0e
 shogun-notifier-	shogun: Resolve using reserved variable names in MSVC
 shogun-notifier-	shogun: "far and near were built-in compiler keywords back in the 16-bit days."
 shogun-notifier-	shogun: undefining them when needed
 shogun-notifier-	shogun: [WIP] Fix macro va_args counter macros for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * d45d097 / src/shogun/distance/Distance.cpp,src/shogun/kernel/Kernel.cpp: https://github.com/shogun-toolbox/shogun/commit/d45d097f33d581a03e4a77cb6177d6dc250ee83e
 shogun-notifier-	shogun: Properly guard with HAVE_PTHREAD all implementation that requires pthread
 shogun-notifier-	shogun: Viktor Gal :feature/windows * cff09d7 / src/shogun/io/streaming/InputParser.h,src/shogun/io/streaming/ParseBuffer.h: https://github.com/shogun-toolbox/shogun/commit/cff09d7d078257ee191614273aec123e1d399662
 shogun-notifier-	shogun: Add c++11 based implementation for threading in InputParser and ParseBuffer
 shogun-notifier-	shogun: Viktor Gal :feature/windows * b835c30 / src/shogun/lib/Time.cpp,src/shogun/lib/Time.h: https://github.com/shogun-toolbox/shogun/commit/b835c30c133b1ee2ed2ae237fa4122fbcc950ed0
 shogun-notifier-	shogun: Fix struct timeval definition for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * df65fd2 / src/shogun/mathematics/ajd/FFDiag.cpp,src/shogun/mathematics/ajd/JediDiag.cpp: https://github.com/shogun-toolbox/shogun/commit/df65fd26212b7556563b4f48d6ec05aab01f5771
 shogun-notifier-	shogun: Fix implementation where runtime variable was used for array size on the stack
 shogun-notifier-	shogun: use SGMatrix or SGVector instead
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 5b51290 / src/shogun/features/StringFeatures.cpp,src/shogun/io/SGIO.cpp: https://github.com/shogun-toolbox/shogun/commit/5b51290ffcd5c6146bbacb38511f97785c8cccc5
 shogun-notifier-	shogun: Add MSVC implementation of directory listing to StringFeatures
 shogun-notifier-	shogun: Viktor Gal :feature/windows * ad647ba / src/shogun/lib/external/PMurHash.h: https://github.com/shogun-toolbox/shogun/commit/ad647baa55722b8c8a64ac1dffdc4f7079aad012
 shogun-notifier-	shogun: Use uint32_t for MurMurHash3 when MSVC defines it
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 27e7d45 / src/shogun/io/SGIO.h: https://github.com/shogun-toolbox/shogun/commit/27e7d4542556a938bb234208c3c4dc2cd33ec651
 shogun-notifier-	shogun: Use strncpy_s instead of strncpy when compiling with MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 38b95a3 / src/shogun/mathematics/linalg/internal/implementation/ (17 files): https://github.com/shogun-toolbox/shogun/commit/38b95a3bd32f39a4d545080442957cf3d57ae8ea
 shogun-notifier-	shogun: Replace enum with Backend in the linalg template args
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 69e6350 / appveyor.yml,tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/69e6350c1638c4048a9e9c19a0d093a23c92104b
 shogun-notifier-	shogun: [WIP] fix unit test discovery on windows
 shogun-notifier-	shogun: Viktor Gal :feature/windows * b298da1 / src/shogun/base/Parallel.cpp: https://github.com/shogun-toolbox/shogun/commit/b298da10cb2fc48f87fc9bf29f73ac65cfa026ae
 shogun-notifier-	shogun: Fix assertation in Parallel::set_num_threads
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- sanuj [~sanuj@117.204.245.188] has joined #shogun
-!- sanuj [~sanuj@117.204.245.188] has quit [Ping timeout: 252 seconds]
-!- sanuj [~sanuj@117.204.245.188] has joined #shogun
 sanuj	wiking, do you know if it's possible to set a breakpoint in a ruby script while debugging using gdb?
@wiking	sanuj, http://lmgtfy.com/?q=ruby+script+while+debugging#
-!- travis-ci [~travis-ci@ec2-54-242-68-98.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/152923077
-!- travis-ci [~travis-ci@ec2-54-242-68-98.compute-1.amazonaws.com] has left #shogun []
 sanuj	wiking, i had already tried those debuggers
 sanuj	they are not helping me narrow down the problem
 sanuj	i want to see what is wrong with swig generated wrappers
 sanuj	the bug is exactly like this one
 sanuj	http://stackoverflow.com/questions/15197131/ruby-and-swig-typeerror-cant-convert-nil-into-string
@wiking	sanuj, have you tried #swig (oftc) or their mailing list?
 sanuj	wiking, shall i ask them on their mailing list?
@wiking	idk
 sanuj	wiking, you are online on #swig?
@wiking	i think so
 sanuj	kk
-!- sanuj [~sanuj@117.204.245.188] has quit [Ping timeout: 264 seconds]
-!- sanuj [~sanuj@117.204.245.188] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/windows * f39bfcf / src/shogun/ (20 files): https://github.com/shogun-toolbox/shogun/commit/f39bfcf5e4f0203144aa64b67d1885238fa5e51f
 shogun-notifier-	shogun: Fix headers when compiling with MSVC
 shogun-notifier-	shogun:   * dont include <unistd.h>, <sys/time.h>, <sys/mman.h>
 shogun-notifier-	shogun:   * include <windows.h> in commons.h with NOMINMAX defined
 shogun-notifier-	shogun:   * include <io.h>
 shogun-notifier-	shogun:   * fix missing ssize_t definition
 shogun-notifier-	shogun: Viktor Gal :feature/windows * c62e642 / src/shogun/base/SGObject.h: https://github.com/shogun-toolbox/shogun/commit/c62e64284dff026cc129f097b67f4484cdcfe2b8
 shogun-notifier-	shogun: [WIP] Fix macro va_args counter macros for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 5c2681c / src/shogun/distance/Distance.cpp,src/shogun/kernel/Kernel.cpp: https://github.com/shogun-toolbox/shogun/commit/5c2681c2c5a3569878a2b599efdcc9f2d13d8b33
 shogun-notifier-	shogun: Properly guard with HAVE_PTHREAD all implementation that requires pthread
 shogun-notifier-	shogun: Viktor Gal :feature/windows * e4d6eb3 / src/shogun/io/streaming/InputParser.h,src/shogun/io/streaming/ParseBuffer.h: https://github.com/shogun-toolbox/shogun/commit/e4d6eb321ddfbf2fcf24724750e2d9224b1c4cc9
 shogun-notifier-	shogun: Add c++11 based implementation for threading in InputParser and ParseBuffer
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 31e0be4 / src/shogun/lib/Time.cpp,src/shogun/lib/Time.h: https://github.com/shogun-toolbox/shogun/commit/31e0be418ade116b57380486e2faf56b9368d1f3
 shogun-notifier-	shogun: Fix struct timeval definition for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * d3d7832 / src/shogun/lib/Signal.cpp,src/shogun/lib/Signal.h: https://github.com/shogun-toolbox/shogun/commit/d3d783202022aa114f8535069bce8a340fd0c17e
 shogun-notifier-	shogun: Add MSVC implementation to Signal class
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 286dbc6 / src/shogun/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/286dbc6505e6026963cd5e1c472abbd2302a2eff
 shogun-notifier-	shogun: Link libshogun with winmm when compilng with MSVC
 shogun-notifier-	shogun: required for timeGetTime
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 7426ed2 / examples/undocumented/libshogun/ (2 files): https://github.com/shogun-toolbox/shogun/commit/7426ed2f15c9a70a33f735ddd2d7bb3be5ccfe4a
 shogun-notifier-	shogun: Fix examples to compile with MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 3e96714 / / (9 files): https://github.com/shogun-toolbox/shogun/commit/3e96714f29408737936cf91b16da1bf4e057ca64
 shogun-notifier-	shogun: Fix unit tests for MSVC
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 25789b8 / CMakeLists.txt,cmake/external/GoogleTestNMock.cmake: https://github.com/shogun-toolbox/shogun/commit/25789b86a024d27a001bcbd4bfd1494ea87d7366
 shogun-notifier-	shogun: Fix unit test framework compiler flags
 shogun-notifier-	shogun: Viktor Gal :feature/windows * 578e709 / appveyor.yml,tests/unit/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/578e7090e7cbed789fb558f59b2f4a52492dc72c
 shogun-notifier-	shogun: [WIP] fix unit test discovery on windows
 shogun-notifier-	shogun: Viktor Gal :feature/windows * cca55bd / src/shogun/base/Parallel.cpp: https://github.com/shogun-toolbox/shogun/commit/cca55bd8e29ddfc31fe4865b3085db0214ff191a
 shogun-notifier-	shogun: Fix assertation in Parallel::set_num_threads
-!- travis-ci [~travis-ci@ec2-54-242-68-98.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/152937768
-!- travis-ci [~travis-ci@ec2-54-242-68-98.compute-1.amazonaws.com] has left #shogun []
-!- sanuj [~sanuj@117.204.245.188] has quit [Ping timeout: 250 seconds]
-!- sanuj [~sanuj@117.204.245.188] has joined #shogun
 sanuj	lisitsyn, hey
 sanuj	Saurabh7, hey
-!- mizari [~mizari@95-174-213-100.nts.su] has joined #shogun
 Saurabh7	sanuj: yo
 sanuj	Saurabh7, how are you planning to submit your code to google?
 Saurabh7	sanuj: uhm not sure, mayb some filter on PRs
 sanuj	okay
@wiking	Saurabh7, are you by any chance here?
-!- sanuj [~sanuj@117.204.245.188] has quit [Ping timeout: 252 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- sanuj [~sanuj@117.204.245.188] has joined #shogun
-!- mizari [~mizari@95-174-213-100.nts.su] has quit [Read error: Connection reset by peer]
-!- mizari [~mizari@95-174-213-100.nts.su] has joined #shogun
-!- mizari [~mizari@95-174-213-100.nts.su] has quit [Quit: Leaving]
 CaBa	RealFeatures is CDenseFeatures<float64_t>?
 lisitsyn	yes
 CaBa	in the example below, where it says 'shogun will now own the matrix created' - what does that mean? 'matrix' is not a pointer that could be free. will SG call free_data() of the SGMatrix object once the 'features' object is SG_UNREFed? or what does 'own' imply here?
 CaBa	http://www.shogun-toolbox.org/doc/en/latest/developer_tutorial.html
 CaBa	lisitsyn: thanks
 lisitsyn	CaBa: I think that's rather legacy
 lisitsyn	it was raw pointer long ago
 sanuj	lisitsyn, hey
 lisitsyn	sanuj: hey
 sanuj	lisitsyn, so i'll give you links that i'll be submitting to google tomorrow
 sanuj	you can review them?
 lisitsyn	yeah probably
 sanuj	lisitsyn, 23rd is the last date
 lisitsyn	what links?
 lisitsyn	source code?
 sanuj	PRs
 lisitsyn	ok
 sanuj	or is there a better way to submit code?
 sanuj	i read this from their guidelines
 sanuj	and they also wanted me to discuss this with my mentors
 lisitsyn	no idea, you've got to follow their guides
 sanuj	okay
 CaBa	lisitsyn: ok, so the objects like SGString or SGMatrix, which are usually passed by value, aren't touched by shoguns garbage collection?
 lisitsyn	CaBa: they are SGReferencedData
 lisitsyn	they are refcounted, copy ctor +1, dtor -1
 lisitsyn	once nobody is using it, it is deleted
 CaBa	lisitsyn: so in SGString for example, the 'char * string' member of that would be freed upon refcount==0?
 lisitsyn	CaBa: not SGString but SGVector and SGMatrix
 CaBa	O.O
 lisitsyn	SGString is always copied
 CaBa	lisitsyn: confusing. is all that memory logic documented somewhere.
 CaBa	s/.$/?/
 lisitsyn	CaBa: somewhere in code I guess
 lisitsyn	not sure
 CaBa	lisitsyn: upon construction, the object has refcount 1?
 lisitsyn	it is zero by default
 CaBa	lisitsyn: so if i create an SGVector, pass it to shogun by value, it is copied (0->1), shogun object dies and deconstructs the copy (1->0), my original version is now an empty SGVector?
 lisitsyn	yeah but this doesn't happen
 lisitsyn	auto x = SGVector();
 lisitsyn	here x will have refcount=1
 lisitsyn	because of once happened copy
 CaBa	oh
 CaBa	my incomplete knowledge of c++ then :P
-!- Hieronymous [~sudarshan@122.169.143.61] has joined #shogun
 CaBa	lisitsyn: hm. the copy constructor isn't called in your example
 CaBa	lisitsyn: also why would you write 'auto x SGVector();' instead of 'SGVector x;'?
 lisitsyn	CaBa: either operator= if it is implemented or copy ctor
-!- sanuj [~sanuj@117.204.245.188] has quit [Quit: Leaving]
 lisitsyn	that's fine as well
 CaBa	lisitsyn: so in any case refcount is +1'ed?
 lisitsyn	yeah except dtor
 CaBa	lisitsyn: is that any different for pointers? if i use 'SGVector * x = new SGVector()'?
 lisitsyn	CaBa: you can't forget deleting it
 lisitsyn	it is what you easy do with pointers
 CaBa	lisitsyn: your example above - it doesn't involve the assignment operator or the copy operator... i still don't get how it get's its refcount upped ;)
 CaBa	copy ctor even...
 lisitsyn	auto x = SGVector();
 lisitsyn	1. SGVector x is constructed
 lisitsyn	2. rhs SGVector is constructed
 lisitsyn	3. x is assigned to the other one
 lisitsyn	when assignment happens operator= is called
 lisitsyn	if it is not here, copy ctor is called
 CaBa	lisitsyn: https://ideone.com/Gtmr8x
 lisitsyn	in this case it looks optimized out
 lisitsyn	not sure
 CaBa	lisitsyn: compiler can't optimize out printing a message
 lisitsyn	sure
 lisitsyn	I mean auto x = Example(); is reduced to Example x;
 CaBa	20:42:28 < lisitsyn> that's fine as well
 CaBa	;-)
 lisitsyn	yeah what's the question anyway?
 CaBa	lisitsyn: i don't understand where the +1 happens upon 'SGVector foo;'
 lisitsyn	it doesn't happen
 lisitsyn	it would happen if you copy it somewhere
 CaBa	    SGVector<char> vec;
 CaBa	    std::cout << "REF COUNT " << vec.ref_count() << std::endl;
 CaBa	this yields '1'
 lisitsyn	ah
 lisitsyn	I missed the line
 lisitsyn	it is referenced on creation once
 lisitsyn	in SGReferencedData ctor
 CaBa	lisitsyn: that's where i was looking, too, but there it says 'm_refcount = new RefCount(0);'
 CaBa	ah...
 CaBa	and then comes ref()
 lisitsyn	ref();
 CaBa	....
 CaBa	lisitsyn: i see... so point is that everything that is passed through pointers and not by value will not undergo the ++ref - and therefore be destroyed once the object that got the pointer is UNREF'ed...
 CaBa	so wherever something in shogun takes something by value, it won't eat up passed objects upon destruction, when a pointer get's passed i need to REF myself before if i intend to use the object afterwards?
 lisitsyn	CaBa: yeah if you need it, it is guaranteed that it will be available
 CaBa	lisitsyn: thanks for shedding some light
 lisitsyn	you're welcome
-!- Hieronymous [~sudarshan@122.169.143.61] has quit [Remote host closed the connection]
--- Log closed Thu Aug 18 00:00:10 2016
