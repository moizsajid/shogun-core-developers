--- Log opened Wed Jun 22 00:00:10 2011
@sonney2k	blackburn, again good luck today and nite all
 blackburn	sonney2k: thanks :)
 blackburn	good night
-!- f-x [~user@117.192.212.107] has quit [Remote host closed the connection]
-!- blackburn [~blackburn@188.168.4.110] has quit [Read error: Operation timed out]
-!- in3xes [~in3xes@180.149.49.227] has quit [Ping timeout: 263 seconds]
-!- f-x [~user@117.192.200.211] has joined #shogun
 alesis-novik	sonney2k, are you around?
@sonney2k	alesis-novik, whats up?
@sonney2k	f-x, around?
 f-x	sonney2k: here
 alesis-novik	I was wondering if a) the current git version links properly
@sonney2k	f-x, did you read my comment about merging with pull --rebase?
 f-x	sonney2k: yes.. will do that from now.. i thought there was no difference until now..
 alesis-novik	and b) what's the recommended use of SGVector/SGMatrix as parameters or returned stuff
@sonney2k	f-x, yeah everyone had to learn that lesson
@sonney2k	f-x, please don't forget  the minor fixes I requested when merging your patch
@sonney2k	alesis-novik, compiling to test
@sonney2k	alesis-novik, b) just    SGVector<float64_t> foo(); and void foo(SGVector<int32_t> x);
 alesis-novik	sonney2k, I get that part, but what about memory allocation and shallow copy vs deep copy
@sonney2k	alesis-novik, never copy if possible
@sonney2k	and allocation with new[]
@sonney2k	alesis-novik, it compiles...
 alesis-novik	So the idea is to rely on the user not to break stuff
@sonney2k	maybe you  need to run git clean -dfx
@sonney2k	yes. there is no alternative when one does not want to copy all the time
@sonney2k	in the end it is like using java and references all the time
 alesis-novik	sonney2k, ok, I'll get my code to do that. Ideally I'll also use SGVector and SGMatrix for fields as well, seems a lot less messy
 f-x	sonney2k: In StreamingStringFeatures, there will only be one string right?
 f-x	it seems many functions from StringFeatures won't apply
 f-x	like get_transponse etc
 f-x	*transpose
 f-x	and what about the subsets?
-!- blackburn [~blackburn@188.168.2.21] has joined #shogun
 blackburn	it's f-ing over!
 alesis-novik	Congratulations blackburn
 alesis-novik	sonney2k, yep, that fixed it
 blackburn	alesis-novik: thanks!
 blackburn	sonney2k: are we interested in R? ;)
 blackburn	I know two guys - one interested in R, one interested in common lisp :D
 bettyboo	<:*)
@sonney2k	blackburn, congrats!
@sonney2k	blackburn, yes we have R support :)
 blackburn	sonney2k: thanks :)
 bettyboo	ha ha
@sonney2k	blackburn, hope you passed with some good mark
 blackburn	sonney2k: 4/5
@sonney2k	blackburn, as you intended
@sonney2k	great
 blackburn	well it wasn't really fair :) it could be 5/5
 blackburn	the problem is - I know a little *real* math like I do with dim.reduction now and I simply can't 'rote learn' these useless things :D
@sonney2k	blackburn, ahh doesn't matter - what matters is that you passed good enough and that you have now spare time
@sonney2k	f-x, no subsets just the string as is
 blackburn	sonney2k: and in fact I'm not going to have 'red diploma' - 'summa cum laude' analogue - so 4 is good for me too :D
 bettyboo	;>
 blackburn	this week I will finish LMDS!
-!- f-x [~user@117.192.200.211] has quit [Ping timeout: 260 seconds]
 blackburn	sonney2k: I think I should revise my plan for mid-term
-!- sploving [~root@124.16.139.196] has joined #shogun
 alesis-novik	Anyone know if the SGVector and SGMatrix things are working with octave_modular?
 blackburn	I don't
-!- in3xes [~in3xes@180.149.49.227] has joined #shogun
-!- f-x [~user@117.192.195.207] has joined #shogun
 sploving	hello blackburn
-!- in3xes [~in3xes@180.149.49.227] has quit [Quit: Ooops..!!]
 alesis-novik	Bah, everything was working, then I upgraded to use SGVector and SGMatrix and now I'm getting Seg faults... This is frustrating
-!- heiko [~heiko@infole-06.uni-duisburg.de] has joined #shogun
-!- sploving [~root@124.16.139.196] has left #shogun []
-!- in3xes [~in3xes@180.149.49.227] has joined #shogun
-!- f-x [~user@117.192.195.207] has quit [Ping timeout: 260 seconds]
-!- f-x [~user@117.192.198.147] has joined #shogun
-!- f-x is now known as Guest90839
-!- Guest90839 [~user@117.192.198.147] has quit [Ping timeout: 260 seconds]
 alesis-novik	Weird. When testing sampling from Gaussian in c++ it seems to work fine. In octave it gives weird values(with stuff like e-158)
-!- f-x` [~user@117.192.210.16] has joined #shogun
-!- heiko [~heiko@infole-06.uni-duisburg.de] has quit [Ping timeout: 258 seconds]
-!- heiko [~heiko@infole-06.uni-duisburg.de] has joined #shogun
-!- in3xes_ [~in3xes@59.163.196.121] has joined #shogun
-!- in3xes [~in3xes@180.149.49.227] has quit [Ping timeout: 240 seconds]
-!- in3xes_ is now known as in3xes
-!- heiko [~heiko@infole-06.uni-duisburg.de] has quit [Ping timeout: 258 seconds]
-!- f-x` [~user@117.192.210.16] has quit [Remote host closed the connection]
-!- heiko [~heiko@infole-06.uni-duisburg.de] has joined #shogun
-!- heiko [~heiko@infole-06.uni-duisburg.de] has quit [Ping timeout: 258 seconds]
 alesis-novik	sonney2k, are you around?
 alesis-novik	when you read this, could you tell me if its better to try not to copy to SGVector/Matrix or be consistent.
 alesis-novik	In Gaussian in get_mean I could just assign it, but in get_cov I reconstruct the covariance, thus it falls on the user to take care of memory
 alesis-novik	so is it better to use different things or just copy in both?
-!- heiko [~heiko@infole-06.uni-duisburg.de] has joined #shogun
 alesis-novik	Also, I think I've build up  a nice big patch. Should I just submit a pull request now, so I can start doing small incremental changes from now on?
@sonney2k	Re
@sonney2k	alesis-novik, try to avoid copying whenever reasonably possilbe
@sonney2k	if not possible mark it in the documentation
@sonney2k	*and* set the do_free flag to true
@sonney2k	alesis-novik, and yes send a pull request
@sonney2k	alesis-novik, what about octave-modular - use git blame and give me bug reports don't wine alone in the dark ;-)
 CIA-32	shogun: Baozeng Ding master * rd75d754 / examples/undocumented/java_modular/check.sh : change check.sh to accept an optional argument (.java file to check) - http://bit.ly/kEJiwe
 alesis-novik	sonney2k, I was wondering if there's a specific reason why 1-by-1 matrices are not valid for SGMatrix when using python-modular?
@sonney2k	alesis-novik, with 1-by-1 you mean a matrix with 1 col / 1 row?
 alesis-novik	sonney2k, yes
@sonney2k	alesis-novik, then you must be doing sth. wrong
@sonney2k	they are valid
@sonney2k	x=array([[1.0]])
@sonney2k	y=RealFeatures(x)
@sonney2k	y.get_feature_matrix()
 alesis-novik	Ok, I will try that. Ah, I might have forgotten to add another set of []. Silly me.
@sonney2k	that explains it
@sonney2k	the other thing is a vector
 alesis-novik	sonney2k, do you by any chance remember the octave equivalents for the SGVector and SGMatrix?
@sonney2k	same thing
@sonney2k	or do yo mean how to write it in octave?
@sonney2k	[1,2,3] (vector)
@sonney2k	[1,2,3;4,5,6] (matrix
@sonney2k	)
 alesis-novik	sonney2k, thanks. I think there is still something wrong with octave, but I'll check and submit any possible bugs after the pull request (so there's actually code to reproduce what I have done)
@sonney2k	alesis-novik, I have a clear idea what could have happened with octave.
@sonney2k	since we now don't always *copy* it might be that we overwrite sth
@sonney2k	err free memeory that shouldn't be
 alesis-novik	I still need to clean up the code after the SGVector and SGMatrix changes
-!- heiko [~heiko@infole-06.uni-duisburg.de] has quit [Quit: Leaving.]
 alesis-novik	Hmm, just running init_shogun then quit produces seg fault in octave
@sonney2k	alesis-novik, that is `normal'
@sonney2k	bug in octave unfortunately
@sonney2k	this bug can only be fixed in octave 3.4 and when someone fixes swig's octave bindings for that version
 blackburn	normal segfault *lol*
@sonney2k	basically loading multiple extensions in octave that depend on each other somehow makes octave crash on exit
 alesis-novik	sonney2k, one more question about SGMatrix :) If I use set_cov(SGMatrix<float64_t> cov), but don't actually store the cov value, should I set the do_free flag on exit?
 bettyboo	alesis-novik, lolomat
@sonney2k	but apart from that it will work
@sonney2k	alesis-novik, what do you do with cov when not storing it internally?
 alesis-novik	sonney2k, I'm decomposing it and storing eigenvectors and eigenvalues
@sonney2k	blackburn, any idea? I didn't think of this case though alesis-novik's proposal of setting do_free makes sense
 blackburn	sonney2k: don't understand, where it could be set?
 blackburn	inside set_cov()?
@sonney2k	yes
 blackburn	but what if we don't want to free it
 blackburn	?
@sonney2k	?
 blackburn	I mean we have some matrix and passing it to that method
@sonney2k	ok and then?
 blackburn	what if we don't want to free that matrix?
@sonney2k	btw if he sets do_free it won't work
 blackburn	hmm
@sonney2k	it is a local variable
 blackburn	ah yes
 blackburn	don't know for sure..
@sonney2k	alesis-novik, for now just document this in set_cov - we have to think about ways to resolve this for the general case
 alesis-novik	sonney2k, just note it in the description?
@sonney2k	blackburn, it is actually only a problem for swig related functions- because these will always pass *copies* of the objects
@sonney2k	alesis-novik, yes
@sonney2k	baby crying... will be back later.
 alesis-novik	blackburn, so, how are you feeling with all the exams done?
 blackburn	alesis-novik: very nice :) btw did you traveled home after exams?
 alesis-novik	I did last week. Found out the exam results while there. Had to travel around Lithuania as well (to visit everyone I wanted)
 blackburn	are you in uk now?
 alesis-novik	blackburn, yeah, back in Edinburgh
-!- f-x [~user@117.192.212.119] has joined #shogun
 blackburn	alesis-novik: have you any studies now?
 alesis-novik	The rent contract is until September and I need to take care of stuff to do with my coming PhD (get a new place, open bank account, etc.)
 blackburn	oh so you graduated already?
@sonney2k	looks like the baby gave up uhmmm...
@sonney2k	f-x, would you mind submitting the small patch now?
 alesis-novik	blackburn, I'm done with my exams, but not exactly graduated yet
 f-x	sonney2k: ok
 alesis-novik	Oh boy, this will get confusing fast... The constructor for Gaussian takes both mean and cov. We can just point the m_mean field where we need, but we will still have to decompose the covariance.
@sonney2k	alesis-novik, hmmhh then be consistent and delete[] it?
@sonney2k	at least that is what all the label, features, ... objects do: you set_* and then on destruction of the objects the set objects are destroyed
 alesis-novik	So decompose cov, copy mean and delete everything on destruction?
@sonney2k	the only other alternative I can think of is a CSGMatrix (or so) that is derived from SGObject and does proper reference counting
@sonney2k	alesis-novik, decompose cov, delete[] cov
@sonney2k	store the mean ptr and delete[] mean on destruction
@sonney2k	(no copy of mean vec)
 CIA-32	shogun: Shashwat Lal Das master * r5367d36 / src/libshogun/features/StreamingFeatures.h : Changed return type of get_next_example to bool in StreamingFeatures. - http://bit.ly/lytU0S
 alesis-novik	sonney2k, ok, but I think the idea of a Vector and Matrix derived from SGObject would make things a lot clearer (though quite a bit would need to be rewritten and having no experience I have no idea how well would that work with swig)
 blackburn	these SGtypes issues hurts :D
@sonney2k	blackburn, well it is the no copy / copy issue
@sonney2k	alesis-novik, the problem is that it comes with a huge overhead
@sonney2k	alesis-novik, if you used SimpleFeatures for cov you wouldn't have this problem
@sonney2k	though it is an unecessary overhead ...
 blackburn	sonney2k: do you know some physics machine learning dataset?
 alesis-novik	Still, this is nothing compared to the software they use at CERN. That thing is horrible.
@sonney2k	alesis-novik, please use the delete[] approach. we really everywhere assume that the set_* ptr is delete[] on object destruction so it makes sense to immediately delete it if not needed.
 blackburn	sonney2k: nevermind, another question: what is the license should be for dataset in shogun-data?
@sonney2k	sonney2k, spring glass?
@sonney2k	blackburn, great question some CC-* one I guess
 blackburn	sonney2k: I suggested one student with physics major to find some physics-machine-learning task and add it to shogun
 blackburn	in applications or examples
@sonney2k	blackburn, good examples are always welcome
 blackburn	sonney2k: if you will have ideas about physics (I know it is crazy a little) - tell me
 alesis-novik	sonney2k, should I use free_vector()/free_matrix()? That seems to clean up nicely
@sonney2k	blackburn, what do you think? if we would require that do_free is properly set - we always know when we 'own' the matrix
@sonney2k	blackburn, however when doing return some_sgmatrix we would need to clear that flag
 blackburn	should we always call free_* for that?
 alesis-novik	Currently, I did as you suggested sonney2k: delete via free_matrix and set flat to true on returning copied values
@sonney2k	blackburn, yeah in destructor we would then always put a free_* in there instead of delete[]
 blackburn	looks good to me
@sonney2k	alesis-novik, keep it like this for now - the other thing requires quite a big overhaul we cannot do just now
 alesis-novik	sonney2k, well, it does work properly (at least in c++), so I see no problem
 blackburn	but we should be carefully whenever do_free or not, right?
@sonney2k	this all could actually be sufficient
@sonney2k	blackburn, yeah. I mean if someone does set_feature_matrix(mat) with mat not having do_free set the caller has to clean up
@sonney2k	if he sets the thing we clean up
@sonney2k	if we return the matrix we have to unset the do_free flag
 blackburn	I see
@sonney2k	if we return a copy we have to set the do_free flag and copy
@sonney2k	(copy or new object that is)
@sonney2k	so that seems to cover all cases
 blackburn	looks like
@sonney2k	alesis-novik, what do you think? could this work?
 alesis-novik	sonney2k, sounds good
 alesis-novik	by unset the flat you mean set it to false?
@sonney2k	yes
 alesis-novik	Forgive my inexperience with git, but does rebase destroy the order of commits and thus should always be force pushed to the branch?
 blackburn	not it won't destroy commits
 alesis-novik	not the commits themselves, but the order
 blackburn	why it should?
 alesis-novik	because first applies the commits to the merged branch and applies your commits on top of that
 blackburn	I don't know :(
@sonney2k	alesis-novik, yeah you shouldn't push this as it indeed changes the order of commits
@sonney2k	the way I use it is have 2 branches (master aka upstream) and one devel branch
@sonney2k	and then I pull from upstream into master and then checkout devel and rebase devel with master
 f-x	sonney2k: how should a function like obtain_by_sliding_window() for a streaming string class behave? should it return the new features as an SGString* variable?
@sonney2k	f-x, don't do more for strings except getting the raw sting
@sonney2k	string
@sonney2k	no fancy stuff
@sonney2k	just the string you read
 f-x	sonney2k: ok.. so basically just the reading part differs
 f-x	from SimpleFeatures
@sonney2k	f-x, it is basically simplefeatures without the atod parsing
 f-x	sonney2k: right.. so all the bit representation stuff is 'fancy' for now?
@sonney2k	f-x, well you will need alphabet and potentially a remapping from ascii -> binary
 f-x	sonney2k: and a check during reading whether each char belongs to the alphabet?
@sonney2k	f-x, I am afraid yes (alphabet provides a function for that) - I would use alphabet to create a histogram and then check if that is invalid
 f-x	okay.. i'll see what functions from stringfeatures i need to retain..
 f-x	so after each line read, call add_string_to_histogram(), and then check_alphabet()?
 CIA-32	shogun: Sergey Lisitsyn master * rb38b907 / (4 files): ST* transition for Distribution base class and Histogram - http://bit.ly/lbaXIN
@sonney2k	f-x, that makes at least sense for strings > 256 chars or so in length. belwo that checking each char manually is probably faster
 f-x	sonney2k: and we have something like SGString<ST> fv as a member? or should ST* be used? (like it is done for single_string now)
 f-x	i mean is there a reason for the different datatypes for features and single_string in StringFeatures?
@sonney2k	f-x, I don't understand - just return a SGString<ST> - same type as you expect the inputs in (char,int,float...)
 f-x	sonney2k: alright.. didn't understand why single_string was of ST* type in StringFeatures.. never mind
@sonney2k	ignore the single string and fancy stuff
 blackburn	sonney2k: how to delete current line in vim? sorry for lame question :)
@sonney2k	blackburn, dd
 blackburn	sonney2k: ok how to undo
 blackburn	:D
 blackburn	u
 blackburn	sonney2k: vim is wonderful!
@sonney2k	try gf when the cursor sits on a file name
@sonney2k	or try k when you are on e.g printf
 blackburn	gf is not working :(
 blackburn	says can't find file distributions/Distribution.h in path
 blackburn	I guess it should be set up somehow
@sonney2k	blackburn, you need to be in libshogun for that
@sonney2k	in that path
 blackburn	i see
 CIA-32	shogun: Sergey Lisitsyn master * r1c13dc4 / (2 files in 2 dirs): ST* transition for PPWM - http://bit.ly/jpUiKZ
@sonney2k	blackburn, or do :set path=libshogun;.;/usr/include or so
 blackburn	sonney2k: will do tomorrow
 blackburn	sonney2k: distributions are working
 blackburn	except LinearHMM
 blackburn	will fix tomorrow too
@sonney2k	blackburn, I am still working on sparse features...
 blackburn	sonney2k: oh.. how much code you have to fix here?!
@sonney2k	blackburn, typemaps won't work for some reason
@sonney2k	not being applied
 blackburn	I see
 blackburn	okay, will go to bed now, see you
 blackburn	sonney2k: nite
-!- blackburn [~blackburn@188.168.2.21] has quit [Quit: Leaving.]
@sonney2k	blackburn, bye
--- Log closed Thu Jun 23 00:00:13 2011
