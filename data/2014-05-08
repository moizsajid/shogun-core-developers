--- Log opened Thu May 08 00:00:39 2014
-!- thoralf [~thoralf@91-65-139-113-dynip.superkabel.de] has joined #shogun
 thoralf	Hello.
-!- thoralf [~thoralf@91-65-139-113-dynip.superkabel.de] has quit [Client Quit]
-!- HeikoS [~heiko@0541877d.skybroadband.com] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- lisitsyn [~qdrgsm@80.252.20.67] has joined #shogun
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
-!- pickle27f [~pickle27@216.191.231.218] has joined #shogun
-!- pickle27f [~pickle27@216.191.231.218] has quit [Quit: This computer has gone to sleep]
-!- lisitsyn [~qdrgsm@80.252.20.67] has quit [Quit: Leaving.]
-!- rho__ [~quassel@41.199.144.205] has quit [Ping timeout: 252 seconds]
-!- Theo_ [8ca3fe9e@gateway/web/freenode/ip.140.163.254.158] has quit [Ping timeout: 240 seconds]
-!- khalednasr [~k.nasr92@41.69.186.232] has joined #shogun
-!- HeikoS [~heiko@0541877d.skybroadband.com] has quit [Quit: Leaving.]
-!- khalednasr [~k.nasr92@41.69.186.232] has quit [Quit: Leaving]
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-jftezjniyrvpjxep] has quit [Quit: Connection closed for inactivity]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
-!- pickle27f [~pickle27@216.191.231.218] has joined #shogun
-!- pickle27f [~pickle27@216.191.231.218] has quit [Quit: This computer has gone to sleep]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :develop * 8f7847e / CMakeLists.txt,cmake/FindPythonLibs.cmake: https://github.com/shogun-toolbox/shogun/commit/8f7847e0abd4aa8f8b29d0266d09a5fd79827ac3
 shogun-notifier-	shogun: Fix python interpreter and library version detection
 shogun-notifier-	shogun: Viktor Gal :develop * 704010f / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/704010f5533b8f3a92d1c1668e8cfb09f3333758
 shogun-notifier-	shogun: Enable ccache and caching the output of it on travis
 shogun-notifier-	shogun: Viktor Gal :develop * e2dfa74 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/e2dfa74b9446e9d73aaf001a4e10812e5e6fca69
 shogun-notifier-	shogun: Switch to anaconda when building python3.3
 shogun-notifier-	shogun: remove caching in travis as it is only available for private repositories
 shogun-notifier-	shogun: Viktor Gal :develop * a0ed9b2 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/a0ed9b2a21c43b021f19562dffbb429dde7a1613
 shogun-notifier-	shogun: travis: add fast_finish option and fix anaconda path
 shogun-notifier-	shogun: Viktor Gal :develop * 7012034 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/7012034969c7346f2a22e490ce5a98fd0da7e0b4
 shogun-notifier-	shogun: travis: upgrade miniconda version and activate conda environment
 shogun-notifier-	shogun: Viktor Gal :develop * 93fec06 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/93fec060f8645a91e91f601e3aab34478805e42b
 shogun-notifier-	shogun: travis specify PYTHON_LIBRARY for cmake when using miniconda
 shogun-notifier-	shogun: Viktor Gal :develop * 3466b62 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/3466b622383826f8bb2b5084edb668d3e07f91f3
-!- utsavjain [~utsav@1.22.62.109] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-237-181-185.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/24678573
-!- travis-ci [~travis-ci@ec2-54-237-181-185.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-82-254-151.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/24678573
-!- travis-ci [~travis-ci@ec2-54-82-254-151.compute-1.amazonaws.com] has left #shogun []
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has joined #shogun
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has quit [Remote host closed the connection]
-!- Saurabh7 [~Saurabh7@115.248.45.78] has quit [Ping timeout: 252 seconds]
@iglesiasg	Hey guys
 shogun-buildbot	build #295 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/295  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- witness___ [uid10044@gateway/web/irccloud.com/x-pelnjoseqmuphbue] has joined #shogun
-!- Saurabh7 [~Saurabh7@115.248.45.78] has joined #shogun
-!- Saurabh7 [~Saurabh7@115.248.45.78] has quit [Quit: Leaving]
-!- thoralf [~thoralf@91-66-177-150-dynip.superkabel.de] has joined #shogun
 thoralf	Heyhey.
-!- HeikoS [~heiko@0541877d.skybroadband.com] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-cillcushvctzxqji] has joined #shogun
-!- HeikoS [~heiko@0541877d.skybroadband.com] has quit [Ping timeout: 240 seconds]
-!- Saurabh7 [~Saurabh7@115.248.45.78] has joined #shogun
-!- HeikoS [~heiko@ra-vpn125.ra-vpn.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- wiking_ [~wiking@info2k1.hu] has joined #shogun
@HeikoS	wiking_: hi! thanks a lot for the travis fix!
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: khalednasr :develop * 1a9cb16 / / (8 files): https://github.com/shogun-toolbox/shogun/commit/1a9cb169a161110f9865939d360ca90ffb8d6121
 shogun-notifier-	shogun: added more unit tests for neuralnets
 shogun-notifier-	shogun: Heiko Strathmann :develop * c08dc9d / / (8 files): https://github.com/shogun-toolbox/shogun/commit/c08dc9d1db4451c92554530d1c44c69dca2c950c
 shogun-notifier-	shogun: Merge pull request #2210 from khalednasr/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: added more unit tests for neuralnets
 shogun-notifier-	shogun: Wu Lin :develop * bfabcfa / / (8 files): https://github.com/shogun-toolbox/shogun/commit/bfabcfaadc8f0fd8e6b90a14b67f1c172eaaf122
 shogun-notifier-	shogun: rename LogitPiecewiseBoundLikelihood class
 shogun-notifier-	shogun: Heiko Strathmann :develop * bdaf87e / / (8 files): https://github.com/shogun-toolbox/shogun/commit/bdaf87edcfa03273a16426c861f43e38e92d912f
 shogun-notifier-	shogun: Merge pull request #2214 from yorkerlin/rename_PiecewiseBoundLikelihood
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: rename LogitPiecewiseBoundLikelihood class
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 252 seconds]
 shogun-buildbot	build #657 of FC19 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20libshogun/builds/657  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>, khalednasr <k.nasr92@gmail.com>
 lambday	HeikoS: hey
@HeikoS	lambday: hey!
@HeikoS	just commented on your stuff
@HeikoS	lambday: really like it
@HeikoS	the traits
 lambday	HeikoS: checking your comment
 lambday	haha :D
@HeikoS	and the precompiler settings ... very nice
@HeikoS	lambday: green from my side, so please go ahead
 lambday	so we'd use it like cmake -DSetLinalgBackend=Eigen3 ..
 lambday	alright :)
 lambday	HeikoS: plus I was thinking that pulling out some things from SGVector and SGMatrix and use this linalg methods instead internally
 lambday	so users won't have to bother at all
 lambday	just a.dot(b) would work
 lambday	with whatever backend they choose
 shogun-buildbot	build #2276 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/2276  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	lambday: yes very nice!
@HeikoS	lambday: that was the original motivation in fact
@HeikoS	lambday: all these ugly half-baked operations in there should go
-!- PirosB3_ [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
@HeikoS	lambday: like eigenvectors in SGMatrix, just so not clean
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 240 seconds]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
@HeikoS	lisitsyn: pls comment in the shogun-team mail
 lisitsyn	HeikoS:already :)
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
 lambday	HeikoS: sorry I got dc :(
 lambday	so I think it can be used like cmake -DSetLinalgLib=Eigen3 ..
 shogun-buildbot	build #658 of FC19 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20libshogun/builds/658
 lambday	just checked how to do that - total novice in cmake :D
 wiking_	lambday: do we really want compile time restriction on linalg engine?
 lambday	wiking_: I think its better otherwise its being too hard to maintain
 wiking_	lambday: mmm but having it compile time is really a big restriction
 wiking_	i mean it's just really fucking pain that one will have like
 wiking_	4 different packages
 wiking_	shogun-linalg-eigen
 wiking_	shogun-linalg-viennacl
 lambday	wiking_: only the global setting is set that way
 wiking_	etc.
 lambday	wiking_: we can use whatever we want in the code
 lambday	no matter what global setting was use
 lambday	used*
 wiking_	yeah but see having it as a configure parameter
 wiking_	it will make it compile time dependent
-!- wiking_ is now known as wiking
-!- wiking [~wiking@info2k1.hu] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- mode/#shogun [+o wiking] by ChanServ
 lambday	wiking: what's the restriction?
@wiking	lambday: just mentioned it above
@wiking	13:19 < wiking_> 4 different packages
@wiking	13:19 < wiking_> shogun-linalg-eigen
@wiking	13:19 < wiking_> shogun-linalg-viennacl
 lambday	wiking: well we do have checks for each of them whether they exist
@wiking	yes
@wiking	that's another story
@wiking	i'm just saying
 lambday	and if I write a code using sg_linalg->set_backend(Eigen3)
 lambday	then why can't we use -DSetLinalgBackend=Eigen3 instead?
@wiking	because that's runtime
@wiking	and what you are saying is compile time
 lambday	that's better isn't it
 lambday	performance wise
-!- Netsplit *.net <-> *.split quits: sonne|work, PirosB3
-!- PirosB3_ is now known as PirosB3
@wiking	what?
@wiking	i don't see why would there be performance difference
 lambday	no overhead of virtual calls
@wiking	if -DSetLinalgBackend == sg_linalg->set_backend(Eigen3
 lambday	wiking: I guess its better when the alternative looks like this - https://github.com/shogun-toolbox/shogun/pull/2209/files
 lambday	check LinearAlgebra.cpp line 80
 lambday	now if that has to be done just for dot product
 lambday	(and has to be done - for all PTYPES we need everything set)
 lambday	then its a total nightmare
 lambday	moving this pain in compile time is a better soln according to me
 lambday	the code will be small and simple
 lambday	whoa! sonney just added me to shogun maintainers :D
@HeikoS	lambday: congrats :)
 lambday	HeikoS: hehe thanks :D :D
 lambday	yooo
-!- Netsplit over, joins: sonne|work
 lambday	sonne|work: hey! :D
@HeikoS	wiking: so you think runtime solutions would be better?
@HeikoS	wiking: so we had a few examples where it showed an order of magnitude speedup if we dont do those calls.
 lambday	even in terms of code managing its super bad :(
@HeikoS	wiking: this wont happen on all systems in the same way, but still some evidence
@HeikoS	wiking: I agree its painful to re-compile if one wants to change backend though - however, will people (apart from developers) really do that?
@HeikoS	lambday: now you can join us reviewing patches haha ;)
 lambday	HeikoS: haha :D
 lambday	HeikoS: thanks man! writing my thank you mail
 lambday	HeikoS: well, re-compile is required only when we want to change the global setting
 lambday	and if say, we changed set_backend(Eigen3) to set_backend(ViennaCL) in shogun classes, we're gonna have to recompile anyway
 lambday	the users cannot use set_backend() from their code (and they shouldn't I guess - since as HeikoS said, we're not planning to be a linalg library :D)
 lambday	but they can use any explicit backend they want
@HeikoS	lambday: so just to get this right, changing the default global backend (by shogun user) require re-compile, same for changing say only the linear solve solver used everywhere
@HeikoS	lambday: but the shogun developers can use specific implementations if they want
@HeikoS	then those are fixed in shogun (and doe not require to re-compile things)
 lambday	HeikoS: you mean specific implementation, not using the global setting, right?
 lambday	it doesn't need to recompile
 lambday	once I write the code, its there in the binary which method its gonna call - Eigen3 one or ViennaCL one
 lambday	so changing global backend isn't gonna change that
 lambday	even a shogun user can use it this way
 lambday	impl<some-template-params, Backend::Eigen3>::method(..)
 lambday	we provide those other wrappers in src/linalg/modules for ease of use
 lisitsyn	argh I am sorry I am now folliwng that
 lisitsyn	so where do we stop lambday?
 lambday	lisitsyn: :D
 lisitsyn	impl<Backend>?
 lisitsyn	is this the best solution found so far?
 lambday	that's internal
 lambday	lisitsyn: wait let me show you
 lisitsyn	sure
 lambday	lisitsyn: https://github.com/lambday/shogun-linalg/blob/master/src/test.cpp#L31
 lambday	lisitsyn: see? no backend
 lambday	:D
 lambday	lisitsyn: I am just saying, that *if* someone wants to use a specific backend, he can
 lambday	irrespective of what global backend was set
 lambday	lisitsyn: even better, we're put this inside SGVector::dot - so users would just do v1.dot(v2)
 lisitsyn	okay actually I have some weak objections on that ;)
 lambday	lisitsyn: on which one?
 lisitsyn	'prefer non-member non-friend functions'
 lisitsyn	;)
 lisitsyn	about v1.dot(v2)
 lisitsyn	linalg::dot<float, SGVector<float> >(a, b);
 lisitsyn	can't we just infer these types?
 lisitsyn	why to put them here explicitly?
 lambday	lisitsyn: its because in linalg we're dealing with generic vectors and matrices
 lambday	lisitsyn: its going to be there already
 lisitsyn	ehmm why not
 lisitsyn	linalg::dot(a,b)
 lisitsyn	shouldn't it be just inferred from a and b?
 lambday	lisitsyn: specialization for each PTYPE?
 lambday	of course can be done
 lisitsyn	no
 lambday	overloaded methods?
 lisitsyn	template <typename T> void someMyFunc(T a);
 lisitsyn	someMyFunc(3);
 lisitsyn	calls with int
 lisitsyn	someMyFunc("fdfd");
 lisitsyn	calls with const char*
 lisitsyn	what restricts us to do the same thing?
 lambday	lisitsyn: I guess we can!
 lisitsyn	lambday: I see one thing
 lisitsyn	you need float
 lisitsyn	to do that just put a typedef to SGVector
 lisitsyn	typedef T ValueType;
 lisitsyn	so it would be like T::ValueType, T
 lambday	lisitsyn: where?
 lisitsyn	where T is SGVector<float>
 lambday	lisitsyn: oh in SGVector
 lambday	yeah
 lisitsyn	just inside SGVector
 lambday	that's best solution!
 lambday	same for SGMatrix
 lisitsyn	so we have
 lisitsyn	linalg::dot(a,b)
 lisitsyn	that's cleaner
 lambday	yep!
 lambday	great idea!
 lisitsyn	as for v1.dot(v2);
 lisitsyn	I think we don't need it
 lisitsyn	lets just keep sgvector clean
 lisitsyn	see how they did that in viennacl
 lambday	in SGVector we already have it
 lisitsyn	lets drop it ;)
 lambday	alrighty
 lisitsyn	I think it would be better this way
 lambday	cool!
 lambday	one problem though!
 lisitsyn	what's it?
 lambday	lisitsyn: ummm na its okay
 lambday	on second thought
 lisitsyn	we can also have functions like
 lisitsyn	fill(x, 0);
 lambday	lisitsyn: well, actually I wanted this to work with Eigen3::Matrix<...>, ViennaCL::matrix .... everything..
 lisitsyn	fills matrix/vector with specified value
 lisitsyn	and so on
 lambday	so the typedef thig would work there or not I was confused
 lambday	yeah
 lisitsyn	like
 lisitsyn	dot(Eigen3::Matrix, SGMatrix)
 lisitsyn	this way?
 lambday	nono
 lambday	some_method(Eigen3::Matrix, ...)
 lambday	I mean, internally we can totally use methods, move around objects from other libs
 lisitsyn	I lost it a bit
 lambday	e.g. get_cholesky().. method
 lisitsyn	do we put cholesky stuff to linalg as well?
 lambday	lisitsyn: that's the dream!
 lambday	:D
 lisitsyn	ok ok so
 lambday	I mean, we can use these methods to pass our local eigen3 matrices as well
 lisitsyn	yeah why not
 lambday	but Eigen3::MatrixBase has this Scalar, right?
 lambday	so that can be used as typefef
 lambday	def*
 lambday	not sure about ViennaCL
 lisitsyn	ah I see
 lisitsyn	so you mean they typedef their type
 lisitsyn	with different name
 lambday	yeah
 lisitsyn	viennacl should eigen3 compatible
 lisitsyn	so if they have Scalar
 lisitsyn	lets have Scalar as well
 lambday	yep that's better
 lisitsyn	if they are really different
 lisitsyn	well
 lambday	if something fails - compilation error!
 lambday	:D
 lisitsyn	no
 lisitsyn	we can actually select between Scalar or something else
 lisitsyn	some trickery
 lambday	actually shouldn't be a problem
 lisitsyn	what I am sure about is that we shouldn't put these types here
 lisitsyn	C++ has good thing on types for that
 lambday	which ones?
 lisitsyn	I mean it can infer types and we can typedef things
 lambday	yeah!
 lambday	I am sure that its a better way
 lisitsyn	so if we have template parameters we don't need to put them explicit
 lambday	just gotta make sure it works for those template <class Vector> type of things
 lambday	lisitsyn: viennacl calls this self_type
 lambday	no value_type
 lambday	lisitsyn: eigen3 calls scalar
 lisitsyn	lambday: ok so you need some selector
 lisitsyn	there is a way
 lambday	add another level
 lisitsyn	lambday: nah no no
 lisitsyn	lambday: you can do better
 lisitsyn	it looks like
 lisitsyn	dot<Either<T::Scalar,T::self_type>,T>
 lambday	ah IF thing
 lambday	yeah!
 lisitsyn	yeah we can do like that
 lambday	yep!
 lambday	BUT
 lambday	umm what about 3-4 backends?
 lisitsyn	I am not sure about details but should be solvable
 lambday	its gonna be a bit long
 lisitsyn	why?
 lisitsyn	what's gonna be long?
 lambday	this expression
 lambday	say some other library calls it ValueType
 lisitsyn	we just define some template struct
 lisitsyn	template <typename T> Scalar
 lisitsyn	and partially specialize for SGVector/Eigen3/ViennaCl
 lisitsyn	then we do
 lisitsyn	dot<Scalar<T>::type, T>
 lisitsyn	all you need to add a new type is to specialize Scalar thing
 sonne|work	wiking: op lambday ...
 lisitsyn	good enough? ;)
 lambday	lisitsyn: sounds great! let me try
 lambday	sonne|work: :D
 lisitsyn	lambday: you'd need template template though
 lisitsyn	ah no
 lisitsyn	:D
 lisitsyn	ok easy thing
 lambday	lisitsyn: what is it
 lambday	(btw I'm totally liking this :D)
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
 lisitsyn	template <template<class> class Storage, class Type> Scalar;
 lisitsyn	template <> Scalar<SGVector<T>> { typedef T Type; };
 lisitsyn	something like that?
 lisitsyn	could you try it so we can be sure it works
 lisitsyn	Eigen3 matrix is not a template of one parameter though
 lisitsyn	this sucks a bit
 lisitsyn	but I am pretty sure we would resolve it whatever shit it takes
 lambday	lisitsyn: yeah I am trying - I'm sure there must be some way
 lambday	variable template args
 lambday	lisitsyn:
 lambday	c++11
 lambday	so let it be like template <template<class,...> > struct Scalar
 lambday	then we specialize for SGVector, Eigen3Vector etc
 lisitsyn	ha yeah why not
 lambday	lisitsyn: let me try if it works
-!- HeikoS [~heiko@ra-vpn125.ra-vpn.ucl.ac.uk] has quit [Quit: Leaving.]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- HeikoS [~heiko@ra-vpn125.ra-vpn.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@ra-vpn125.ra-vpn.ucl.ac.uk] has quit [Quit: Leaving.]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
 shogun-buildbot	build #296 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/296  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>, khalednasr <k.nasr92@gmail.com>
-!- pickle27f [~pickle27@216.191.231.218] has joined #shogun
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 240 seconds]
-!- Saurabh7 [~Saurabh7@115.248.45.78] has quit [Read error: Connection reset by peer]
-!- Saurabh7 [~Saurabh7@117.246.229.143] has joined #shogun
-!- Saurabh7 [~Saurabh7@117.246.229.143] has quit [Ping timeout: 240 seconds]
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has quit [Ping timeout: 265 seconds]
-!- thoralf [~thoralf@91-66-177-150-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
-!- HeikoS [~heiko@ra-vpn53.ra-vpn.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- witness___ [uid10044@gateway/web/irccloud.com/x-pelnjoseqmuphbue] has quit [Quit: Connection closed for inactivity]
-!- thoralf [~thoralf@91-65-139-113-dynip.superkabel.de] has joined #shogun
 thoralf	Hello
 shogun-buildbot	build #113 of osx2 - python is complete: Failure [failed test python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20python/builds/113  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- pickle27_ [~pickle27@216.191.231.218] has joined #shogun
-!- pickle27f [~pickle27@216.191.231.218] has quit [Ping timeout: 258 seconds]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- HeikoS [~heiko@ra-vpn53.ra-vpn.ucl.ac.uk] has quit [Ping timeout: 258 seconds]
-!- HeikoS [~heiko@ra-vpn53.ra-vpn.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- pickle27_ [~pickle27@216.191.231.218] has quit [Quit: This computer has gone to sleep]
-!- utsavjain [~utsav@1.22.61.201] has joined #shogun
-!- HeikoS [~heiko@ra-vpn53.ra-vpn.ucl.ac.uk] has quit [Quit: Leaving.]
-!- pickle27f [~pickle27@216.191.231.218] has joined #shogun
-!- utsavjain1 [~utsav@1.22.61.201] has joined #shogun
-!- utsavjain [~utsav@1.22.61.201] has quit [Ping timeout: 250 seconds]
-!- thoralf [~thoralf@91-65-139-113-dynip.superkabel.de] has left #shogun ["Konversation terminated!"]
-!- thoralf [~thoralf@91-65-139-113-dynip.superkabel.de] has joined #shogun
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 thoralf	Hey iglesiasg
@iglesiasg	Hey thoralf
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
-!- thoralf [~thoralf@91-65-139-113-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- khalednasr [~k.nasr92@41.69.183.238] has joined #shogun
-!- utsavjain1 [~utsav@1.22.61.201] has quit [Ping timeout: 252 seconds]
--- Log closed Fri May 09 00:00:40 2014
