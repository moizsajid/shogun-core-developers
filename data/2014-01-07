--- Log opened Tue Jan 07 00:00:40 2014
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix-java_modular * 082d134 / src/interfaces/java_modular/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/082d134f17e9aea5844e1af60c75b1be93bedb28
 shogun-notifier-	shogun: rename shogun_jar.jar to shogun.jar if neccessary
-!- bb_ [458fc8de@gateway/web/freenode/ip.69.143.200.222] has quit [Ping timeout: 272 seconds]
-!- gsomix [~gsomix@188.168.14.35] has quit [Ping timeout: 260 seconds]
-!- gsomix [~gsomix@188.168.14.35] has joined #shogun
-!- travis-ci [~travis-ci@ec2-54-224-24-238.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Bj?rn Esser's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/16495678
-!- travis-ci [~travis-ci@ec2-54-224-24-238.compute-1.amazonaws.com] has left #shogun []
-!- FSCV [~FSCV@fixed-203-250-138.iusacell.net] has quit [Quit: Leaving]
-!- pickle27 [~kevin@192-0-136-118.cpe.teksavvy.com] has joined #shogun
 pickle27	what was the great step to reduce the footprint of the objects?
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- pickle27 [~kevin@192-0-136-118.cpe.teksavvy.com] has quit [Quit: Leaving]
-!- gsomix [~gsomix@188.168.14.35] has quit [Quit: Leaving]
-!- Muktabh [~Muktabh@122.177.34.246] has quit [Quit: Leaving]
-!- lisitsyn [~lisitsyn@31-28-48-250.clients.tlt.100megabit.ru] has quit [Ping timeout: 248 seconds]
-!- zxtx_ [~zv@c-98-223-196-32.hsd1.in.comcast.net] has joined #shogun
-!- Netsplit *.net <-> *.split quits: zxtx
 sonne|work	moin besser82!
-!- gsomix [~gsomix@188.168.14.35] has joined #shogun
 gsomix	good morning
 sonne|work	gsomix: moin moin
 besser82	sonne|work:  moin!!
 besser82	sonne|work: yesterday we stumbled into some weird, possibly swig-releated, thing with java_modular...
 sonne|work	besser82: could you please send a PR for that glob thing?
 sonne|work	besser82: looked more like you already had a shogun install
 sonne|work	and some conflict due to that..
 besser82	sonne|work:  hehe, yes, didn't mind that :-P
 besser82	sonne|work:  shogun-devel  :-P
 sonne|work	besser82: what?
 besser82	sonne|work:  I woud need to `yum erase shogun-devel`  ;)
 sonne|work	yes
 besser82	sonne|work:  lemme try again  ;)
 sonne|work	besser82: glob PR please :)
 besser82	sonne|work:  lemme double check, make some improve && PR is comming  ;)
 sonne|work	besser82: and?
 besser82	sonne|work:  doesn't work still  :(
 besser82	sonne|work:  but I think I found a fix  ;)
 sonne|work	doesn't work as in ?
 sonne|work	more verbose
 sonne|work	the glob should fix it
 besser82	sonne|work:  as in the manifest if empty then  :(
-!- gsomix [~gsomix@188.168.14.35] has quit [Read error: Connection reset by peer]
 adrin	Hey, good morning :) I came and noticed I've had messages, but my scroll history was too short here, so I've lost it. It should've been about my compile error, did anybody had a look at them?
 sonne|work	adrin: look at the channel logs from yesterday
 sonne|work	besser82: haha
 besser82	sonne|work:  which `haha`?
 sonne|work	besser82: manifest == empty
 besser82	sonne|work:  :-P
 adrin	sonney2k, I know I have an older shogun somewhere else, but it's a server that I can't touch it's packages, so I'm compiling everything for myself.
 sonne|work	adrin: we don't have a fix for that :(
 sonne|work	besser82: or do you?
 adrin	besser82 was going to work on it over the xmas holidays? :D :P
 sonne|work	adrin: not sure if he fixed that...
 besser82	adrin:  but unfortunately i'm not finished with that :(
 besser82	sonne|work:  not yet  :(
-!- lisitsyn [~lisitsyn@31-28-48-250.clients.tlt.100megabit.ru] has joined #shogun
 adrin	ah ok, as long as you're working in it, I can still have hope :P
 sonne|work	adrin: can't you compile on a system that doesn't have an old shogun pre-installed
 adrin	sonne|work, I can, I mean, I can at least try, but there's no point in doing so for me. All the systems that have enough RAM to load my data, are the servers which all already have the old version installed.
 sonne|work	adrin: then copy the install over once compiled :)
 adrin	sonne|work, then I need to update all the paths to shared objects in library binaries and executables once I move them to the new server. It doesn't seem to be a very feasible solution since I even have my custom gcc compiled in my home folder on the server :(
-!- Saurabh7 [~Saurabh7@59.88.38.193] has joined #shogun
 Saurabh7	hello
 Saurabh7	am i right to think that densefeature creates a new subset stack here: http://www.shogun-toolbox.org/doc/en/3.0.0/DenseFeatures_8cpp_source.html#l00029
 sonne|work	Saurabh7: yes
 sonne|work	adrin: yeah!
 Saurabh7	sonney2k, but when i use a different copy to add subset, the last subset seems to be the one i added to another
 Saurabh7	*copy of densefeature
 sonne|work	Saurabh7: yes... http://www.shogun-toolbox.org/doc/en/3.0.0/SubsetStack_8cpp_source.html#l00021
-!- Saurabh7 [~Saurabh7@59.88.38.193] has quit [Ping timeout: 272 seconds]
-!- Saurabh7 [~Saurabh7@59.88.38.193] has joined #shogun
 besser82	sonne|work:  got java_modular working!!!!  :D
 sonne|work	besser82: how?
 besser82	sonne|work:  PR is incomming in any minute  ;)
 besser82	sonne|work:  solution is quite simple  :)
 sonne|work	glob?
 besser82	sonne|work:  yes, glob, but not add_jar()
 sonne|work	well show me
 besser82	sonne|work:  just minute...
 Saurabh7	sonne|work, but isnt it inconsistent with what i am observing?I create two separate copies,but when I add subsets to those two in sucession ,the second one has last added subset of the first one....shouldnt they have separate stacks?
 sonne|work	Saurabh7: give us some minimal example - best a test so we can fix it!
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix-java_modular * 1453bd5 / examples/undocumented/java_modular/foo_uncompressed.str: https://github.com/shogun-toolbox/shogun/commit/1453bd52dad26c1602faab25588f45848672afa6
 shogun-notifier-	shogun: clean sparse file from testsuite
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix-java_modular * 5cfeb89 / examples/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/5cfeb892028f7ae80073305ad2e081567f0705c2
 shogun-notifier-	shogun: fix inclusion of subdirs
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix-java_modular * e699ddb / / (2 files): https://github.com/shogun-toolbox/shogun/commit/e699ddbe5fe94cc8933c4060588451e6d8b4eb23
 shogun-notifier-	shogun: fix build of java_modular with OpenJDK
 besser82	sonne|work:  https://github.com/shogun-toolbox/shogun/pull/1809
@wiking	besser82: it's enough to have PR or (excluding or) feature branch
@wiking	as travis will run on either of them
 besser82	wiking:  i know, but sonne|work wanted PR asap  ;)
 besser82	wiking:  for Travis PR XOR branch is enough, i know  ;)
 sonne|work	besser82: so you do it manually now right?
 besser82	sonne|work:  yes, but that is basically the same add_jar() does  ;)
 besser82	sonne|work:  just less complicated...
 besser82	sonne|work:  add_jar() && SWIG don't play well with oneanother on a few platforms
@wiking	besser82: but that's just weird :)
 besser82	wiking:  what is weird?!?
 besser82	wiking:  on some platforms javac/jar cannot handle glob in manifest-file...
-!- travis-ci [~travis-ci@ec2-50-16-165-187.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Bj?rn Esser's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/16519056
-!- travis-ci [~travis-ci@ec2-50-16-165-187.compute-1.amazonaws.com] has left #shogun []
 besser82	sonne|work, wiking, lisitsyn: Objections on merging https://github.com/shogun-toolbox/shogun/pull/1809 ?
 besser82	sonney2k:  ^^^
 shogun-notifier-	shogun: Bj?rn Esser :develop * 1453bd5 / examples/undocumented/java_modular/foo_uncompressed.str: https://github.com/shogun-toolbox/shogun/commit/1453bd52dad26c1602faab25588f45848672afa6
 shogun-notifier-	shogun: clean sparse file from testsuite
 shogun-notifier-	shogun: Bj?rn Esser :develop * 5cfeb89 / examples/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/5cfeb892028f7ae80073305ad2e081567f0705c2
 shogun-notifier-	shogun: fix inclusion of subdirs
 shogun-notifier-	shogun: Bj?rn Esser :develop * e699ddb / / (2 files): https://github.com/shogun-toolbox/shogun/commit/e699ddbe5fe94cc8933c4060588451e6d8b4eb23
 shogun-notifier-	shogun: fix build of java_modular with OpenJDK
 shogun-notifier-	shogun: Viktor Gal :develop * cbf1553 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/cbf155368ec14c0c08e97aeb2573d5bcbd15bd06
 shogun-notifier-	shogun: Merge pull request #1809 from shogun-toolbox/feature/fix-java_modular
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fix build of java_modular with OpenJDK
@wiking	besser82: it's just weird because i thought that this would be handled by cmake's add_jar
@wiking	that's why
 besser82	wiking:  unfortunately not  :(  add_jar() just makes like `echo $passed_sources > manifest`...
@wiking	besser82: imo that should be fired as a bug then for cmake
 besser82	wiking:  the problem with that is:  the sources manifest is created, BEFORE swig creates those *.java and that's why the glob won't be handled properly
 besser82	wiking:  it's a known issue of UseJava.cmake
@wiking	besser82: then it's a bug :)
@wiking	should b fixed in cmake
-!- Saurabh7 [~Saurabh7@59.88.38.193] has quit [Ping timeout: 248 seconds]
 besser82	wiking:  yes, it's a known bug, but noone see a reason to fix it
@wiking	:<
 besser82	wiking:  because fixing is actually much harder, that using that proposed workaround
-!- Broschki [b01a8cc8@gateway/web/freenode/ip.176.26.140.200] has joined #shogun
 sonne|work	besser82: anyway not a bug related to openjdk
 besser82	sonne|work: right  ;)
 besser82	sonne|work: shall i merge?!?
 sonne|work	besser82: didn't wiking already?
 sonne|work	he did...
 besser82	sonne|work:  didn't see  :(
 sonne|work	besser82: btw what is the CMAKE_CURRENT_SRCDIR?
 besser82	sonne|work:  That is the correct var evaluating to the dir which contains the currently processing CMakeLists
 sonne|work	besser82: then we have the same issue in the root CMakeLists.txt
 besser82	sonne|work:  CMAKE_SRCDIR *always* refers to src-toplevel  ;)
 sonne|work	then I don't get the difference...
 besser82	sonne|work:  so in toplevel-cmake-file both are fine  ;)
 sonne|work	ahh no all good
 sonne|work	forget it
 sonne|work	understood
 besser82	sonne|work:  kk
 sonne|work	besser82: btw any idea where to change the include order so that -I./ is first and fixes adrin's and our issues with the currently installed thing?
 sonne|work	besser82: btw :) https://buildd.debian.org/status/package.php?p=shogun
 besser82	sonne|work:  :D
 sonne|work	besser82: it took mips 6h 34m to build libshogun
 besser82	sonne|work:  forget about overriding the systems include-dir  :-P
 sonne|work	not really and override it is just a missing -I. in the front
 sonne|work	but I have no idea where includes are set
 besser82	sonne|work:  that problem with inference on installed shogun is *simply* a design-failure of whole build
 besser82	sonne|work:  && include-logic
 besser82	sonne|work:  you cannot override the fact -I/usr/local/include -I/usr/include is *always* prefered
 sonne|work	besser82: well that -I would quickly fix it - so until we have sth proper (aka your cmake stuff) lets fix the issue
 sonne|work	besser82: no it is not preferred
 sonne|work	include order matters
 besser82	sonne|work:  nope
 besser82	sonne|work:  system-include dirs are always prefered
 besser82	sonne|work:  that are hardcoded in compiler
 besser82	sonne|work:  one cannot change that, but recompiling the compiler
 besser82	sonne|work:  include-order matters when it comes to "extra" include-dirs
 sonne|work	besser82: I don't think that is true
 besser82	sonne|work:  believe me
 sonne|work	I think -I foo is looked up first
 besser82	sonne|work:  nope
 sonne|work	ok let me try it for real
 besser82	sonne|work:  but i can hot-fix that include-shaitz anyways  ;)
 besser82	sonne|work:  just need ~30 mins or so...
 sonne|work	besser82: it really is as I said
 sonne|work	besser82: try yourself
 sonne|work	#include <bla.h>
 sonne|work	#include <stdio.h>
 sonne|work	int main(int argc, char** argv)
 sonne|work	{
 sonne|work	    printf("%d\n", bla);
 sonne|work	}
 sonne|work	then put
 sonne|work	const int bla=1;
 sonne|work	into bla.h
 sonne|work	and compile with gcc -I. foo.c
 sonne|work	and put one in e.g. /usr/local/include/bla.h with
 sonne|work	const int bla=2;
 sonne|work	besser82: if you compile without -I. you have the issue
 sonne|work	if you use -I. all good
 sonne|work	so besser82 / wiking - we just need that...
 sonne|work	shogun-buildbot: force build --branch=develop 'deb3 - modular_interfaces'
 shogun-buildbot	build forced [ETA 46m34s]
 shogun-buildbot	I'll give a shout when the build finishes
 besser82	sonne|work:  shall I do quick&&dirty || clean_approach ?
 besser82	sonne|work:  first takes a minute, latter ~ 30 mins
 besser82	sonne|work: which compiler did you use?!?
 besser82	wiking:  ^^^  clean or f*cked-up approach?
 besser82	sonne|work:  currently doing the clean approach  :D
 besser82	sonne|work:  just a moment...  will be finished in short
-!- travis-ci [~travis-ci@ec2-54-227-3-61.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/16522413
-!- travis-ci [~travis-ci@ec2-54-227-3-61.compute-1.amazonaws.com] has left #shogun []
-!- Broschki [b01a8cc8@gateway/web/freenode/ip.176.26.140.200] has quit [Quit: Page closed]
 shogun-buildbot	Hey! build deb3 - modular_interfaces #2129 is complete: Success [build successful]
 shogun-buildbot	Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2129
 adrin	besser82, I guess at least according to the gcc documentation, sonne|work is right: http://gcc.gnu.org/onlinedocs/cpp/Search-Path.html
 adrin	it says: You can add to this list with the -Idir command line option. All the directories named by -I are searched, in left-to-right order, before the default directories. The only exception is when dir is already searched by default. In this case, the option is ignored and the search order for system directories remains unchanged.
-!- lisitsyn [~lisitsyn@31-28-48-250.clients.tlt.100megabit.ru] has left #shogun []
 besser82	sonney2k, sonne|work, wiking: nearly finished with that include-scope;  doing final local testbuild, then push to featurebranch
 sonne|work	besser82: cool cool
 besser82	sonne| and I did it the clean way  ;)
 sonne|work	besser82: show me :D
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix_includes * c0f9dc2 / / (1592 files): https://github.com/shogun-toolbox/shogun/commit/c0f9dc28db650b1d9e751aa364d7a01836b7942f
 shogun-notifier-	shogun: removed `shogun/`-prefix from #include
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix_includes * ab20c83 / doc/ (3 files): https://github.com/shogun-toolbox/shogun/commit/ab20c832c3654f215ae0b7d6a2e5f485e7c63370
 shogun-notifier-	shogun: adapted README_developer.md for new include-scope
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix_includes * b2b773b / / (12 files): https://github.com/shogun-toolbox/shogun/commit/b2b773bae4fa90cee2db27803790beebb31695e7
 shogun-notifier-	shogun: adapt CMake-includes for new include-scope
 besser82	sonne|work:  ^^^ there it goes  :D
 besser82	sonne|work:  and Travis does it's work: https://travis-ci.org/shogun-toolbox/shogun
 besser82	sonne|work:  PR:  https://github.com/shogun-toolbox/shogun/pull/1810
@wiking	besser82: why is this include form better?
 besser82	wiking:  because this way one has a real distinction between build/src-tree and system's include-dir
 besser82	wiking:  the old style was dependent on the strict and correct order of the -I
 sonne|work	besser82: what is ${CMAKE_CURRENT_BINARY_DIR} ?
 besser82	wiking:  the new one will need explicit -I to work;  no incidetial pick-up by system-flags  ;)
 besser82	sonne|work:  like SRCDIR, but for the build-tree
 besser82	sonne|work:  SRC=/MYDIR/
 besser82	sonne|work:  BINARY=/MYDIR/build
 besser82	sonne|work:  or whatever dir you build in  ;)
 besser82	sonne|work:  got it?
 sonne|work	yeah ok
 sonne|work	besser82: but why do we need to include the build/src/shogun ?
 sonne|work	are we generating the source files in there or additional ones like config.h or?
 besser82	sonne|work:  afaik some .h.in get generated to .h into there
 besser82	sonne|work:  yes
 besser82	sonne|work:  otherwise it won't hurt either  ;)
 sonne|work	besser82: heh ok - so the ${CMAKE_SOURCE_DIR}/src/shogun is what we needed right?
 besser82	sonne|work:  yes, that's where basically all headers are in
 sonne|work	besser82: I am just not sure why you did add CMAKE_CURRENT_SOURCE_DIR that often but certainly won't hurt when done at the end
 besser82	sonne|work:  basically all dir, where c++-action is going need that  ;)
 shogun-notifier-	shogun: Bj?rn Esser :feature/fix_includes * 0bdc64b / src/interfaces/ruby_modular/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/0bdc64b5ec4d0080e7b8c5278826f3c0ff33ec80
 shogun-notifier-	shogun: adapt ruby_modular for the new include-scope, too
 sonne|work	I think we don't even have headers there...
 besser82	sonne|work:  no, but we need da SHOGUN-headerzzz  ;)
 sonne|work	yeah but that would be just  ${CMAKE_SOURCE_DIR}/src/shogun
 sonne|work	actually no
 sonne|work	 ${CMAKE_SOURCE_DIR}/src
 sonne|work	no shogun in there
 sonne|work	since we always do <shogun/foo/bar>
 sonne|work	s/bar/bar.h/
 besser82	sonne|work:  yes, and that got changed in that PR
 besser82	sonne|work:  now, we start doing <feature/header.h>
 sonne|work	why that?
 besser82	sonne|work:  using <shogun/feature/header.h> is *evil*
 sonne|work	besser82: why?!
 besser82	sonne|work:  that is guranteed to be mixed-up with a system installed shogun  ;)
 besser82	sonne|work:  I relies on a fragile order of -I.
 sonne|work	besser82: nahh
 besser82	sonne|work:  where the other scope does not
 besser82	sonne|work:  that needs *explicit* -I/usr/include/shogun or other location  ;)
 sonne|work	yeah but then you always have to change examples etc
 sonne|work	and you need an explicit
 sonne|work	yes exactly
 besser82	sonne|work:  change examples?!?
 sonne|work	I don't like that admittedly
 sonne|work	well they use <shogun/foo/bar.h>
 besser82	sonne|work:  I going to setup an shogun.pc
 besser82	sonne|work:  and that is wrong
 besser82	sonne|work:  basically any lib needs an explicit -I
 besser82	sonne|work:  like eigen3 -I/usr/include/Eigen/eigen3
 besser82	sonne|work:  blas, altlas, lapack, ....
 besser82	sonne|work:  many, many others
 besser82	sonne|work:  that's what pkg-config was invented for
 besser82	g++ $(pkg-config myLib) -o myapp src.cpp
 sonne|work	besser82: I find that more troublesome - think about having two projects having a lib/config.h etc
 besser82	sonne|work: that's a good reason not to be too general in naming headers  :-P
 sonne|work	or having some prefix underneath - then rather /usr/include/shogun/shogun3
 besser82	sonne|work: a project should have a %dir/%{project}_config.h
 sonne|work	but *I* would leave things as is and just add the other include
 besser82	sonne|work: ???
 sonne|work	besser82: well we cannot change everything in one step - and this here is very intrusive and will break everything out there
 besser82	sonne|work: might be a point...
 sonne|work	besser82: yes I would just add ${CMAKE_SOURCE_DIR}/src to includes
 besser82	sonne|work:  *sigh*
 sonne|work	I am not saying we can't do this for say 4.0 but I wouldn't now
 sonne|work	no idea what the others think about that
 besser82	sonne|work:  but actually on the other hand:
 besser82	sonne|work:  if one uses a c++ compiler, he is *supposed* to know how to use it properly
@wiking	besser82: pkg-onfig isn't standard
@wiking	*pkg-config
 besser82	wiking:  yes, wincrap doesn't have that
@wiking	besser82: i see no point in removing shogun in include
 sonne|work	well pkg-config support makes things more clean so on the long run it would be nice to have at least
 sonne|work	well besser82 has a point but it is intrusive
@wiking	moreover that's a good thing when u write code that you dont do like
 besser82	wiking:  and we are relying on having pkg-config in CMake
@wiking	#include <features/Whatever.h>
@wiking	who's features and what?
@wiking	at least with <shogun/...> you know that where the whole things comes from
 sonne|work	that was the reason I added shogun/ in front...
@wiking	i dont have a problem with intrusive patches
@wiking	but i see no real sense behind this change
 besser82	wiking, sonne|work:  then we should stack that into a ssubdir
 sonne|work	yeah like Eigen/eigen3
 sonne|work	so shogun/shogun3 :D
 besser82	wiking, sonne|work:  like installing to ${perfix}/include/shogun/shogun.*
 besser82	sonne|work: another intrusive  ;)
 sonne|work	sure that is why for now not but later migth be nice if we want to show that we have a API compatible release...
 besser82	sonne|work: that would require to change headers on every major
 besser82	sonne|work: let's take it the other way
 besser82	sonne|work: sogun%{version}/shogun  ;)
 besser82	sonne|work, wiking: ^^^
 besser82	sonne|work: shogun%{so-version}/shogun  would be nice too
 besser82	sonne|work:  API-compatible release  :-P
 besser82	sonne|work:  I'd suggest getting a usable so-version, first
 besser82	sonne|work:  like so-release.so-latest-compat.so-earliest-compat
 sonne|work	we have a useable so version currently
 sonne|work	but not API
 besser82	sonne|work:  so-version just gets bumped, but doesn't tell me about back-compat ;)
 sonne|work	ohh jus we bump it when not back compat
 sonne|work	and due to the monolithic approach we have to bump too often
 sonne|work	that is why we wanted d-ptrs...
 besser82	sonne|work:  or plugins  ;)
 besser82	sonne|work:  and just a slow moving / bugfix-release-style interf-lib
 besser82	sonne|work: we need a lot more concept in development cycle / style
-!- travis-ci [~travis-ci@ec2-50-16-165-187.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Bj?rn Esser's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/16529983
-!- travis-ci [~travis-ci@ec2-50-16-165-187.compute-1.amazonaws.com] has left #shogun []
 sonne|work	happy with that but besser82 step by step or we will make no progress at all
 besser82	sonne|work:  If everyone would do a bit, we could do `pimp my shogun` within very low time
 besser82	sonne|work:  We need to do some "hackfest"
 besser82	sonne|work:  work out a plan and go go
 besser82	sonne|work:  I have a kazillion ideas about what and how, but I cannot do planning with myself
-!- sonne|b0rken [59cc9afa@gateway/web/freenode/ip.89.204.154.250] has joined #shogun
 sonne|b0rken	besser82: sry had to depart
 sonne|b0rken	besser82: remember I have kids and cannot all go havoc
 sonne|b0rken	besser82: so for my side this (no longer) works
 besser82	sonne|b0rken:  i know
 sonne|b0rken	I try to persistently contribute bit by bit
 sonne|b0rken	all I can do - the others might have time but it certainly has to be sth. everyone wants or it won't happen
 besser82	sonne|b0rken:  the problem just is to get all folks toghether...
 sonne|b0rken	besser82: so for now at least could you just add the include in front
 besser82	sonne|b0rken:  will try, but cannot promise for this work in all cases...
 sonne|b0rken	besser82: well we need somebody pushing it then it will happen. HeikoS might be when he has more time starting from february
 sonne|b0rken	besser82: well adrin will tell us and the -I in front works. I have been using this all the time when shogun was not yet cmake
 sonne|b0rken	besser82: I mean look - the cmake changes take you more time than you have expected - and it is always like that (at least from my personal experience)
 sonne|b0rken	murphy's law or sth
 besser82	sonne|b0rken:  :D
 besser82	sonne|b0rken:  I'm on it
 besser82	sonne|b0rken:  let's give it a try...
 besser82	sonne|b0rken:  btw. what is b0rken?!?
 besser82	sonne|b0rken:  CMake just takes a f*cking bunch of time, because when I do stuff, I usually to it *pristine*
 sonne|b0rken	cannot use chat from this machine
 sonne|b0rken	besser82: that is why
 sonne|b0rken	webclient crap
* sonne|b0rken off train
-!- sonne|b0rken [59cc9afa@gateway/web/freenode/ip.89.204.154.250] has quit [Ping timeout: 272 seconds]
-!- travis-ci [~travis-ci@ec2-54-227-3-61.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Bj?rn Esser's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/16531047
-!- travis-ci [~travis-ci@ec2-54-227-3-61.compute-1.amazonaws.com] has left #shogun []
-!- gsomix [~gsomix@188.168.14.35] has joined #shogun
-!- adrin_ [~adrin@guest-202.mpi-inf.mpg.de] has joined #shogun
-!- adrin [~adrin@guest-202.mpi-inf.mpg.de] has quit [Ping timeout: 246 seconds]
-!- anshul__ [uid12132@gateway/web/irccloud.com/x-djecicznuawjmrta] has joined #shogun
-!- anshul_ [uid12132@gateway/web/irccloud.com/x-lxnlivptjtoejbvo] has quit [Ping timeout: 240 seconds]
-!- anshul__ is now known as anshul_
-!- tricksy_ [uid12458@gateway/web/irccloud.com/x-jinuzbokxryseyps] has quit [Ping timeout: 240 seconds]
-!- tricksy__ [uid12458@gateway/web/irccloud.com/x-tqegrjmczmcaudeo] has joined #shogun
-!- gsomix [~gsomix@188.168.14.35] has quit [Quit: Leaving]
-!- lisitsyn [~lisitsyn@213.87.139.68] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- Netsplit *.net <-> *.split quits: zxtx_
-!- Netsplit over, joins: zxtx_
-!- lisitsyn [~lisitsyn@213.87.139.68] has quit [Read error: Connection reset by peer]
@sonney2k	besser82, pong
-!- lisitsyn [~lisitsyn@213.87.139.68] has joined #shogun
@sonney2k	lisitsyn, seen you in action :)
 lisitsyn	sonney2k: what?
@sonney2k	closing issues :D
 lisitsyn	sonney2k: I haven't closed any
 lisitsyn	in this year
 lisitsyn	sonney2k: so what is you are talking about??
@sonney2k	lisitsyn, then ignore me and rather work on the notebook!
 lisitsyn	sonney2k: yeah sure sure that's on my list for today
-!- lisitsyn [~lisitsyn@213.87.139.68] has quit [Ping timeout: 245 seconds]
-!- gsomix [~gsomix@46.20.65.114] has joined #shogun
 gsomix	goog evening
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@sonney2k	evening gsomix - enjoying yourself learning?
@sonney2k	iglesiasg, hey evening! Now you can try again - besser82 fixed things up
@iglesiasg	sonney2k, hello hello, saw the commit yeah!
@iglesiasg	sonney2k, since it seems he already tried with OpenJDK I was doing the same with Oracle Java
 gsomix	sonney2k, yep. I have an exam tomorrow. computational math.
-!- lisitsyn [~lisitsyn@213.87.139.68] has joined #shogun
@sonney2k	gsomix, sounds easy ;)
 gsomix	wut? =___=
@iglesiasg	it worked indeed now
@iglesiasg	eeeh what??
@iglesiasg	I recompiled with examples enabled and got an error in CSVM
@iglesiasg	compile error
 gsomix	sonney2k, ok. it's really easy. but I'm always a bit nervous before exams.
@sonney2k	iglesiasg, hard to believe...
@sonney2k	iglesiasg, you broke it!
@iglesiasg	sonney2k, well it is true I am not joking really
@iglesiasg	sonney2k, I just tried it again
@iglesiasg	sonney2k, when I generate with BUILD_EXAMPLES=ON compilation fails with many
@iglesiasg	CSVM.java:18: error: cannot find symbol
@iglesiasg	    super(modshogunJNI.CSVM_SWIGUpcast(cPtr), cMemoryOwn);
@iglesiasg	                      ^
@iglesiasg	  symbol:   method CSVM_SWIGUpcast(long)
@iglesiasg	  location: class modshogunJNI
@iglesiasg	maybe I am hallucinating though...
@sonney2k	iglesiasg, http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2129/steps/test%20java%20modular/logs/stdio
-!- lisitsyn [~lisitsyn@213.87.139.68] has quit [Read error: Connection reset by peer]
@sonney2k	iglesiasg, look it works on the buildbot
@iglesiasg	sonney2k, it did as well yesterday, or?
@sonney2k	iglesiasg, and on develop https://travis-ci.org/shogun-toolbox/shogun/builds/16522413
@sonney2k	travis
 gsomix	good night people
-!- gsomix [~gsomix@46.20.65.114] has quit [Ping timeout: 240 seconds]
-!- gsomix [~gsomix@46.20.65.114] has joined #shogun
-!- lisitsyn [~lisitsyn@213.87.139.68] has joined #shogun
-!- lisitsyn [~lisitsyn@213.87.139.68] has quit [Read error: Connection reset by peer]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
--- Log closed Wed Jan 08 00:00:42 2014
