--- Log opened Sun May 04 00:00:33 2014
 shogun-buildbot_	build #291 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/291  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- thoralf [~thoralf@91-65-139-40-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
 shogun-notifier-	shogun: Viktor Gal :develop * a0c1fe0 / configs/Dockerfile: https://github.com/shogun-toolbox/shogun/commit/a0c1fe0ef91aca25cc796655ef0c7673bf02a6fc
 shogun-notifier-	shogun: add shogun repo to /shogun from context in docker [ci skip]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- kislay [~Abhijeet@117.239.94.112] has quit [Read error: Connection reset by peer]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
 shogun-buildbot_	build #292 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/292  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has quit [Ping timeout: 240 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 shogun-buildbot_	build #293 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/293  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- sunil1337 [~sunil@183.83.141.229] has joined #shogun
-!- Beginner1212 [Beginner2@2002:75ea:7df2::75ea:7df2] has joined #shogun
 Beginner1212	hi..
-!- utsavjain [~utsav@1.22.76.46] has joined #shogun
 Beginner1212	which OS should I use? windows or ubuntu?
-!- Beginner1212 [Beginner2@2002:75ea:7df2::75ea:7df2] has quit [Quit: Leaving]
-!- sunil1337 [~sunil@183.83.141.229] has quit [Remote host closed the connection]
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-achcabfgigcadwxi] has joined #shogun
-!- kislay [~Abhijeet@117.239.94.112] has joined #shogun
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- utsavjain [~utsav@1.22.76.46] has left #shogun []
@wiking	sonney2k_: ping
-!- kislay [~Abhijeet@117.239.94.112] has quit [Ping timeout: 240 seconds]
-!- kislay [~Abhijeet@210.212.61.185] has joined #shogun
@wiking	besser82: ping
-!- kislay [~Abhijeet@210.212.61.185] has quit [Read error: Connection reset by peer]
@besser82	wiking, pong? 'sup?
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-achcabfgigcadwxi] has quit [Quit: Connection closed for inactivity]
@wiking	besser82: i'd need nightly builds of shogun packages
@wiking	besser82: would it be possible to do that with fedora?
@wiking	besser82: i mean one of the fedora buildbots could do that
@besser82	wiking, either that way or with the opensuse-buildservice
@wiking	besser82: is there currently such thing?
@besser82	wiking, yes
@besser82	wiking, on fedora we have copr
@wiking	besser82: anything would be good for me... i want to create nightly updated docker images
@besser82	wiking, on fedora we have copr, so we can "misuse" that
@wiking	besser82: and there's this trusted build story of docker that finally started to work
@wiking	besser82: but i dont want to compile and add the src to docker
@wiking	besser82: i rather just have a fedora docker image and install the right packages
@wiking	but would like to have them generated nightly
@besser82	wiking, that's how copr works  ;)
@besser82	wiking, you give link to SRPM and get build-pkg
@wiking	besser82: ok so which version of fedora should i use?
@besser82	wiking, currently I'd use FC20
@wiking	https://index.docker.io/_/fedora/
@wiking	i have 20 there
@besser82	wiking, +1
@wiking	but even rawhide if that's necessary
@wiking	ok i would need
@besser82	wiking, not really
@besser82	wiking, rawhide breaks too much
@wiking	shogun with python modular interface
@wiking	and colpack + arprec
@wiking	nlopt
@wiking	etc
@besser82	all in F20  ;)
@wiking	ok good
@wiking	but how do i get the nightly built shogun package?
@besser82	I just need to setup some rpm-spec magick with cmake && boom
@wiking	ok cool i'll start preparing the new Dockerfile for this
@besser82	so you can just do sth like `cmake && make srpm
@wiking	what's the ipython version in fedora 20?
@besser82	...moment...
@wiking	besser82: that should be done on a buildbot right? :)
@wiking	i mean cmake && make srpm
@wiking	but ok i'm waiting
@wiking	and preparing the Dockerfile in the meanwhile
@wiking	btw will the package fetch all the necessary dependencies as well for shogun?
@wiking	as currently i'm installing all these packages: make gcc g++ libc6-dev libbz2-dev libarpack2-dev libatlas-base-dev libblas-dev libglpk-dev libhdf5-serial-dev zlib1g-dev liblapack-dev cmake libnlopt-dev liblpsolve55-dev libxml2-dev libsnappy-dev liblzo2-dev liblzma-dev swig2.0 python-dev python-numpy python-scipy python-matplotlib python-pandas python-setuptools python-networkx python-tornado python-pip python-zmq python-jinja2 git-core wget
@besser82	Name       : python-ipython
@besser82	Architektur : noarch
@besser82	Version    : 0.13.2
@besser82	Ausgabe    : 3.fc20
@besser82	wiking, ^^
@wiking	but obviously these are for building shogun not just running
@wiking	besser82: ok i guess there's pip on fedora as well so i'll install ipython with pip to get 2.0
@besser82	wiking, the srpm will be build maxed out and pull all neded deps by automagic
@wiking	ok cool
@besser82	wiking, the only thing is `svm^shit`
@wiking	besser82: that's not included?
@besser82	wiking, I'm not sure we can ship that
@besser82	wiking, I can include it sure
@wiking	then it's great
@besser82	wiking, at least for the cmake-srpm
@wiking	good good
@wiking	i guess i should setup a fedora 20 bot then
@wiking	do you maybe have a chroot img for that?
@besser82	wiking, sure;  just need to bootstrap  ;)
@wiking	or can we use fedora's infra for generating those nightlies? :D)
@besser82	wiking, the rpms?
@besser82	wiking, sure
@wiking	yeah
@besser82	wiking, we can use copr
@wiking	that'd be awesome
@besser82	wiking, just need an srpm on some $webserver
@wiking	i can provide space where you can upload the generated rpms
@besser82	wiking, pass that url to copr && go go
@wiking	ok
@besser82	wiking, and copr will give us a custom repo with these build
@wiking	do you need ftp or what sorts of protocol to upload the rpms
@wiking	?
@besser82	wiking, you can build the srpm on buildbot?
@besser82	wiking, and then just upload somewhere
@besser82	wiking, copr can fetch from http(s) && ftp(s)
@wiking	i could, but would be great if we could do it somewhere else
@wiking	as our infra is getting a bit too stuffed
@besser82	wiking, building srpm isn't that cpu-intese
@besser82	wiking, will do within ~ 2 minutes
@wiking	besser82: it's an extra shogun build from src
@besser82	wiking, we just need a checkout and then run cmake && make srpm
@besser82	wiking, that's isn't that much
@wiking	ok i can do that
@wiking	i just need the rule file or whatever to generate those rpms
@besser82	wiking, and then we need the srpm to fetchable by copr, curl an http and copr does the rest  ;)
@wiking	ok no worries
@wiking	then just give me the stuff i need to run on the buildbot
@besser82	wiking, lemme setup the cmake magic  ;)  I have all we need
@besser82	wiking, and generating the rpm-spec for sg is quite tricky
@wiking	okey
@wiking	w8ing and setting up a new fedora 20 buildbot
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
@besser82	wiking, fc20-chroot --->  http://besser82.fedorapeople.org/fc20-x86_64.tar.xz
@besser82	wiking, just the minimal stuff
@besser82	wiking, deps and stuff need to be installed seperatedly
@besser82	wiking, will give you needed pkgs in a minute
@wiking	cool thnx
@besser82	As root:
@besser82	yum makecache
@besser82	yum install @buildsys-build
@besser82	yum install arpack-devel arprec-devel atlas-devel blas-devel bzip2-devel chrpath ColPack-devel glpk-devel hdf5-devel iputils json-c-devel libcurl-devel libxml2-devel lpsolve-devel lzo-devel NLopt-devel protobuf-devel qd-devel snappy-devel tapkee-devel xz-devel zlib-devel cmake eigen3-devel swig gdb valgrind doxygen-latex fdupes graphviz texlive-appendix texlive-lastpage texlive-todonotes java-1.7.0-openjdk-devel jblas lua-devel mono-devel octave-devel n
@besser82	umpy python-docutils python-jinja2 python2-devel scipy python3-devel python3-docutils python3-jinja2 python3-numpy python3-scipy ruby-devel rubygem-narray-devel
@besser82	wiking:  ^^
@besser82	wiking, you're welcome  :D
@wiking	besser82: ok so this is for the bot right?
@wiking	btw: why do we need python3*?
@wiking	besser82: that chroot is amd64?
@besser82	wiking, yes chrot is amd64
@besser82	wiking, for building python3-tests?
@wiking	besser82: naaah i just need python2* atm
@besser82	wiking, kk, then just ignore the py3-stuff
@wiking	besser82: ok
@besser82	wiking, pkgs were taken from me setup for building the fc rpms
@besser82	wiking, will be afk for the next ~30 min. ---> lunch
@wiking	besser82: ok i'm setting up the buildbot in the meanwhile
@besser82	wiking, allrighty!  til then  ;)
-!- shogun-buildbot_ [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Client Quit]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
@wiking	besser82: ok nightly_fedora bot is up and running
@wiking	http://buildbot.shogun-toolbox.org/builders/nightly_fedora
-!- utsavjain [~utsav@1.22.76.46] has joined #shogun
@besser82	wiking, nice!  :D
@wiking	besser82: i'm planning to add these packages to the docker container: yum install python-pip scipy numpy python-pandas python-networkx python-matplotlib
@wiking	is there others i need to specify that won't be automatically fetched via dependency for shogun?
@besser82	wiking, nope
@besser82	wiking, everything needed by sg itself will be fetched by explicit deps from it's rpm
@wiking	okey
@wiking	now i will need the the cmake flags + the package generator command :)
@wiking	-DPythonModular=ON -DUSE_SWIG_DIRECTORS=ON -DCMAKE_INSTALL_PREFIX=`pwd`/../build_install
@wiking	i have these specified already
@besser82	wiking, those aren't neccessary for generating the srpm
@wiking	mmm just tell me then what are the flags i need for running cmake
@besser82	wiking, I'm currently thinking about how to make the srpm the most senseful...
@wiking	okey
@besser82	wiking, `cmake ..` should be enough
@besser82	wiking, this basically is just needed to generate some shogun.spec from shogun.spec.templ
@wiking	besser82: but then how will we have python modular interface?
@wiking	oh i see
@besser82	wiking, the real build-conf is done during docker build then  ;)
@wiking	no
@wiking	that's the thing
@besser82	wiking, s!docker!copr!
@wiking	ah ok
@wiking	since i really dont want to build the packages with docker
@wiking	i mean within docker container
@wiking	in docker container i just want to do
@wiking	yum -y install ...
@wiking	that will use the nightly build packages
@wiking	s/build/built/
@besser82	wiking, that ain't the prob with copr  ;)
@wiking	ok i'll just do what u need me to do on the buildbot
@besser82	wiking, allrighty!  I think we need some rpm-dev pkgs on it:  yum groups install "RPM Development Tools"
@besser82	wiking, so we can use `spectool` and rpmbuild -bs
@wiking	done
-!- utsavjain [~utsav@1.22.76.46] has quit [Ping timeout: 252 seconds]
@besser82	wiking, many thx!
@besser82	wiking, will start working on the cmake-magic then  ;)
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@wiking	besser82: ping?
@besser82	wiking, pong!
@wiking	besser82: ok so another question unrelated
@besser82	wiking, shoot it out  ;)
@wiking	currently in cmake we try to find the python lib that corresponds to the found interpreter's version
@wiking	set(Python_ADDITIONAL_VERSIONS ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR})
@wiking	FIND_PACKAGE(PythonLibs REQUIRED)
@wiking	i though that this should assure it
@wiking	but now i see on travis the following
@besser82	wiking, simple solution  ;)
@wiking	-- Found PythonInterp: /home/travis/virtualenv/python3.3.5/bin/python (found version "3.3.5")
@wiking	-- Found PythonLibs: /usr/lib/libpython3.2mu.so (found version "3.2.3")
@wiking	this is obviously not right :(
@wiking	hence the whole build fails
@wiking	i mean it doesn't fail just the tests fails
@besser82	wiking, which one get looked up firt?
@wiking	with Fatal Python error: Inconsistent interned string state.
@besser82	wiking, lib or interp?
@wiking	interp
@besser82	damn!
@wiking	as we always need interp
@wiking	but not always need lib
@wiking	for building
@besser82	travis is using some crappy cmake...
@wiking	as lib only required if you want python modular or static
@besser82	there is a patch around for findlibs
@besser82	lemme look it up
@besser82	so we need a patch FindPyLibs.cmake
@besser82	in custom cmake-script-dir  ;)
@wiking	it uses the 'Setting up cmake-data (2.8.12.2-0ubuntu1~ubuntu12.04.1~ppa2) ...'
@wiking	that's kind of latest cmake :S
@besser82	wiking, which is crappy  ;)
@wiking	is it?
@wiking	i have that as well on my machine
@besser82	wiking, as all cmakes, those don't have the patch applied  ;)
@besser82	wiking, since kitware didn't apply it yet
@besser82	wiking, but we have it in fedora  ;)
@wiking	oh i see so yet another custom cmake script?
@besser82	no, the orig one but with applied patch  ;)
@besser82	so yes...  kinda "custom"
@wiking	oh no i do not want to apply patches on system's cmake script
@wiking	so i rather just put it into our cmake/ dir
@wiking	do you have the FindPythonLibs.cmake of fedora somewhere?
@besser82	you can use the two patches listed here:  http://pkgs.fedoraproject.org/cgit/cmake.git/commit/?id=cdf5b807274180c3eddc2a89d91b52216e481ad5
@besser82	wiking, cmake 3.0.0 will have the patch applied...
@besser82	on src.tar
@wiking	ok i'll apply those patches on my original FindPythonLibs.cmake and then add it to our custom cmake scripts
@besser82	wiking, allrighty  ;)
@besser82	wiking, that should do the trick  ;)
@wiking	for what version of cmake is this patch?
@wiking	oh fuck this is a patch of a patch
@wiking	....
@wiking	so what's the original patch?
@wiking	ok i've got it
@wiking	ok actually this way the set(Python_ADDITIONAL_VERSIONS ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}) is not required
@wiking	as PYTHON_VERSION_MAJOR and PYTHON_VERSION_MINOR is defined already
@wiking	wtf is this: CMAKE_FIND_FRAMEWORKS(Python)
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
@wiking	heheh this wont work besser82
@wiking	include(${CMAKE_CURRENT_LIST_DIR}/CMakeFindFrameworks.cmake)
@wiking	and that is shogun's cmake dir
@wiking	${CMAKE_CURRENT_LIST_DIR} = <shogun repo>/cmake
@wiking	besser82: would it hurt if i would replace all these includes (as there are 2 of them) from
@wiking	include(${CMAKE_CURRENT_LIST_DIR}/CMakeFindFrameworks.cmake)
@wiking	into
@wiking	include(CMakeFindFrameworks)
@wiking	i mean i dont understand why is it required to include the CMakeFindFrameworks cmake script from ${CMAKE_CURRENT_LIST_DIR} only
@besser82	wiking, if cmake_module_path is set propely, no  ;)
@wiking	SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
@wiking	i set it in the beginning like this
@besser82	wiking, that is fine then  ;)
@wiking	ok let's test
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/PythonDetection * 8f7847e / CMakeLists.txt,cmake/FindPythonLibs.cmake: https://github.com/shogun-toolbox/shogun/commit/8f7847e0abd4aa8f8b29d0266d09a5fd79827ac3
 shogun-notifier-	shogun: Fix python interpreter and library version detection
@wiking	besser82: how's the cmake hack going with srpm?
@besser82	wiking, on it  ;)
@wiking	besser82: i mean i dont mind if it's not integrated into cmake... it's enough for me if the bot generates it itself
@wiking	i really don't need anything fancy here.. just to work
@besser82	wiking, I know, but we need to get some stuff from cmake into the spec-file ;)
@besser82	wiking, which is used to generate the srpm
@wiking	ok this doesn't fix the problem :(
@wiking	-- Found PythonLibs: /usr/lib/libpython3.2mu.so (found version "3.2.3")
@wiking	-- Found PythonInterp: /home/travis/virtualenv/python3.3.5/bin/python (found version "3.3.5")
@besser82	wiking, interp was found first?
@wiking	yes
@wiking	i've pasted in the wrong order
@besser82	wiking, :S
@besser82	wiking, Then I need to investigate a bit deeper into that...
@besser82	wiking, w8
@besser82	wiking, is the custom py3 libs dir in searchpath?!?
@wiking	besser82: ok another question
@besser82	wiking, yes
@wiking	besser82: as i just saw a fucking amazing solution for travis + ccache
@besser82	wiking, go on  ;)
@wiking	so these guys are using iron.io to store 7ziped ccache directories
@wiking	but travis actually supports directory caching as well
@wiking	now the only question is that whether it's possible to define for ccache which directory to use
@wiking	for storing the ccache files
@wiking	CCACHE_BASEDIR
@wiking	nice
@wiking	:)
@wiking	since ccache would be obsolete otherwise right?
@wiking	i mean if i ccache everything in the same directory across all the builds
@wiking	(all the modular interface and gcc and clang builds)
@wiking	that way a lot of caches would be invalidated
@wiking	hence ccache wouldn't really work
@wiking	but if i define for each job a separate CCACHE_BASEDIR
@wiking	then that would be good i guess
 shogun-notifier-	shogun: Viktor Gal :feature/PythonDetection * 704010f / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/704010f5533b8f3a92d1c1668e8cfb09f3333758
 shogun-notifier-	shogun: Enable ccache and caching the output of it on travis
-!- travis-ci [~travis-ci@ec2-174-129-141-197.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/24396128
-!- travis-ci [~travis-ci@ec2-174-129-141-197.compute-1.amazonaws.com] has left #shogun []
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- khalednasr [~k.nasr92@41.69.148.77] has joined #shogun
-!- jd89 [80538d58@gateway/web/freenode/ip.128.83.141.88] has joined #shogun
 jd89	Hi, I'm trying to set max_train_time for LibSVM classifier training using the python swig interface, but it appears to have no effect. I found some previous posts in the mailing list archive that reported the same issue, with static builds: http://comments.gmane.org/gmane.comp.ai.machine-learning.shogun/1118, but those were apparently addressed a long time back.
-!- utsavjain [~utsav@1.22.76.46] has joined #shogun
-!- travis-ci [~travis-ci@ec2-54-204-70-222.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/24399041
-!- travis-ci [~travis-ci@ec2-54-204-70-222.compute-1.amazonaws.com] has left #shogun []
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-fokfhgrmalqjopzg] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/PythonDetection * e2dfa74 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/e2dfa74b9446e9d73aaf001a4e10812e5e6fca69
 shogun-notifier-	shogun: Switch to anaconda when building python3.3
 shogun-notifier-	shogun: remove caching in travis as it is only available for private repositories
 shogun-notifier-	shogun: Viktor Gal :feature/PythonDetection * a0ed9b2 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/a0ed9b2a21c43b021f19562dffbb429dde7a1613
 shogun-notifier-	shogun: travis: add fast_finish option and fix anaconda path
-!- utsavjain [~utsav@1.22.76.46] has quit [Ping timeout: 252 seconds]
-!- utsavjain [~utsav@1.22.76.46] has joined #shogun
-!- travis-ci [~travis-ci@ec2-174-129-141-197.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/24405698
-!- travis-ci [~travis-ci@ec2-174-129-141-197.compute-1.amazonaws.com] has left #shogun []
-!- sunil1337 [~sunil@183.83.134.244] has joined #shogun
-!- sunil1337 [~sunil@183.83.134.244] has quit [Quit: Leaving]
 shogun-notifier-	shogun: Viktor Gal :feature/PythonDetection * 7012034 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/7012034969c7346f2a22e490ce5a98fd0da7e0b4
 shogun-notifier-	shogun: travis: upgrade miniconda version and activate conda environment
-!- utsavjain [~utsav@1.22.76.46] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :feature/PythonDetection * 93fec06 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/93fec060f8645a91e91f601e3aab34478805e42b
 shogun-notifier-	shogun: travis specify PYTHON_LIBRARY for cmake when using miniconda
-!- travis-ci [~travis-ci@ec2-174-129-141-197.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/24408855
-!- travis-ci [~travis-ci@ec2-174-129-141-197.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :feature/PythonDetection * 3466b62 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/3466b622383826f8bb2b5084edb668d3e07f91f3
 shogun-notifier-	shogun: travis: set CMAKE_PREFIX_PATH to miniconda virtualenv path
--- Log closed Mon May 05 00:00:35 2014
