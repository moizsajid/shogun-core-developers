--- Log opened Fri Jun 19 00:00:15 2015
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Ping timeout: 245 seconds]
-!- shaochuan [~shaochuan@2601:647:4600:fac5:d4c6:dd89:65ac:c3f9] has joined #shogun
-!- shaochuan [~shaochuan@2601:647:4600:fac5:d4c6:dd89:65ac:c3f9] has quit [Ping timeout: 265 seconds]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun-data: Bj?rn Esser :revert-76-master * 6f73a85 / testsuite/python2-tests/ (2 files): https://github.com/shogun-toolbox/shogun-data/commit/6f73a85fead952f3da588d4acf78560504f2ecca
 shogun-notifier-	shogun-data: Revert "add the mkl regression files"
 shogun-notifier-	shogun-data: Bj?rn Esser :master * 6f73a85 / testsuite/python2-tests/ (2 files): https://github.com/shogun-toolbox/shogun-data/commit/6f73a85fead952f3da588d4acf78560504f2ecca
 shogun-notifier-	shogun-data: Revert "add the mkl regression files"
 shogun-notifier-	shogun-data: Bj?rn Esser :master * 5d918dc / testsuite/python2-tests/ (2 files): https://github.com/shogun-toolbox/shogun-data/commit/5d918dc151219169bb660dc69b8ba061fd93dd97
 shogun-notifier-	shogun-data: Merge pull request #78 from shogun-toolbox/revert-76-master
 shogun-notifier-	shogun-data:
 shogun-notifier-	shogun-data: Revert "add the mkl regression files"
 shogun-notifier-	shogun-data: yorker :master * 71f72ad / testsuite/ (41 files): https://github.com/shogun-toolbox/shogun-data/commit/71f72ada58e005dc83f44a29fb2f2992059ac8a3
 shogun-notifier-	shogun-data: update the data
 shogun-notifier-	shogun-data: Bj?rn Esser :master * 7e6bd50 / testsuite/ (41 files): https://github.com/shogun-toolbox/shogun-data/commit/7e6bd506fc21662b0b59a0710acda01d2f7729b7
 shogun-notifier-	shogun-data: Merge pull request #77 from yorkerlin/master
 shogun-notifier-	shogun-data:
 shogun-notifier-	shogun-data: update the data
 alcedine	Why are the globals reference counted?
 lisitsyn	what globals?
 alcedine	sg_io, sg_parallel, etc.
 lisitsyn	ah
 lisitsyn	you mean they are here forever so why bother counting?
 alcedine	Well, they are there until their reference count drops to zero, I presume. In particular, they may persist past shogun_exit().
 lisitsyn	hmm yeah
 alcedine	Err, exit_shogun(0.
 alcedine	(apologies if it's obvious with deeper insight into the way Shogun works, I'm just getting familiar with the source.)
 lisitsyn	exit_shogun unrefs sg_math etc
 lisitsyn	so they are gone on exit as well
 lisitsyn	alcedine: if you wondered whether there is some bug with free'ing globals I think it should be ok
 lisitsyn	but reference counting covers some crazy use case
 lisitsyn	as if you change some global variable on the go
 alcedine	Well, CSGObject::CSGObject() calls CSGObject::set_global_objects() which SG_REF's sg_io, sg_parallel and sg_version. Doesn't that mean that exit_shogun() only destroys the globals if all SGObjects have been destroyed?
 lisitsyn	yes
 lisitsyn	if any sgobject persists but exit_shogun is called it could be treated wrong
 lisitsyn	like memory leak
 alcedine	I don't think it would leak, since ~CSGObject() SG_UNREF's them. But it does have bearing on the program state on exit_shogun().
 lisitsyn	yeah kind of dangerous
 shogun-notifier-	shogun: Wu Lin :develop * e54d35f / src/shogun/machine/gp/SingleFITCLaplacianBase.cpp: https://github.com/shogun-toolbox/shogun/commit/e54d35fe0bdffe8cc8c4a6719b62ec8b6f37f447
 shogun-notifier-	shogun: fixed a bug in Coverity Scan
 shogun-notifier-	shogun: Heiko Strathmann :develop * 832891b / src/shogun/machine/gp/SingleFITCLaplacianBase.cpp: https://github.com/shogun-toolbox/shogun/commit/832891bef738c9478182b2d3c1ff557e9a171d5c
 shogun-notifier-	shogun: Merge pull request #2856 from yorkerlin/bugfixone
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fixed a bug in Coverity Scan
 shogun-buildbot	build #2698 of bsd1 - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/2698  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>
 shogun-buildbot	build #1033 of FCRH - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/1033  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>
 shogun-buildbot	build #1008 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/1008  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>
 shogun-buildbot	build #18 of FC22 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC22%20-%20libshogun/builds/18  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>
 shogun-buildbot	build #2655 of deb3 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2655  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>
 shogun-buildbot	build #643 of deb4 - python3 is complete: Failure [failed test python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb4%20-%20python3/builds/643  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Wu Lin <yorker.lin@gmail.com>
-!- travis-ci [~travis-ci@ec2-54-91-127-217.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/67494486
-!- travis-ci [~travis-ci@ec2-54-91-127-217.compute-1.amazonaws.com] has left #shogun []
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 guiniol	Is there a simple example for HMMs using shogun? I have no idea what the examples in examples/undocumented/python-modular are supposed to do
 guiniol	Does anyone know if I can load a HMM from a file using the python modular API?
@wiking	you should be able
--- Log closed Sat Jun 20 00:00:17 2015
