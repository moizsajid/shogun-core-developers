--- Log opened Thu Dec 13 00:00:38 2012
 shogun-buildbot	build #173 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/173
 shogun-buildbot	build #216 of nightly_default is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/216
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
-!- agas [~admin@185.6.154.4] has joined #shogun
-!- Hausas [~admin@unaffiliated/hausas] has quit [Disconnected by services]
-!- agas is now known as Hausas
-!- Hausas [~admin@185.6.154.4] has quit [Changing host]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
-!- Hausas [~admin@unaffiliated/hausas] has quit [Ping timeout: 246 seconds]
-!- Hausas [~admin@185.6.154.4] has joined #shogun
-!- Hausas [~admin@185.6.154.4] has quit [Changing host]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
-!- Hausas [~admin@unaffiliated/hausas] has quit [Ping timeout: 248 seconds]
-!- Hausas [~admin@185.6.154.4] has joined #shogun
-!- Hausas [~admin@185.6.154.4] has quit [Changing host]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
-!- Hausas [~admin@unaffiliated/hausas] has quit [Ping timeout: 250 seconds]
-!- n4nd0 [~fjig@grey-02.csc.kth.se] has joined #shogun
-!- blackburn [~blackburn@188.168.128.156] has quit [Quit: Leaving.]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
-!- n4nd0 [~fjig@grey-02.csc.kth.se] has quit [Quit: leaving]
-!- zxtx [~zv@82.207.176.18] has quit [Ping timeout: 252 seconds]
-!- zxtx [~zv@46.231.183.163] has joined #shogun
-!- zxtx [~zv@46.231.183.163] has quit [Ping timeout: 245 seconds]
-!- zxtx [~zv@46.231.183.163] has joined #shogun
-!- Hausas [~admin@unaffiliated/hausas] has quit [Ping timeout: 260 seconds]
-!- zxtx [~zv@46.231.183.163] has quit [Ping timeout: 245 seconds]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 wiking	sonne|work: here?
-!- Hausas [~admin@unaffiliated/hausas] has quit [Ping timeout: 245 seconds]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
 sonne|work	wiking: ye
 sonne|work	s
 wiking	sonne|work: i wonder what i was about to ask
 wiking	ah yeah one thing
 wiking	how's our release schedule
 wiking	and 2) how do i apply for write permission into shoung
 wiking	shogun repo
 wiking	:>
 sonne|work	wiking: we have no schedule... if sb wants a release he should say so and we should then try to get things more stable / fix issues that appear (not that I know any...)
 sonne|work	wiking: you get write permissions when you continue to stay active like you are now :)
 wiking	sonne|work: but the question is when
 wiking	i'm like almost a year now on the row
 wiking	it'll be in february
 wiking	that i've submitted my 1st patch :)
 sonne|work	ohh indeed
 sonne|work	then *very* sooon
 wiking	hahahah
 wiking	lolface
 wiking	ok
 wiking	i think we should do a release still this year
 wiking	but there's certain things needs to be fix i think
 sonne|work	nothing against it
 sonne|work	please start to fix things you come across then
 sonne|work	I am not so sure what needs fixing though
 sonne|work	I would have liked to attack sparse/stringfeatures to work with SG* datatypes
 sonne|work	but hey that can also wait for another release
 wiking	i need to fix cc
 wiking	with dynamicarray
 wiking	i know that
 sonne|work	cc ?
 wiking	ccsosvm
 sonne|work	we don't have an example for ccsosvm right?
 wiking	no not at all atm
 wiking	i mean i've added it for
 wiking	so_multiclass.cpp
 wiking	sonne|work: hehe yeah
 wiking	you've closed this PR
 wiking	https://github.com/shogun-toolbox/shogun/pull/839
 sonne|work	sure
 wiking	there was the addition to the so_multiclass example
 wiking	i'll make the changes though
 sonne|work	then fix it and reopen
-!- yoo [2eda6d52@gateway/web/freenode/ip.46.218.109.82] has joined #shogun
 yoo	hi all
 wiking	hey
 sonne|work	so wiking if you want a relase start to test & fix things and some plan what should be stable by then and in NEWS would be nice too
 wiking	ok
 wiking	i can start doing that next week
 wiking	this week is very busy for me estill
 sonne|work	np
 sonne|work	yoo please ask in the channel
 yoo	I can read in the code that OvRStrategy is used. Is CGMNPSVM OneVsRest or OneInAll ?
 n4nd0	yoo: it should be one vs. rest as it says in the header and because they are using one vs rest in the implementation file
 n4nd0	yoo: why do you wonder if you saw OvR was used?
 sonne|work	yoo, n4n0 - it is true multiclass
 yoo	because it says "true multiclass svm fashion"
 sonne|work	so all hyperplanes are learned simultaneously
 yoo	and true multiclass mean AllInOne ,
 yoo	?
 n4nd0	yoo: yeah ok, that is because in shogun you can do multiclass based on binary classifiers
 sonne|work	but when applying you have nr classes many classifiers
 n4nd0	yoo: but there are also some classifiers that are natively multiclass, like this one
 yoo	allright because I used MKLMulticlass that use CGMNPSVM then for N classes I get global optimiaztion and one set of kernels weights
 yoo	what if I want differents set of kernels weights for each class ?
 yoo	is there a framework for that in shogun ?
 n4nd0	yoo: I've never used it but it looks like MKLOneClass could make sense
 yoo	Sure.
 yoo	And what Multiclass machine resolve the OvR multiclass problem ?
 n4nd0	yoo: CGMNPSVM? :)
 yoo	I mean c(x) = argmax(f_i) and not c(x) = argmax(w_i x + b_i) as CGMNPSVM
 n4nd0	ok
 yoo	or maybe I misunderstood smthg
 n4nd0	I didn't really get the question to be honest
 n4nd0	so an SVM intuitively puts a line (hyperplane) somewhere in the space
 n4nd0	that can only separate two things
 n4nd0	to do multiclass, you have to put several lines or use several SVMs
 n4nd0	depending on how this lines are put you get one vs. rest or one vs. one
 n4nd0	yoo: when you were saying one in all I guess you meant one vs. all?
 n4nd0	in that case, one vs. all and one vs. rest is the same concept. It just makes more sense to say one vs. rest, it is more semantically correct I think
 yoo	OvR : N binary classfiers are trained to separate one class from the rest and winning class is the one that corresponds to the SVM with highest output value c(x) = argmax(f_i)
 yoo	All in One : N two class rules the ith function separates training vectors of the class i from the other vectors
 yoo	N decisions but all are obtained by solving one problem
 n4nd0	aham I see
 yoo	All in One is more a generalization of the binary classification algorithm
 yoo	then it is called "true multiclass"
 n4nd0	yoo: I am not sure about this, but I think that CGMNPSVM solve OneVsRest, since they are using that MulticlassStrategy
 yoo	that's I was saying ^^
 n4nd0	hehe ok :)
 yoo	just wanteed to be sure what it is exaclty
 n4nd0	let me check a moment just in case
 yoo	because you can read in the header "true multiclass"
 yoo	The question is: the N binary machine are learned independently or not  ?
 n4nd0	yoo: I think that they are not learnt independently
 yoo	then it is not OvR
 yoo	what make you say that ?
 n4nd0	I ignored this distinction between OvR and all in one
 n4nd0	I didn't know it had that name
 sonne|work	n4nd0: no there is a true multiclass svm
 sonne|work	n4nd0: that simultaneously learns all hyperplanes - so in the end you get a OvR classifier but hyperplanes are not based on learning serveral OvR binary SVMs but learnt in one go
 yoo	allright, then if you wanted to resolve a multiclass pb with OvR strategy what shogun framework will you use ?
 n4nd0	sonne|work: I see, but even if learnt silmultaneously one could do that with OvR or OvOne I gues, right?
 yoo	I mean I want to optimize mkl weights for each class and MKLMulticlass use CGMNPSVM ..
 sonne|work	n4nd0: I don't understand what you are asking
 n4nd0	sonne|work: I understand the difference between learning all hyperplanes at the same time or not, we refer to this as TRUE multiclass when all of them are learnt together
 n4nd0	sonne|work: ok?
 yoo	ok
 n4nd0	sonne|work: but in true multiclass I suppose that one can do it either using an OvR strategy or a OvO strategy
 yoo	no I dont think so
 sonne|work	n4nd0: true multiclass is what I mean with learning all hyperplanes together
 n4nd0	sonne|work: ok, then we are speaking the same language :)
 sonne|work	n4nd0: OvR OvO learning strategies are just for binary classifiers
 n4nd0	yoo: anyway, you can use any of the binary classifiers in shogun to build a multiclass classifier using one vs. rest
 yoo	sonne|work: then if I want to do MKL and  optimize mkl weights for each class ?
 n4nd0	yoo: see the KernelMulticlassMachine
 yoo	n4nd0: ok
 n4nd0	sonne|work: I understand now, thanks! although I think that doesn't why is MulticlassOneVsRestStrategy used in GMNPSVM
 n4nd0	doesn't explain*
 n4nd0	I am guessing that it appears to follow the MulticlassSVM interface
 sonne|work	n4nd0: well they use the same code when applying the classifier... argmax f_c(x)
 n4nd0	got it
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 244 seconds]
-!- yoo [2eda6d52@gateway/web/freenode/ip.46.218.109.82] has quit [Quit: Page closed]
-!- Hausas [~admin@unaffiliated/hausas] has quit [Read error: Connection reset by peer]
-!- Hausas [~admin@185.6.154.4] has joined #shogun
-!- Hausas [~admin@185.6.154.4] has quit [Changing host]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
-!- zxtx [~zv@n80-237-234-136.cnet.hosteurope.de] has joined #shogun
-!- yoo [2eda6d52@gateway/web/freenode/ip.46.218.109.82] has joined #shogun
 yoo	hi again
 yoo	sonne|work: I tried the following CKernelMulticlassMachine* mkl = new CKernelMulticlassMachine(new CMulticlassOneVsRestStrategy(), cker, new CMKLOneClass(), train_labels); but it raises the error: Interleaved MKL optimization is currently only supported with SVMlight
 yoo	cker for CCombinedKernels
 sonne|work	well you should not use oneclass
 sonne|work	but twoclass
 yoo	CMKL instead of COneClass ?
-!- zxtx [~zv@n80-237-234-136.cnet.hosteurope.de] has quit [Ping timeout: 264 seconds]
-!- zxtx [~zv@82.207.176.18] has joined #shogun
-!- heiko [~heiko@dhcp-180-207.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- blackburn [~blackburn@83.234.169.110] has joined #shogun
-!- yoo [2eda6d52@gateway/web/freenode/ip.46.218.109.82] has quit [Quit: Page closed]
-shogungit:#shogun- [shogun] karlnapf opened pull request #845: some clean ups towars kernel selection framework for MMD (master...master)  https://github.com/shogun-toolbox/shogun/pull/845
-shogungit:#shogun- [shogun] karlnapf pushed 5 new commits to master: https://github.com/shogun-toolbox/shogun/compare/bbb2be6fad1b...fa3566b5db4b
-shogungit:#shogun- shogun/master 7303295 Heiko Strathmann: removed old kernel selection examples due to soon to be introduced new framework
-shogungit:#shogun- shogun/master 33f4eb1 Heiko Strathmann: documentation
-shogungit:#shogun- shogun/master 836d10a Heiko Strathmann: initialise optimisation parameters
-!- heiko [~heiko@dhcp-180-207.internal.eduroam.ucl.ac.uk] has left #shogun []
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 shogun-buildbot	build #720 of deb3 - modular_interfaces is complete: Failure [failed compile octave_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/720  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 265 seconds]
-!- blackburn [~blackburn@83.234.169.110] has left #shogun []
-!- Netsplit *.net <-> *.split quits: naywhayare
-!- Netsplit over, joins: naywhayare
-!- Hausas [~admin@unaffiliated/hausas] has quit [Ping timeout: 245 seconds]
-!- Hausas [~admin@185.6.154.4] has joined #shogun
-!- Hausas [~admin@185.6.154.4] has quit [Changing host]
-!- Hausas [~admin@unaffiliated/hausas] has joined #shogun
--- Log closed Fri Dec 14 00:00:38 2012
