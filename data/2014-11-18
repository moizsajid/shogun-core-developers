--- Log opened Tue Nov 18 00:00:13 2014
-!- HeikoS [~heiko@0545399b.skybroadband.com] has quit [Quit: Leaving.]
-!- HeikoS [~heiko@0545399b.skybroadband.com] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Ping timeout: 265 seconds]
-!- HeikoS [~heiko@0545399b.skybroadband.com] has quit [Quit: Leaving.]
-!- iglesiasg [~iglesias@524B8E0B.cm-4-4c.dynamic.ziggo.nl] has quit [Quit: Lost terminal]
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Ping timeout: 240 seconds]
-!- Phawx [~Phawx@cpe-68-203-5-71.austin.res.rr.com] has joined #shogun
-!- Phawx [~Phawx@cpe-68-203-5-71.austin.res.rr.com] has quit [Ping timeout: 244 seconds]
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has quit [Remote host closed the connection]
-!- glongo [sid17594@gateway/web/irccloud.com/x-ovbkwllxfqtfzfwc] has quit [Ping timeout: 244 seconds]
-!- glongo [sid17594@gateway/web/irccloud.com/x-ndkyoaysdhnzatpj] has joined #shogun
-!- HeikoS [~heiko@0545399b.skybroadband.com] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- PirosB3 [~pirosb3@195.101.111.125] has joined #shogun
-!- HeikoS [~heiko@0545399b.skybroadband.com] has quit [Quit: Leaving.]
-!- HeikoS [~heiko@0545399b.skybroadband.com] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@lisitsyn	HeikoS: https://docs.google.com/forms/d/1kckcq_uv8dk9-W5rIdtqRwCHN4Uh209ELPUjTEZJDxc/viewform
@lisitsyn	wiking: ^
@wiking	ahahah rtofl
@lisitsyn	wiking: I desperately fail on that
@HeikoS	hahaha same here, great
@lisitsyn	HeikoS: hey what about your priors?
@lisitsyn	wiking: did you know HeikoS priors are too wide?
@HeikoS	lisitsyn: your mothers prior beliefs are so wide she has to use a noninformative one
@lisitsyn	hahah
@lisitsyn	HeikoS: I just seen this link in twitter
@lisitsyn	you -> dino -> and some guy I follow -> me again
@HeikoS	jaja
@HeikoS	nice
@HeikoS	dino posted it
@lisitsyn	HeikoS: there should be some index like
@lisitsyn	how much twitter users did it pass through to get back to you
@lisitsyn	err :D
@lisitsyn	how many I mean :D
@HeikoS	hehe
@HeikoS	i did not even use twietter
@HeikoS	twitter
@HeikoS	but email :D
@lisitsyn	yeah true
@lisitsyn	then any kind of communication works
-!- HeikoS [~heiko@0545399b.skybroadband.com] has quit [Quit: Leaving.]
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has joined #shogun
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has quit [Remote host closed the connection]
@HeikoS	wiking: around?
@HeikoS	lisitsyn: around?
@lisitsyn	HeikoS: ja
@HeikoS	lisitsyn: how to disable libcurl in shogun compilation?
@HeikoS	whats the switch?
@HeikoS	FIND_PACKAGE(CURL)
@HeikoS	IF (CURL_FOUND)
@HeikoS	SET(HAVE_CURL 1)
@HeikoS	LIST(APPEND DEFINES HAVE_CURL)
@HeikoS	LIST(APPEND INCLUDES ${CURL_INCLUDE_DIRS})
@HeikoS	SET(POSTLINKFLAGS ${POSTLINKFLAGS} ${CURL_LIBRARIES})
@HeikoS	ENDIF(CURL_FOUND)
@HeikoS	thats in CMakeLists.txt
@HeikoS	google doens thelp me
@lisitsyn	HeikoS: hmm
@lisitsyn	well you can comment it out :D
@lisitsyn	the thing is that once you're into that IF
@lisitsyn	you have includes etc
@HeikoS	yeah I know thats why I wanna disable
@lisitsyn	HeikoS: let me check curl finder cmake script
@HeikoS	ah got it
@lisitsyn	HeikoS: what?
@lisitsyn	HeikoS: I see no option to fail FIND_PACKAGE if it founds one
@HeikoS	cmake -DEnableCURL=Off ..
@lisitsyn	hmm really?
@lisitsyn	HeikoS: I wonder where this option is handled :D
@HeikoS	find .. -type f -name '*.txt' | xargs grep 'CURL'
@HeikoS	#../build/CMakeCache.txt:EnableLibCURL:UNINITIALIZED=Off
@lisitsyn	hmm cool to know
@HeikoS	lisitsyn: btw see esbens email
@HeikoS	wiking: ^
@HeikoS	about meta language project
@lisitsyn	HeikoS: oh sh I forgot to write a mail about examples of dsl :D
@lisitsyn	sorry
@HeikoS	lisitsyn: thats optional anyways
@HeikoS	lisitsyn: we are now starting to prototype
@HeikoS	so see email :)
@lisitsyn	heh
@lisitsyn	okay well I don't mind actually
@lisitsyn	I mean writing parsers is like
@lisitsyn	useless in general but useful for him
@lisitsyn	HeikoS: I am now reading bishop
@lisitsyn	breaks my mind actually
@HeikoS	lisitsyn: I think this will be super useful for us
@lisitsyn	HeikoS: yeah absolutely
@HeikoS	lisitsyn: let me know if you have questions, but its a very good book, almost the best on the topic
@lisitsyn	my point was just like
@lisitsyn	you can just skip the parsing thing
@lisitsyn	and use flexible syntax of some language
@lisitsyn	HeikoS: e.g. in scala you don't even write ( ) for functions
@lisitsyn	legal to write "do something"
@lisitsyn	HeikoS: like you describe code and description is transformed into examples :D
@HeikoS	lisitsyn: but how do you want to do this then?
@HeikoS	so you mean skip inventing own language?
@HeikoS	and use say scala
@lisitsyn	yeah that was my idea
@HeikoS	I see
@HeikoS	mmmh
@lisitsyn	I mean all these languages are pretty flexible
@HeikoS	not sure
@HeikoS	how to represent the example?
@HeikoS	how to translate?
@HeikoS	then we need to write converter for every target
@lisitsyn	it is easier to do inside language
@lisitsyn	I think
@lisitsyn	HeikoS: I am now thinking like
@lisitsyn	did you consider really textual description of example?
@lisitsyn	I mean
@lisitsyn	initialize LibLinear as svm with C=1.0        ----> svm = LibLinear(1.0)
@HeikoS	no
@HeikoS	we will have
@HeikoS	LibLinear ll = LibLinear(1.0=
@HeikoS	will be typed
@HeikoS	since also translating into c++
@HeikoS	and java etc
@HeikoS	see my gist
@HeikoS	http://www.shogun-toolbox.org/page/Events/gsoc2014_ideas#meta_language
@HeikoS	https://gist.github.com/karlnapf/9079385
@lisitsyn	HeikoS: oh that's just C++ :)
@HeikoS	yeah basically yes
@HeikoS	thing is
@HeikoS	if we do this in c++
@HeikoS	how to transform?
@HeikoS	we need to parse
@HeikoS	I mean we can use c++ parser maybe
@lisitsyn	I don't really get it
@HeikoS	but how to extract the things we want?
@HeikoS	I dont see what you mean, maybe describe an example how to do things
@lisitsyn	HeikoS: extract things from?
@HeikoS	or better prototype
@lisitsyn	hmm yeah ok easy
@lisitsyn	HeikoS: just some kind of 10 minutes let me set up some regexps :)
@HeikoS	ok!
@HeikoS	this might be useful for esben,
@HeikoS	(should have come earlier, now we already got a concept)
@HeikoS	but happy to change
@lisitsyn	HeikoS: I am sorry you know I am like failing everywhere :)
@HeikoS	haha
@lisitsyn	HeikoS: ok still here?
@lisitsyn	https://gist.github.com/lisitsyn/38662774c3f594cc6580
@lisitsyn	HeikoS: put output there as comment as well
@HeikoS	checking
@HeikoS	lisitsyn: thats fine, but how to do do this for java?
@lisitsyn	HeikoS: can't see the problem
@HeikoS	ok?
@lisitsyn	HeikoS: well I mean
@HeikoS	let me look at this a bit more
@lisitsyn	just wrap it into some class
@lisitsyn	public static main
@lisitsyn	blabla
@HeikoS	how to do UNREF at the end of scope?
@HeikoS	how to do the type inference?
@HeikoS	declarations?
@HeikoS	can you do a c++ example?
@HeikoS	I mean this is great
@HeikoS	just want to be sure this works fine
@lisitsyn	HeikoS: what type inference?
@lisitsyn	HeikoS: it is still typed actually
@lisitsyn	so I see no type inference involved
@HeikoS	lisitsyn: mmmh
@HeikoS	what I mean is
@HeikoS	say
@lisitsyn	HeikoS: as for unref and declarations - some matchers here are to initialize variable so it is possible to track whether it is first declaration or second (assignment)
@lisitsyn	same for unref
@lisitsyn	ha btw
@lisitsyn	we can also draw graphs
@lisitsyn	:D
@lisitsyn	what is used by what
@HeikoS	thats cool
@lisitsyn	so
@lisitsyn	what did you mean?
@HeikoS	lisitsyn: so you suggest to go this way: a python script that does things, and one just changes the dictionaries?
@HeikoS	yes I see
@lisitsyn	HeikoS: oh no actually no
@lisitsyn	it is just how I'd prototype that :)
@lisitsyn	it is still better to do with parsing library
@HeikoS	lisitsyn: what would be your suggestion for esbens project?
@HeikoS	lisitsyn: I see
@HeikoS	good idea
@lisitsyn	just write some kind of allowed sentences
@HeikoS	kk
@HeikoS	can you send this to esben and explain your reasoning?
@lisitsyn	initialize [class] from [parameters] as [name]
@lisitsyn	yes
@HeikoS	maybe we want to change the syntax of the meta language then to your idea
@HeikoS	as its way cleaner/easier to write, less cluttered
@lisitsyn	HeikoS: yeah may be it is worth it
@HeikoS	totally
@HeikoS	make sure you explain it properly that the poor guy does not get confused ;)
@lisitsyn	HeikoS: and put VW on top of it to predict programs
@HeikoS	haha
@lisitsyn	or RNN
@lisitsyn	have you seen they are doing pretty well generating text
@lisitsyn	with RNNs
@HeikoS	lisitsyn: btw esben is a quite smart guy, we should drag him in while he is doing his project ;)
@lisitsyn	HeikoS: no doubt :)
@HeikoS	yeah we had a talk on that here recently by a guy from M$
@HeikoS	quite cool
@HeikoS	for integrated IDEs
@HeikoS	they learn from code what to suggest to complete
@HeikoS	autocomplete
@HeikoS	like whole program snippets
@lisitsyn	HeikoS: well if you coded in intellij idea :D
@lisitsyn	it wouldn't be of real surprise
@HeikoS	no for java I think
@HeikoS	or c#
@lisitsyn	for java it is really easy
@lisitsyn	the language itself is kind of designed for monkeys
@HeikoS	lisitsyn: can you send the stuff today? esben already started a few days ago
@HeikoS	its good to get input as early as possible
@lisitsyn	I am just writing the mail
@HeikoS	awesome thanks a lot!
@lisitsyn	HeikoS: ooh it seems I confuse his first/last name
@lisitsyn	it is written like Soerig, Esben
@lisitsyn	:D
@lisitsyn	it is like confusing when you don't really understand first/last name
@lisitsyn	what is last and what is first i mean
@HeikoS	haha
@HeikoS	esben is first, lisitsyn
@lisitsyn	HeikoS: yeah I got it
@lisitsyn	HeikoS: I sent him a letter explaining that :D
@lisitsyn	HeikoS: can you please update me on what are relations of shogun and stan?
@HeikoS	lisitsyn: shogun and stan, why?
@lisitsyn	HeikoS: I am pretty sure I heard sth about stan from you
@lisitsyn	but I can't really remember what
@HeikoS	lisitsyn: yes, I want to have shogun have bindings to stan
@HeikoS	for two things:
@lisitsyn	HeikoS: how?
@lisitsyn	ehmm
@HeikoS	autodiff, and mcmc
@lisitsyn	what are bindings?
@HeikoS	lisitsyn: like use stan from within shogun
@lisitsyn	aha I see
@HeikoS	say implement shoguns kernel functions in stan, then we get the gradients for free
@HeikoS	and probabilistic models in shogun can also be learned using stan's great hmc sampler
@lisitsyn	HeikoS: so we just need a way to IO data?
@HeikoS	lisitsyn: no its more complicated
@lisitsyn	is it like you just execute some stan program with your data and get it in shogun format as well?
@HeikoS	stan has its own language
@HeikoS	that is translated into c++ code
@HeikoS	take say a GP
@HeikoS	we have lots of different GP models in Shogun
@HeikoS	we can write those models in stan, in the stan language
@lisitsyn	yeah
@HeikoS	then we can offer inference for those models under the  Shogun interface
@HeikoS	but internally, stan is used
@HeikoS	but thats hidden from user
@HeikoS	thats one use case
@lisitsyn	I see
@HeikoS	kind of cool to be able to switch between approximate inference and MCMC under the same interface
@HeikoS	the other thing is
@HeikoS	autodiff
@HeikoS	we have lots of code that just implements gradient evaluataions in Shogun
@lisitsyn	how does it work?
@HeikoS	if we would write the functions we want the gradients of (say derivative of Gaussian kernel wrt its length-scale sigma), in stan, then we would get this for free
@HeikoS	it takes the stan language snippet, transforms it into some kind of symbolic representation
@lisitsyn	I am now browsing stan's code
@HeikoS	and then generates c++ code for both evaluation and gradient
@HeikoS	check wikipedia of automatic differentiation
@lisitsyn	yeah I know about auto diff
@HeikoS	so the cool thing is
@HeikoS	you get c++ code that evaluates the gradient
@lisitsyn	I just meant how it works in stan
@lisitsyn	yeah I see
@HeikoS	so its as fast as evaluation the function itself
@lisitsyn	I am like confused
@lisitsyn	:D
@lisitsyn	its pretty good engineered
@HeikoS	so if we put this in our build process, i.e. generating the c++ code from stan code, and the compiling c++ code and expose it via shogun
@HeikoS	thats cool
@HeikoS	yes
@HeikoS	they have a full time guy
@HeikoS	for a couple of years now
@HeikoS	its a great great project
@lisitsyn	I mean it is really like good C++ code :D
@HeikoS	yes
@HeikoS	I know
@lisitsyn	would not be possible for science people to write such code
@HeikoS	they use a lot of template programming
@HeikoS	no the have a software engineering guy (that also knows about mcmc)
@HeikoS	lisitsyn: actually, most of stan is the autodiff
@HeikoS	the mcmc is just a very small part
@lisitsyn	I see
@HeikoS	lisitsyn:  they generalised eigen3 for the autodiff
@HeikoS	thats why it is so cool
@HeikoS	all the autodiff happens via template programming
@HeikoS	I asked them a few times to release the autodiff seperately
@HeikoS	they always told me to officially request this on the mailing list, and that its quite easy
@lisitsyn	HeikoS: so you need gcc to do that?
@lisitsyn	or clang whatever
@HeikoS	I think they use boost something
@HeikoS	not sure about internals
@lisitsyn	HeikoS: I mean is it really compiling C++ code on the run?
@HeikoS	lisitsyn: no
@HeikoS	the stanc program takes a stan language listing and produces standard c++ code
@HeikoS	this can then be compiled as normal
@lisitsyn	ah I see
@HeikoS	so two steps to generate a stan program
@lisitsyn	got it
@HeikoS	1. use stanc
@HeikoS	2. use gcc
@lisitsyn	but you still need compiler around
@HeikoS	yeah sure
@HeikoS	stanc generate c++ code
@lisitsyn	that's pretty cool
@HeikoS	indeed
@HeikoS	its great to have this layer, as allows for autodiff
@HeikoS	would be good to do this in shogun too
@lisitsyn	shogunc?
@lisitsyn	:D
@HeikoS	also you get backend independence on the fly
@HeikoS	yeah some kind of
@lisitsyn	well
@HeikoS	like say you have CKernel
@lisitsyn	HeikoS: we are too general still
@HeikoS	CGaussianKernel's compute method can be generated
@lisitsyn	no clear vision what we focus on
@HeikoS	no i dont agree
@HeikoS	but certainly not this idea
@HeikoS	this is just a cool idea
@HeikoS	but focus of other things is pretty clear
@HeikoS	see all the latest discussions :)
@lisitsyn	yeah we can add some template stuff here
@lisitsyn	but actually
@lisitsyn	it is not worth it :D
@lisitsyn	I mean people use clusters and stuff
@HeikoS	?
@lisitsyn	HeikoS: I mean templates are good to get crazy performance
@HeikoS	ah i see
@HeikoS	yeah sure sure
@lisitsyn	but people just throw more power usually
@HeikoS	this is all not for this or next year
@HeikoS	we got other problems
@HeikoS	lambdays ideas for cleaning up classes are good
@lisitsyn	HeikoS: yeah sure
@HeikoS	but we need to release first
@HeikoS	and then next gsoc also starts soon
@HeikoS	so need ideas, mentory, etc
@HeikoS	mentors
@HeikoS	and documentation
@HeikoS	binareis
@HeikoS	all that
@HeikoS	hackathon
@HeikoS	funding
@HeikoS	argh
@HeikoS	too much
@HeikoS	foundation
@lisitsyn	:D
@lisitsyn	crazzzy
@HeikoS	its all feasible
@HeikoS	just some work
@HeikoS	get rid of static interfaces
@HeikoS	make swig matlab work first
@HeikoS	clena up testing framework
@HeikoS	clean up base classes
@HeikoS	drop serialisation
@HeikoS	drop migration
@HeikoS	drop legacy code that is not tested
@HeikoS	make binaries work smoothly
@HeikoS	mac build
@HeikoS	if all that was in
@HeikoS	would be super awesome
@HeikoS	as we got enough ML algos ;)
@HeikoS	and then next step: speed
@HeikoS	swig build split
@HeikoS	(actually that one also soon as it blows up already)
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- PirosB3 [~pirosb3@195.101.111.125] has quit [Quit: PirosB3]
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Ping timeout: 240 seconds]
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has quit [Ping timeout: 256 seconds]
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Ping timeout: 255 seconds]
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has joined #shogun
--- Log closed Wed Nov 19 00:00:15 2014
