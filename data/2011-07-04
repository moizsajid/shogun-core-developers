--- Log opened Mon Jul 04 00:00:43 2011
-!- f-x [~user@117.192.209.232] has quit [Remote host closed the connection]
-!- in3xes_ [~in3xes@180.149.49.227] has joined #shogun
-!- in3xes [~in3xes@180.149.49.227] has quit [Ping timeout: 240 seconds]
 CIA-32	shogun: Soeren Sonnenburg master * raa41ac5 / (10 files):
 CIA-32	shogun: Merge pull request #167 from sploving/master
 CIA-32	shogun: add some java kernel examples - http://bit.ly/khi5Cz
-!- sploving [~root@124.16.139.196] has joined #shogun
 sploving	hi sonney2k
@sonney2k	sploving, hi
@sonney2k	finally I see you in chat :)
 sploving	holiday ends?
@sonney2k	I hope you are doing fine...
@sonney2k	I wouldn't say that I was on holidays...
@sonney2k	anyway please give me a quick update what the current problems for java_modular completion are?
@sonney2k	I mean mid-term is approaching quickly
 sploving	now just some case about test-suite. I did not understand generator.py
 CIA-32	shogun: Soeren Sonnenburg master * re2c834b / (32 files in 9 dirs):
 CIA-32	shogun: Follow Shashwat Lal Das nice suggestion and use overloading for
 CIA-32	shogun: get_vector and related functions. - http://bit.ly/izi6YT
@sonney2k	sploving, before discussing that - translating examples are works?
@sonney2k	I mean did you discover any issues?
@sonney2k	sploving, still there?
 sploving	not any issues now. I pushed the examples works well
@sonney2k	sploving, great
 sploving	arange(1,degree+1,dtype=double)[::-1]
 sploving	what does ::-1 mean?
@sonney2k	reverse the vector
 sploving	like this small issue. that I donot understand some examples well. so I did not added them all
@sonney2k	sploving, always ask
@sonney2k	please
@sonney2k	in the example above the vector is no e.g 1...10 but 10...1
@sonney2k	sploving, now regarding generator.py - what do you not understand?
@sonney2k	generator.py reads all the .py files and then runs the examples one by one with the configurations mentioned in the top of the .py file
@sonney2k	since these examples provide a function of same name and return some results - these are serialzed (pickled)
@sonney2k	and written down to disc
@sonney2k	that's all
@sonney2k	now when tester.py is run - it reads these serialized results and also runs the examples and gets the function return values and then compares if results are the same
@sonney2k	sploving, ok?
 sploving	sounds ok
 sploving	you mean generator.py writes all the results in the disc
@sonney2k	sploving, yes
@sonney2k	that is why I said you don't need to print but just provide functions that return the results
 sploving	tester.py also run the example. then their results are the same. because the examples are run twice?
@sonney2k	they should be if everything is correct - yes
 sploving	then there is no need to compares them. An example is run twice, the results is certly the same
@sonney2k	sploving, heh
@sonney2k	one would think so
@sonney2k	but it is not always true
@sonney2k	if you are on a different architecture / library set
@sonney2k	there can be differences
@sonney2k	and of course someone might change an algorithm and you now want to test if it really gives the same result
@sonney2k	and that is waht these regression tests are for
@sonney2k	sploving, does that make sense?
 sploving	sonney2k, that sounds reponsible
@sonney2k	sploving, so do you now know what to do?
@sonney2k	sploving, IIRC these examples and test scripts and some documentation how to test java works etc is the remaining thing to be done for java for now
@sonney2k	(lets ignore UJMP sparse matrix support until it is implemented upstream)
 sploving	documentation?
 sploving	not autogenerated?
@sonney2k	sploving, no that one here http://www.shogun-toolbox.org/doc/installation.html
@sonney2k	I mean you just have to write what is necessary
@sonney2k	to run java examples and give a small example like here http://www.shogun-toolbox.org/doc/modular_tutorial.html
@sonney2k	sploving, really not a lot maybe 1-3 paragraphs with that we expect things in CLASSPATH etc
@sonney2k	sploving, certainly doable in a 1-2 hours
@sonney2k	sploving, OK?
 sploving	sonney2k, I am afrained I could not finished them in a week
@sonney2k	sploving, finish what?
 sploving	I am not a java expert. I am not familiar to write the tester script
 sploving	I mean examples , test-suite, and docs
@sonney2k	sploving, ask mikio early then how to do the generator / tester scripts and write examples while you are waiting for his reply
 sploving	sonney2k, I think it is not difficult. but may take some time.
 sploving	so there is no need to ask
 sploving	I have a meeting next week
@sonney2k	sploving, midterm is in 11 days so you have still 88 hrs :)
 sploving	in another city
 sploving	I have to prepare for it also
@sonney2k	sploving, well please try hard - OK?
 sploving	Of course. I will try my best
 sploving	midterm is on next Monday, am I right?
@sonney2k	ok - so just keep the patches coming and ask early... it is really not a lot of work for 11 days. I would say examples take 1-3 days, documentation 1 day at best
@sonney2k	http://www.google-melange.com/gsoc/events/google/gsoc2011
@sonney2k	deadline is 15th
@sonney2k	sploving, just start working now... I will be around if there are further burning questions
@sonney2k	sploving, talk to you soon!
 sploving	okay.
-!- blackburn [~blackburn@188.122.238.99] has joined #shogun
-!- blackburn [~blackburn@188.122.238.99] has quit [Ping timeout: 240 seconds]
-!- sploving [~root@124.16.139.196] has left #shogun []
-!- serialhex [~quassel@99-101-148-183.lightspeed.wepbfl.sbcglobal.net] has quit [Read error: Connection reset by peer]
-!- in3xes1 [~in3xes@180.149.49.227] has joined #shogun
-!- in3xes_ [~in3xes@180.149.49.227] has quit [Ping timeout: 240 seconds]
@sonney2k	blackburn - this would be something for you file:///home/sonne/Downloads/11-07-04/waffles/web/tutorial/dimred.html
@sonney2k	err sorry - http://waffles.sourceforge.net/tutorial/dimred.html
-!- in3xes_ [~in3xes@180.149.49.227] has joined #shogun
-!- in3xes [~in3xes@180.149.49.227] has joined #shogun
-!- in3xes1 [~in3xes@180.149.49.227] has quit [Ping timeout: 276 seconds]
-!- in3xes_ [~in3xes@180.149.49.227] has quit [Ping timeout: 240 seconds]
-!- f-x [~user@117.192.204.74] has joined #shogun
-!- blackburn [~blackburn@188.122.238.99] has joined #shogun
@sonney2k	blackburn, seen that http://waffles.sourceforge.net/tutorial/dimred.html
@sonney2k	?
 blackburn	nope
 blackburn	why it could be interesting? :)
 blackburn	hm
 blackburn	yes manifold sculpting is impressive
-!- serialhex [~quassel@99-101-148-183.lightspeed.wepbfl.sbcglobal.net] has joined #shogun
@sonney2k	blackburn, just because of the pictures :)
 blackburn	sonney2k: the most funny thing about these pictures - they could become ugly just if we set k=9 but not 10 or so
 blackburn	it is all unstable a bit
@sonney2k	isn't that the case for all these dim red methods?
 blackburn	some of they could be non-parametric, I don't know for sure
 blackburn	PCA have no parameters like k hehe
 blackburn	and useless for swiss-roll things
 blackburn	hm I guess I have to really test my arpack wrapper
-!- f-x [~user@117.192.204.74] has quit [Remote host closed the connection]
-!- in3xes_ [~in3xes@210.212.58.111] has joined #shogun
-!- in3xes [~in3xes@180.149.49.227] has quit [Ping timeout: 276 seconds]
-!- blackburn [~blackburn@188.122.238.99] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@188.122.238.99] has joined #shogun
-!- in3xes_ is now known as in3xes
 CIA-32	shogun: Baozeng Ding master * r87f2965 / (4 files): add some kernel examples for java_modular - http://bit.ly/jBIwLv
 CIA-32	shogun: Soeren Sonnenburg master * r414534f / (4 files):
 CIA-32	shogun: Merge pull request #168 from sploving/master
 CIA-32	shogun: add some kernel example for java_modular - http://bit.ly/kbD9S1
-!- f-x [~user@117.192.204.74] has joined #shogun
-!- b3ttyb00 [~bettyboo@bane.ml.tu-berlin.de] has joined #shogun
-!- bettyboo [~bettyboo@bane.ml.tu-berlin.de] has quit [Ping timeout: 240 seconds]
-!- in3xes [~in3xes@210.212.58.111] has quit [Ping timeout: 240 seconds]
-!- b3ttyb00 is now known as bettyboo
-!- in3xes [~in3xes@180.149.49.227] has joined #shogun
@sonney2k	f-x, regarding your patch - it is mostly fine
@sonney2k	I am not really sure if we want SGVector business or not for these functions - I tend to say yes but it would be OK for now if you leave the float64_t* int stuff
@sonney2k	(the code in dotfeatures is legacy in this respect too - I would convert it to SGVector too at some stage)
 f-x	sonney2k: about SGVector - I find the SGD code easier to read right now without it
 f-x	i converted it to use SGVector, but it was simpler to write using separate variables
@sonney2k	f-x, well that can be improved: just consider you have the basic operations defined for SGVector
@sonney2k	then it would be more readable w/ SGVector
* blackburn tends to *not* implement even basic operations for SG* structures
@sonney2k	blackburn, why not?
 f-x	sonney2k: yeah, but then again call that stuff in CMath isn't yet made for SGVector, right?
 f-x	i haven't checked it out
@sonney2k	blackburn, wouldn't it be nice to say vec.multiply(2)
 f-x	but its functions in SGD are called through separate args
 blackburn	sonney2k: looks nice but implementation issues
@sonney2k	f-x, yeah - that code could go to SGVector ...
@sonney2k	blackburn, which?
 blackburn	blas? or simple loops?
 blackburn	blas could be good for some operations, loops for other, right?
 blackburn	the other problem - in fact we have pretty 'low' level in algos
@sonney2k	blackburn, so what is the problem?
@sonney2k	one can use blas for float32_t / float64_t and loops otherwise
 blackburn	sometimes blas is not very reasonable
 blackburn	what if we just want to multiply 3-4 elements?
 blackburn	overhead of calling blas may be even higher than just simple loop
@sonney2k	blackburn, yes but no one forces you to use these operations / to not call a loop based implementation
 blackburn	that is a problem too: we will mix it up
 blackburn	i.e. sth like
 blackburn	for (i=0; i<N; i++)
 blackburn	blablabla
 blackburn	vec.multiply(blablabla)
 blackburn	I'd rather use only some fors than mixing it up
@sonney2k	blackburn, I don't see any problem so far...
 blackburn	I don't know
 blackburn	may be it just for me :)
 blackburn	I think that all the code should be on the same 'level'
 blackburn	and in fact we can't generalize it
@sonney2k	blackburn, what is the problem to have specialized implementations for specific data types?
* sonney2k is wondering what happened to blackburn who suggested this in the first place...
 blackburn	haha
 blackburn	okay well my experience of working with arpack and algos changed me
 blackburn	for example
 blackburn	what are the operations for matrices?
 blackburn	mainly dot product
@sonney2k	blackburn, just the basic ones we need in the algos
 blackburn	yes but sometimes not basic ones is needed
 blackburn	i.e. it is triangular matrix or so
 blackburn	in this case using general way will cause lower performance
 f-x	sonney2k: in SVMSGD, lambda=1/num_vec.. in the online version should i keep this as a parameter with some default constant value (1e-4 as in Leon's version) or something else? because the weights seem to depend quite a bit on it
 blackburn	so my point is to use 'expert-mode' of these things
@sonney2k	blackburn, well that is very specific and you could either have a specific impl. in SGMatrix or separate
 blackburn	clapack, cblas, etc
 blackburn	not A.dot(b)
@sonney2k	f-x, *sigh* that can really screw up everything - you should ask John about this - he is the expert
@sonney2k	blackburn, yes always use expert mode of course
 blackburn	the pros of doing it this way is that if we want to multiply some part of matrix or so - we just change N->k or so
 f-x	sonney2k: in Leon's svmsgd2.cpp, he sets lambda=1e-4 which can be changed through a command line option.. hence i thought it could be something to let the user decide
 blackburn	if we want to do this trick with some a.dot(b) - we have to change it to some cblas routine, right?
@sonney2k	f-x, I guess you have no other choice
 f-x	sonney2k: i guess.. anyway an email to john is on the way..
@sonney2k	blackburn, you can impl. a.dot(b) using cblas for float* types and for other types using a loop
 blackburn	my point is: encapsulating some operations won't really improve readability
@sonney2k	blackburn, ehh why not?
@sonney2k	when you can always write a.dot(b) not matter what type and get the best impl. underneath?
 blackburn	because even small changes: some cutting of matrix or so - will cause to change from that a.dot to cblas_dgemm, etc
 blackburn	if some apply_to_feature vector have MANY fors like LLE does
 blackburn	some a.dot will not really improve readability
@sonney2k	blackburn, but for these you use specific impl's anyways
 blackburn	so I think we better use specific all the time :)
 blackburn	I mean we have two ways: some old-school hard-code mutha-fucka expert coding everywhere _or_ mix some first with a.dot(b)
 blackburn	don't you think so?
@sonney2k	blackburn, there is one 'common' way of using a matrix/vector
@sonney2k	and one for kewl shapes etc
 f-x	sonney2k: i just checked the code of vw - the default in that is 0.001. (again set through the command line) so it doesn't look like it will be much of a problem to use a similar thing in our implementation.. will wait for john's reply though
@sonney2k	I would define the operations for the 'common' case only
@sonney2k	f-x, I read your email :)
 f-x	sonney2k: oh ok :)
@sonney2k	f-x, I would suggest to document that 1/num_examples is a good starting point
@sonney2k	and then set the default value like SGD does
 f-x	sonney2k: okay, will do
 f-x	but i still suggest we use separate batch/online versions of algorithms
 f-x	because such things may be lost out when we're converting it into something depending on the online framework
@sonney2k	blackburn, f-x now has the problem for very simple operations like multiply with scalar, add some vectors
@sonney2k	blackburn, since these algorithms all not use a real vector data type things become unreadable quickly...
 blackburn	why?
 blackburn	oh I don't know
@sonney2k	blackburn, all our interface functions cannot use SGVector etc / or if we use them we always have to vec.vector / vec.lenght
 blackburn	may be I was working on some fancy things too many hours
@sonney2k	blackburn, well lets have a look when f-x is through the code
@sonney2k	f-x, btw can I now merge the features patch?
@sonney2k	f-x, did you do the small changes?
 blackburn	e.g. arpack wrapper  uses cholesky, diagonal matrices, ..
 blackburn	no way to really hide it somehow
@sonney2k	blackburn, yeah - surely not sth. fo SGMatrix :)
 blackburn	may be dgemm could be hided
 blackburn	and saxpy
 f-x	sonney2k: its unchanged, but it will compile.. problem is i made further (unrelated) changes to those files afterwards, so if I push and make a pull request now, those things will come up too..
@sonney2k	f-x, why do you do this? This patch is way to big anyways already
@sonney2k	f-x, can't you just do small changes that I can somehow digest in a few minutes?
@sonney2k	it is really growing too big for me - and hard to realize what all the consequences are
* blackburn should learn some gdb and valgrind
 f-x	sonney2k: i had to make those changes for the sgd.. anyway i'll revert back and merge just those minor changes, then update my copy using it
@sonney2k	f-x, anyway what are these unrelated changes now?
 f-x	just give me half an hour
 f-x	sonney2k: i'll push those changes later - they won't come up in the pull request
@sonney2k	btw, I am now reachable during normal working hours that is 7-15hrs UTC
* blackburn should take some teeth medicine :(
@sonney2k	blackburn, vodka?
 blackburn	sonney2k: vodka helps but it produces headache at morning
 blackburn	I've got a pulpitis again hhr
@sonney2k	poor blackburn
 blackburn	sonney2k: what do you use for navigating when some vim'ing?
 blackburn	just console?
@sonney2k	I don't understand the question
 blackburn	well there are some nerdtree or so
 blackburn	I mean do you exit vim, change dir, etc
@sonney2k	blackburn, I use gnome-terminal with multiple tabs open
@sonney2k	one for vim, one for running examples etc
 blackburn	so cd... blabla
 blackburn	vim blabla
 blackburn	:wq
 blackburn	vim blabla2
 blackburn	this way?
 blackburn	is there some way to 'dir' current directory in vim, open something?
@sonney2k	I don't exit
@sonney2k	but yes jsut vim /path/todir
@sonney2k	or :e /path/to/dir
 blackburn	aha
 blackburn	that is exactly I was asking
 blackburn	eigs=[0.0000000000,0.0000000000,0.0000000000,0.0000000000]
 blackburn	Time passed 0.000718832015991
 blackburn	fantastic speed lol
 blackburn	forgot to uncomment at least one eigensolver :D
@sonney2k	:))
-!- blackburn [~blackburn@188.122.238.99] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@188.122.238.99] has joined #shogun
@sonney2k	f-x, any news?
* sonney2k is now only semi-awake
 f-x	sonney2k: yes - i'm making the changes into another cloned branch
 f-x	i have to remove those macro declarations right?
@sonney2k	f-x, ok I guess then this will be the first thing I can look at tomorrow morning
 f-x	ok.. the pull request should be there by then
 blackburn	sonney2k: better brush your teeth first, not shogun :D or will be having similar problems :)
@sonney2k	blackburn, I know what you are talking about ...
 CIA-32	shogun: Sergey Lisitsyn master * rccfa941 / src/libshogun/preprocessor/ClassicMDS.cpp : Fixed segfault at ClassicMDS eigenvalues vector - http://bit.ly/iy22Bq
 blackburn	or damn shift-invert mode
 blackburn	oh*
 blackburn	another day with no serious result, it doesn't converge now for some reason
--- Log closed Tue Jul 05 00:00:46 2011
