--- Log opened Wed Jul 24 00:00:44 2013
-!- nube1 [~rho@36.252.126.80] has quit [Ping timeout: 246 seconds]
* iglesiasg ZZZzzzZZ
@iglesiasg	good night!
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
-!- nube [~rho@36.253.40.168] has joined #shogun
-!- nube [~rho@36.253.40.168] has quit [Ping timeout: 256 seconds]
-!- FSCV [~FSCV@50.7.50.60] has quit [Quit: Leaving]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has left #shogun ["QUIT :Leaving."]
-!- nube [~rho@36.253.146.74] has joined #shogun
-!- nube [~rho@36.253.146.74] has quit [Ping timeout: 264 seconds]
-!- nube [~rho@36.253.129.33] has joined #shogun
-!- hushell [~hushell@8-92.ptpg.oregonstate.edu] has quit [Ping timeout: 268 seconds]
 shogun-buildbot	build #402 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/402
-!- nube1 [~rho@36.253.255.182] has joined #shogun
-!- nube [~rho@36.253.129.33] has quit [Ping timeout: 264 seconds]
-!- nube1 [~rho@36.253.255.182] has quit [Ping timeout: 246 seconds]
-!- nube [~rho@49.244.110.25] has joined #shogun
-!- Yanglittle [b74040fc@gateway/web/freenode/ip.183.64.64.252] has joined #shogun
 Yanglittle	excuse me, how to use the kernel_normalizer in the python_modular?
 Yanglittle	excuse me, how to use the kernel_normalizer in the python_modular?
 shogun-buildbot	build #467 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/467
-!- nube [~rho@49.244.110.25] has quit [Quit: Leaving.]
-!- foulwall [~user@2001:da8:215:503:5dac:765e:def8:c0d3] has joined #shogun
-!- nube [~rho@116.90.239.13] has joined #shogun
-!- nube [~rho@116.90.239.13] has quit [Quit: Leaving.]
-!- nube [~rho@116.90.239.13] has joined #shogun
-!- foulwall [~user@2001:da8:215:503:5dac:765e:def8:c0d3] has quit [Remote host closed the connection]
-!- nube [~rho@116.90.239.13] has quit [Ping timeout: 246 seconds]
-!- nube [~rho@116.90.239.13] has joined #shogun
-!- nube [~rho@116.90.239.13] has quit [Read error: Connection reset by peer]
-!- nube [~rho@116.90.239.13] has joined #shogun
 gsomix	good morning
-!- hushell [~hushell@c-24-21-169-136.hsd1.or.comcast.net] has joined #shogun
-!- gsomix_ [~gsomix@109.169.225.10] has joined #shogun
-!- gsomix [~gsomix@80.234.25.58] has quit [Ping timeout: 246 seconds]
-!- foulwall [~user@2001:da8:215:503:f4eb:f5fe:de2f:75f7] has joined #shogun
-!- nube [~rho@116.90.239.13] has quit [Quit: Leaving.]
-!- nube1 [~rho@116.90.239.3] has joined #shogun
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has joined #shogun
-!- nube1 [~rho@116.90.239.3] has quit [Ping timeout: 248 seconds]
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has quit [Ping timeout: 250 seconds]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has joined #shogun
-!- nube [~rho@116.90.239.13] has joined #shogun
 thoralf	Hey GUIs
 thoralf	err guys ;)
-!- nube [~rho@116.90.239.13] has quit [Quit: Leaving.]
@iglesiasg	hehe hi thoralf!
 thoralf	iglesiasg:)
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- foulwall [~user@2001:da8:215:503:f4eb:f5fe:de2f:75f7] has quit [Remote host closed the connection]
-!- foulwall [~user@2001:da8:215:503:f4eb:f5fe:de2f:75f7] has joined #shogun
 thoralf	sonney2k: Didn't get java_modular running and found out, jblas is missing.  Could configure check the jblas dependency?
 thoralf	sonney2k: I missed, that it already checks the dependecy.
@sonney2k	thoralf, I totally feel like a UI now :D
 thoralf	:)
@sonney2k	van51, any updates on quadratic?
 hushell	iglesiasg: hi
@iglesiasg	hey hushell
 van51	sonney2k: not yet, I'm working on it
 van51	sonney2k: I'm trying to minimize the number of calls to murmurhash
@sonney2k	gsomix_, are you reworking the line reader?
 hushell	iglesiasg: did you run the recent unit test of SGObject.clone_equals_Mosek?
 thoralf	sonney2k: I fixed check-examples for the other interfaces as well: https://github.com/shogun-toolbox/shogun/pull/1243
 hushell	iglesiasg: I got errors like this: [ RUN      ] SGObject.clone_equals_Mosek
 hushell	Program received signal SIGSEGV, Segmentation fault.
 hushell	0x00007ffff3fc794b in MSK_deleteenv () from /usr/local/lib/libmosek64.so.6.0
 thoralf	sonney2k: I think it's ready to merge, as soon as travis is done.
 van51	sonney2k: I've sent a PR btw, check it when you have time pls
@iglesiasg	hushell: oh. No, I didn't run it
@iglesiasg	hushell: in what line does it crash?
 hushell	iglesiasg: this test case is generated automatically
 thoralf	sonney2k: I made several changes to isolate trivial changes in the diff.  Shouldn't be a big deal.
@iglesiasg	hushell: yes, I think it is what heiko and/or wiking were working on recently
 hushell	you can check unit/base/clone_unittest.cc
@iglesiasg	hushell: I guess they didn't try with Mosek install and maybe that's why
@iglesiasg	hushell: I don't have mosek install in this machine either so I cannot try right now
 hushell	they created 753 tests...
 hushell	iglesiasg: okay, I'll skip it right now
@iglesiasg	hushell: it would be nice if it could be fixed actually
@iglesiasg	I can try to have a look at it some time this week
@iglesiasg	I will write a github issue so we don't forget
@sonney2k	van51, I guess you can just store the hash in an array (which you have to allocate and free each time)
@sonney2k	thoralf, yeah sounds good
 van51	sonney2k: yes that's the only thing I can think of as well
@sonney2k	hushell, that is a bug iglesiasg should fix :)
@sonney2k	van51, lets hope malloc overhead is not so bad :)
 hushell	sonney2k: we can wait Heiko install Mosek :)
 thoralf	sonney2k: Disclaimer: Couldn't get r_modular and perl_modular running -- they were already broken before my intervention
 thoralf	sonney2k: Didn't touch ruby_modular and csharp_modular, since I don't have (and want to) install all dependencies.
 gsomix_	sonney2k, yep
 gsomix_	sonney2k, I'll update PR at evening
@sonney2k	thoralf, bah so I have to do it
@sonney2k	hushell, I guess Heiko doesn't like to be a hero too often :D
@sonney2k	hushell, besides it is iglesiasg's code so his duty :)
@iglesiasg	sonney2k: all right, I got it :) I said I would take a look at it this week
@iglesiasg	sonney2k: I don't even have mosek installed here right now
@sonney2k	iglesiasg, I don't know anyone who has :P
@iglesiasg	sonney2k:  I created the issue some minutes ago and assigned it to me
@iglesiasg	sonney2k: well hushell should have it if he has gotten the error
@sonney2k	...except hushell :)
 hushell	sonney2k: yeah I have it right now
@iglesiasg	sonney2k: I talked about it with Nico during the workshop, I would really like to get rid of the Mosek thing
@iglesiasg	sonney2k: keep the solver but use something different instead of Mosek for the QP
 hushell	iglesiasg: we can try LBFGS for doing this
@sonney2k	iglesiasg, yeah would be great. Otherwise it is just dead code *not* covered by any tests
@iglesiasg	hushell: no idea what that is, let me check
@iglesiasg	hushell: nonlinear optimization?
@iglesiasg	hushell: why non linear?
@iglesiasg	ah wait that is BFGS
@iglesiasg	I guess the L stands for linear
@iglesiasg	Limited-memory BFGS, maybe not then
 hushell	iglesiasg: should be L-BFGS my bad
 hushell	iglesiasg: I remember I saw it somewhere in shogun, someone ported liblbfgs
@iglesiasg	hushell: aham I see!
 hushell	ok in the optimization
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
 lisitsyn	ha I broke through the shitty connection
@iglesiasg	hushell: what I am wondering is that what I am solving with Mosek is a quadratic program. It reads that BFGS is for nonlinear optimization, so I am not sure whether it can be applied for QP
@sonney2k	iglesiasg, what exactly do you  need? a general qp or sth simpler like in libqp?
@sonney2k	http://cmp.felk.cvut.cz/~xfrancv/libqp/html/
@iglesiasg	sonney2k: we already faced this issue this year, libqp was not enough
@sonney2k	^ iglesiasg is that sufficient?
@sonney2k	iglesiasg, I don't remember what you need in addition
@iglesiasg	sonney2k: let me have a look an refresh it
@iglesiasg	sonney2k:  IIRC it was something related to block constraints
 hushell	iglesiasg: I know some people using L-BFGS for SSVM, this package is the most common one http://www.di.ens.fr/~mschmidt/Software/minFunc.html
@iglesiasg	sonney2k: ok, I remember now
@iglesiasg	sonney2k: the problem is pretty similar to "QP task with box constraints and a single linear equality constraint"
@iglesiasg	sonney2k: but we have a x^T a <= b
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 240 seconds]
 hushell	iglesiasg: this is also related to what I am going to do next, using SGD for SSVM
@sonney2k	that is what libqp does
@iglesiasg	sonney2k: it does x^T a = b, we need <=
@iglesiasg	hushell: yep
@sonney2k	iglesiasg, look at the homepage it seems to also do <=
@iglesiasg	sonney2k, hushell : Nico suggested that one could actually used SGD to solve this QP too
@iglesiasg	sonney2k: do you mean the <= in the first part: "QP task with simplex constraints"?
@sonney2k	yeah
@iglesiasg	sonney2k: well, but the constraints are different in there
@iglesiasg	sonney2k: simplex constraints, no box constraints
@sonney2k	ahh misread you need dot with a
@iglesiasg	sonney2k: I am no optimization expert, but I think with the first ones you cannot couple constraints among the variables of x
@iglesiasg	all right, then
@sonney2k	iglesiasg, an sgd style solution should be very easy to do
 hushell	iglesiasg: you mean in dual form this constraint is no longer exist
@sonney2k	iglesiasg, it was x^T 1 <=b anyway
@iglesiasg	sonney2k: it should be very easy to implement but the tuning can get hard :)
@iglesiasg	sonney2k: yeah sure but our a is not 1 always :)
@iglesiasg	mmm what was the a...
@iglesiasg	IIRC we get one constraint for each margin violator
@iglesiasg	and our x looks like: x = [w slacks]
@iglesiasg	so I think the a was basically ones, zeroes and one -1
@iglesiasg	ones for w, a -1 for the example that gives the constraint, zeros in the rest
@iglesiasg	hushell: to solve it with SGD I think we don't need to go to the dual, right?
@iglesiasg	hushell: we need to write the constrained as unconstrained
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: lambday :develop * 665709d / tests/unit/base/clone_unittest.cc.py: https://github.com/shogun-toolbox/shogun/commit/665709daf9cab6de012025d952a35a96366ba6ee
 shogun-notifier-	shogun: failing SNPStringKernel added to clone ignore list to pass all unit-tests
 shogun-notifier-	shogun: lambday :develop * 5b20d7f / tests/unit/mathematics/logdet/LogDetEstimator_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/5b20d7f18816513616f7275166cf9d19ab6a891f
 shogun-notifier-	shogun: reduced time and accuracy for log-det estimator unit-test
 shogun-notifier-	shogun: lambday :develop * 0197f6a / src/shogun/mathematics/logdet/ (2 files): https://github.com/shogun-toolbox/shogun/commit/0197f6acc1c9bc299dc29e7fb1aa82940d5217e6
 shogun-notifier-	shogun: removed unnecessary template instantiation
 shogun-notifier-	shogun: lambday :develop * 8ecc2dc / tests/unit/base/clone_unittest.cc.py: https://github.com/shogun-toolbox/shogun/commit/8ecc2dc6f2a1bb6bdc0715a24a03f514c764cd04
 shogun-notifier-	shogun: added failing weighted degree position string kernel to ignore list
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * c76a576 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/c76a5766667d8c2ba0f82540aef3166dc7149149
 shogun-notifier-	shogun: Merge pull request #1284 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: SNPStringKernel added to clone-test ignore list, few changes in log-det
@iglesiasg	sonney2k: Nico also suggested talking to vojtech and see if libqp could be extended to cover this problem
 hushell	iglesiasg: yes, but usually people work with dual form and optimize with SGD
@iglesiasg	hushell: aham!
 hushell	iglesiasg: we can try both actually
@iglesiasg	hushell: do you know why?
 hushell	iglesiasg: not very clear, I need to check the papers, but maybe the dual form has simpler constraints
 hushell	iglesiasg: we can have deep discussion when comes to the point
 shogun-buildbot	build #1518 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1518  blamelist: lambday <heavensdevil6909@gmail.com>
 hushell	I have to go to sleep now, Sorry for my absense of the mid-term meeting, I was not able to get connected
@iglesiasg	hushell: sure. I have the intuition that structured learning would be very inefficient in the dual though
 hushell	Sorry guys, I will summarize my work in my next weekly report if you are interested in
@iglesiasg	hushell: well not in general, bundle methods in the dual are fast. But the algorithm implemented in the PrimalMosekSOSVM I think it would be worse in the dual
@iglesiasg	worse as slower
 shogun-buildbot	build #1519 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1519  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	van51, I looked at the code it looks correct now! One thing - maybe it might make sense to do the hashing trick in some function I mean the
@sonney2k	uint32_t h_idx = CHash::MurmurHash3((uint8_t* ) &vec.features[i].feat_index, sizeof (index_t),
@sonney2k	   vec.features[i].feat_index);
@sonney2k	h_idx = h_idx % dim;
@sonney2k	this thing somewhere in a static function that you use across all hashingdotfeatures
 van51	sonney2k: true.
 van51	sonney2k: will do!
@sonney2k	van51, if you see other common patterns - reduce code duplication where possible
@sonney2k	van51, I am merging now though do it later
 van51	sonney2k: in the same PR or in a new one?
 van51	sonney2k: cool :D
 hushell	iglesiasg: what do you mean worse, I think they are equivalent in the sense KKT conditions are satisfied
@iglesiasg	hushell: worse as that it would be much slower
 shogun-notifier-	shogun: van51 :develop * 50fe540 / / (13 files): https://github.com/shogun-toolbox/shogun/commit/50fe540e8c961f8d7d57a7e5b30f40d8f994ac35
 shogun-notifier-	shogun: Changed behavior in Hashed numerical classes
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * fa5d7c4 / / (13 files): https://github.com/shogun-toolbox/shogun/commit/fa5d7c46ac30933af1f74915cc7616d64f8be71a
 shogun-notifier-	shogun: Merge pull request #1282 from van51/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Corrected behavior of Hashed numerical classes
@iglesiasg	hushell: let me try to elaborate
@sonney2k	gsomix_, to avoid misunderstandings how are you doing it now?
 shogun-buildbot	build #1520 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1520  blamelist: van51 <vangelis_51@hotmail.com>
@sonney2k	thoralf, currently the buildbot installs stuff somewhere and then runs the make check-examples etc
@iglesiasg	hushell: it is about the evaluation of the loss, in the dual you need to go over all the non-zero dual variables to compute the loss for one example. The number of non-zero dual variables is the order of n
@sonney2k	so it would be rather useful to have that at least for the test still
@iglesiasg	hushell: and that is in general, not even for structured learning. In structured learning there are several dual variables for each data points, so it takes even more computations
 hushell	iglesiasg: yes, this is the number of violated constraints basically
@iglesiasg	hushell: yes
 shogun-buildbot	build #1521 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1521  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 4964cbb / tests/unit/mathematics/Complex_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/4964cbbf69e48e398c79a0fc295c137e575f5550
 shogun-notifier-	shogun: make complex a bit more tolerant
@sonney2k	foulwall, any updates on the readme / the ocr demo?
 hushell	iglesiasg: let's talk based on the BMRM paper : http://users.cecs.anu.edu.au/~chteo/pub/TeoLeSmoVis07.pdf
@iglesiasg	hushell: I don't have full understanding of this behaviour though. This is something Patrick explained some months ago
 hushell	IIRC, primalMosek is solving eq.10, and BMRM solve eq.12 using libqp
 shogun-buildbot	build #1517 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1517  blamelist: lambday <heavensdevil6909@gmail.com>
 hushell	iglesiasg: okay, I think also too late for me to discuss this in detail
 hushell	iglesiasg: we can find another time to figure out how to solve the particular QP efficiently
@iglesiasg	hushell: hehe sure. Let's talk again about it when the moment to get Mosek to a better life arrives :)
-!- nube [~rho@49.244.94.101] has joined #shogun
@iglesiasg	hushell: good night!
 hushell	iglesiasg: night, btw I updated the PR
@iglesiasg	hushell: cool, I check right away
 hushell	iglesiasg: okay, CU
-!- hushell [~hushell@c-24-21-169-136.hsd1.or.comcast.net] has quit [Quit: WeeChat 0.3.7]
@sonney2k	shogun-buildbot, force build 'deb1 - libshogun'
 shogun-buildbot	build forced [ETA 15m38s]
 shogun-buildbot	I'll give a shout when the build finishes
 shogun-buildbot	build #1522 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1522
@sonney2k	van51, btw another good test for the hashing dense / sparse would be to compare it directly with the dense features. for sufficiently large bitsize all the ops should be the same.
@sonney2k	shogun-buildbot, dance
 shogun-buildbot	<(^.^<)
 shogun-buildbot	<(^.^)>
 shogun-buildbot	(>^.^)>
 shogun-buildbot	(7^.^)7
 shogun-buildbot	(>^.^<)
@sonney2k	man a little bit of green again!
@iglesiasg	so sweet :)
* sonney2k goes to see some blue
@sonney2k	cya
@iglesiasg	have fun!
 shogun-buildbot	build #745 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/745  blamelist: Soeren Sonnenburg <sonne@debian.org>
 thoralf	sonney2k: "thoralf, bah so I have to do it" <-- I didn't break them.  I just couldn't change them.
 thoralf	sonney2k: "thoralf, currently the buildbot installs stuff somewhere and then runs the make check-examples etc" <-- I don't understand.  With my changes, check-examples relies on the compiled libraries from the source directory.  Not the target location.
@sonney2k	lamday, HeikoS ... http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/745/steps/compile/logs/stdio
 thoralf	sonney2k: So, calling "make install" does not hurt, but has no effect on check-examples either.
 shogun-buildbot	build #1058 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1058  blamelist: Soeren Sonnenburg <sonne@debian.org>
 thoralf	sonney2k: Did I miss something?
 shogun-buildbot	Hey! build deb1 - libshogun #1523 is complete: Success [build successful]
 shogun-buildbot	Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1523
 shogun-buildbot	build #1262 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1262  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- HeikoS [~heiko@nat-185-60.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@iglesiasg	hi HeikoS
@HeikoS	iglesiasg:  hi!
@iglesiasg	HeikoS: I am having a look at CMosek, and yeah the attributes does not seem to be initialized
 shogun-buildbot	build #1381 of deb3 - modular_interfaces is complete: Failure [failed compile python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1381  blamelist: Soeren Sonnenburg <sonne@debian.org>
@iglesiasg	HeikoS: but I am actually thinking that this class does not really need to be a CSGObject
@HeikoS	iglesiasg: yes that usually the reason
@HeikoS	iglesiasg: doesnt matter, it is now :)
@HeikoS	iglesiasg: if you initialise all members in the std constructor, the bug will probably go
@HeikoS	iglesiasg: is mosek hard to install?
 lisitsyn	I'd say easy
@iglesiasg	HeikoS: in the header Mosek.h I need to include some Mosek header
@HeikoS	lisitsyn: have you seen the two bug reports?
@HeikoS	its not in ubuntu repo
 lisitsyn	HeikoS: not yet
 lisitsyn	HeikoS: of course it is not
@HeikoS	iglesiasg: so could you fix the init bug?
 lisitsyn	HeikoS: it is proprietary $hit
@iglesiasg	HeikoS: yeah, sure
 lisitsyn	HeikoS: https://github.com/shogun-toolbox/shogun/issues/1265 ha!
@iglesiasg	HeikoS: but I think it would be a better idea not making it a CSGObject
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * b94061e / src/shogun/classifier/FeatureBlockLogisticRegression.cpp: https://github.com/shogun-toolbox/shogun/commit/b94061edad77a196439b7ac3299c5748456c6188
 shogun-notifier-	shogun: Fixed group lasso indices check. Fixes #1286
@HeikoS	iglesiasg: maybe, but lets dont change things, too much work ;)
@HeikoS	lisitsyn: do you like that idea?
@HeikoS	lisitsyn: unit test the group lasso!
@HeikoS	at least this bit you fixed
 lisitsyn	HeikoS: ok will try rather soon
@HeikoS	lisitsyn: because these bugs are evil, scare away people
@HeikoS	lisitsyn: and the guy is a potential user :)
@HeikoS	good oportunity to make things better for lasso
 lisitsyn	HeikoS: about setters/getters
 lisitsyn	HeikoS: I think in python we can do some magic to cast objects
@HeikoS	iglesiasg: btw, valgrind this program to find uninitialised memory for Mosek#
 lisitsyn	but in e.g. java we are going to use something like
 lisitsyn	svm.parameter("C").as_float()
@HeikoS	iglesiasg:  https://gist.github.com/anonymous/6069772
 lisitsyn	HeikoS: I don't know if people would like that
@HeikoS	lisitsyn: I dont know about the whole model selectoin framework anymore
@iglesiasg	HeikoS: all right, thank you
@HeikoS	lisitsyn: its so complicated to use and maintain
@HeikoS	lisitsyn: and soooo easy to emulate: a double loop for SVMs with Gaussian kernel
@iglesiasg	HeikoS: I am going to prepare a Mosek installation in Shogun
@HeikoS	so I am currently more for dropping it
@HeikoS	lisitsyn: have you seen my issue on this?
 lisitsyn	HeikoS: drop?
@HeikoS	lisitsyn: yes, just keep x-validation
-!- travis-ci [~travis-ci@ec2-50-16-34-49.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9427950
-!- travis-ci [~travis-ci@ec2-50-16-34-49.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	HeikoS: that's a great issue
 lisitsyn	HeikoS: this gets me back to thoughts that we've got to seriously change something
@HeikoS	lisitsyn: this one is easy
@HeikoS	just drop it
@HeikoS	lisitsyn: not many things depend on it
@HeikoS	only GPs
 lisitsyn	HeikoS: no I mean in general
@HeikoS	lisitsyn:  I would rather write modelselection stuff for the machines individually
 lisitsyn	I'd drop most of code yes
@HeikoS	grid-search is easy so we dont need that
@HeikoS	lisitsyn: yes, agree, so this is a good place to start maybe
@HeikoS	lisitsyn: just thinking whether this block things
@HeikoS	lisitsyn: for example, more intelligent search algorithms for model-selection
@HeikoS	lisitsyn: cannot be done anymore then
@HeikoS	lisitsyn: but I think its infeasible to implement those anyway
 lisitsyn	HeikoS: I have a feeling this should not be done in C++
@HeikoS	lisitsyn: yeah exactly
@HeikoS	maybe we can do this via swig in python at some point or so
 lisitsyn	either we raise the level of abstraction
 lisitsyn	in C++ code
@HeikoS	since its not even time dependent
@HeikoS	lisitsyn: yep agreed,
 lisitsyn	or we use something more high-level
@HeikoS	Ill talk with Roman on how to modify the GP stuff that is based on model-selection
@HeikoS	lisitsyn: I totally agree
 lisitsyn	HeikoS: the problem is that we don't use high-level C++
@HeikoS	lisitsyn: maybe write some thoughts in the issue, to document them
@HeikoS	we often forget what we talked about :)
 lisitsyn	HeikoS: yeah will try to formulate
@HeikoS	lisitsyn: cool!
@HeikoS	I have to do some work now, see you all later today
 lisitsyn	HeikoS: well we are in search of some common point
@HeikoS	lisitsyn: yep, lets do a documented discussion in the issue
@HeikoS	then other people also can read about it and tell what they think
 lisitsyn	HeikoS: we have more resources than we use
@HeikoS	lisitsyn: ?
 lisitsyn	HeikoS: well if it was more high-level
 lisitsyn	we could spend less time etc
 lisitsyn	I mean 8 gsocers + some of us
 lisitsyn	that's a lot
@HeikoS	lisitsyn: yeah, its a big thing though
 lisitsyn	this could change the world
 thoralf	;)
 lisitsyn	but we do something low-level
@HeikoS	lisitsyn: could you formalise this in an issue?
@HeikoS	lisitsyn:  Id really like to document all these ideas to have proper discussions
 lisitsyn	HeikoS: yeah a bit later as I have to arbeit too
@HeikoS	was very useful at c-base meeting
@HeikoS	lisitsyn: arbeit arbeit brot brot banane :)
@HeikoS	lisitsyn: ok see you later then
 lisitsyn	arbeit macht frei haha
@HeikoS	lisitsyn: ouch!
 lisitsyn	HeikoS: hah yes not very correct I guess but that's just the language
 thoralf	HeikoS: lisitsyn is not required to be german-PC ;)
@HeikoS	thoralf: well .... whatever
@HeikoS	see you! :)
 shogun-buildbot	build #1524 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1524  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 lisitsyn	thoralf: that's a curious thing one can't say some things just because of its usage earlier
 thoralf	lisitsyn: it's called self-censorship
 thoralf	lisitsyn: I know I wasn't responsible for this - but we learned in school to avoid this.  Overwise we could be offended by others, who practice more PC-aware speaking.
 lisitsyn	thoralf: yes sure - I just mean it has nothing to do with the meaning
 thoralf	lisitsyn: Yes.
 lisitsyn	like hidden agenda
 lisitsyn	thoralf: I mean it is not 'kill all X' or whatever so I find it weird
-!- Yanglittle [b74040fc@gateway/web/freenode/ip.183.64.64.252] has quit [Quit: Page closed]
 lisitsyn	thoralf: although I agree this should be avoided and now feel cumbersome :D
 lisitsyn	thoralf: but again I feel this agenda should be gone
 thoralf	lisitsyn: I think every "nation" has similar "overloaded" words.
 lisitsyn	thoralf: russians exalt stalin still
 thoralf	Uh.
 thoralf	Yeah, only one example.  Religion is another source for good examples. :)
 lisitsyn	thoralf: oh that's the thing I am totally PC-uncompliant
 lisitsyn	:D
 thoralf	Hmm, having a std::istringstream - do you know how to check the status?  i.e. if I'm trying to cast an "token" to "int32" and it fails?
-!- travis-ci [~travis-ci@ec2-50-16-34-49.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9428262
-!- travis-ci [~travis-ci@ec2-50-16-34-49.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	thoralf: there should be some methods to check if it is ok
-!- FSCV [~FSCV@187.210.54.166] has joined #shogun
 thoralf	std::istringstream iss (line); int32_t number; iss >> number; <-- This fails, but I can't detect. :(
 lisitsyn	thoralf: well just catch it then
 lisitsyn	it is an exceptional case right?
 thoralf	lisitsyn: It fails as-in the integer is not correct in case of an overflow.  But it does not raise anything.
 thoralf	lisitsyn: Just return status false.
 lisitsyn	thoralf: no way! should throw something
 lisitsyn	or return
 thoralf	lisitsyn: But eof also gives false.
 lisitsyn	thoralf:
 lisitsyn	http://www.cplusplus.com/reference/istream/istream/operator%3E%3E/
 lisitsyn	thoralf: check failbit
 thoralf	lisitsyn: Thanks.
 thoralf	lisitsyn: I already read lot of stackoverflow stuff, but you're way smarter than stackoverflow. :D
 lisitsyn	thoralf: I am overflown already!
 lisitsyn	:D
 thoralf	lisitsyn: iss.eof(), iss.good(), iss.bad(), iss.fail()
 thoralf	lisitsyn: failbit tells which bit is actually the fail bit. ;)
 thoralf	lisitsyn: But not if it failed.
 lisitsyn	thoralf: but if it is not set it is not failed right?
 thoralf	lisitsyn: Its always set.
 lisitsyn	what's the default then?
 thoralf	lisitsyn: Just kind of a constant.
 lisitsyn	thoralf: anyway
 lisitsyn	thoralf: (ss >> n).fail()
 lisitsyn	thoralf: I guess that
 lisitsyn	I'd go further and just
 thoralf	iss.eofbit 2, iss.failbit 4, iss.badbit 1
 lisitsyn	if (!(iss >> n).good()) { panic }
 lisitsyn	thoralf: ^ something like that I think?
 shogun-notifier-	shogun: Fernando Iglesias :develop * 3c84872 / src/shogun/labels/MulticlassLabels.h: https://github.com/shogun-toolbox/shogun/commit/3c848725b8cf42a8ec2774e651a564c1f9e6d26b
 shogun-notifier-	shogun: Fix MulticlassLabels doc, returned SGVector needs not be cleaned up
 shogun-notifier-	shogun: Fernando Iglesias :develop * de7b308 / src/shogun/labels/MulticlassLabels.h: https://github.com/shogun-toolbox/shogun/commit/de7b308e9f6e927d74c599feb58c8212f30e0d1f
 shogun-notifier-	shogun: Merge pull request #1288 from iglesias/docfix
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Fix MulticlassLabels doc, returned SGVector needs not be cleaned up
 thoralf	(ss >> n).fail() <-- Whats the return value of (ss >> n)?
 lisitsyn	thoralf: stream
 lisitsyn	with some state
 lisitsyn	any << or >> return stream
 lisitsyn	to allow stuff like
 lisitsyn	iss << 1 << 2 << 3;
 thoralf	I see, yes.
 thoralf	this is int32_max + 1 as a string: "2147483648"
 thoralf	iss >> number; casts to 2147483647
 thoralf	No error.
 thoralf	Nothing helps.
 shogun-buildbot	build #746 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/746  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
-!- travis-ci [~travis-ci@ec2-54-224-203-225.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9428454
-!- travis-ci [~travis-ci@ec2-54-224-203-225.compute-1.amazonaws.com] has left #shogun []
 thoralf	lisitsyn: I can't check on "ss", I really need to call what you told: (ss >> n).fail()
 lisitsyn	thoralf: that's different stream
 lisitsyn	ss >> n produces a new stream
 lisitsyn	its state differs
@iglesiasg	what is the rpm build? red hat packet?
 lisitsyn	iglesiasg: ye
 lisitsyn	s
 lisitsyn	no
 lisitsyn	:D
@iglesiasg	?
 lisitsyn	I thought you are asking what is rpm
 lisitsyn	:D
@iglesiasg	haha
@iglesiasg	I mean in our buildbot
 lisitsyn	iglesiasg: that's redhat build but I think there is no package
@iglesiasg	lisitsyn: aham got it
-!- s3b4 [59e3a2e9@gateway/web/freenode/ip.89.227.162.233] has joined #shogun
@iglesiasg	hi s3b4!
 s3b4	hi fernando
 s3b4	right, i'd like to help you reproduce this seg fault i'm seeing
@iglesiasg	s3b4: so how does the example fail?
 s3b4	azureuser@test-py:~/shogun-develop/examples/documented/python_modular$ python st ructure_discrete_hmsvm_bmrm.py Discrete HMSVM BMRM Segmentation fault (core dumped)
 s3b4	and that's it
 s3b4	i'm not sure where to find the core dump on this machine, if that would help
 shogun-buildbot	build #1263 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1263  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
@iglesiasg	s3b4: it would help it we could use gdb, valgrind or similar
@iglesiasg	s3b4: but since you are running it from python that may make things a bit harder, do you think we can try running the C++ example?
 s3b4	never used them. i can spend say an hour on this now. any pointers for me to start?
@iglesiasg	s3b4: if you are using python, your machine should be ready as well to run the C++ example
@iglesiasg	s3b4: one second, let me try it in my machine first
 s3b4	so how does that go?
@iglesiasg	s3b4:  cd to shogun/examples/undocumented/libshogun
@iglesiasg	s3b4: g++ -lshogun so_multiclass_BMRM.cpp
 shogun-buildbot	build #1525 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1525  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
 shogun-buildbot	build #1059 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1059  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
 s3b4	that would be too easy :-) the compilation log is full of undefined references; is there no make for the undocumented examples?
 s3b4	there is, and i'm runnign it now
@iglesiasg	s3b4: yeah, you can do make-check-examples
@iglesiasg	all right
@iglesiasg	s3b4: in the meantime let's try to gdb the python program too
@iglesiasg	s3b4: gdb python and then in the gdb console run structure_discrete_hmsvm_bmrm.py
-!- foulwall [~user@2001:da8:215:503:f4eb:f5fe:de2f:75f7] has quit [Remote host closed the connection]
 shogun-buildbot	build #1382 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1382  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
-!- nube [~rho@49.244.94.101] has quit [Ping timeout: 264 seconds]
-!- travis-ci [~travis-ci@ec2-23-20-210-220.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Fernando Iglesias's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9430992
-!- travis-ci [~travis-ci@ec2-23-20-210-220.compute-1.amazonaws.com] has left #shogun []
-!- foulwall [~user@2001:da8:215:c252:d56f:94fe:80b7:bdac] has joined #shogun
-!- foulwall [~user@2001:da8:215:c252:d56f:94fe:80b7:bdac] has quit [Ping timeout: 264 seconds]
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has joined #shogun
 lambday	HeikoS: hi
 lambday	HeikoS: checked your comments
 lambday	HeikoS: so, we'll be having 2 failing unit-tests if I remove those
@iglesiasg	lisitsyn, sonney2k, wiking, HeikoS: around?
 lisitsyn	 iglesiasg: yes for a few more minutes
@iglesiasg	lisitsyn: good, take a look if you can at this a moment please
@iglesiasg	https://gist.github.com/iglesias/6071253
@iglesiasg	so I am running in my machine the same program that s3b4 is doing
@iglesiasg	from the same commit in github
@iglesiasg	here it runs completely fine, but it crashes in his machine
@iglesiasg	that is gdb output of the crash (sorry for the bad formatting)
@iglesiasg	lisitsyn: any idea why can it crash there and run fine here if it is the same version of Shogun?
 lisitsyn	iglesiasg: no can't say much about it
@iglesiasg	lisitsyn: I am clueless about it. Any idea how to gather more useful info?
@iglesiasg	I valgrind the example here and there was no invalid read/write
 lisitsyn	iglesiasg: valgrind would be more useful probably
@iglesiasg	lisitsyn: yeah, let's valgrind the example in his machine too
 lisitsyn	will get back quite soon!
@iglesiasg	all right
-!- s3b4 [59e3a2e9@gateway/web/freenode/ip.89.227.162.233] has quit [Quit: Page closed]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@iglesiasg	see you later guys
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has quit [Ping timeout: 250 seconds]
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has joined #shogun
 lambday	HeikoS: sonney2k lisitsyn : why its necessary for all template classes to pass for all ptypes in class_list.cpp?
 lambday	for many classes, say LinearOperator, we won't be needing bool, char, etc... but still we gotta instantiate them :(
 lambday	results in huge compile time :(
 lambday	is it feasible that we check what explicit instantiations are declared in corresponding h/cpp.. and check only for those?
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has quit [Ping timeout: 250 seconds]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
@HeikoS	lisitsyn: around?
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Fernando Iglesias :develop * 13c90ba / src/ (7 files): https://github.com/shogun-toolbox/shogun/commit/13c90baca9fabe01a5ae009cca67c8cf1517f3e8
 shogun-notifier-	shogun: Modifications so LMNN can be used from interfaces.
 shogun-notifier-	shogun: Fernando Iglesias :develop * 5e950b1 / src/shogun/distance/CustomMahalanobisDistance.cpp: https://github.com/shogun-toolbox/shogun/commit/5e950b17455c55b15e8682982c692b1bea399a47
 shogun-notifier-	shogun: Use static_cast instead of dynamic_cast to save runtime in custom Mahalanobis distance
 shogun-notifier-	shogun: Fernando Iglesias :develop * 04e7a81 / src/ (8 files): https://github.com/shogun-toolbox/shogun/commit/04e7a816b03c1252fa54ce6988b8a84f64c43c7b
 shogun-notifier-	shogun: Merge pull request #1289 from iglesias/feature/lmnn
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Feature/lmnn
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 shogun-buildbot	build #747 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/747  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
@iglesiasg	hi guys
 shogun-buildbot	build #1060 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1060  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
@iglesiasg	HeikoS, do you know something about this error? http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/747/steps/compile/logs/stdio
@iglesiasg	it seems to be in the logdet framework
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has joined #shogun
@iglesiasg	another user got it before too in ubuntu 12.04
 lambday	HeikoS: hi
@HeikoS	iglesiasg: yeah thats lambday s latest patch
@iglesiasg	lambday, or maybe you know about it even better :)
@HeikoS	lambday:  could you re-include the templates again?
 lambday	which templates?
@HeikoS	lambday: also the unit test fails for the faster runtime thing sometimes
@HeikoS	lambday: the ones you removed in the last patch
@HeikoS	add them again for now
@HeikoS	we first need a machanism to avoid testing them
 lambday	okay but
 lambday	alright
 lambday	shit I wrote many more things but I didn't realize I got dc
@HeikoS	lambday: I know compile time, but that can be fixed later
 lambday	anyway here they are
@HeikoS	current it breaks the tests
 lambday	secondly, say a child class does not define a parent abstract method and stays abstract, but class_list can't find that :( we gotta keep writing that pure virtual signature in each one of them.. we can create a separate list of abstract classes and attach which method(s) makes it abstract, and check if a classs' [21:25] <lambday> parent belong to that list and the current .h doesn't define that, we add it to it [21:25] <lambday> iter
 lambday	HeikoS: alright
 lambday	but why does it break!
 lambday	:-/
 shogun-buildbot	build #1264 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1264  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
@HeikoS	lambday: if you want something to be virtual and also be recognised as virtual, you have to keep the =0 signature
 lambday	yes I did that
@HeikoS	lambday: just add them once again, we can figure that later ;)
@HeikoS	lambday:  http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/747/steps/compile/logs/stdio
 lambday	HeikoS: alright
 lambday	HeikoS: its not because of that
 lambday	Its because I split the template thing into two lines :(
 lambday	I think
@HeikoS	lambday: ah
@HeikoS	ok then
@HeikoS	what cool
@HeikoS	just make sure the build works again :)
 lambday	HeikoS: sending the patch
@HeikoS	lambday: thanks a lot!
 lambday	HeikoS: alright
 lambday	HeikoS: no problem :)
 shogun-buildbot	build #1527 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1527  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
-!- FSCV [~FSCV@187.210.54.166] has quit [Quit: Leaving]
 lambday	HeikoS: please have a look
@HeikoS	lambday:  no PR here yet
 lambday	umm
 lambday	HeikoS: https://github.com/shogun-toolbox/shogun/pull/1291
@HeikoS	lambday:  the unit test also sometimes fails
@HeikoS	could you run the thing locally a large number of times and then set the error to the maximum error obtained?
 shogun-notifier-	shogun: lambday :develop * a726e43 / src/shogun/mathematics/logdet/ (2 files): https://github.com/shogun-toolbox/shogun/commit/a726e43a4e8e95622e877374757b9ef0c5d4a7e2
 shogun-notifier-	shogun: fixed multi line template declaration error
 shogun-notifier-	shogun: Heiko Strathmann :develop * 85d86a4 / src/shogun/mathematics/logdet/ (2 files): https://github.com/shogun-toolbox/shogun/commit/85d86a4c0caa6afd6619ab2cd5e9c5e6a6032fa9
 shogun-notifier-	shogun: Merge pull request #1291 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fixed multi line template declaration error
 lambday	HeikoS: yes.. I'll fix a lower accuracy.. running 10k times as you said
@HeikoS	lambday: but not in the test though :)
 lambday	HeikoS: lol yes :D
@HeikoS	so set the test to n iterations
@HeikoS	then you locally run 100000*n and choose the largest error you got
@HeikoS	(+ some small offset)
 lambday	HeikoS: alright
 lambday	HeikoS: shall I remove SNP and WeightedDegree from the clone test too? they failed in the clone test
@HeikoS	lambday: please rather try to fix them :)
@HeikoS	lambday: or let me do it
@HeikoS	lambday: but this blacklist is for other things (framework issues)
@HeikoS	lambday: these classes can currently not be tested automatically
 lambday	HeikoS: oh alright
@HeikoS	due to issues in the way we treat generics
 lambday	got it
-!- travis-ci [~travis-ci@ec2-23-20-210-220.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Fernando Iglesias's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9439610
-!- travis-ci [~travis-ci@ec2-23-20-210-220.compute-1.amazonaws.com] has left #shogun []
 lambday	HeikoS: I removed those and added a comment
 gsomix_	good evening
-!- gsomix_ is now known as gsomix
 lambday	HeikoS: SNP clone gives segfaults
 naywhayare	anybody here going to the GSoC mentor summit in October?
@HeikoS	naywhayare: hi yes
@HeikoS	lambday: let me check
 naywhayare	HeikoS: I will be there also, perhaps we will run into each other :)
@HeikoS	naywhayare: cool! yeah lets meet then
@HeikoS	naywhayare: which organisation were you again?
 naywhayare	HeikoS: mlpack
@HeikoS	ah yes
 naywhayare	:)
@HeikoS	the speed kmeans paper :)
 naywhayare	I ran into a guy who works on Shark at ICML, I think he said he would be at the summit too
 naywhayare	I completely forgot his name but I remember what he looks like...
@HeikoS	I am really looking forward to meet everyone
 naywhayare	:)
 naywhayare	I don't think any scikit-learn guys will be there; scikit-learn wasn't in GSoC this year -- I'm not sure why
 lisitsyn	I am curious if there is a chance to get there too
 lisitsyn	naywhayare: they are but under PSF I think
@HeikoS	naywhayare: dont know, I think one of our student also applied to them ...
@HeikoS	lisitsyn: would be cool if you joined us
@HeikoS	lisitsyn: but this time you will have to talk more :D
 lisitsyn	HeikoS: oh cooome ooon
@HeikoS	naywhayare: we had our workshop recently, where everyone met, this was really nice
 naywhayare	ah yeah, there scikit is under PSF
 lisitsyn	I have been hearing that basically every day since our workshop
@HeikoS	lisitsyn: haha
@HeikoS	you deserve it ;)
 lisitsyn	oh well then I would not like to join that meeting
@HeikoS	lisitsyn:  ah come on, I am just joking
@HeikoS	of course you should join us
 shogun-buildbot	build #1529 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1529  blamelist: lambday <heavensdevil6909@gmail.com>
@HeikoS	will be nice
@HeikoS	I am really afraid of my computer melting with all these shogun compiles
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
@HeikoS	votjakovr: hi!
@HeikoS	lambday: what is the exact name of the class that fails?
 lambday	SNPStringKernel
 lambday	and another one
@HeikoS	thx
 votjakovr	HeikoS: hi! i've finished posterior approximation stuff and tested with probit likelihood
@HeikoS	lambday: yep there is uninit memory
@HeikoS	votjakovr: nice!
@HeikoS	votjakovr: could you do logit likelihood next for it?
 lambday	WeightedDegreePositionStringKernel
 shogun-buildbot	build #1383 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1383  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
@HeikoS	votjakovr: send the pr! :)
 votjakovr	HeikoS: i've just sent
 lambday	HeikoS: sending the patch with the changes for clone-test blacklist.. will add the log-det reduced accuracy after testing
 gsomix	it seems "thunderstorm" is the most frequent news from my village
 gsomix	so, thundrestorm!
 shogun-buildbot	build #1530 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1530  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	lambday: thanks! I just fixed the memory errors
@HeikoS	lambday:  let me know if you find more
 lambday	HeikoS: okay :) currently checking the log-det thing
 shogun-notifier-	shogun: Heiko Strathmann :develop * 11b9afe / src/shogun/kernel/string/ (2 files): https://github.com/shogun-toolbox/shogun/commit/11b9afed867ed10aaf8f47c54d7a1782e90b2248
 shogun-notifier-	shogun: fixed two uninitialised memory bugs
 shogun-notifier-	shogun: Heiko Strathmann :develop * 97cd7af / src/shogun/kernel/string/ (2 files): https://github.com/shogun-toolbox/shogun/commit/97cd7af19655332aa91db5a7ea2dc08185478b05
 shogun-notifier-	shogun: Merge pull request #1295 from karlnapf/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fixed two uninitialised memory bugs
@HeikoS	votjakovr: I put some comments in the PR
@HeikoS	votjakovr: I will merge anyway, but could you change them before doing other things?
@HeikoS	thanks :)
@HeikoS	votjakovr: oh you already answered, sorry didnt yee
 shogun-notifier-	shogun: lambday :develop * af2cab3 / tests/unit/base/clone_unittest.cc.py: https://github.com/shogun-toolbox/shogun/commit/af2cab3d8212519dc1dcb0e5b1dc30bef51d6ac2
 shogun-notifier-	shogun: removed buggy classes from clone-test
 shogun-notifier-	shogun: Heiko Strathmann :develop * 6cfc86f / tests/unit/base/clone_unittest.cc.py: https://github.com/shogun-toolbox/shogun/commit/6cfc86fd0b72082f7aa1177c8fb607e11495a41f
 shogun-notifier-	shogun: Merge pull request #1294 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: removed buggy classes from clone-test
 shogun-buildbot	build #1061 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1061  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 264 seconds]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 shogun-buildbot	build #748 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/748  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	votjakovr: do you know btw why this is:
@HeikoS	LaplacianInferenceMethod.cpp
@HeikoS	if (eigen_W.minCoeff() < 0)
@HeikoS	line 389
@HeikoS	this block where the matrix is inverted directly
@HeikoS	why is that done
@HeikoS	eigen_L then stores an inverted matrix rather than a cholesky
 shogun-buildbot	build #749 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/749  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
 votjakovr	HeikoS: hmm, it was there before...
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 257 seconds]
@HeikoS	votjakovr: yeah I know, just wondering for what that is
@HeikoS	votjakovr: thanks for the patch btw
@HeikoS	votjakovr: this might be used in our current NIPS paper here :)
 votjakovr	HeikoS: btw gpml uses same trick
@HeikoS	votjakovr: for the inversion?
@HeikoS	or for the thing I commented?
 votjakovr	HeikoS: yep, there is switch between Cholesky and LU decomposition mode in GPML
@HeikoS	votjakovr: I see, ok then leave it, maybe comment it and say that its done as in GPML and maybe even copy the comment the guys made in there
@HeikoS	votjakovr: how about the logit classifier? you said its done?
 shogun-buildbot	build #1062 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1062  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
 shogun-buildbot	build #1265 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1265  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
 shogun-buildbot	build #1531 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1531  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 votjakovr	HeikoS: yep, but i need to debug a little bit and i'll send a PR with numerical integration and logit tomorrow
@HeikoS	votjakovr: ok cool!
@HeikoS	votjakovr: btw did you already have a look at the ipython notebooks?
@HeikoS	lots of possibilities there for GP stuff
@HeikoS	lots of potential
@HeikoS	scikit learn GPs are not as cool as ours, so if we manage to document things well, they will probably be used by many people
@HeikoS	votjakovr: in fact, a collegue here just started using the regression framework and some things you did
 votjakovr	HeikoS: cool :) i'll have a look at it
 votjakovr	HeikoS: about approximation stuff, sorry, i was in hurry a little bit... I'll do like you suggested
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has quit [Quit: Leaving.]
@HeikoS	votjakovr: dont worry, I think it is a bit faster when you dont do the identity stuff
@HeikoS	votjakovr: I have another suggestion btw:
@HeikoS	votjakovr: so currently,  the likelihood evaluation gets a vectors of latent functions
@HeikoS	votjakovr: but sometimes, one wants to evaluate the likelihood for some fixed y for many many fs
@HeikoS	so it would be cool to have a inline C method for that
@HeikoS	so that one doesnt need to call it multiple times
@HeikoS	see what I mean?
 shogun-buildbot	build #1266 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1266  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
 votjakovr	HeikoS: yep :)
@HeikoS	votjakovr: would you add that (returns a matrix rather than a vector
@HeikoS	(and unit test that results are the same)
@HeikoS	votjakovr: I think it only needs to be done in base likelihood class
 votjakovr	HeikoS: but currently we can't call method for evaluating the likelihood from there, since it is pure virtual
@HeikoS	ah damn....
@HeikoS	mmh
@HeikoS	any idea how to solve this? would be annoying to re-write it everytime
 shogun-buildbot	build #1384 of deb3 - modular_interfaces is complete: Failure [failed compile python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1384  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 votjakovr	HeikoS: hmm, make it not pure virtual :)
@HeikoS	votjakovr: sounds good, go for it, maybe just add SG_NOTIMPLEMENTED then
 votjakovr	HeikoS: ok
@iglesiasg	hi pickle27
@iglesiasg	pickle27, I am taking a look at the PR
 pickle27	okay!
@iglesiasg	pickle27, is there already some unit test for Jade?
 pickle27	yeah there is one already
@iglesiasg	pickle27, cool
 pickle27	iglesiasg: the unit test was being wierd before but I think it should be good now, otherwise I'll take a look into it
 pickle27	but then again there were bugs in Jade before so
@iglesiasg	I see
 pickle27	iglesiasg: is Travis up?
 pickle27	we can wait and see what it says
@iglesiasg	pickle27, It didn't start in your pull request for some reason indeed
 votjakovr	pickle27: hi! I've run valgrind on the unit tests and it reported me memory leaks in Jade_unittest.cc and SOBI_unittest.cc, please check it.
 pickle27	hmmm
 pickle27	okay
 pickle27	will do
 pickle27	can you pastebin the output
 pickle27	votjakovr: ^
 votjakovr	pickle27: ok, please wait a minute
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 264 seconds]
 pickle27	iglesiasg: how do I print a matrix with SGDebug?
 votjakovr	pickle27: http://pastebin.com/Nu1EtfUA and http://pastebin.com/USsdpLMm
 pickle27	votjakovr: thanks
@iglesiasg	pickle27, sorry I missed your question
@iglesiasg	pickle27, did you write it before I commented about that in github or?
 pickle27	before, so its all good
 pickle27	Those were the debug prints I was using to get it working and I just thought why delete these?
 pickle27	so I just ifdef'd them out
 pickle27	but they aren't key so if you're okay with them as is I say we leave them otherwise I'll just take them out
@iglesiasg	pickle27, as you prefer
 pickle27	iglesiasg: okay, have you finished going through? I'll push those changes
@iglesiasg	pickle27, I guess between DEBUG_JADE is better than nothing
@iglesiasg	pickle27, it might help people that wants to understand the code
@iglesiasg	pickle27, sure, go ahead
 pickle27	iglesiasg: done
@iglesiasg	pickle27, no idea what's up with travis
@iglesiasg	pickle27, we will have to merge without it
@iglesiasg	pickle27, did you run unit tests? for what interfaces are you compiling, libshogun and python_modular maybe?
 pickle27	yeah those 2, I haven't ran the unit tests but I can
 pickle27	iglesiasg: unit tests in general aren't running on my machine right now
 pickle27	I think I need to make clean them
@iglesiasg	pickle27, aren't running as they fail?
@iglesiasg	pickle27, just try the ones that are related to your patch if so
@iglesiasg	something like make to build all of them
@iglesiasg	when they start running you ctrl+c it
@iglesiasg	and then
@iglesiasg	./shogun-unit-test --filter_test=Jade*
@iglesiasg	I getting the name of the flag wrong probably, check it in the help of the executable if so
-!- hushell [~hushell@8-92.ptpg.oregonstate.edu] has joined #shogun
@iglesiasg	hi hushell
 hushell	hi iglesiasg
 pickle27	kk
@iglesiasg	hushell, I am merging the PR. Let's see if everything is fine, otherwise there is no problem, we modify the test later :)
@iglesiasg	hushell, for some reason travis is not firing in the pull requests now
 hushell	iglesiasg: I see, I am waiting for travis compiling the PR
@iglesiasg	hushell, but it didn't even start, right?
@iglesiasg	hushell, I don't see anything in here
 hushell	yes, I committed 40 mins ago
 shogun-notifier-	shogun: hushell :develop * 41c0b5f / / (12 files): https://github.com/shogun-toolbox/shogun/commit/41c0b5f3aa1a8a1a8ebdaa29733cbc2eb540fdbc
 shogun-notifier-	shogun: Factor Graph
 shogun-notifier-	shogun: Fernando Iglesias :develop * 532ab10 / / (12 files): https://github.com/shogun-toolbox/shogun/commit/532ab10a2fd4a2c04b9402123264400ab9170215
 shogun-notifier-	shogun: Merge pull request #1224 from hushell/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Factor Graph
 hushell	iglesiasg: you just merged it?
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
 hushell	a short question, for a vector I want to return in the argument, is it better to use SGVector<>& ? I am not sure the case pointer is inside a class
@iglesiasg	hushell, yep
@iglesiasg	hushell, use SGVector better please
 hushell	iglesiasg: but sometimes it doesn't work
@iglesiasg	hushell, an SGVector is basically an int32_t for the length and a T* for the data
 pickle27	iglesiasg: what was the filter line again? I ctrl L irc and the logs are behind lol
@iglesiasg	pickle27, can you do ./shogun-unit-test -h?
@iglesiasg	pickle27, it is one of the first options, --filter sth
 pickle27	k
@iglesiasg	pickle27, I never compiled test in the computer I am now so I cannot check it, sorry
 pickle27	iglesiasg: np
@iglesiasg	hushell, how that it doesn't work?
@iglesiasg	pickle27, did you find out?
 pickle27	yeah I see the option
 hushell	iglesiasg: e.g. CFactor::compute_gradients() I have to use SGVector<float64_t>& parameter_gradient
 pickle27	just trying to get it to work now
@iglesiasg	pickle27, what's the name of your test?
@iglesiasg	hushell, the problem is that SGVector<float64_t>& won't work in target interfaces, just C++
 hushell	iglesiasg: otherwise nothing returned, this probably this parameter_gradient is passed to anther function inside
 pickle27	iglesiasg: the file name?
@iglesiasg	pickle27, yeah that's enough
 hushell	structure/Factor.cpp
 pickle27	Jade_unittest.cc
@iglesiasg	pickle27, then something like
@iglesiasg	pickle27, ./shogun-unit-test --filter=Jade*
@iglesiasg	should make it
 pickle27	yeah I just got it
@iglesiasg	where --filter is the option you have looked up :)
 pickle27	iglesiasg: it ran
 pickle27	wait
 pickle27	it ran but filter didn't work yet
@iglesiasg	?
 hushell	:D I got confused talking together with pickle27 at the same time
@iglesiasg	hushell, hehe yeah sorry :S
 hushell	iglesiasg: not a problem :D
 pickle27	iglesiasg: k unit test needs some work
 shogun-buildbot	build #1063 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1063  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
 hushell	iglesiasg: so you mean a function with argument SGVector& will not working for other languages
@iglesiasg	hushell, exactly
@iglesiasg	hushell, I came to know this the hard way a few months ago
 hushell	iglesiasg: next PR will be smaller :)
 shogun-buildbot	build #750 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/750  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
 votjakovr	pickle27: i ran Jade unit-test with valgrind --leak-check=full ./shogun-unit-test --gtest_filter=CJade*. It might be useful
@iglesiasg	hushell, :)
 hushell	iglesiasg: okay then I need to figure out how to deal with the return arugment problem, not using &
 pickle27	votjakovr: thanks, I looked at your valgrind logs and it didn't help much
@iglesiasg	hushell, It should be totally fine to return SGVector
@iglesiasg	man I love cyg1 buildbot saying "Error: no C++ compiler detected - cannot do anything"
 gsomix	iglesiasg, "won't work in target interfaces, just C++" << strange
@iglesiasg	gsomix, really?
@iglesiasg	gsomix, I had some problems already with methods accepting things with &
@iglesiasg	gsomix, they didn't work in python_modular
 gsomix	swig just should transform reference to pointer in generated code
 gsomix	maybe we just need another typemap for this case
 gsomix	I'll check.
@iglesiasg	gsomix, yes, a typemap can fix it maybe. At the moment it didn't work though
 pickle27	iglesiasg: I fixed the unit test and pushed
 shogun-buildbot	build #1267 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1267  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
@iglesiasg	pickle27, all good now then?
 pickle27	iglesiasg: I think so
 shogun-buildbot	build #1534 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1534  blamelist: hushell <hushell@hushell-U510.(none)>
 pickle27	there is the possible leak the votjakovr found but
@iglesiasg	gsomix, I remember I changed some SGMatrix const & to SGMatrix const, because it didn't work with the reference
 pickle27	it all runs and passes the test
@HeikoS	votjakovr: there are some issues with swig :(
@HeikoS	votjakovr: I think we will have to move all GP stuff to one directory
@iglesiasg	gsomix, I am not sure though if it is just with SGVector/SGMatrix or also with other types like int and so
 votjakovr	HeikoS: yep, i know
@HeikoS	votjakovr: ah well, annoying, since it was just all moved
 gsomix	iglesiasg, but I have one question. what's going with reference counting on while passing SGVector<>&?
@HeikoS	votjakovr: I suggest move everything to machine/gp?
 gsomix	iglesiasg, ok.
@HeikoS	votjakovr: could you do that?
@iglesiasg	gsomix, I never thought of that actually
@iglesiasg	pickle27, you didn't see that leak in your valgrind?
@HeikoS	votjakovr: and then add all classes in interfaces/modular/Machine.i and Machine_includes.i and remove them in the other files?
 pickle27	iglesiasg: I do but there isn't really any other output from valgrind so Im confused
 pickle27	Im swithcing something with my SGNDArray
 pickle27	I think that might be it
@HeikoS	votjakovr: I think this should solve all problems
@HeikoS	votjakovr: or should I quickly do it?
 votjakovr	HeikoS: hmm... why don't move to gp/?
@HeikoS	votjakovr: since its machine based and we need things in swig from machine (I think at least)
 votjakovr	HeikoS: ok
 votjakovr	HeikoS: btw i've updated my PR
 lambday	HeikoS: regarding log-det unit-test, with 500 Gaussian samples after running 100,000 times, max difference I get is 1.9944846621, shall I just put it 2.0 ?
@iglesiasg	all right, I am off now. See you later if so
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
@sonney2k	HeikoS, lambday any clues why this fails http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/750/steps/compile/logs/stdio ?
 lambday	sonney2k: checking
@sonney2k	lambday, thx
 lambday	sonney2k: I just fixed it and sent a patch.. merged already
 lambday	sonney2k: still it gives this error?
@HeikoS	lambday:  yep
@HeikoS	sonney2k: hey do you have a suggestion how to do GPs with swig?
@HeikoS	like in which folder to put stuff
@HeikoS	currently it is located in many folders some regression some classification etc
 pickle27	votjakovr: I found the leak but I don't understand it
@HeikoS	sonney2k: but we seem to get issues with swig
 pickle27	its the call to delete my SGNDArray
@HeikoS	sonney2k: and there are also these things in machine.i
@HeikoS	and GPs are inheriting from machine
@HeikoS	sonney2k: so where to put them, does it matter, doesnt it matter? etc
@sonney2k	man you guys have been chatty!
@sonney2k	I can hardly read all the logs PR comments
-!- travis-ci [~travis-ci@ec2-75-101-178-60.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9441946
-!- travis-ci [~travis-ci@ec2-75-101-178-60.compute-1.amazonaws.com] has left #shogun []
@sonney2k	HeikoS, yeah makes sense to put the regression part in regression and classification in classification
@HeikoS	votjakovr: ok so then lets leave it as it is and figure out the swig issues :)
@HeikoS	votjakovr: so ill try to do that
 gsomix	sonney2k, so, LineReader class + Parsers, right?
 gsomix	sonney2k, good evening
 votjakovr	HeikoS: Ok :)
 votjakovr	HeikoS: btw, please, check my PR, i've updated it
 shogun-notifier-	shogun: Roman Votyakov :develop * a3e4f75 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/a3e4f75c554321adb6bd9593e5e09067223acd9d
 shogun-notifier-	shogun: add posterior approximation mean and covariance for Laplacian inference method
 shogun-notifier-	shogun: Heiko Strathmann :develop * 1099384 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/10993840452cc46f1ebbf51291a4af2febd598f1
 shogun-notifier-	shogun: Merge pull request #1293 from votjakovr/feature/gp_refactoring
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: add posterior approximation mean and covariance for Laplacian inference method
@HeikoS	:)
 votjakovr	:)
@sonney2k	HeikoS, what swig issues?
@HeikoS	sonney2k: classes not found etc
@sonney2k	gsomix, yes Parser would be your old Reader class
@HeikoS	its a bit painfull since its spread in machine/regression/classifier
@sonney2k	HeikoS, w/ swig the order of includes matters
 gsomix	sonney2k, ok, that's right. :)
 gsomix	sonney2k, preparing PR, need test some stuff.
@sonney2k	HeikoS, you need to include classes that are dependencies first!
@sonney2k	lambday, what is this template<class T, class ST=T> ?
@sonney2k	in shogun/mathematics/logdet/IterativeShiftedLinearFamilySolver.h
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has quit [Ping timeout: 250 seconds]
 shogun-buildbot	build #1536 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1536  blamelist: Roman Votyakov <votjakovr@gmail.com>
 shogun-buildbot	build #1385 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1385  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
-!- travis-ci [~travis-ci@ec2-75-101-178-60.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9442095
-!- travis-ci [~travis-ci@ec2-75-101-178-60.compute-1.amazonaws.com] has left #shogun []
-!- zxtx [~zv@rrcs-76-79-81-162.west.biz.rr.com] has joined #shogun
 shogun-buildbot	build #1537 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1537  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has joined #shogun
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun ["Fallen asleep!"]
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * a059a1f / src/shogun/mathematics/logdet/ (2 files): https://github.com/shogun-toolbox/shogun/commit/a059a1ffb9e4052bdd52c01b84ed301a33d44a76
 shogun-notifier-	shogun: drop default type to hopefully fix compile error
 shogun-notifier-	shogun: van51 :develop * 63ae07c / / (3 files): https://github.com/shogun-toolbox/shogun/commit/63ae07cbe4b0ffb05de7d029e969d29e1e21cdf8
 shogun-notifier-	shogun: Quadratic support in HashedDenseFeatures
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * f0af8bf / / (3 files): https://github.com/shogun-toolbox/shogun/commit/f0af8bf45c00b983abb88ecb153d1afef81cb099
 shogun-notifier-	shogun: Merge pull request #1292 from van51/feature/quadratic
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Quadratic support in HashedDenseFeatures
 van51	ah cool :D
 van51	sonney2k: do you have in mind another collection I could test the hasheddocfeatures on?
@sonney2k	van51, collection?
@sonney2k	van51, dataset you mean?
 van51	sonney2k: yes
 van51	sonney2k: document collection I meant to say
@sonney2k	van51, I still would want you to do the language detection thing
@sonney2k	van51, but for this you need to do some wikipeidia harvesting
 van51	sonney2k: that would be to get documents from wikipedia right?
@sonney2k	van51, yes
 van51	sonney2k: I can get the documents from another language, right?
@sonney2k	so for each supported language download say 10000 text documents
@sonney2k	randomly
 van51	programming language*
@sonney2k	van51, sure some wget / python whatever
 van51	sonney2k: ok then :)
@sonney2k	I would prepare the final data similar to webspam then label with 0...<n_langs>
@sonney2k	and 0 terminated documents
@sonney2k	van51, btw did you do finish the evaluations for webspam?
 van51	sonney2k: should I strip the html completely?
@sonney2k	van51, yeah
@sonney2k	just plain text
@sonney2k	van51, I guess n-grams will work best again
 van51	sonney2k: yea I finished it
 van51	there was a link in the email
 van51	let me fetch it again
@sonney2k	van51, svmocas with eps 1e-2?
@sonney2k	van51, let me check
@sonney2k	van51, please also run it with liblinear eps 1e-2
 van51	sonney2k: here : https://dl.dropboxusercontent.com/u/23851310/webspam_results.pdf
@sonney2k	van51, found it reading...
 van51	sonney2k: ok I'll leave it running tonight
@sonney2k	sonney2k, liblinear might be faster
@sonney2k	van51, T^
 shogun-buildbot	build #751 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/751  blamelist: van51 <vangelis_51@hotmail.com>
@sonney2k	van51, interesting that C=1 gave even better results
@sonney2k	van51, I can only guess that the train/test data split that you used gives different results auROC wise... 99.9 vs 99.6 seems quite a bit though
@sonney2k	hope it is not train error :)
 van51	sonney2k: nope it's test error
 van51	sonney2k: do you want to chck the example?
 van51	sonney2k: I'm worried I may have missed something
@sonney2k	van51, I read the example code already
@sonney2k	didn't see a mistake
 van51	well the language detection will also be a nice indicator
@sonney2k	van51, but it is worrying that for 5000 examples with hashing you are as good as the spectrum kernel on 100k examples
 shogun-buildbot	build #752 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/752  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	van51, true
 shogun-buildbot	build #1064 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1064  blamelist: van51 <vangelis_51@hotmail.com>
 shogun-buildbot	build #1065 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1065  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1538 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1538  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1268 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1268  blamelist: van51 <vangelis_51@hotmail.com>
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 73cb5a2 / src/shogun/machine/gp/InferenceMethod.h: https://github.com/shogun-toolbox/shogun/commit/73cb5a238f58e10afa8fa5694af530103c04dea0
 shogun-notifier-	shogun: fix doxygen doc
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 07e8f7c / src/shogun/mathematics/Math.h: https://github.com/shogun-toolbox/shogun/commit/07e8f7ce467a61b565b3f6694fb976465cb27047
 shogun-notifier-	shogun: drop std cmath compile workaround
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * ad88090 / src/configure: https://github.com/shogun-toolbox/shogun/commit/ad8809008204fb70cd82a6ed137b30b771edd09c
 shogun-notifier-	shogun: drop C warning option -Werror-implicit-function-declaration from compile flags
 gsomix	sonney2k, hey, can you help me?
@sonney2k	gsomix, wasup?
 gsomix	sonney2k, I have strange errors in unit-tests. and just curious, is it only in my repo? http://pastebin.com/u2DyVu35
 shogun-buildbot	build #1269 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1269  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-75-101-178-60.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Fernando Iglesias's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9445183
-!- travis-ci [~travis-ci@ec2-75-101-178-60.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1386 of deb3 - modular_interfaces is complete: Failure [failed compile python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1386  blamelist: Soeren Sonnenburg <sonne@debian.org>, van51 <vangelis_51@hotmail.com>
 gsomix	trying to reconfigure/recompile
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@sonney2k	gsomix, hmmhh then just run your test with the filter thing
@iglesiasg	hushell, it seems the evaluate_energy_param_data test is still failing on travis
--- Log closed Thu Jul 25 00:00:46 2013
