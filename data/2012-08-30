--- Log opened Thu Aug 30 00:00:17 2012
-!- gsomix [~gsomix@178.45.88.247] has quit [Ping timeout: 256 seconds]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 268 seconds]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Remote host closed the connection]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	hi naywhayare
 n4nd0	I read in logs you were asking about KNN yeseterday
-!- blackburn [5bdfb203@gateway/web/freenode/ip.91.223.178.3] has joined #shogun
 blackburn	oh matplotlib's author john hunter passed away
 n4nd0	:(
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- gsomix [~gsomix@178.45.74.12] has joined #shogun
-!- gsomix [~gsomix@178.45.74.12] has quit [Quit: Ex-Chat]
-!- gsomix [~gsomix@178.45.74.12] has joined #shogun
 CIA-52	shogun: Evgeniy Andreev master * r037f1ed / (114 files): many fixes in examples - http://git.io/uxpkLA
 CIA-52	shogun: Evgeniy Andreev master * r4cac666 / (204 files in 2 dirs): added env path - http://git.io/mSpu0Q
 CIA-52	shogun: Sergey Lisitsyn master * r41d2350 / (207 files in 2 dirs): Merge pull request #761 from gsomix/examples - http://git.io/GOHytw
@sonney2k	blackburn, what?
@sonney2k	what happened to john?
 blackburn	sonney2k: he passed away after cancer treatment
 gsomix	good morning
 blackburn	he was diagnosed with cancer in July and there were some complications during treatment
 blackburn	sonney2k: http://numfocus.org/johnhunter/
@sonney2k	blackburn, horrible
 blackburn	yeah it is
@sonney2k	blackburn, I knew him in person
@sonney2k	we organized an mloss workshop and invited him
@sonney2k	there is this nice video on videolectures from him showing the power of matplotlib
@sonney2k	I even think he was subscribed to the shogun mailinglist
 blackburn	yeah OSS is kind of big family and I am saddened
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
@sonney2k	blackburn, yeah he is still subscribed :/
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 blackburn	sonney2k: http://rosalind.info/problems/as-table/
 shogun-buildbot	build #485 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/485  blamelist: Evgeniy Andreev <gsomix@gmail.com>
 gsomix	shogun-buildbot, aha, next commit, please :)
 CIA-52	shogun: Evgeniy Andreev master * r148781d / (2 files): fixed order of imports - http://git.io/eXh_0A
 CIA-52	shogun: Sergey Lisitsyn master * rd321e36 / (2 files): Merge pull request #762 from gsomix/fix_examples - http://git.io/34ycqg
 shogun-buildbot	build #486 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/486  blamelist: Evgeniy Andreev <gsomix@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #487 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/487
 gsomix	shogun-buildbot, good work!
 shogun-buildbot	What you say!
-!- hoijui [~hoijui@dslb-092-078-182-230.pools.arcor-ip.net] has joined #shogun
-!- av3ngr [~av3ngr@60-241-222-244.static.tpgi.com.au] has joined #shogun
-!- av3ngr [~av3ngr@60-241-222-244.static.tpgi.com.au] has left #shogun []
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- blackburn [5bdfb203@gateway/web/freenode/ip.91.223.178.3] has quit [Ping timeout: 245 seconds]
-!- blackburn [5bdfb203@gateway/web/freenode/ip.91.223.178.3] has joined #shogun
-!- gsomix [~gsomix@178.45.74.12] has quit [Quit: Ex-Chat]
@sonney2k	n4nd0, do you know when bern4rd has time?
@sonney2k	or will be around?
 n4nd0	sonney2k: I think he finished his internship yesterday
 n4nd0	so probably he is coming back to Spain today, if he didn't do so yesterday
 n4nd0	apart from that, I know nothing else
 n4nd0	sonney2k: do you want me to ask him something?
-!- in3xes [~in3xes@122.174.88.209] has joined #shogun
-!- in3xes [~in3xes@122.174.88.209] has quit [Ping timeout: 244 seconds]
-!- in3xes [~in3xes@122.174.88.209] has joined #shogun
 naywhayare	n4nd0: are you Dr. KNN for shogun?
 n4nd0	naywhayare: haha not a Dr. :P
 n4nd0	but I put the cover tree there and test some other things so I may be able to help you
 naywhayare	okay; my goal is to find the distances and indices of the k nearest neighbors of a single dataset as simply and quickly as possible
 naywhayare	sonney2k suggested I build the tree by hand
 n4nd0	I recommend you to use JL covertree
 n4nd0	there is no fastest algorithm for that
 naywhayare	I mean, the fastest way to do it with shogun's available code specifically
 n4nd0	ok
 naywhayare	JL's code does that, definitely, but his code is an unmaintainable nightmare
 naywhayare	I do not have curse words descriptive enough for what I think of that work
 n4nd0	hehe it takes time but I finally managed to use it in shogun
 naywhayare	are you calling out to it, or did you port it?
 n4nd0	I call it
 n4nd0	I think it is the best ... I mean that code there has crazy stuff for optimization...
 n4nd0	that's why it is so fast
 naywhayare	mmm, yes and no
 naywhayare	I don't like the CFLAGS he uses
 naywhayare	-ffast-math is technically unsafe in some cases though it does give a 3x speedup (on the trials I ran)
 naywhayare	when you take that away, the gains from the partial distance computation and the absurd stack-of-already-allocated-memory are not incredibly huge
 n4nd0	you can just not compile with that?
 naywhayare	yeah, modify the Makefile
 n4nd0	ok
 n4nd0	anyway
 n4nd0	how large is your dataset and what dimension does your data have?
 naywhayare	there are many datasets ranging from 100x3 to millions x hundreds
 n4nd0	and maybe if you tell me a bit more of your application we can discover what is best to do using shogun
 naywhayare	well, I am using shogun to time it for comparison
 naywhayare	I would prefer to use kd-trees to keep the algorithms the same across all the libraries I am comparing
 n4nd0	aham
 n4nd0	we don't have kd-trees here I believe
 naywhayare	however I didn't see any kd-tree support anytmore
 naywhayare	sonne suggested that they did exist
-!- in3xes [~in3xes@122.174.88.209] has quit [Ping timeout: 240 seconds]
 n4nd0	aham
 n4nd0	I think we don't have them
 naywhayare	I need to step out for a little while... I'll be back later
 naywhayare	thanks for the pointers so far
 n4nd0	all right
 n4nd0	let me know later
 n4nd0	in any case, covertree is faster than kd-tree, AFAIK
-!- blackburn1 [~blackburn@188.168.14.142] has joined #shogun
-!- in3xes [~in3xes@122.174.88.209] has joined #shogun
 CIA-52	shogun: Sergey Lisitsyn master * r4c43de1 / src/shogun/mathematics/Statistics.h : Fixed doc mistake in statistics - http://git.io/49h53A
 blackburn1	n4nd0: around?
 n4nd0	yeah
 n4nd0	tell me
 blackburn1	n4nd0: wanted to think out loud :D
 blackburn1	n4nd0: about serialization
 n4nd0	yeah
 blackburn1	okay the case is
 blackburn1	we have a machine (say linear)
 blackburn1	with w = vector of length 200
 blackburn1	we use it somehow and then load from file
 blackburn1	with different w length
 n4nd0	ok
 blackburn1	I am confused what is happening there and what to do
 blackburn1	:D
 blackburn1	first of all we corrupt SGVector
-!- puffin444 [180317bb@gateway/web/freenode/ip.24.3.23.187] has joined #shogun
 n4nd0	in terms of the ref counter?
 blackburn1	yes
 blackburn1	it is a different vector already
 blackburn1	so we should create new reference counter I guess
 puffin444	hey blackburn
 n4nd0	but should it be a different vector?
 blackburn1	puffin444: hey, any success with your issue?
 puffin444	Yes in fact.
 blackburn1	n4nd0: in simplest case "new machine then load" it is a different vector
 n4nd0	blackburn1: I am assuming the vector you load from file is into the first vector you were talking about
 n4nd0	yeah sure, in that case it ise
 puffin444	It runs fine now. The only issue is that using the SGMatrices results in less precision.
 blackburn1	yes but it is not true in general
 blackburn1	puffin444: why?
 puffin444	I really am not sure. It's the brent minimzer which seems to be where the precision is a little off.
 blackburn1	but what is different with eigen matrices?
 puffin444	All the calculations appear to be correct, is just that small numerical differences appear to result in an answer which is just slightly off that of using purely eigen matrices.
 blackburn1	but still seems so strange
 puffin444	It is absolutely essential that there are no eigen references in the headers, correct?
 blackburn1	yes for now
 CIA-52	shogun: Sergey Lisitsyn master * r80fee54 / src/shogun/lib/slep/slep_solver.cpp : Fixed memleak in slep solver - http://git.io/JFTiAA
 puffin444	Yes it does seem strange I took 4 hours to see what was wrong.
 blackburn1	I can imagine
 puffin444	And it just seems that the difference is due to numerical error.
 blackburn1	how much is the error?
 puffin444	The gradient search comes up with a mimimum likelihood of something like 5.35 instead of 5.345
 blackburn1	huh that's pretty big
 puffin444	Initially the two resuls are exactly the same but over time those numerical diffferences add up.
 puffin444	Through gradient search.
 CIA-52	shogun: Sergey Lisitsyn master * r78f693c / data : Updated data - http://git.io/hf-Leg
 puffin444	I can look at it more.
 puffin444	It's just that I don't think I can get this in by Sept 1st
 blackburn1	puffin444: we have some troubles with serialization actually
 puffin444	Uh Oh - the hash function?
 puffin444	Are you talking about my parameter hash function?
 blackburn1	not really, there is a problem with reference counting and some more
 puffin444	Oh okay.
 blackburn1	I didn't detect anything with hash stuff
 puffin444	Just to let you know I really want to make this part of a release for Shogun, and I hope to continue to contribute for the time being.
 puffin444	I may be able to add more stuff as part of a class project this semester too, but I am not sure.
 blackburn1	that's awesome to know because you are the only man that knows GPs here
 blackburn1	:D
 puffin444	heh lol
 blackburn1	I am totally out of GPs
 blackburn1	puffin444: are you going to have masters study now?
 puffin444	No it's actually Ph.D.
 blackburn1	ahh so phd
 blackburn1	I see
 puffin444	It's probably going to focus on Computer Vision, but machine learning is part of everything here, so I will be definitely be working with it in some fashion.
 blackburn1	I am hanging with CV as well so we could always discuss something
 blackburn1	:)
 puffin444	Yeah sure :)
-!- blackburn2 [~blackburn@188.168.2.186] has joined #shogun
-!- gsomix [~gsomix@178.45.74.12] has joined #shogun
 gsomix	good evening
 blackburn2	too many of me
 puffin444	So I have to go now. Just wanted to give you an update on stuff. I'll see if I can get rid of the imprecision.
-!- gsomix is now known as blackburn4
 puffin444	lol
 blackburn2	puffin444: I don't really know whether we could release on 1st
 puffin444	Okay. Are you guys thinking about pushing back the date?
 n4nd0	puffin444: btw, did you find something strange in valgrind's trace at the end?
-!- blackburn1 [~blackburn@188.168.14.142] has quit [Ping timeout: 244 seconds]
 puffin444	Oh valgrind detected a few read errors, which was the cause of the problem.
 n4nd0	cool!
 puffin444	There are still memory leaks though from Vector<CMap>.
 blackburn2	puffin444: yes, I also had an idea of releasing RC (release candidate) first
 n4nd0	I got angry some months ago too because my program didn't crash on valgrind but yes alone :D
 puffin444	Okay good. I am working as much as I can to get this ready. I may be held back a bit by university stuff however. Am I holding you guys back?
 blackburn2	puffin444: no, not really
 blackburn2	we wanted a major version so better make it correct
 blackburn2	:)
 blackburn2	I will try to handle serialization leaks next days
 blackburn2	puffin444: anyway thanks :)
 puffin444	Thank you for being understanding. I'll see what I can do to increase precision.
 n4nd0	let's continue with serialization conversation?
-!- puffin444 [180317bb@gateway/web/freenode/ip.24.3.23.187] has quit [Quit: Page closed]
 blackburn2	n4nd0: yeah
 blackburn2	n4nd0: I am totally confused with reference counting
 blackburn2	do you have an understanding?
 n4nd0	the trivial one
 blackburn2	okay let me check what is leaking
 blackburn2	n4nd0: okay serialization_basic_tests
-!- blackburn1 [~blackburn@188.168.14.135] has joined #shogun
 blackburn1	piece of honey, useful wired connection
 blackburn1	ooooookay
 blackburn1	n4nd0: here/
 n4nd0	:)
-!- blackburn2 [~blackburn@188.168.2.186] has quit [Ping timeout: 268 seconds]
 n4nd0	I have no idea how these functions Parameter::Load work :S
 blackburn1	n4nd0: I could try to describe
 blackburn1	I can't say I like how it works but it is there :)
 n4nd0	yeah sure
 blackburn1	n4nd0: each time you call load/save_serializable
 blackburn1	in basic case it iterates through all parameters
 blackburn1	you set via SG_ADD
 n4nd0	mmm
 blackburn1	in case of vectors and matrices it stores pointer to pointer to data and pointer to lengths
 n4nd0	I need a break, I've got sort of headache
 blackburn1	lol
 blackburn1	already?
 blackburn1	:D
 n4nd0	haha not for this
 blackburn1	okay sure
 n4nd0	I have been reading on the computer for a long while before
 blackburn1	do you have headache after that?
 n4nd0	sometimes
 blackburn1	I can easily handle 14-16 hours using computer :D
 blackburn1	you are not geek enough!
 n4nd0	haha no, I don't think so :P
 n4nd0	see you in a while
 blackburn1	more geekness!
-!- blackburn4 is now known as blackburn2
 n4nd0	all righty
-!- in3xes [~in3xes@122.174.88.209] has quit [Quit: Leaving]
 n4nd0	do you think the use of m_parameters->add might be an issue?
 n4nd0	I remember Heiko sent a mail saying to use SG_ADD
 n4nd0	I think we could try to think what the state of the reference counters should be after each step of that test
 n4nd0	e.g. how it should be after to_save->save_serializable(file)
 blackburn1	n4nd0: okay leaking in serialization_basic_test is caused by wrong reference count after load
 blackburn1	case is
 blackburn1	SGObject -> DenseFeatures -> matrix
 n4nd0	ok
 blackburn1	after reading SGObject matrix's refcount is -1
 blackburn1	however I have no idea why
 n4nd0	is it correct after to_save->save ?
 blackburn1	yes
 blackburn1	save does not corrupt
 n4nd0	what is the ref count after save?
 blackburn1	1
 blackburn1	2   when I get it
 n4nd0	I don't understand what you mean with the last thing, sorry
 n4nd0	2 when you get it?
 blackburn1	with get_feature_matrix
 blackburn1	:)
 n4nd0	aham ok :)
 blackburn1	yeah it was hard to parse probably
 n4nd0	I will compile with refcount enabled
 n4nd0	may be helpful
 blackburn1	what do you mean with refcountenabled?
 n4nd0	I didn't use the right name but I don't find in configure what I wanted to say
 n4nd0	wait
 blackburn1	trace memory allocs?
 blackburn1	no that won't really help
 n4nd0	maybe it was that one yes
 blackburn1	valgrind detects the error already
 n4nd0	but I think it would be nice to see when the refcount is modified
 n4nd0	it should get us to the root of the problem
 blackburn1	yes that makes sense
 blackburn1	n4nd0: it can be done with SG_GCDEBUG
 blackburn1	no need to recompile
 n4nd0	that was it :)
 n4nd0	will we see something related to SGVector there as well? I remember I use it for SGObject
 blackburn1	ahh
 blackburn1	yes it is DEBUG_SGVECTOR and it requires to recompile
 n4nd0	do you think it will be helpful?
 blackburn1	yeah could be
 blackburn1	I do not really understand how can it be -1
 blackburn1	:)
 n4nd0	DEBUG_SGVECTOR is an option in configure? don't find it
 blackburn1	no you should put it manually to lib/config.h if you want
 n4nd0	all right
 n4nd0	compiling now
 n4nd0	we'll be back after dinner
 blackburn1	yeah I will be back later too
 blackburn1	haha
 CIA-52	shogun: Sergey Lisitsyn master * r4520986 / src/shogun/lib/SGMatrix.h : Fixed SGMatrix constructor - http://git.io/z4McvQ
 blackburn1	okay seems almost no leaks at all now?
-!- blackburn1 [~blackburn@188.168.14.135] has quit [Quit: Leaving.]
@sonney2k	blackburn, blackburn2 or whoever - that kind of change is dangerous...
@sonney2k	in particular since SGVector etc all don't do it by default too (and I assume that this is used in the code)
 blackburn2	ooops
-!- blackburn2 is now known as gsomix
@sonney2k	wtf?
 gsomix	sonney2k, good evening. how are you? :)
@sonney2k	gsomix, fighting with the webserver
 gsomix	sonney2k, for new site?
 gsomix	ok, good luck with it :)
@sonney2k	yes
-!- vaio [~vaio@117.32.153.153] has joined #shogun
 vaio	Is there anyone here?
 vaio	here ?
 vaio	I am doing some exps using shogun-toolbox
-!- vaio [~vaio@117.32.153.153] has quit [Client Quit]
 n4nd0	hello vaio
 n4nd0	maybe next time...
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- hoijui [~hoijui@dslb-092-078-182-230.pools.arcor-ip.net] has quit [Quit: Leaving]
 CIA-52	shogun: Sergey Lisitsyn master * r25ba47c / (2 files in 2 dirs): Another way to avoid memleak with dense features serialization - http://git.io/lEHERg
--- Log closed Fri Aug 31 00:00:17 2012
