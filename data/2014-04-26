--- Log opened Sat Apr 26 00:00:22 2014
-!- khalednasr [~k.nasr92@41.69.161.127] has quit [Ping timeout: 265 seconds]
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has quit [Quit: Leaving.]
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-elyfhdzmbepbvhul] has quit [Quit: Connection closed for inactivity]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
-!- kislay [~Abhijeet@14.139.41.150] has joined #shogun
-!- kislay [~Abhijeet@14.139.41.150] has quit [Read error: Connection reset by peer]
-!- kislay [~Abhijeet@117.239.94.112] has joined #shogun
-!- kislay [~Abhijeet@117.239.94.112] has quit [Ping timeout: 252 seconds]
-!- kislay [~Abhijeet@117.239.94.112] has joined #shogun
-!- khalednasr [~k.nasr92@41.69.130.181] has joined #shogun
-!- khalednasr [~k.nasr92@41.69.130.181] has quit [Client Quit]
-!- kislay [~Abhijeet@117.239.94.112] has quit [Ping timeout: 252 seconds]
-!- kislay [~Abhijeet@117.239.94.112] has joined #shogun
-!- kislay [~Abhijeet@117.239.94.112] has quit [Ping timeout: 240 seconds]
-!- kislay [~Abhijeet@220.227.97.99] has joined #shogun
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- kislay [~Abhijeet@220.227.97.99] has quit [Quit: Leaving]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Quit: Page closed]
-!- thor|alf [~thoralf@91-65-140-50-dynip.superkabel.de] has joined #shogun
 thor|alf	Heyho.
 thor|alf	lisitsyn: Ping?
 thor|alf	lisitsyn: I don't understand your last comment to https://github.com/shogun-toolbox/shogun/issues/2185
 lisitsyn	thor|alf:
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
 lisitsyn	well I mean if you want to restrict copies
 lisitsyn	you do it this way
 lisitsyn	= delete
 lisitsyn	so that it is explicitly deleted
 thor|alf	I feel totally lost.  Do you mean adding a " = delete" to the header like " = 0" sometimes?
 lisitsyn	thor|alf: exactly
 lisitsyn	this means you won't provide implementation of this method anywhere
 lisitsyn	thor|alf: when it is used you will be errored with quite meaningful message that the constructor you use is explicitly deleted
 lisitsyn	instead of 'undefined reference to ...'
 thor|alf	Ah, cool!
 thor|alf	Now I understand.
 thor|alf	Deleting the implementation, but keeping (a modified) declaration.
 thor|alf	Is it part of the c++ standard or something gcc-ish or GNU-ish?
 thor|alf	Never seen this.
 thor|alf	stackoverflow.com/questions/5513881/c-meaning-of-delete-after-function-declaration
 thor|alf	C++11
 thor|alf	Is declaring "delete" for operator= needed as well?  Wouldn't it mean that we cannot copy using "=" any more?
 thor|alf	I only want to restrict new CSGObject(*other_object), but not "CSGObject foo = other_object;".
 thor|alf	lisitsyn: Or are they tied in a way I don't see yet?
 lisitsyn	thor|alf: sorry was afk
 lisitsyn	thor|alf: yeah it is C++11
 lisitsyn	well operator= is quite similar
 thor|alf	Do you mean "=" has got the same bug?
 lisitsyn	thor|alf: no not really
 lisitsyn	thor|alf: I mean usually they come along
 lisitsyn	thor|alf: so e.g. if you don't allow copying you usually don't allow assignment as well
 thor|alf	Okay, but if I forbit assignment, this will break shogun.
 thor|alf	We will force everybody to use only references, because "normal" instances cannot be assigned any more.
 lisitsyn	thor|alf: yeah
 lisitsyn	thor|alf: then it is not the case :)
 lisitsyn	thor|alf: though it looks pretty ok to use only references
-!- lisitsyn1 [~qdrgsm@109-226-124-25.clients.tlt.100megabit.ru] has joined #shogun
-!- lisitsyn [~qdrgsm@109-226-124-25.clients.tlt.100megabit.ru] has quit [Ping timeout: 240 seconds]
 thor|alf	lisitsyn1: I'll check what happens.  Thanks for pointing this out
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-hxhehllyggnkhmzh] has joined #shogun
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
 lisitsyn1	thor|alf: http://www.flightradar24.com/RSD47/3327545 :D
 thor|alf	lol
 lisitsyn1	thor|alf: the boss is out of house
 lisitsyn1	thor|alf: we need more security facing the threats of space invaders :D
 lisitsyn1	that's actually putiphone
 thor|alf	:D
 thor|alf	Still looping.
 lambday	thor|alf: could you please stop my travis build?
 lambday	thor|alf: silly overlooking :(
 thor|alf	lol
 thor|alf	I can't.
 lambday	errr
 thor|alf	lambday: It's only you and me.
 thor|alf	I just decided to do my laundry while waiting for Travis, so really no worries.
 thor|alf	:D
 lambday	thor|alf: both on travis and on this chatroom? :P
 thor|alf	lambday: Hmm.  Let me check.
 thor|alf	lisitsyn1: You're listening or not?
 lambday	he's out!
 lisitsyn1	thor|alf: hmm not really :)
 lambday	oh he's in!  :D
 thor|alf	Haha. :D
 lisitsyn1	highlight me
 lisitsyn1	if I am not here after highlight then I am out :)
 lambday	lisitsyn1: how? <i>lisitsyn1</i>
 lambday	or you prefer to be bold?
 lisitsyn1	lambday: nickname ;)
-!- lisitsyn1 is now known as lisitsyn
 lisitsyn	I am already bold and I don't like it :D
 lambday	lol
 lambday	lisitsyn: run forest run
 lisitsyn	thor|alf: so what's up?
 thor|alf	lisitsyn: Nothing.  lambday asked if we're alone in the channel or not...
 lisitsyn	ah
 thor|alf	:)
 lambday	iirc last year this time we were pouring words like rain in this chatroom
 thor|alf	lisitsyn: Sorry for waking you up, but I thought you're always happy to chat.
 lisitsyn	thor|alf: sure ;)
 thor|alf	(Disclaimer: Unable to smalltalk about music. ;))
 lisitsyn	that's pretty clear ;)
 lambday	thor|alf: ah finally that errorneus build finished! now I can die in peace!
 thor|alf	:)
-!- HeikoS [~heiko@130.208.244.119] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 lambday	HeikoS: hey!
@HeikoS	lambday: hey!
@HeikoS	how are things?
 lambday	HeikoS: good. sent the symmetry related patch first
 lambday	HeikoS: modified QuadraticTimeMMD - but not fully finished
 lambday	thinking of having a setter for depricated implementation and new implementation
@HeikoS	lambday: what about just having various different enums for the null approximation?
 lambday	HeikoS: how's Iceland?
@HeikoS	lambday: quite cool, climbed a mountain yesterday
 lambday	HeikoS: ah nice! :D
@HeikoS	with snow and stuff, really cool
 lambday	HeikoS: yeah enums would be there
@HeikoS	lambday: then no need to change htings, just add some new private methods
 lambday	HeikoS: no I mean, the statistic returned is also different - so its not just MMD2_SPECTRUM/MMD2_SPECTRUM_DEPRECATED but we should have deprecated methods as well
 lambday	because compute_biased_statistic/compute_unbiased_statistic would return different values
@HeikoS	but thats also possible wiht enums right?
@HeikoS	lambday: in fact the deprecated impl should not be exposed to bright
@HeikoS	should not be used
@HeikoS	so only need constructor for other one
@HeikoS	and then have some setter to change enum internally (well documented etc)
 lambday	HeikoS: I am not fully getting how this would work - I mean, for setting null_approximation methods we can use the enums
@HeikoS	there already is the MMD_biased and unbiased, cant we just extend that?
 lambday	but those would internally use compute_statistic methods which would be having two different impl.... one for new one that returns mn/(m+n)*MMD^2 and previous ones which returned (m+n)*MMD^2
 lambday	HeikoS: umm yeah - then we'd have to set quite a lot of enums
@HeikoS	lambday: ok whats you suggestion?
 lambday	HeikoS: what I was thinking is to have two copies of pvt methods - compute_unbiased_statistic_DEPRECATED() and compute_unbiased_statistic() .... then by using just one flag use_deprecated, we can switch which method to use - for null approximation method we'll have to set enum anyway
 lambday	but since statistic returned is also changed, so to compare we gotta keep both, right
@HeikoS	lambday: ok thats fine, as long as all this deprecated stuff is hidden to the outside
@HeikoS	lambday: I would just use a setter for that, not constructor, people should not really use that
 lambday	HeikoS: yeah definitely a setter
@HeikoS	just put good documentation, i.e. reference to papers, etc
 lambday	HeikoS: yeah - modified the documentation already
-!- thor|alf [~thoralf@91-65-140-50-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
 lambday	HeikoS: btw computing variance can be done on the fly when computing statistic - so should I add a method compute_statistic_and_variance() or have two separate methods for that? because, say, we're using PERMUTATION and then computing asymptotic variance for every single iteration isn't really needed
@HeikoS	lambday: yes I think thats a good idea
@HeikoS	lambday: though again, document why you do this
 lambday	HeikoS: which one is good idea? having two separate methods?
@HeikoS	lambday: we want to keep the design as clean as possible, not corrupt just due to old buggy papers ;)
 lambday	hehe :D
 lambday	HeikoS: yeah trying to keep things well documented..
@HeikoS	lambday: how much overhead is it to compute the variance always?`Also, streaming version should only use data once
 lambday	HeikoS: yeah for streaming version its done in one go - for computing var alongwith statistic we need to compute sums/squared-sums row-wise - so overhead isn't the kernel calls but extra arithmatic to compute stuff..
@HeikoS	that shouldnt be too much right?
 lambday	HeikoS: I guess so - unless we use permuation test
 lambday	HeikoS: having separate methods would require to recompute kernel values as well
@HeikoS	lambday: well thats bad
@HeikoS	we dont want this
@HeikoS	rather have some neglectible overhead for the variance
 lambday	HeikoS: how about we add both - I mean, sometimes we just want to estimate the statistic and not the asympotic var - so one compute_statistic would do that and another compute_statistic_and_variance would compute both
@HeikoS	lambday: ok thats also fine
@HeikoS	lambday: but maybe only internally?
@HeikoS	or do we need this from the outside?
 lambday	HeikoS: I think internally it can be done - just need to make sure which are the things we need from outside
 lambday	HeikoS: we need var under null and alternative, right?
 lambday	so, instead of exposing the compute_statistic_and_variance() to outside, we can have compute_variance() returning both var estimations under null and alternative
 lambday	which is exposed
 lambday	and compute_statistic() is exposed
@HeikoS	yep nice!
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 240 seconds]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
 lambday	HeikoS: hey!
 lambday	HeikoS: sorry I got dc
 lambday	HeikoS: Integration test is failing due to fixed lhs_equals_rhs flag in data
@HeikoS	lambday: yep thats expected
 lambday	HeikoS: how do I fix this?
@HeikoS	lambday: update the test using generator.py in integration test dir
@HeikoS	lambday: update the test using generator.py in integration test dir
 lambday	HeikoS: okay
 lambday	HeikoS: you mean generate_testdata.py
@HeikoS	no
@HeikoS	shogun/tests/integration/python_modular/generator.py
 lambday	HeikoS: yeah got it
 lambday	:D
@HeikoS	lambday: you need to commit this to shogun-data, then update the data version of your PR
@HeikoS	I merge first, then travis will work again
 lambday	HeikoS: okay.. thanks
-!- HeikoS [~heiko@130.208.244.119] has quit [Quit: Leaving.]
-!- HeikoS [~heiko@130.208.244.119] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@130.208.244.119] has quit [Quit: Leaving.]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 240 seconds]
-!- khalednasr [~k.nasr92@41.69.243.188] has joined #shogun
-!- khalednasr [~k.nasr92@41.69.243.188] has quit [Quit: Leaving]
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has quit [Quit: Leaving.]
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- iglesiasg [~iglesiasg@136.Red-95-122-3.staticIP.rima-tde.net] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- HeikoS [~heiko@85-220-3-15.dsl.dynamic.simnet.is] has quit [Quit: Leaving.]
--- Log closed Sun Apr 27 00:00:23 2014
