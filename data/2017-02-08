--- Log opened Wed Feb 08 00:00:15 2017
-!- lbahl [b989122b@gateway/web/freenode/ip.185.137.18.43] has joined #shogun
-!- lbahl [b989122b@gateway/web/freenode/ip.185.137.18.43] has quit [Ping timeout: 260 seconds]
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has quit [Ping timeout: 240 seconds]
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has joined #shogun
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-qvmfnjcbbnefyhkr] has joined #shogun
@sukey	New Commit "[WIP] refactor cmake project
@sukey	add support for building modular interfaces depending on an external
@sukey	prebuilt libshogun" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/33ae8cbc6cdf3f6eccdcb53aa6e9c71578f06f7e
-!- travis-ci [~travis-ci@ec2-54-205-207-228.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/199493512
-!- travis-ci [~travis-ci@ec2-54-205-207-228.compute-1.amazonaws.com] has left #shogun []
-!- praisethemoon [~praisethe@197.3.11.178] has joined #shogun
-!- mikeling [uid89706@gateway/web/irccloud.com/x-ewnbugmgpmxrxiik] has joined #shogun
-!- rcurtin_ [~ryan@knife.lugatgt.org] has joined #shogun
-!- Netsplit *.net <-> *.split quits: rcurtin
@sukey	New Commit "[WIP] refactor cmake project
@sukey	add support for building modular interfaces depending on an external
@sukey	prebuilt libshogun" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/3d181accabed6b8a5f1fd830569d0e09668ef7fe
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	HeikoS, fuck fuck kcuf
-!- travis-ci [~travis-ci@ec2-54-211-176-33.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/199566472
-!- travis-ci [~travis-ci@ec2-54-211-176-33.compute-1.amazonaws.com] has left #shogun []
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 260 seconds]
-!- CaBa_ [~Diu7saig@lounge.imp.fu-berlin.de] has quit [Quit: Changing server]
-!- CaBa [~Diu7saig@unaffiliated/caba] has joined #shogun
-!- abhinav [~abhinav@103.211.52.16] has joined #shogun
 abhinav	Ping : Wiking
@wiking	pong
 abhinav	Hey wiking I was working on adding Scala
 abhinav	https://github.com/shogun-toolbox/shogun/pull/3606/files
 abhinav	I have made some changes for detecting scala-library.jar
 abhinav	Now I am using find_jar() function
 abhinav	Is this ok ?
@wiking	does it work for you?
 abhinav	Yeah it does
@wiking	ok col
@wiking	cool
@wiking	then it's good
@wiking	but you are still missing
@wiking	crucial part of a Find<Target>.cmake file
@wiking	i told you
 abhinav	I have added sbt to the DockerFile
@wiking	no
@wiking	i'm talking about
@wiking	Find<Target>.cmake
 abhinav	Apart from this you told me mark_as_advanced()
 abhinav	was old school
@wiking	find_package_handle_standard_args
@wiking	mark_as_advanced
@wiking	these are still missing
@wiking	i told you about find_package_handle_standard_args
@wiking	right?
@wiking	make sure that you extract in the cmake file
@wiking	the version of the scala
@wiking	so later we can require a given version of scala
 abhinav	Oh I misunderstood a little
 abhinav	Hey wiking. Is this fine ?
 abhinav	if(Scala_SCALA_EXECUTABLE)
 abhinav	    execute_process(COMMAND ${Scala_SCALA_EXECUTABLE} -version
 abhinav	      RESULT_VARIABLE SCALA_SEARCH_SUCCESS
 abhinav	      ERROR_VARIABLE SCALA_VERSION
 abhinav	      OUTPUT_STRIP_TRAILING_WHITESPACE)
 abhinav	    if( SCALA_SEARCH_SUCCESS )
 abhinav	      message( FATAL_ERROR "Error executing scala -version" )
 abhinav	    endif()
 abhinav	endif()
 abhinav	include(FindPackageHandleStandardArgs)
 abhinav	if (CMAKE_VERSION LESS 2.8.3)
 abhinav	  find_package_handle_standard_args(SCALA DEFAULT_MSG SCALA_VERSION)
 abhinav	else ()
 abhinav	  find_package_handle_standard_args(SCALA REQUIRED_VARS SCALA_VERSION)
@wiking	abhinav, please use pastebin.com
 abhinav	endif ()
 abhinav	mark_as_advanced(
-!- abhinav was kicked from #shogun by wiking [abhinav]
 abhinav	  Scala_SCALA_EXECUTABLE
 abhinav	  Scala_SCALAC_EXECUTABLE
 abhinav	  Scala_JAR_EXECUTABLE
 abhinav	)
-!- abhinav [~abhinav@103.211.52.16] has joined #shogun
 abhinav	Hey wiking : Sorry
@wiking	abhinav, pastebin.com
 abhinav	Yeah I'll never do this again
 abhinav	http://pastebin.com/abku89gZ
 abhinav	Just wanna say that output is being stored in stderr and not in stdout
@wiking	mmm
@wiking	abhinav, please read manual of cmake
@wiking	  find_package_handle_standard_args(SCALA REQUIRED_VARS SCALA_VERSION)
@wiking	is wrong
@wiking	https://cmake.org/cmake/help/v3.0/module/FindPackageHandleStandardArgs.html
 abhinav	Yeah I'll add the variables.
 abhinav	And the version being accessed using ERROR_VARIABLE shouldn't be a problem
 abhinav	?
@wiking	is that working/
@wiking	i mean sorry i'm not a compiler
@wiking	use your machine
@wiking	to do these tests
 abhinav	Yeah it's working and I am getting the output
@wiking	no it's not that variables that are missing
@wiking	in
@wiking	find_package_handle_standard_args
@wiking	you are using it wrong
@wiking	if you set version
@wiking	then you should do ... VERSION_VAR SCALA_VERSION
@wiking	etc
@wiking	plz read man
 abhinav	Sorry. I'll just first go through and make sure everything is right
 abhinav	Thanks
-!- rcurtin_ is now known as rcurtin
-!- abhinav [~abhinav@103.211.52.16] has quit [Quit: Leaving]
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	wiking: !
@wiking	!
@HeikoS	wiking: jojo
@HeikoS	wiking: I see things happening
@HeikoS	wiking: btw you know about our mailing list archives?
@wiking	gmane
@wiking	yes
@sukey	Wiki page: Home edited on shogun-toolbox/shogun by karlnapf
@wiking	apparently itll come back
@wiking	but dunno
@wiking	maybe never
@HeikoS	I see
@HeikoS	link on website is dead
@HeikoS	I already got like 10 emails
@HeikoS	about that
@HeikoS	since gsoc students write to me
@HeikoS	without reading ANYTHING that I wrote in the wiki before writing
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf
@wiking	but they can sign up for the mailing list
@wiking	an write
@wiking	just the archive is dead
@HeikoS	I know
@HeikoS	wiking: so in terms of projects
@HeikoS	wiking: you have a minute to discuss?
@wiking	yeah
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf
@wiking	although it's 12pm
@HeikoS	wiking: cool
@wiking	so i'm getting tired
@HeikoS	Ill be quick
@wiking	but shoot
@HeikoS	just give me some y/n
@wiking	it's not up to your quickness
@wiking	:)))
@HeikoS	installation project?
@wiking	it's my mind
@wiking	ah yeah that is still open
@wiking	although
@wiking	honestly
@wiking	by the time gsoc starts
@wiking	it'll be done
@wiking	ecause we need it
@HeikoS	what about combining with other things around that
@HeikoS	like maven
@HeikoS	etc
@HeikoS	windows installer
@HeikoS	still work
@wiking	yeah thats' what i meant
@wiking	that'll be done by then
@wiking	march 15
@HeikoS	mmh ok
@wiking	maven + windows + python
@HeikoS	so you think not do the project?
@HeikoS	kk
@HeikoS	wiking: next is unified ML interface & tags
@HeikoS	I kind of want to integrate tags before gsoc
@HeikoS	but this still gives room to design the core interface API
@wiking	eah i mean itd be good to integrate gsoc16 stuff before gsoc17
@wiking	;D
@HeikoS	is that worth a project?
@HeikoS	wiking: yeah I know ;)
@wiking	mm
@wiking	full proj
@wiking	no i dont think so
@HeikoS	the API thing might be cool to do
@HeikoS	like review other packages for API ideas
@HeikoS	etc
@HeikoS	and then the refactor
@HeikoS	and plugin stuff of course
@HeikoS	wiking: so you think that should also be cancelled?
@wiking	y
@HeikoS	kkj
@HeikoS	wiking: next one: detox 2
@HeikoS	which will be be: file writers, cereal integration, and more things (which ones)
@wiking	hehe there's a lot for that :)
@HeikoS	ok
@wiking	cereal needs merging
@HeikoS	what topics you think can go in?
@wiking	so forget that
@wiking	file writers?
@HeikoS	wiking: and readers
@wiking	what is that?
@HeikoS	wiking: I had the csvreader bug in mind for example
@wiking	other than that
@wiking	?
@HeikoS	wiking: I guess openmp / pthread madness could go in
@HeikoS	smart pointers
@HeikoS	I mean generally cleaning up those IO classes
@wiking	file writers readers =  I had the csvreader bug in mind for example => other than that in that area?
@HeikoS	the streaming stuff
@HeikoS	as in streaming framework is quite a pain
@wiking	yeah i mean for detox 2 there's shitload
@wiking	only thing is that we need somebody who works fast
@HeikoS	ok so Ill update the page and then we can go from there
@HeikoS	wiking: sure, but this is now for application
@HeikoS	since deadline is tomorrow and then they will start checking
@wiking	ah the ideas
@wiking	mmm when's the deadline?
@wiking	exactemente
@HeikoS	tomorrow deadline
@HeikoS	wiking: ok then, lets keep detox and I will work on that
@wiking	what i mean
@wiking	EXACT UTC TIME
@HeikoS	wiking: next one: efficiency
@HeikoS	wiking: doesnt matter, we have applied already
@HeikoS	this is more for when they check the ideas pages etc
@wiking	February 9 16:00 UTC
@wiking	yeah in know
@wiking	i wanna add there stuff
@wiking	before
@wiking	that deadline
@HeikoS	unless they freeze them at that time
@wiking	but ok in the morning i can
@HeikoS	I will work now
@HeikoS	so efficiency, usualy suspects there is tons of stuff
@HeikoS	so that stays
@HeikoS	then the kaggle pipeline thing
@wiking	mmm
@HeikoS	that has to be written, will do today, you got comments on that one?
@wiking	that could be distingueshed
@HeikoS	like "make it easy to use shogun for supervised prediction"
@wiking	if i could spell that'd be great
@wiking	mmm so i mean applying to kaggle competitions
@wiking	great
@wiking	but we need a way to easily define pipelines
@wiking	anyhow
@HeikoS	mostly: feature extraction / stacking, model-selection, ensemble
@HeikoS	parallelisation
@wiking	yeah
@HeikoS	but yeah can go wild with this
@HeikoS	but I want it more to be filling the gaps in the framework
@HeikoS	cool
@HeikoS	then interfaces
@HeikoS	SWIG: matlab, julia
@HeikoS	js
@wiking	julia = forget no swig
@wiking	matlab yes
@wiking	js yes
@HeikoS	so matlab and js
@HeikoS	and then cleaning up maybe
@HeikoS	like figure out the lua problems with overloadin
@wiking	yeah
@HeikoS	ok
@HeikoS	and finally: application
@wiking	there's shitload of things to do
@wiking	with interfaces
@HeikoS	I have the idea to write a general proposal, that describes using shogun to solve some problem /reproduce something
@wiking	ok
@HeikoS	and then outcome is self contained docker
@wiking	so have you read my email
@wiking	about the eco people?
@HeikoS	let me do
@HeikoS	ah yeah
@HeikoS	for example
@HeikoS	thing is
@HeikoS	lea has some cool ideas as well, she wanted to propose a concrete application project
@HeikoS	around data-based journalism
@HeikoS	i havent read that yet, but might be cool
@HeikoS	it is kind of borderline in terms of relevance for us, but I think could be cool and is sort of minimal effort
@HeikoS	as we can just define deliverables
@HeikoS	and then its more independent than the other projects
@wiking	ye
@HeikoS	kk
@wiking	ah yeah now i remember
@wiking	we alked about this
@HeikoS	yes
@wiking	completely selfcontained
@wiking	stuff
@wiking	'go wild'
@wiking	we could have like 3 of these :D
@HeikoS	I know
@HeikoS	but need project ideas
@wiking	kk
@HeikoS	so I will write one generic
@HeikoS	and one concrete
@wiking	yeah i have that one
@HeikoS	then we can see
@wiking	and i'll try to come up with others
@wiking	like
@wiking	other one is this
@wiking	integrate shogun with quantlib and http://opensourcerisk.org/
@wiking	aaah fuck
@wiking	there it goas
@wiking	goes
@wiking	TYPE
@wiking	:)
@wiking	so type definitions
@wiking	like in stan
@wiking	that'd be great
@HeikoS	I see
@wiking	easy to define the problem
@HeikoS	is that detox?
@HeikoS	or on its own
@wiking	involves a lot of manual labor
@wiking	after the header is done
@HeikoS	open risk is a cool idea
@HeikoS	then in terms of algos
@wiking	it's all c++
@HeikoS	I thought: time-series (Gaussian state space models), maybe approximate kernel method
@HeikoS	maybe large-scale GPs
@HeikoS	all depending on applicants
@HeikoS	but these are the ones that we can mentor
@HeikoS	and your solver thing
@wiking	yep
@HeikoS	KKT
@wiking	oh that'd be great
@wiking	:>
@HeikoS	cool
@HeikoS	thanks then
@HeikoS	I will polish the wiki now
@HeikoS	I already can tell you what will get most applicants:
@HeikoS	usual suspects2 and the kaggle thing
@HeikoS	wonder whether we should have more stuff on deep learning
@HeikoS	but that can also go under efficiency
@HeikoS	maybe autoencoder ...
@HeikoS	theo is now at geometric intelligence / uber so he cannot mentor I guess
@wiking	autodif
@wiking	:D
@HeikoS	ah yeah
@HeikoS	that would be cool
@wiking	but for that
@wiking	we shoudl have types
@wiking	:>
@HeikoS	Rahul had some ideas and prototypes
@HeikoS	ok Ill write that down as well
@HeikoS	would be good for later
@wiking	yeah
@wiking	anyhow
@HeikoS	cool
@wiking	many many things
@wiking	and fuck colpack
@wiking	:D
@HeikoS	yep indeed
@HeikoS	that will be banned to plugin soon :)
@wiking	have u seen he tf fold?
@HeikoS	seen what?
@wiking	https://github.com/tensorflow/fold
@HeikoS	nope
@HeikoS	ah nice
@HeikoS	so finally somebody is doing that stuff :)
@wiking	mmm
@wiking	do you use
@wiking	jinja2 in tests/meta
@wiking	no right?
@HeikoS	ehm
@HeikoS	no dont think
@HeikoS	but I might have forgotten
@HeikoS	implicitly maybe
@HeikoS	there is requirements.txt
@wiking	i'm currently fully rewamping cmake
@HeikoS	i see it
@HeikoS	scary
@wiking	well i need this
@wiking	to be able to build modular interfaces
@wiking	to an already installed libshogun
@wiking	consequently
@wiking	the ./CMakeLists.txt is only 845 lines
@wiking	instead of 1241
@wiking	68% \o/
-!- mikeling [uid89706@gateway/web/irccloud.com/x-ewnbugmgpmxrxiik] has quit [Quit: Connection closed for inactivity]
 CaBa	hey people
@wiking	y0
@HeikoS	CaBa: jojo
@HeikoS	wiking: thats cool !
@HeikoS	wiking: does it work already?
@HeikoS	I have the feeling that this is hard ;)
-!- praisethemoon [~praisethe@197.3.11.178] has quit [Ping timeout: 240 seconds]
@sukey	Wiki page: GSoC_2017_project_kaggle created on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_project_kaggle edited on shogun-toolbox/shogun by karlnapf
@HeikoS	wiking: you still there?
@HeikoS	wiking: https://github.com/shogun-toolbox/shogun/wiki/GSoC_2017_project_kaggle
@HeikoS	lisitsyn: ^
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf
 CaBa	is there an explanation on what "locking" means in the shogun work somewhere out there? in the wiki or so?
 CaBa	*world
@HeikoS	CaBa: nope :)
@HeikoS	but youre lucky
@HeikoS	I wrote that :)
 CaBa	ehm - okay ^^
@HeikoS	so it is just precomputing the kernel in cross-validation
 CaBa	and then subsetting on the precomputed kernel matrix?
@HeikoS	yep
@HeikoS	it is some way of hiding all that to the outside
 CaBa	some kernels don't support locking iirc. what are the prerequisites?
@HeikoS	http://www.shogun-toolbox.org/api/latest/classshogun_1_1CKernelMachine.html
@HeikoS	this is almost the only class which implements it properly
@HeikoS	locking is more a thing of CMachine
 CaBa	hm. i remember something in the context of string features i think where i ran into a message telling me that locking isn't supported..
@HeikoS	yeah a machine might not support it
@HeikoS	mmh
@HeikoS	I mean check the code
 CaBa	I'm using only CLibSVM
 CaBa	and CMKLClassification
 CaBa	they are derived from CKernelMachine so they should be fine i guess ;)
@HeikoS	http://www.shogun-toolbox.org/api/latest/KernelMachine_8cpp_source.html
@HeikoS	line 623
@HeikoS	when you lock, you can only call train_locked apply_locked after
@HeikoS	not the normal ones
 CaBa	aah see - combined kernel
@HeikoS	I think yes
@HeikoS	ah
@HeikoS	yeah
 CaBa	so CMKLClassification won't do ;)
@HeikoS	nope
@HeikoS	so you cannot make it precompute the kernel
@HeikoS	but you can still precompute it yourself
@HeikoS	(I think=)
@HeikoS	CaBa: ah man
@HeikoS	this looks llike we can spend a while GSoC project just on the stuff you are trying to do :)
 CaBa	lol
 CaBa	i mean technically... precomputing all the subkernels and subsetting within them should be doable, right?
@HeikoS	I think
 CaBa	if i understand you correctly, currently the precomputed kernel matrix resides in CMachine?
 CaBa	CKernelMachine
@HeikoS	CMachine
@HeikoS	and kernel machine specialises it so yes
 CaBa	HeikoS: the locking just replaces the actual kernel with a custom kernel internally?
@HeikoS	yep
@HeikoS	and thats why we need to avoid calling the other methods (that dont know about that=)
@HeikoS	so quite dirty
@HeikoS	;)
@sukey	Issue #2113 "CSGObject: all parameters needed in generic base class?" closed by karlnapf - https://github.com/shogun-toolbox/shogun/issues/2113
 CaBa	HeikoS: so maybe a CCombinedCustomKernel class would help bring that to CMKL and downstream?
 CaBa	designwise i mean...
@sukey	Wiki page: GSoC_2017_detox edited on shogun-toolbox/shogun by karlnapf
@sukey	Issue #1031 "Serialization/Migration framework problem" closed by karlnapf - https://github.com/shogun-toolbox/shogun/issues/1031
@sukey	Issue #869 "Register parameters for serialisation/model-selection (easy)" closed by karlnapf - https://github.com/shogun-toolbox/shogun/issues/869
@sukey	Wiki page: GSoC_2017_detox edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_detox edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_detox edited on shogun-toolbox/shogun by karlnapf
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-qvmfnjcbbnefyhkr] has quit [Remote host closed the connection]
@sukey	New Commit "[WIP] refactor cmake project
@sukey	add support for building modular interfaces depending on an external
@sukey	prebuilt libshogun" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/66ee2f0f43228e9bffa348b28527666db5b82fa3
 lisitsyn	hey HeikoS
@HeikoS	lisitsyn:  jo
 lisitsyn	I wasn't following gsoc stuff
 lisitsyn	does it make sense to proof read
 lisitsyn	?
@sukey	Wiki page: GSoC_2017_project_fundamental_usual_suspects edited on shogun-toolbox/shogun by karlnapf
@HeikoS	yes read the kaggle thing
@HeikoS	I am currently working on the other descriptions
@HeikoS	want to get them down before tomorrow deadline
@HeikoS	as I am afraid that they clone the html then
@HeikoS	so it is fair
@HeikoS	lisitsyn: btw
@HeikoS	we need to merge tags before gsoc
@HeikoS	really need to
@HeikoS	and do something about the plugins
 lisitsyn	ok I should really schedule some work on this
@sukey	Wiki page: GSoC_2017_project_fundamental_usual_suspects edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_project_swig edited on shogun-toolbox/shogun by karlnapf
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 276 seconds]
-!- travis-ci [~travis-ci@ec2-54-211-176-33.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/199710727
-!- travis-ci [~travis-ci@ec2-54-211-176-33.compute-1.amazonaws.com] has left #shogun []
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	Wiki page: GSoC_2016_project_fundamental_usual_suspects edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2016_project_fundamental_usual_suspects edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_project_kaggle edited on shogun-toolbox/shogun by lgoetz
@sukey	Wiki page: GSoC_2017_project_swig edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_project_swig edited on shogun-toolbox/shogun by karlnapf
@sukey	Issue #2584 "SWIG: Write simple unit tests for type maps" closed by karlnapf - https://github.com/shogun-toolbox/shogun/issues/2584
@sukey	Wiki page: GSoC_2017_project_swig edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_project_kaggle edited on shogun-toolbox/shogun by lgoetz
@sukey	Wiki page: GSoC_2016_project_approx_kernels edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2015_project_deep_learning edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_applications created on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_applications edited on shogun-toolbox/shogun by karlnapf
--- Log closed Thu Feb 09 00:00:17 2017
