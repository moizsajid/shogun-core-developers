--- Log opened Tue Apr 10 00:00:19 2012
 harshit_	n4nd0: hey do you know how to open libSVM format files in libshogun ?
 n4nd0	harshit_: I didn't know that libSVM has its own format :P
 n4nd0	harshit_: do you know if there is something about that in LibSVM files?
-!- harshit_ [~harshit@182.64.221.94] has quit [Ping timeout: 244 seconds]
-!- harshit_ [~harshit@182.64.221.94] has joined #shogun
-!- harshit_ [~harshit@182.64.221.94] has quit [Remote host closed the connection]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@78-23-191-201.access.telenet.be] has joined #shogun
-!- wiking [~wiking@78-23-191-201.access.telenet.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Remote host closed the connection]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking_ [~wiking@78-23-191-201.access.telenet.be] has joined #shogun
-!- wiking_ [~wiking@78-23-191-201.access.telenet.be] has quit [Changing host]
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 244 seconds]
-!- wiking_ is now known as wiking
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- av3ngr [av3ngr@nat/redhat/x-uzcgjuqrebqavizk] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-uzcgjuqrebqavizk] has quit [Quit: That's all folks!]
-!- muddo [~muddo@gateway/tor-sasl/muddo] has quit [Quit: Leaving]
-!- pluskid [~chatzilla@173.254.214.60] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-hzfodrrevubortjd] has joined #shogun
-!- blackburn [~qdrgsm@83.234.54.186] has joined #shogun
 CIA-64	shogun: Viktor Gal master * r58ebbf0 / (3 files in 2 dirs): PNorm: changes suggested by Soeren - http://git.io/xkyXqQ
 CIA-64	shogun: Viktor Gal master * r67aca90 / src/shogun/mathematics/Math.h :
 CIA-64	shogun: Fix qnorm calculation
 CIA-64	shogun: absolute value should be taken of each element before calculating
 CIA-64	shogun: the q power of the element - http://git.io/wUJupQ
 CIA-64	shogun: Sergey Lisitsyn master * ra690dd7 / (3 files in 2 dirs): Merge branch 'nearest_centroid' of git://github.com/PhilippeTillet/shogun - http://git.io/Cs7HqA
 CIA-64	shogun: Sergey Lisitsyn master * r73db76e / (7 files in 3 dirs): Merge branch 'master' of git://github.com/vigsterkr/shogun - http://git.io/TCSD1g
-!- blackburn [~qdrgsm@83.234.54.186] has quit [Ping timeout: 244 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- genix [~gsomix@188.168.4.3] has quit [Ping timeout: 240 seconds]
@sonney2k	n4nd0, btw did you try to get OvO to work with heikos new subsetting stuff?
 n4nd0	sonney2k: blackburn told me that there was still one thing missing, that it had to be added for the labels too
 n4nd0	sonney2k: he said he would take care of it
 n4nd0	sonney2k: I am working with JL's cover tree for the moment
-!- genix [~gsomix@188.168.128.186] has joined #shogun
 n4nd0	have to go, see you later
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- av3ngr [av3ngr@nat/redhat/x-hzfodrrevubortjd] has quit [Remote host closed the connection]
-!- sonne|work [~sonnenbu@194.78.35.195] has joined #shogun
-!- pluskid [~chatzilla@173.254.214.60] has quit [Remote host closed the connection]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 sonne|work	wiking: so the qnorm was b0rken?
 wiking	a bit
 sonne|work	a bit?
 sonne|work	either broken or working :)
 sonne|work	what was wrong?
 wiking	CMath::pow(x[i], q)
 wiking	for q mod 2 =0 it was working
 wiking	for q mod 2 =1 it was wrong
 wiking	as it should have been CMath::pow(fabs(x[i]), q)
 wiking	http://upload.wikimedia.org/wikipedia/en/math/d/5/a/d5a50569adc0dfadfb38dcba038f1e30.png
 sonne|work	so the fabs was missing?
 wiking	yes
 sonne|work	uhh oh
 sonne|work	that would explain why we had some instability in the MKL algorithm
 sonne|work	getting NaNs
* sonne|work smacks head
 wiking	:P
 sonne|work	s/mkl/q-norm mkl/
 wiking	but now my cluster's hard drive is broken
 wiking	and i have 2 days to submit my paper
-!- wiking [~wiking@huwico/staff/wiking] has quit [Remote host closed the connection]
-!- wiking [~wiking@vpna157.ugent.be] has joined #shogun
-!- wiking [~wiking@vpna157.ugent.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 wiking	:>
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking_ [~wiking@huwico/staff/wiking] has quit [Client Quit]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 244 seconds]
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has quit [Quit: Leaving.]
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has joined #shogun
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has quit [Client Quit]
-!- Marty28 [~chatzilla@pD9FC935E.dip.t-dialin.net] has joined #shogun
 Marty28	hiho
 genix	hi all
 Marty28	The R?tsch group page at T?bingen is gone as the group is gone. This affects some shogun tutorial pages. When will you move the links?
-!- Marty28 [~chatzilla@pD9FC935E.dip.t-dialin.net] has quit [Ping timeout: 245 seconds]
-!- Marty28 [~chatzilla@pD9FC935E.dip.t-dialin.net] has joined #shogun
-!- PSmitAalto [82e9b263@gateway/web/freenode/ip.130.233.178.99] has joined #shogun
 sonne|work	Marty28: I guess we will just remove these links - shogun doc has the tutorial now
 PSmitAalto	Hey all
 PSmitAalto	Small question about the cache size of a kernel
 PSmitAalto	how should I chose this, and how can I check how much cache was actually used?
 sonne|work	PSmitAalto: the more the better - it will limit requirements by #elements in kernel :)
 PSmitAalto	But if I define more then necessary, will I be wasting memory?
 sonne|work	no
 Marty28	sonne: thx
 PSmitAalto	Thanks!
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- Marty28 [~chatzilla@pD9FC935E.dip.t-dialin.net] has quit [Quit: ChatZilla 0.9.88.2 [Firefox 11.0/20120312181643]]
 sonne|work	n4nd0: so how does the covercode look like?
 n4nd0	sonne|work: it is taking me some time to get used to the code and how to use it
 n4nd0	sonne|work: I am preparing a small test to benchmark JL's code and compare it to shogun so we will know how much improvement we should expect
 sonne|work	I can imagine so..
 n4nd0	sonne|work: for the tests I have done so far it looks pretty fast, the construction was taking nothing compared to the previous one
 n4nd0	less than 0.1 (s) if I remember correctly
 sonne|work	nice
 n4nd0	sonne|work: the query time was nice too
 n4nd0	I am going to try to compare the output now ... apart from being fast it would be interesting if it gives the correct results :D
 sonne|work	I can design arbitrarily fast algorithms that produce wrong results :D
 n4nd0	haha exactly
 n4nd0	I want to be sure that this cover tree is not one of those
 n4nd0	sonne|work: so it is tonight when they say about the number of slots for each organization, isn't it?
 sonne|work	no tomorrow
-!- wiking [~wiking@vpnb041.ugent.be] has joined #shogun
-!- wiking [~wiking@vpnb041.ugent.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 n4nd0	aham, ok
 sonne|work	Carol said: I will announce slot allocations Wednesday, 11 April after the close of business pacific time.
 sonne|work	so it will even be April 12
 sonne|work	n4nd0: ^
 genix	n4nd0, hello
 wiking	:)
 n4nd0	sonne|work: the 12th then
 n4nd0	genix: hey!
 wiking	sonney2k: u reckon mkl would get better results now with the qnorm being fixed?
-!- PSmitAalto [82e9b263@gateway/web/freenode/ip.130.233.178.99] has quit [Quit: Page closed]
 wiking	although i guess it'll only matter in case of q being odd
 sonne|work	so how much?
 sonne|work	anyway I only have good experience with q=2
 genix	n4nd0, what about memory leaks in covertree?
 n4nd0	genix: well, I got pretty lost there
 wiking	although i cannot run any tests now since my cluster died and the raid is just rebuilding itself...
 n4nd0	genix: valgrind didn't help me that much either
 wiking	so i have to wait at least 6 hours to get it fixed...
 n4nd0	genix: so I started to look at JL's implementation, the one on his webpage
-!- genix is now known as gsomix
-!- PhilTillet [~android@92.90.16.16] has joined #shogun
-!- pluskid [~chatzilla@173.254.214.60] has joined #shogun
-!- n4nd0_ [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 246 seconds]
-!- n4nd0_ [~nando@s83-179-44-135.cust.tele2.se] has quit [Client Quit]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- PhilTillet2 [~android@92.90.16.16] has joined #shogun
-!- PhilTillet [~android@92.90.16.16] has quit [Ping timeout: 244 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Read error: Connection reset by peer]
-!- PhilTillet2 [~android@92.90.16.16] has quit [Remote host closed the connection]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 252 seconds]
-!- wiking_ is now known as wiking
-!- muddo [~muddo@gateway/tor-sasl/muddo] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Remote host closed the connection]
-!- wiking [~wiking@vpnb186.ugent.be] has joined #shogun
-!- wiking [~wiking@vpnb186.ugent.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 gsomix	sonney2k, sonne|work around?
-!- Marty28 [~chatzilla@pD9FC935E.dip.t-dialin.net] has joined #shogun
 Marty28	re
-!- Marty28 [~chatzilla@pD9FC935E.dip.t-dialin.net] has quit [Remote host closed the connection]
-!- blackburn [5bdfb203@gateway/web/freenode/ip.91.223.178.3] has joined #shogun
 blackburn	sonne|work: we definitely need your help there with traffic
 n4nd0	gsomix: hey, I have some problems with the cover tree, do you have a moment?
 gsomix	n4nd0, yep
 n4nd0	gsomix: did you manage to make tests with JL's tree to see what are the nearest neigbors of some query points?
 n4nd0	gsomix: I am trying to make that now, it should be easy, but the output I get makes no sense to me
 blackburn	n4nd0: uh complicated task right? ;)
 gsomix	>> makes no sense to me
 gsomix	what do you mean?
 n4nd0	blackburn: I feel completely retarded for real :S
 blackburn	n4nd0: you always can leave it if you feel unhappy with it
 n4nd0	gsomix: so to start with, I query 10 points with k 10
 n4nd0	gsomix: that should ouput 100 points, 10 nearest neighbors for each one of the query points
 n4nd0	gsomix: I don't know why but I get only 19 points
 n4nd0	gsomix: 10 for the first one, and one for each of the others
 blackburn	n4nd0: at university I had a spare time and tried that precompute stuff on lle
 n4nd0	gsomix: and other thing that makes probably no much sense is that the first two points that are output are always the same
 blackburn	n4nd0: surprisingly w/o precomputing it is faster
 n4nd0	blackburn: haha really?
 blackburn	n4nd0: yes, do you have any explanation? I have
 n4nd0	blackburn: it might be that all the distances that are computed are not used
 blackburn	n4nd0: no they are and not only once
 blackburn	something more interesting
 n4nd0	blackburn: that it is not so different to do vector[i + j*N] than to compute the distance between two vectors?
 gsomix	n4nd0, strange
 n4nd0	blackburn: low dimensional vectors maybe?
 gsomix	n4nd0, unfortunately, my queries were composed of a single point
 blackburn	yes 3d
 blackburn	but why is it faster then?
 blackburn	hint
 blackburn	[i,j] and [j,i]
 n4nd0	blackburn: is the matrix computed without taking into account that it is triangular?
 n4nd0	symmetric is the word for that sorry, not triangular
 n4nd0	gsomix: but using just one point, did you get coherent results?
 blackburn	n4nd0: not really I think it is
 blackburn	n4nd0: cache misses
 gsomix	n4nd0, yep. however, covertree returns the nearest neighbors are not in order.
 blackburn	it sets [i,j] and [j,i]
 blackburn	and it takes a WHILE
 blackburn	;)
 n4nd0	what?
 n4nd0	blackburn: it takes a while to set the value in a matrix?
 blackburn	n4nd0: to jump from [i,j] to [j,i]
 n4nd0	blackburn: aham, ok I see
 n4nd0	blackburn: lot of jumps to far places
 blackburn	yeah and while it is predicted that you will go to [i,j+1]
 blackburn	you have to jump again
 n4nd0	blackburn: but anyway, my intuition is that it shouldn't make a big difference for low dimensional vectors
 n4nd0	blackburn: to re-compute distances there is not very expencise
 n4nd0	expensive*
 blackburn	yes it is faster w/o precomputing that stuff
 blackburn	however if distance are really expensive it worths trying
 n4nd0	yes, I agree
 n4nd0	gsomix: ok, but even if they are not in order, it is given me twice the same point for example, weird thing
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has joined #shogun
 sonne|work	blackburn: will you look at pluskid's LARS stuff
 blackburn	sonne|work: yes
 sonne|work	thx
 sonne|work	gtg
 n4nd0	blackburn: alternative solution
 blackburn	n4nd0: for?
 blackburn	sonne|work: it is in progress so we can wait a little more
 n4nd0	blackburn: cover tree, the code that pluskid suggested, the one that is in github is pretty neat and clear
 blackburn	n4nd0: feel free :)
 n4nd0	blackburn: I think I'll port that one :)
 n4nd0	blackburn: the code uses boost quite a bit and stuff
 n4nd0	blackburn: what do you think is best, to do some wrappers or to adapt it to shogun?
 blackburn	which boost things?
 n4nd0	blackburn: it is about 200 lines of understandable code so it shouldn't be a madness to port it
 n4nd0	blackburn: hash table (unordered map) and smart pointers
 blackburn	just be sure it is rather fast than not :)
 n4nd0	blackburn: yes, it comes with a test to compare it to brute force and it is faster than that
 n4nd0	in any case
 n4nd0	I will first compare it to our KNN
 n4nd0	before starting to port and stuff
 blackburn	n4nd0: it is strange still for me
 blackburn	LLE takes 4.16s to embed 10000 vectors
 blackburn	with k = 10
 n4nd0	I don't really understand it
 n4nd0	gtg now
 n4nd0	see you later!
 blackburn	see you
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 265 seconds]
 pluskid	 what's wrong with JL's cover tree?
 blackburn	pluskid: wrong karma probably :)
 pluskid	blackburn: karma?
 blackburn	it gives headache for ever one trying to integrate it to shogun
 pluskid	oh
 pluskid	so is it actually faster?
 blackburn	no idea
 blackburn	can be
 pluskid	haven't tested yet?
 pluskid	I scanned the previous log
 blackburn	I didn't
 pluskid	it produce strange result?
 blackburn	yes
 pluskid	BTW, have you guys finally got JL's reply (and my reply) in the mailing list?
 blackburn	no there were only your messages
 pluskid	strange...
 pluskid	anyway, if there's problems, maybe we can seek him for help
 pluskid	he seems to be a nice person
 pluskid	and cares about cover tree
 blackburn	yeah but we need to formulate the problem
 pluskid	hmm, seem not an easy task
 blackburn	time to go home !
 blackburn	see you
 pluskid	got to sleep now
-!- blackburn [5bdfb203@gateway/web/freenode/ip.91.223.178.3] has quit [Quit: Page closed]
 pluskid	cu
-!- pluskid [~chatzilla@173.254.214.60] has quit [Quit: ChatZilla 0.9.88.2 [Firefox 11.0/20120314124128]]
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has quit [Quit: Leaving.]
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has joined #shogun
 wiking	mmm is there a chance that GMM clusterer can handle 5*10^6 vectors and do the clustering on it?
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has quit [Quit: Leaving.]
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has joined #shogun
@sonney2k	nahh I don't like having boost as yet another dependency
@sonney2k	we already have too many of them
@sonney2k	does anyone want to fix some warnings http://shogun-toolbox.org/buildbot/builders/python_modular/builds/466/steps/compile/logs/warnings%20%2829%29 ?
@sonney2k	btw wiking they are also in your code ^ :)
 wiking	checkoing
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Client Quit]
 gsomix	sonney2k, hey
@sonney2k	hey
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has quit [Quit: Leaving.]
 gsomix	sonney2k, I'm glad to see you. I have some questions.
 gsomix	>> then first thing to do is to convert everything from returning copies of SGVector to references
 gsomix	why should we use references instead of pointers?
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has joined #shogun
@sonney2k	gsomix, I think it would be nice if one can just do a[0] for an SGVector
@sonney2k	so when SGVector& a is a parameter one can do this
@sonney2k	for SGVector* a one woul dhave to (*a)[0] ...
@sonney2k	gsomix, would you prefer pointers?
@sonney2k	the other reason next to this is that one doesn't have to change current code
@sonney2k	just adding a & won't hurt *that* much
 gsomix	sonney2k, yes, I would prefer pointers. I think SGVector* is more "transparent".
 gsomix	>> one doesn't have to change current code
 gsomix	Hmm.
 gsomix	sonney2k, I think it's wrong. We'll have to fix all SGVector variables on SGVector&.
 gsomix	it's equivalent to SGVector -> SGVector* corrections
 gsomix	sonney2k, isn't it?
 gsomix	sorry. I forgot about dereferencing. =___=
 gsomix	anyway I prefer pointers
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has quit [Quit: Leaving.]
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has joined #shogun
@sonney2k	gsomix, hmmhh talk to n4nd0 / blackburn / wiking and convince them :)
@sonney2k	sry gtg
@sonney2k	cu
 wiking	convince me
 gsomix	sonney2k, ok. su
 wiking	:)
 gsomix	wiking, yo. we want to make reference counting for the SGVector.
 gsomix	which is better: all of the SGVectors in code is a reference or a pointer?
 wiking	aaah that'd be great
 gsomix	*are
 wiking	pointer
 wiking	i know people hate pointers and c++ has a fancy reference shit
 wiking	but i prefer pointers
 wiking	although yeah if you change everything to pointers
 wiking	you'll have trouble with rewriting some code...
 wiking	while having a reference it'll just be fine
 wiking	so sonney2k is right about & being an easier solution
 wiking	and you don't have to care about null pointer references :P
 wiking	like
 wiking	somepointer->callfunction
 wiking	and 'somepointer' is either a null pointer or a bad mem addr
 wiking	i mean what you could do with a pointer case of course that when you do the script for doing the SGVector<>* a for the function argument
 wiking	then simply add something like this right after the function call
 wiking	i mean function definition
 gsomix	wiking, I see
 wiking	ASSERT(pointer check);
 wiking	SGVector<> = *a;
 wiking	SGVector<>b = *a;
 wiking	and then u use b normally ;)
 wiking	so that you can do b[0]
 wiking	as is
 wiking	so it's really a matter of taste... but if you follow c++ standards and check STL things as well
 wiking	you usually pass containers by their reference
 wiking	very seldomly you do something like function (std::vector<double>* a);
 wiking	but anyhow having either of them will save us a lot of memory on the stack ;)
 wiking	so now if you ask me again i'd vote as well for reference... :P
 wiking	even if i prefer pointers more
 gsomix	wiking, hah. :) thank you very much
 wiking	gsomix: sorry :(
 gsomix	wiking, wut?
 wiking	as you saw i wanted to go with pointers as well... but then again if you consider now redoing all the coooode.... it's safer to go with a reference :(
 gsomix	wiking, you and sonney2k are saying the right things. :)
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	gsomix: I vote for references too :)
 gsomix	n4nd0, ok. thanks
 n4nd0	gsomix: will you try to convince for pointers? :)
 gsomix	n4nd0, no, I will not :)
-!- harshit_ [~harshit@182.68.210.237] has joined #shogun
 n4nd0	harshit_: hey! how is it going with semi-supervised learning?
 harshit_	n4nd0: Almost done ! But there is one problem though
 n4nd0	harshit_: oh! that was fast man
 harshit_	SVMlin website has a broken link to its examples
 n4nd0	too bad
 harshit_	have a look:http://vikas.sindhwani.org/svmlin.html
-!- PhilTillet [~Philippe@npasserelle10.minet.net] has joined #shogun
 harshit_	try to download examples.tar.gz
 harshit_	I have sent a mail to its author, Hope he replies and take action!
 n4nd0	yeah, those links are dead
 harshit_	n4nd0: And the task was not too difficult, I just had to create a wrapper class
 n4nd0	harshit_: aham, ok
 harshit_	:( cant succeed without those :(
 harshit_	will ask blackburn, maybe he have the archived files with him
 harshit_	n4nd0: Whats the status of your covertree ?
 harshit_	I think thats merged, am I right ?
 n4nd0	harshit_: well the thing that is merged is integration in KNN
 n4nd0	harshit_: but our current cover tree structure is too slow
 n4nd0	at least according to my tests
 harshit_	ohk..Is that the problem with the algo or implementation ?
 n4nd0	so I am working on the port of another cover tree
 harshit_	nice.
 harshit_	Any news about gsoc
 n4nd0	none AFAIK
 harshit_	hope shogun gets enough seats !
 n4nd0	yeah
 n4nd0	harshit_: cruza los dedos ;)
 harshit_	yo tambian :)
 shogun-buildbot	build #205 of nightly_none is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/205
 n4nd0	oops
-!- PhilTillet [~Philippe@npasserelle10.minet.net] has quit [Ping timeout: 260 seconds]
 wiking	:)))
-!- muddo [~muddo@gateway/tor-sasl/muddo] has quit [Ping timeout: 276 seconds]
-!- PhilTillet [~Philippe@npasserelle10.minet.net] has joined #shogun
-!- V[i]ctor [~victor@host-176-100-246-254.masterbit.su] has quit [Ping timeout: 240 seconds]
 wiking	mmmm iterative pca? :)
 wiking	anyone ?:)
 wiking	i mean sequential :)))
 wiking	i ran out of ram :>
 gsomix	offtop http://piccy.info/view3/2875029/997ca62bb577e291c96083cd2c399564/
 n4nd0	wtf
 gsomix	nitrogen
 n4nd0	aaah
-!- blackburn [5bde8018@gateway/web/freenode/ip.91.222.128.24] has joined #shogun
 blackburn	hey there
 blackburn	wiking: having problems with kinda largescale?
 wiking	hehehe yeah
 blackburn	wiking: well I have some tools for DR however would not work on such sizes
 wiking	what is the ascii code for scroll lock :)))
 blackburn	no idea heh
 blackburn	wiking: are you aware of some *dynamic* sparse matrix class/struct in C/C++?
 wiking	mmm not really
 wiking	brb
 wiking	rboot
 harshit_	blackburn: Is there any built in function in shogun, Which can open and parse libsvm data files ?
 blackburn	harshit_: yes, libsvmfile
 blackburn	hmmm
 harshit_	okay, thanks ..!
 blackburn	harshit_: I am afraid it is not complete
 blackburn	only headers there
 harshit_	then I think i should use libsvm's mex file
 harshit_	in octave
 blackburn	yeah probably
 harshit_	But I wanted to make an example which could be portable .. !
 harshit_	blackburn: Any idea on how to convert libsvm datafiles to normal txt format
 harshit_	ohh sry I think i can do that
 harshit_	octave can help me save
 blackburn	well if you can read it from octave just save from octave ;)
 harshit_	yeah exactly
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
 blackburn	sonney2k: here?
 gsomix	good night, guys
 n4nd0	good night gsomix
 blackburn	n4nd0: how are your covertreeing?
 n4nd0	blackburn: awesome :D
 blackburn	does it work?
 n4nd0	yes
 gsomix	n4nd0, great!
 blackburn	n4nd0: any preliminary speedup rate?
 n4nd0	blackburn: not yet :(
 n4nd0	blackburn: I need a bit more time
 blackburn	no problem :)
 n4nd0	blackburn: take a look here a moment, KNN.cpp:157
 n4nd0	I don't think that ASSERT makes sense
 n4nd0	it is like number of neighbors k has to be equal than the number of points to query
 n4nd0	but we may want to find out the 2-nearest neigbors of just one point
 n4nd0	neighbors*
-!- wiking [~wiking@78-23-191-201.access.telenet.be] has joined #shogun
-!- wiking [~wiking@78-23-191-201.access.telenet.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 n4nd0	blackburn: do you see what I mean?
-!- blackburn [5bde8018@gateway/web/freenode/ip.91.222.128.24] has quit [Ping timeout: 245 seconds]
-!- blackburn [5bde8018@gateway/web/freenode/ip.91.222.128.24] has joined #shogun
 blackburn	damned connection
 blackburn	okay
 blackburn	n4nd0: what s up with 157
 n4nd0	I don't think that ASSERT makes sense
 n4nd0	it is like number of neighbors k has to be equal than the number of points to query
 n4nd0	but we may want to find out the 2-nearest neighbors of just one point
 n4nd0	(I just copied+pasted :))
 blackburn	how can k be greater than total number of objects?
 n4nd0	because rhs is not the number of training objects
 n4nd0	but the number of test objects
 n4nd0	think of it
 blackburn	oh
 blackburn	hah yes sure you are right
 n4nd0	:)
 n4nd0	after 5 trials of doing 2-nearest neighbor of one vector I realized
 n4nd0	:P
 n4nd0	do you want to change it and we save ourselves pull request and stuff?
 n4nd0	I can do it otherwise, it would be no problem
 blackburn	yes but next morning probably
 n4nd0	sure, no problem
 blackburn	n4nd0: I don't like 217 line also
 blackburn	I did add that but that makes no sense for me now
 blackburn	it is kind of weighting
 blackburn	q q^2 q^3 ...
 blackburn	actually it is ~ 1-NN I think
 blackburn	will remove that
 blackburn	okay only one more day and one more night and things will become clearer
 n4nd0	yeah, the weighting
 n4nd0	apart that I think that it doesn't match with the one it is presented in the doxygen documentation
 n4nd0	there it appears that there is one different weight
 blackburn	n4nd0: why?
 blackburn	q^i stil
 blackburn	l
 n4nd0	I mean one different for every neighbor
 n4nd0	maybe I read it bad
 blackburn	correct for me
 n4nd0	ok
 n4nd0	some results
 n4nd0	Shogun's time: 00:00:00.466508
 n4nd0	Build time 00:00:00.060963
 blackburn	however
 n4nd0	CoverTree time (cover_tree) 00:00:00.078839
 blackburn	not example but neighbor
 blackburn	(should be)
 n4nd0	I have to double checked that everything is correct though
 blackburn	n4nd0: 0.07s?
 blackburn	N?
 n4nd0	yes, it is .5 agains .07
 n4nd0	1000 training
 n4nd0	1000 queries
 n4nd0	3-dimensional
 blackburn	>5 times faster?
 n4nd0	K = 5
 n4nd0	yeah
 n4nd0	not taking into account build time
 blackburn	try 10000? ;)
 n4nd0	training?
 n4nd0	for 10000 queries
 n4nd0	Shogun's time: 00:00:04.804862
 n4nd0	Build time 00:00:00.067134
 n4nd0	Out time (cover_tree) 00:00:00.772408
 n4nd0	really nice
 blackburn	hmmm it scales linearly
 n4nd0	but let's wait until I've double check the results
 blackburn	n4nd0: do you test it standalone now?
 n4nd0	blackburn: do you mean not integrated in shogun?
 n4nd0	and it is not that it scales linearly
 n4nd0	I just increased the number of queries
 n4nd0	i.e. the size of the cover tree is the same
 blackburn	n4nd0: why? N=10*N and time is similar
 n4nd0	yes but I mean
 n4nd0	in # queries is obvious that it is going t oscale linearly
 n4nd0	it is like shogun's time
 n4nd0	it "scaled linearly" even if doing quicksort is N?log(N)
 blackburn	ah sure I'm stupid a little
 blackburn	how does it scale wrt to trainset?
 n4nd0	it is just late :)
 n4nd0	it scales to a seg fault :P
 blackburn	interesting things are
 n4nd0	I am doing something wrong in my example
 blackburn	scalability wrt to K
 blackburn	and wrt to train N
 blackburn	lol large-fault learning
 n4nd0	I think I am wasting too much memory in my example
 blackburn	however this constant plays a role sure
 n4nd0	but let me try with the example that it is not compared to shogun's
 n4nd0	this is one query when we manage 1000 training vectors
 n4nd0	Build time 00:00:00.215972
 n4nd0	Out time (linear) 00:00:00.001665
 n4nd0	Out time (cover_tree) 00:00:00.000629
 n4nd0	linear is doing something similar to the quick sort approx
 blackburn	no, one query is not so informative
 blackburn	can bump :)
 n4nd0	in any case if you want to see
 n4nd0	Build time 00:00:15.868034
 n4nd0	Out time (linear) 00:00:00.018845
 n4nd0	Out time (cover_tree) 00:00:00.003390
 n4nd0	I think it is informative though
 n4nd0	the increment with brute force is bigger than the increment with cover tree
 n4nd0	in proportion
 blackburn	yes
 n4nd0	but here you can see the big disadvantage of this cover tree implementation
 n4nd0	with 1000
 n4nd0	Build time 00:00:00.215972
 n4nd0	with 10000
 n4nd0	Build time 00:00:15.868034
 n4nd0	it is crazy
 blackburn	wow
 n4nd0	for 100000 it took like 20 minutes
 blackburn	wtf
 n4nd0	yeah
 blackburn	why so? strange
 n4nd0	well
 n4nd0	I have been doing some research on cover tree
 n4nd0	(there is a nice video lecture by JL)
 n4nd0	there are different methods to build it
 n4nd0	the best is one call
 n4nd0	batch construction
 n4nd0	the best in that it is the fastest
 n4nd0	in JL's code it was all the time below 0.0 (s)
 blackburn	n4nd0: oh may be this weekend if I manage to complete some univ stuff I'll try to integrate JL's again
 n4nd0	I think that maybe I can start porting this one I am using
 n4nd0	and later we could include batch construction and other stuff
 blackburn	may be we will get insight and it will become clear how JL's one works
 n4nd0	yes
 n4nd0	and as I told you I consider that it shouldn't take much time to port this cover tree
 blackburn	which this?
 n4nd0	the one I am using now
 blackburn	aha
 n4nd0	https://github.com/mbrucher/CoverTree
 blackburn	but no batch there?
 n4nd0	no batch there
 blackburn	bad, right?
 n4nd0	mmm idk
 n4nd0	construction is just construction
 n4nd0	it shouldn't be that important
 blackburn	important for me - I need to construct covertree each time I do embedding
 n4nd0	aham
 n4nd0	then it is important too
--- Log closed Wed Apr 11 00:00:00 2012
