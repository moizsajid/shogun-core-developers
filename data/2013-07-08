--- Log opened Mon Jul 08 00:00:22 2013
@sonney2k	van51, so all the code is kind of in there and just needs some tweaks to work with shogun
 van51	sonney2k: ok, nice
 van51	sonney2k: I'll start it this week
 van51	sonney2k: sent first PR
 shogun-notifier-	shogun: van51 :develop * cb3d559 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/cb3d5597de313f1d6c33afe8594de68157707b45
 shogun-notifier-	shogun: Added support for normalization in HashedDocDotfetures
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 34c2f9c / / (3 files): https://github.com/shogun-toolbox/shogun/commit/34c2f9c09e6a1e73d0b5a010be2283c7008760e2
 shogun-notifier-	shogun: Merge pull request #1215 from van51/feature/hashing
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Added support for normalization in HashedDocDotfetures
 shogun-buildbot	build #1209 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1209  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	van51, ok that one is merged
@sonney2k	van51, btw I realized that your DelimiterTokenizer skipping over multiple e.g. spaces might be a good thing when reading e.g space delimited files
@sonney2k	van51, if it is not too hard it would be nice to bring this back as an option
 van51	sonney2k: that was what I had in mind
 van51	sonney2k: yeah it shouldn't be hard
 van51	sonney2k: I'm solving some compiler complaints now and I'll push later on
@sonney2k	van51, so for text based stuff I think n-grams are the best there is anyway, some people like to use n-words or so too. So that might be the only other tokenizer I can currently think of (except for some very sophisticated ones using stemming etc we shouldn't do without some use case)
@sonney2k	anyway later I better sleep now
@sonney2k	cu
 shogun-buildbot	build #1210 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1210  blamelist: van51 <vangelis_51@hotmail.com>
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Ping timeout: 246 seconds]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has joined #shogun
-!- nube [~rho@49.244.40.228] has joined #shogun
 van51	sonney2k: my connection decided to take a break
 van51	sonney2k: yea n-words sounds reasonable to have as well and it shouldn't be too hard
 van51	sonney2k: just an extension of DelimiterTokenizer
 van51	I'll see it from tomorrow
 shogun-buildbot	build #1331 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1331  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1332 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1332  blamelist: van51 <vangelis_51@hotmail.com>
-!- foulwall [~user@2001:da8:215:6100:851a:56a4:fbd1:1de6] has joined #shogun
@iglesiasg	hushell, hi there!
@iglesiasg	hushell, everything going good with the factor graph?
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has quit [Quit: Leaving.]
-!- nube [~rho@49.244.40.228] has quit [Quit: Leaving.]
 shogun-buildbot	build #451 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/451
 hushell	iglesiasg: hi iglesiasg
@iglesiasg	hello hello :)
 hushell	There are more work than my imagination :(
 hushell	I am still working on it
 hushell	finishing it in few hours
@iglesiasg	that sounds pretty good then!
 hushell	okay, talk you later
@iglesiasg	see you
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- foulwall [~user@2001:da8:215:6100:851a:56a4:fbd1:1de6] has quit [Ping timeout: 245 seconds]
-!- FSCV [~FSCV@189.139.208.117] has quit [Quit: Leaving]
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has quit [Ping timeout: 268 seconds]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- nube [~rho@116.90.239.13] has joined #shogun
 gsomix	sonney2k, hello. I have started work on csv reader and write some stuff for van51. cu at evening, I'll send PR.
 gsomix	need to go now
-!- foulwall [~user@2001:da8:215:c252:9dcb:c7a6:35c0:77ac] has joined #shogun
 foulwall	ping sonney2k
@sonney2k	foulwall, hey there!
@sonney2k	gsomix, go go!
 foulwall	Hi sonney2k , could I use CNormOne to normalize the features? and I don't exactly know the mechanism in that.
 foulwall	Ah, I got preprocessor_norm_one_modular.py from /examples, I'll have a try.
@sonney2k	foulwall, sorry for what?
 foulwall	sonney2k: the domain of features are not fixed to [0, 1] since the data importer, so I need to normalize it
@sonney2k	I still don't understand
@sonney2k	if the domain is not 0..1 why not keep it?
 foulwall	since some features in australian.libsvm.h5 are out of domain.
@sonney2k	foulwall, coudn't you then just display the real feature range?
@sonney2k	I would prefer to keep the data as is
@sonney2k	foulwall, oki gtg brb
 foulwall	sonney2k: cu
-!- sonne|work [~sonnenbu@91-64-72-127-dynip.superkabel.de] has joined #shogun
 sonne|work	foulwall: back
-!- foulwall [~user@2001:da8:215:c252:9dcb:c7a6:35c0:77ac] has quit [Ping timeout: 245 seconds]
-!- foulwall [~user@2001:da8:215:6100:2d48:68e4:4af2:4837] has joined #shogun
 sonne|work	foulwall: ok?
 foulwall	Hi sonne|work , I think we can do regress/classification/etc in [0,1] and display in its original domain? or just as you said do them in original domain and display
 sonne|work	foulwall: yeah display in its original domain and for now don't care about normalization. We can add a tab later allowing people to select how to   normalize the data
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has joined #shogun
 foulwall	ok, gotcha!
 hushell	sonney2k: CDynamicArray cannot store CInheritedClass* type, which is subclass of CSGObject?
 hushell	sonney2k: I got an error like this: /DynamicArray.h:625:4: error: invalid conversion from 'shogun::CFactorDataSource***' to 'shogun::CSGObject***'
 hushell	sonney2k: Now I add (CSGObject***) to DynamicArray.h:625, i.e. m_parameters->add_vector((CSGObject***)&m_array.array . Is this the right way?
 sonne|work	hushell: did you use DynamicObjectArray?
 sonne|work	hushell: I need more context...
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Client Quit]
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 hushell	sonne|work: no, I am using DynamicArray<CFactor*> to store a set of factors, which has to be dynamically increasing, and CFactor is an inherited class from CSGObject
 sonne|work	hushell: then please use CDynamicObjectArray for that
 hushell	sonne|work: DynamicObjectArray is not a template class
 hushell	I need to explicitly specify
 sonne|work	hushell: why?
 sonne|work	CDynamicArray won't work with serialization
 hushell	I have 2 such kind array, I mean in this way the definitions are clearer
 hushell	now I am doing like this: CDynamicArray<CFactor*> m_factors;
 hushell	    // Data source objects if data is shared among multiple factors
 hushell	    CDynamicArray<CFactorDataSource*> m_datasources;
 sonne|work	hushell: CDynamicArray is not intended for SGObjects's - I know you have to use casts with DynamicObjectArray but you should rather use that
 hushell	sonne|work: CDynamicObjectArray is the only way? how about DynArray?
 sonne|work	no
 sonne|work	the only way if you want serialization
 hushell	sonne|work: okay, then in deconstructor, do I need to call SG_UNREF for each element in DynamicObjectArray?
 hushell	if each element is a pointer
 sonne|work	no
 sonne|work	it is made for SGObjects
 sonne|work	so it will do REF/UNREF automatically
 hushell	okay, got it
 hushell	I am curious where the REF is set
 hushell	SG_UNREF only let pointer to NULL, where the free operation being taken?
 hushell	the question may be quite silly :)
 sonne|work	hushell: in SGObject's unref() call
-!- HeikoS [~heiko@nat-166-97.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 hushell	sonne|work: Thanks! not be used to without delete
 sonne|work	hushell: sorry what? it is calling delete in SGObject once the refcount reaches 0
 hushell	sonne|work: I mean when coding, I don't need to delete for myself :)
 sonne|work	hushell: only call SG_UNREF for SGObject derived object's yes
@HeikoS	votjakovr: hi!
@iglesiasg	hushell: I used this DynamicObjectArray in the PrimalMosekSOSVM, take a look if you want to see how to use its API
@iglesiasg	hushell: IIRC I spent a bit of time debugging until I got it working fine without leaks and so
 votjakovr	HeikoS: hi!
 hushell	iglesiasg: yours is the best reference :)
 hushell	but shall I use CDynamicObjectArray or CDynamicObjectArray& for a return type?
@HeikoS	votjakovr: still no PR, how are things with that?
@HeikoS	votjakovr: we have to be careful not to fall behind in schedule
@iglesiasg	hushell: let me check a moment
 hushell	Is not allow to use std::vector, right?
@HeikoS	hushell: try to avoid this for class members
@iglesiasg	hushell: internally it is fine
 hushell	but my case is members, okay let me make CDynamicObjectArray works
@HeikoS	hushell: what objects do you want to put inside?
@iglesiasg	hushell: I don't returning a CDynamicObjectArray would entail much overhead (it would copy a few numbers and a pointer, but not the whole array)
@iglesiasg	I don't think*
@HeikoS	iglesiasg: yeah thats pretty fine
@HeikoS	hushell: CDynamicObjectArray is only for shogun class instances
 votjakovr	HeikoS: ah, sorry, now i'm fixing docs, implementing p(y*|y)... it's the base of future work, then things will be much quicker
@HeikoS	otherwise DynamicArray or DynArray
 hushell	I remember last time I got similar question for SGVector, but both case work well
@HeikoS	votjakovr: so what about the numerical integration for p(y*|y) ?
 hushell	HeikoS: i.e. CDynamicObjectArray also works for derived classes ?
@HeikoS	hushell: yes
@HeikoS	hushell: also it can do reference counting
@HeikoS	hushell: you have to be a bit careful about that, there is a boolean flag that you can set
@HeikoS	its useful if you put objects into the array and then they ger all unrefed when the array is deleted
@HeikoS	so no need to delete the elements by hand
 votjakovr	HeikoS: in process... i created class-wrapper for functions of one variable, is it ok?
@HeikoS	but also if you dont want that to happen, you can turn it off
@HeikoS	votjakovr: a new class? or in CStatistics (where I think it would be fine)
 votjakovr	HeikoS: with overloaded operator ()
@HeikoS	votjakovr: ehm, explain that :)
-!- vgorbati [c3ee5cb1@gateway/web/freenode/ip.195.238.92.177] has joined #shogun
 votjakovr	HeikoS: we need to integrate function of one variable, i created class IntegrableFunction with virtual float64_t operator() (float64_t x)=0;, which return f(x)
@HeikoS	votjakovr: I like that! does it work already?
 hushell	HeikoS: Thanks! It make sense :)
 votjakovr	HeikoS: not yet, but in progress...
@HeikoS	votjakovr: ok, so what is missing for the PR?
 votjakovr	HeikoS: should it be in Statistics?
@HeikoS	votjakovr: I would have put the implementation into CStatistics as a function rather than having a new class, so only the Gauss-blabla method, but yours should be in mathematics folder then
-!- zxtx_ is now known as zxtx
 hushell	How do I register a CDynamicObjectArray member? use SG_ADD((CSGObject**)...) or add_vector()/
@HeikoS	hushell: the first, with a cast
-!- vgorbati [c3ee5cb1@gateway/web/freenode/ip.195.238.92.177] has quit [Quit: Page closed]
 hushell	HeikoS: but it indeed a vector
 votjakovr	HeikoS: ok, for the probit: fix docs + implement evaluate_log_probability for all likelihoods + implement get_probabilities() in GPC class + test - this will be very quickly
@HeikoS	hushell: well no, it is a dynamically growing complex structure
 hushell	HeikoS: okay, Thanks!
@HeikoS	votjakovr: ok, sounds good, keep on then!
@iglesiasg	sonne|work, HeikoS, lisitsyn: did you have a look to the performance comparison in http://jmlr.org/papers/volume14/curtin13a/curtin13a.pdf?
@HeikoS	iglesiasg: yes, we had a little discussion about that
@iglesiasg	I wonder, if I believe that our kNN is much faster (using the cover tree) than what they state there, is it ok to run experiments on our own and contact them?
@iglesiasg	I find it sort of lying, but no idea if this is a common case in research :)
@HeikoS	iglesiasg: While I agree, I am not sure whether this is worth it
 sonne|work	iglesiasg: that was IIRC an old implementation of KNN before you did the covertree
-!- lambday [67157d37@gateway/web/freenode/ip.103.21.125.55] has joined #shogun
 sonne|work	iglesiasg: naywhayare is the author of mlpack (here in the channel btw)
 lambday	HeikoS: hi
 sonne|work	lambday: hey there !
 lambday	sonne|work: hi
@HeikoS	maybe tell them
 sonne|work	lambday: moin moin
@iglesiasg	sonney2k: but the paper is from 2013
@HeikoS	lambday: hey!
 lambday	moin moin :)
 sonne|work	iglesiasg, HeikoS naywhayare knows
@iglesiasg	naywhayare: morning!
 sonne|work	lambday: exactly :)
 lambday	HeikoS: number of allocations for SG was way too higher, but for the sparse matrix I initially had, total number of bytes allocated was smaller for SG
 sonne|work	HeikoS: can you provide a more reasonable sparse amtrix?
 sonne|work	HeikoS, lambday: why do you care at all?
@HeikoS	sonne|work, lambday yes I can, just thinking of how to get it into shogun :)
@HeikoS	sonne|work: what do you mean?
 lambday	the matrix is really huge
 sonne|work	HeikoS: you could write a libsvm file
 sonne|work	HeikoS: about the number of allocs
@HeikoS	sonne|work: just curious
 sonne|work	lambday: are you talking about #allocs for the sparse matrix?
 sonne|work	then shogun will do one alloc per sparse vector of the matrix
 lambday	sonne|work: yes..
 sonne|work	good thing is that you can easily change one vector
 lambday	sonne|work: but how about the entries?
 sonne|work	and grow the matrix
 lambday	okay
 sonne|work	lambday: that was already for the entries
@HeikoS	lambday: so about these conversions from shogun to eigen3
@HeikoS	how badly do they hurt us?
 sonne|work	HeikoS: depends on the sparsity of the matrix
 lambday	HeikoS: pretty bad... if I don't get to keep eigen3's sparse as a member then I gotta change it every time I call apply
 lambday	and that would be A LOT
 lambday	for cg
-!- vgorbati [c3ee5cb1@gateway/web/freenode/ip.195.238.92.177] has joined #shogun
 lambday	if I do get to keep eigen3's sparse, its just once
@HeikoS	lambday: ok sure, we cannot do this, but say if we have an eigen3 member what is not registered
@HeikoS	but just remporary
 sonne|work	HeikoS: computation wise already the test is 2 times slower
 sonne|work	with eigen3
 lambday	HeikoS: temporary?
 sonne|work	so at this stage it doesn't look like using eigen3 is a good idea for sparse
@HeikoS	sonne|work: yes, but we need eigen3's solvers at some point
 lambday	sonne|work: well, that depends on the sparsity pattern, doesn't it :(
 sonne|work	HeikoS: for sparse matrices?
@HeikoS	sonne|work: yes, there is a case where we need to use plain vanille cg on sparse linear systems
@HeikoS	lambday: but for cocg_m you will implement that anyway by hand
 lambday	HeikoS: could you please elaborate on the temporary thing? I was thinking it of keeping it as a member, so it will stay as long asn that object last
@HeikoS	lambday: ah no, the triangular sparse solver is also there
@HeikoS	lambday: sorry, temporary in the sense that it is not a class member (and is not serialised then)
@HeikoS	lambday: you you have an object that can be accessed by the instance, but is lost after the instance is deleted
@HeikoS	lambday: so no sending around in networks etc
@HeikoS	lambday: what about the triangular solver in cocg_m ? for the shifts, how would you do that?
@HeikoS	sonne|work, lambday man I really did not expect that many framework challenges in this project ;)
 lambday	lol neither did I :D first complex, now this :D
 lambday	HeikoS: cocg_m just applies the operator to the vector :-/ the one that krylstat has
 lambday	for shifted stuff they do it in two stages
@HeikoS	cocg_m but we need a loop over the shifts and a backsolve in each iteration
 lambday	HeikoS: https://github.com/lambday/KRYLSTAT/blob/master/cocg_m/eigen/eigen_cocg_m.h#L239
 lambday	they do it here
@HeikoS	I see
 lambday	HeikoS: and, also, I think I can get cocg_m under the same base
@HeikoS	lambday: ok then
 lambday	cause we have to send shifts anyway, why not weight?
@HeikoS	lambday: ok
 lambday	but that should be optional
 lambday	I mean, having two solve methods for cocg
 lambday	one that returns the matrix and another the vector
@HeikoS	lambday: thats a good idea I think
 lambday	yeah.
@HeikoS	lambday: how big were the test matrices you used?
 lambday	but about sparse -
 lambday	a mil x a mil
@HeikoS	I have a 200000 matrix which I used in experiments, will that allow to see differences?
@HeikoS	at least it has a realistic sparsity structure :)
 lambday	yes
 lambday	so things to check are (a) time (cpu/wall clock) (b) number of allocs (c) total bytes allocated
 lambday	right?
@HeikoS	time is most important, memory is just interesting
 lambday	okay
 sonne|work	HeikoS: memory is clear just #of sparse vectors
 lambday	and log-det framework will work even if eigen3 is not there.. if we provide it an operator, an eigen solver and a linear solver that works without eigen3, it should work
@HeikoS	lambday: thats pretty cool then
 lambday	it all depends on the implementation
@HeikoS	lambday: question is what is best for the default case
@HeikoS	because letting users choose can create confusion if not documented properly
 sonne|work	HeikoS: what is a 200000 matrix ?
@HeikoS	sonne|work: square and psd
 sonne|work	200k x 200k in size?
@HeikoS	sonne|work: and badly conditioned
@HeikoS	yes
 sonne|work	nnz?
@HeikoS	let me check
 lambday	HeikoS: is that for the ozone example?
@HeikoS	lambday:  yes thats the one
 lambday	cool!!! :D
@HeikoS	lambday: but it will be way easier to generate it from python
 lambday	err...
@HeikoS	sonne|work:  nnz(Q) =  3723942
 sonne|work	quite a lot
 lambday	HeikoS: could you please send me the script? I gotta read it from a file manually in cpp I guess..
 sonne|work	so shogun's code would be twice as fast I would expect
 lambday	HeikoS: sonne|work: if that is the case (default) then we can just use shogun's for all our stuffs... just gotta add serialization and we're good to go
@HeikoS	sonne|work: ok good!
@HeikoS	lambday: that would be good
@HeikoS	lambday: I was a bit worried about the solvers (e.g. individual ones)
 lambday	HeikoS: yes I was just thinking that
@HeikoS	lambday: also we will need preconditioned CG at some point
 sonne|work	lambday: well we should test this
 lambday	ummm...
@HeikoS	but for that we can just do a conversation to eigen3 once and then work from there
 sonne|work	lambday, HeikoS I expect eigen3 to be faster for extremely sparse matrices
 lambday	preconditioning is just once per solve
 lambday	sonne|work: yes.. seems so
 sonne|work	oki
* sonne|work food
@HeikoS	sonne|work: haha, enjoy! :)
 lambday	:D
@HeikoS	lambday: should I just send you this matrix as a matlab file?
 lambday	HeikoS: yes.. or the python script that generates it
@HeikoS	lambday: I read things from a file for that, but I can try to write something similar
@HeikoS	lambday: yes, I will first send matlab file and then a bit later a script to generate some large matrices randomly
 lambday	HeikoS: alright
 lambday	how big is that matrix?
 lambday	oh wait!
@HeikoS	the file?
 lambday	is that in the ozone code zip?
 lambday	then I might actually have that
@HeikoS	oh yes in fact it is
 lambday	wait I am checking
@HeikoS	there is also the code how to generate the matrix Q as a function of kappa
@HeikoS	and for that, some files are loaded
 lambday	ozone_data.mat
 lambday	right?
@HeikoS	lambday: this contains the building blocks
@HeikoS	check mcmc_ozone.m
@HeikoS	load 'ozone_data.mat'
@HeikoS	create_Q_matrix=@(kappa) GiCG+2*kappa^2*G+(kappa^4)*C0 + speye(size(A,2))*1E-10;
@HeikoS	and then you can to Q=create_Q_matrix(2^-10) or so
 lambday	well, I can do that from octave? :-/ I don't have matlab
@HeikoS	should work
 lambday	alright
 lambday	checking
@HeikoS	if not, let me know
 lambday	okay
@iglesiasg	HeikoS: let me ask you; say  I want to have a private method that returns some std::vector, I guess that is not good since vector should be included in the header. However, as I just want to use it internally -- it is private -- it feels like it should be ok being able to do it
@iglesiasg	have you faced that before?
-!- nube [~rho@116.90.239.13] has quit [Quit: Leaving.]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has joined #shogun
@HeikoS	iglesiasg: I think that should be fine, however, it is not nice :)
@HeikoS	iglesiasg: why do you want the std::vector?
@iglesiasg	HeikoS: I would like to use std::vector because I want to have a vector of SGVectors
@HeikoS	iglesiasg: does it have to be dynamically growing?
@iglesiasg	however I think I could manage using another thing in Shogun for that, it was a bad example
@HeikoS	if not, why not use a matrix?
@iglesiasg	no, it does not need to be
@iglesiasg	I want to index something like this
@HeikoS	then you should definitely go for a matrix
@iglesiasg	C(i,j) where each of these elements is a vector
@HeikoS	ah
@HeikoS	so it is a 3d array?
@iglesiasg	sort of, but I would rather index it like that, with two indices
@HeikoS	iglesiasg: I see, and how do you represent that currently?
 lambday	HeikoS: alright, matrix loaded
@HeikoS	lambday: cool that it worked!
 lambday	(although I didn't understand a bit of what's going on with the code!)
 lambday	but then I write this to an ascii file and read it from shogun?
@iglesiasg	HeikoS: it is not represented yet, I want to first see if I can use something like std::vector< std::vector<SGVector>>
@HeikoS	lambday: yes, although I never loaded sparse matrices, sonne|work pointed out the svmfile might be a possibility
 van51	iglesiasg: vector inception :O
@iglesiasg	HeikoS: apart from that, I am in a similar situation where I would like to use a std::set, and that a private method returns it
@HeikoS	iglesiasg: I see, let me think
@iglesiasg	van51: maybe it looks weird yeah :S
@HeikoS	iglesiasg: I mean you could have a DynamicArray of DynamicObjectArrays
@iglesiasg	but SGVector are not SGObject
@HeikoS	iglesiasg: the thing is: if you do the private method with std::vector you can never use it from another language than c++
@HeikoS	iglesiasg: you can use DynArray<float>
@HeikoS	there is one array for CSGObject and one for generic stuff
@HeikoS	iglesiasg: I had these issues before and did not really come up with a nice solution
@HeikoS	iglesiasg: what about a large matrix?
@HeikoS	then you just have to do index conversions?
@iglesiasg	yeah, but the indexing won't be nice
@HeikoS	iglesiasg: a block matrix
-!- foulwall [~user@2001:da8:215:6100:2d48:68e4:4af2:4837] has quit [Quit: super]
@HeikoS	iglesiasg: you could have a private method for that
@HeikoS	then it would be more generic
@iglesiasg	aham, that sounds more feasible
@iglesiasg	I guess I won't be able to use operators like () and [] though
@HeikoS	you could add a method that takes a matrix and your three indices and then returns the coresponding thing for you
@HeikoS	iglesiasg: ah we really should implement the NDArray soon
@HeikoS	since this would solve everything
@iglesiasg	now that I think of the the SGMatrixList may help me for this too
@iglesiasg	I am actually more concerned now about the set thing
@HeikoS	iglesiasg: yes, it might, I have not used that yet though
@HeikoS	isnt there CSet? is that for CSGObject only?
@iglesiasg	HeikoS: I have seen the lib/Set but it does not seem to implement an intersection
@HeikoS	iglesiasg: ah yes, thats not a proper set
@HeikoS	mmh
@HeikoS	iglesiasg: so these methods are private?
@HeikoS	maybe you should just use std:: then
@iglesiasg	HeikoS: yes, they are private
@HeikoS	too much hassle otherwise
@HeikoS	iglesiasg: I mean you can still unit-test them
@HeikoS	since thats also in c++
@iglesiasg	but about what you said that it won't be possible to call from other languages
@iglesiasg	say I have a public train method
@HeikoS	but people will not be able to call them, say if they want to unterstand things better
@iglesiasg	well, but if I make them private
@HeikoS	iglesiasg: they cannot be called anyway
@iglesiasg	the idea is that people can't call them
@HeikoS	you are right
@iglesiasg	exactly
@HeikoS	iglesiasg: haha :) sorry
@iglesiasg	:) but one is going to be still able to call the public methods from target languages right?
@HeikoS	well, it will definitely work, so why not do it
@iglesiasg	ok
@iglesiasg	I am going to try to use the SGMatrixList then but the set will be included in the header I think
@iglesiasg	HeikoS: thanks!
@HeikoS	iglesiasg: to be honest I would not use the matrix list, our lists are quite messy in terms of memory management
@iglesiasg	haha ok
 votjakovr	HeikoS: if you have a time please look at evaluate_means and evaluate_variances method of LikelihoodModel class, should i add labels as a parameter for that methods or we are only interested in y==1?
@HeikoS	votjakovr: we should have both
@HeikoS	votjakovr: so if labels==NULL (default) y==1 will be used
@HeikoS	votjakovr: and for multiclass, things are a bit different
 votjakovr	HeikoS: ok, i'll add
 van51	sonne|work: I've added that option to DelimiterTokenizer
 van51	sonne|work: I've sent a PR
@HeikoS	votjakovr: please document that properly to avoid confusion :)
-!- nube [~rho@36.252.244.207] has joined #shogun
 votjakovr	HeikoS: yeah :)
-!- nube [~rho@36.252.244.207] has quit [Ping timeout: 268 seconds]
-!- foulwall [~foulwall@117.136.0.135] has joined #shogun
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has quit [Quit: ERC Version 5.3 (IRC client for Emacs)]
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 260 seconds]
 sonne|work	van51: which one now?
 van51	sonne|work: the delimiter PR is ready
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: van51 :develop * c7a27ca / / (3 files): https://github.com/shogun-toolbox/shogun/commit/c7a27caf7e4b838682019210cdf70e3a4c5496c2
 shogun-notifier-	shogun: Option to skip delimiters in CDelimiterTokenizer
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 583fc6c / / (3 files): https://github.com/shogun-toolbox/shogun/commit/583fc6cab8c367d20dcd163cd72f59714cd65c9e
 shogun-notifier-	shogun: Merge pull request #1217 from van51/feature/tokenizer
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Option to skip delimiters in CDelimiterTokenizer
 sonne|work	van51: yeah I thought you already did some skip 'n' delimiters
 sonne|work	van51: but thansk anway
 sonne|work	should be pretty useful for gsomix
 van51	sonne|work: np
 van51	sonne|work: I also liked that functionality
 sonne|work	van51: I am tempted to think that instead of skipping delimiters you could add an option to skip 'n' delimiters
 sonne|work	so one would get multiple words
 sonne|work	van51: I mean I think the code might be actually pretty similar
 van51	sonne|work: like the n-words you mentioned yesterday?
 sonne|work	yes
 sonne|work	if you had some counter that counts down to 0 I mean
 sonne|work	which would usually be 1
 sonne|work	just thinking
 van51	sonne|work: hm I get what you're saying
 shogun-buildbot	build #1007 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1007  blamelist: van51 <vangelis_51@hotmail.com>
 van51	sonne|work: but the idea behind this PR was to avoid situations like consecutive white space
 lambday	HeikoS: libsvm format is row#: col#:val, right? val only nz elements?
 van51	sonne|work: it may be a bit trickier to maintain both functionalities simultaneously
 lambday	HeikoS: sonne|work how do I read from libsvm files in shogun?
 sonne|work	lambday: we have function in CSparseFeatures
 van51	sonne|work: I don't mind implementing that, but maybe it would be better in a seperate tokenizer like you proposed yesterday
 lambday	sonne|work: okay..
 sonne|work	van51: yeah maybe it is more explicit which is good
 sonne|work	lambday:         CRegressionLabels* load_svmlight_file(char* fname, bool do_sort_features=true);
 lambday	sonne|work: yes..
 sonne|work	lambday: that is what you need
 lambday	sonne|work: okay..
 lambday	its being huge
-!- nube [~rho@36.252.234.248] has joined #shogun
 sonne|work	lambday: size?
 sonne|work	I thought it was just 4 million nnz's?
 lambday	still writing
 lambday	yes
 sonne|work	ahh yes the file itself is big yes
 lambday	I am writing from octave
 sonne|work	but loaded it would just be 50MB or so
 shogun-buildbot	build #1211 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1211  blamelist: van51 <vangelis_51@hotmail.com>
 shogun-buildbot	build #1008 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1008  blamelist: Soeren Sonnenburg <sonne@debian.org>
 sonne|work	van51: btw I had a look at the Streaming* code and I don't see any better way than storing the converted output
 sonne|work	van51: I mean a sparse vector
 shogun-buildbot	build #1212 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1212  blamelist: Soeren Sonnenburg <sonne@debian.org>
 van51	sonne|work: so it's going ok
-!- foulwall` [~user@2001:da8:215:6100:259b:cbe5:416f:ba90] has joined #shogun
-!- foulwall [~foulwall@117.136.0.135] has quit [Quit: AndroIRC - Android IRC Client ( http://www.androirc.com )]
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 sonne|work	van51: yes just add a test. IIRC there was some code to turn streaming* features into normal SparseFeatures (or densefeatures?) - maybe it  would be good to compare data
 sonne|work	iglesiasg: what do you want to do? you need nd-arrays?
 shogun-buildbot	build #1333 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1333  blamelist: van51 <vangelis_51@hotmail.com>
@iglesiasg	sonne|work: I want to index matrices like this C(i,j)
@iglesiasg	this C(i,j) would be a matrix
 naywhayare	iglesiasg: hello there
 naywhayare	I believe the benchmarks were done before the cover tree support was added to shogun, if I remember right
 sonne|work	iglesiasg: and SGMatrix C; is not enough?
-!- nube [~rho@36.252.234.248] has quit [Read error: Connection reset by peer]
 naywhayare	here is the script: http://pastebin.com/CyHYNGMD
 naywhayare	like every other library, I used the documentation to figure out what the simplest way to run kNN was
 naywhayare	(that is, the way a new user would be most likely to approach it)
@iglesiasg	naywhayare: aham ok, so the default option in mlpack is using cover tree / kd tree?
@iglesiasg	sonne|work: Wouldn't I need to do a SGMatrix<SGMatrix> then? AFAIK, that's not possible
 sonne|work	iglesiasg: ahh matrix!
 naywhayare	iglesiasg: the default option in mlpack is the kd-tree
@iglesiasg	naywhayare: got it, all right
-!- nube [~rho@49.244.112.133] has joined #shogun
 sonne|work	iglesiasg: is this matrix of constant size?
 sonne|work	iglesiasg: I mean could we just use ndarrays?
@iglesiasg	sonne|work: yeah, however then I do not see how to use just two indices
@iglesiasg	using a intermediate function as Heiko said
@iglesiasg	but I wouldn't be able to use operators [] or () I think
 sonne|work	iglesiasg: ahh ok and your matrixlist class is not an option?
@iglesiasg	sonne|work: yeah, I think it could
@iglesiasg	I can live doing
@iglesiasg	C(n*j + i)
@iglesiasg	or something like that
 sonne|work	iglesiasg: you could add an operator in you matrixlist class too
 sonne|work	so it would be exactly like this then
@iglesiasg	sonney2k: mmm it may be an option
@iglesiasg	sonne|work: wrong name :)
@iglesiasg	however, I would like to still include set in the header
@iglesiasg	I don't say no way around that
@iglesiasg	I am just using it internally though, just need it in the header for the return value of a private method
 sonne|work	sorry what? set in the header?
 sonne|work	iglesiasg: ^
@iglesiasg	include set in the header
@iglesiasg	like #include <set>, std::set
@iglesiasg	sonne|work: ^
 sonne|work	ahh ok then just add this function to modshogun_ignores.i
 sonne|work	to exclude it from swig
@iglesiasg	it makes sense
@iglesiasg	do I need to use some SWIG_IGNORE too?
 shogun-buildbot	build #1334 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1334  blamelist: Soeren Sonnenburg <sonne@debian.org>
 sonne|work	iglesiasg: no
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has quit [Quit: Leaving.]
 lisitsyn	heavy irc usage today!
 lisitsyn	it is monday btw
 lisitsyn	so
 lisitsyn	gsomix: hushell: foulwall: iglesiasg: lambday: you know what to do
@iglesiasg	lisitsyn: sure :)
@iglesiasg	thanks for the reminder
 lambday	lisitsyn: yes :)
 foulwall`	thanks for the reminder
@HeikoS	lambday: i am back
 lambday	HeikoS: wb :)
@HeikoS	lambday: whats up? :)
 lambday	HeikoS: the matrix is so f**king big :( :(
 lambday	HeikoS: its still writing :(
 lambday	HeikoS: in the meantime I tested to read from a svmlight file to a sparse matrix
 lambday	works fine
@HeikoS	lambday: ascii is a bad format
 lambday	:(
 lambday	but the good thing is, once I write it, I'll use it for all experiments later on :D
@HeikoS	lambday, sonne|work it would be good to have some std formats that we can read
 lambday	even for the demo :D
@HeikoS	like hdf5
@HeikoS	or *.mat
@HeikoS	lambday: yes, thats good, its gonna be huge though
 lambday	HeikoS: *.mat will be really helpful I think
 lambday	HeikoS: I am guessing 100+ MB
 lambday	sonne|work: said loaded size will not be more than 50 MB
 sonne|work	HeikoS: we can read hdf5 and the ascii format matlab does
@HeikoS	lambday: loaded is fine, its just a pain to read/write asci
 lambday	yes :(
@HeikoS	sonne|work: how easy is it to read hdf5?
@HeikoS	because matlab can export that
 sonne|work	2 lines
@HeikoS	lambday: maybe this is better then?
 sonne|work	HeikoS: actually new matlab is hdf5
 lambday	so.. use SGSparseMatrix::load instead of that
 sonne|work	e.g.
 lambday	but I gotta check how to write hdf5 from octave
@HeikoS	lambday: thats easy
 sonne|work	f=HDF5File("fm_train_real.h5","r", "/data/doubles")
 sonne|work	    feats2.load(f)
@HeikoS	I did that before
 sonne|work	f=AsciiFile("label_train_twoclass.ascii")
 sonne|work	    lab2.load(f)
 lambday	sonne|work: ah thanks
@HeikoS	cool! thx :)
 sonne|work	features_io_modular.py
 sonne|work	is the example
 sonne|work	but it can be directly used on SG* datatypes
 lambday	HeikoS: so in octave, I just do something like hdf5write('myfile2.h5', 'blah-blah', Q); ?? Q=sparse matrix?
-!- foulwall` [~user@2001:da8:215:6100:259b:cbe5:416f:ba90] has quit [Ping timeout: 264 seconds]
@HeikoS	lambday: yes its that simple,
 lambday	and then just use shogun's load?
@HeikoS	maybe some details,
@HeikoS	just try with a small matrix
 lambday	alright
 lambday	ah crap! octave says "warning: the `hdf5write' function is not yet implemented in Octave"
 lambday	HeikoS: :'(
@HeikoS	lambday: nice ;)
@HeikoS	I can write you one
@HeikoS	from matlab
@HeikoS	Ill test a small sparse matrix
@HeikoS	just a sec
 lambday	HeikoS: alright
@HeikoS	lambday: ah computer overloaded ;)
@HeikoS	too many things at once
 lambday	HeikoS: hehe :D
@HeikoS	lambday: I need more memory
 lambday	HeikoS: how much do you have?
@HeikoS	8 are not enough
@HeikoS	compiling a big thing currently, thats the problem, anyways, will now store the matrix
 sonne|work	HeikoS: why are you not using libsvm format?
@HeikoS	sonne|work: lambday said it takes ages to write the file
 lambday	sonne|work: yes I am doing that
@HeikoS	lambday: is it yet finished btw?
 lambday	meanwhile, we're trying with hdf5
 lambday	HeikoS: nope!
 sonne|work	lambday: it was just 4 million entries? why does it take so long then?
 sonne|work	lambday: do you have the sparse matrix as scipy.sparse perhaps?
 sonne|work	or in which format?
 lambday	sonne|work: no.. octave's sparse
 sonne|work	lambday: but then you could pass this matrix to shogun
 lambday	octave interface?
 sonne|work	lambday: modular octave interface
@HeikoS	sonne|work: how does that work?
 sonne|work	I don't understand the question
 sonne|work	the same way you do python with sparse
 sonne|work	features_sparse_modular.m
 sonne|work	examples/undocumented/octave_modular/ features_sparse_modular.m
@HeikoS	Matlab: Error using hdf5writec
@HeikoS	Sparse data is not supported.
@HeikoS	sonne|work: we need the matrix from c++
 sonne|work	HeikoS: well then save it from shogun
@HeikoS	sonne|work: ha! clever
 sonne|work	though I don't see why you need it from c++
@HeikoS	testing
 sonne|work	you could use the callbacks
@HeikoS	not following
@HeikoS	callbacks?
 sonne|work	HeikoS: I mean the octave interface for the tests in the same way
@HeikoS	sonne|work: sorry I totally dont get what you are talking about. all we want to have is this matrix in available in c++ for testing(not example) how we do this: doesnt matter.
@HeikoS	but I think a good way is to load it from a modular interface and save it in some shogun format
 sonne|work	jsut save it as ascii file
 sonne|work	I was under the impression you just need it now for the benchmark so you could have put the benchmark function into e.g. CSparseFeatures for the test and done
@HeikoS	sonne|work: ascii file takes long to save, lambday?
@HeikoS	gotta go, talk
@HeikoS	sry
 sonne|work	cannot imagine that this is slow for just 4 million elements
-!- foulwall` [~user@2001:da8:215:6100:9594:7f4:ea8a:ecb5] has joined #shogun
-!- foulwall` [~user@2001:da8:215:6100:9594:7f4:ea8a:ecb5] has quit [Remote host closed the connection]
-!- foulwall` [~user@2001:da8:215:6100:9594:7f4:ea8a:ecb5] has joined #shogun
@iglesiasg	wiking: hey, I think there might be a problem with the configure script recognizing gmock
@iglesiasg	wiking: it said that it was in my machine under /usr/src even though it was not
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- gsomix_ [~gsomix@109.188.125.190] has joined #shogun
 wiking	iglesiasg: doh
 wiking	iglesiasg: can u send me the configure.log?
-!- gsomix [~gsomix@109.188.124.215] has quit [Ping timeout: 256 seconds]
@iglesiasg	wiking: http://pastebin.com/94UFB32N
-!- foulwall` [~user@2001:da8:215:6100:9594:7f4:ea8a:ecb5] has quit [Ping timeout: 264 seconds]
 wiking	iglesiasg: doh, this wasn't helpful :(
@HeikoS	lambday: was the matrix saved in ascii by now?
 lambday	HeikoS: yes :D
@HeikoS	lambday: ok, then I dont need to send another one :)
 lambday	HeikoS: yes.. its HUGE
@HeikoS	lambday: how big?
 lambday	71MB
@HeikoS	lambday: might be a good idea to save it to hdf via some modular interface
 lambday	HeikoS: yup.. but first I wanna see which performs better
@HeikoS	lambday: yes go ahead :)
 lambday	argh... segfault!
@HeikoS	lambday: valgrind :)
 lambday	HeikoS: sonne|work unthreaded, unopenmp'd version - eigen3 wins by a small margin
 lambday	trying others
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 245 seconds]
 lambday	HeikoS: sonne|work the difference was ~0.04 s
@HeikoS	lambday: well, so they are equal :)
 lambday	HeikoS: pretty much!
 lambday	I am hoping to get a better performance with the pthreaded one
-!- foulwall [~user@2001:da8:215:c252:c82:7dd9:e65a:75e6] has joined #shogun
@HeikoS	lambday: yeah ...
@HeikoS	lambday: but thats not too interesting for us anyways ... but try it
 lambday	HeikoS: yeah just trying
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 240 seconds]
 lambday	HeikoS: sonne|work nah! same!
 lambday	oh wait!
@HeikoS	lambday: threaded will be more useful for larger matrices
@HeikoS	lambday: how long does on product take btw?
 lambday	HeikoS: sonne|work with threaded, shogun wins
@HeikoS	lambday: nice
@HeikoS	so matlab needs 0.012 on my machine for one product
 lambday	HeikoS: I am testing just the product, 100 times for each
 lambday	o
 lambday	oh
 lambday	wait
 lambday	0.005090 for SG
 lambday	0.005908 for eigen3
@HeikoS	nice
 lambday	SG-pthreaded
@HeikoS	thats faster
 lambday	yeah!
 lambday	but I use corei7+16gb ram
@HeikoS	lambday: oh
@HeikoS	I dont have such things :)
 lambday	HeikoS: I use insti's :D
 lambday	my laptop is 1GB :D
@HeikoS	hehe
 lambday	so, I am testing with octave on mine
@HeikoS	octave is very slow in most things
@HeikoS	asserts for example are incredibly slow
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 lambday	HeikoS: 0.01413393
@HeikoS	nice
 lambday	phew!!
 lambday	so, I can start using SGSparse then
 lambday	so my todo list - (a) add SGSparse under param framework (b) add serialization (c) add mat-vec product method in SGSparseMatrix (HeikoS : do you think we should have the threaded one there as well?) (d) add sparse matrix operator
@HeikoS	lambday: looks good, one thing, lets do the serialisation a bit later ok? after the cocg_m work
 lambday	HeikoS: alright
@HeikoS	c) we should have this in
@HeikoS	if its not too much wokr
 lambday	HeikoS: alright :)
 lambday	HeikoS: lol I'll copy paste sonne|work's code :D
@HeikoS	lambday: thats totally fine
@HeikoS	lambday:  you could even go openmp here
@HeikoS	since its easier
 lambday	HeikoS: yes but that doesn't help much! no idea why!
-!- vgorbati [c3ee5cb1@gateway/web/freenode/ip.195.238.92.177] has quit [Quit: Page closed]
 foulwall	ping lisitsyn
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
@sonney2k	lambday, hmmhh that is just too fast
@sonney2k	lambday, I guess one cannot really gain anything by parallelizing stuff
@sonney2k	HeikoS, I tried openmp first but basically neither pthreads nor openmp really help
 lambday	sonney2k: but pthread helps :-/
@sonney2k	lambday, what is the speedup?
@sonney2k	lambday, how many CPU's did you use?
 lambday	2
@HeikoS	lambday: we can also just leave the parallelization for now
@HeikoS	can always add that later
@sonney2k	lambday, on my i7 at home it didn't help much so what is the speedup single core vs multiple?
 lambday	HeikoS: yeah
@HeikoS	its easy if there are unit tests that ensure that things compute exact products
@sonney2k	HeikoS, heh lambday already had that shogun's output is compared to eigen3's
 lambday	sonney2k: 0.006664 (single thread)
 lambday	sonney2k: 0.004662 (multiple)
 lambday	i7
 lambday	(just for one multiplication)
@sonney2k	with 2 threads. and if you use say 4 threads?
 lambday	sonney2k: that was 4 threads
@sonney2k	it is really fast anyways
 lambday	earlier I was using 2
@sonney2k	HeikoS, will that operation be the bottleneck?
 lambday	HeikoS: I should add that unit-test anyway
@HeikoS	sonney2k: it is important, but when this stuff is parallelized on a larger scale anyway, we will usually only have 1cpu per job usually
@HeikoS	so its not very important to gain 20%
@sonney2k	30% on lambday's i7
@HeikoS	sonne|work: we can speed things up in more clever ways (preconditioning etc)
@HeikoS	sonney2k: its easy to add later on right?
@HeikoS	and it would be good to have, but not crucial for now I would say
@sonney2k	HeikoS, well it is already there just use my code
@sonney2k	I don't care though
@sonney2k	I was just interested in the benchmark
@sonney2k	lambday, waht was shogun single threaded?
 lambday	sonney2k: eigen3 was slightly faster
@sonney2k	lambday, I meant the time
 lambday	sonney2k: wait
 lambday	sonney2k: [shogun] 0.006630, [eigen3] 0.005180
 lambday	(just for one multiplication)
@sonney2k	ok
@sonney2k	alright gtg
 lambday	sonney2k: see you
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has joined #shogun
 lisitsyn	foulwall: pong
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
-!- sanyam [uid10602@gateway/web/irccloud.com/x-qnjvagnlypgbldrp] has quit [Ping timeout: 264 seconds]
 lambday	HeikoS: I'll be back later
-!- lambday [67157d37@gateway/web/freenode/ip.103.21.125.55] has quit []
-!- foulwall [~user@2001:da8:215:c252:c82:7dd9:e65a:75e6] has quit [Remote host closed the connection]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has quit [Quit: Leaving.]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has joined #shogun
-!- nube [~rho@49.244.112.133] has quit [Quit: Leaving.]
-!- nube [~rho@49.244.112.133] has joined #shogun
-!- zxtx [~zv@rrcs-74-62-200-195.west.biz.rr.com] has joined #shogun
 hushell	lisitsyn: report coming soon :)
 pickle27	lisitsyn: just sent my report
 pickle27	lisitsyn: I'll be around for a while if you / anyone wants to discuss final examples
-!- marcus_zoq [~marcus@vps.virtual-artz.de] has joined #shogun
 hushell	HeikoS: Could you check for me this short code: http://pastebin.com/96ugwecq ?
 hushell	HeikoS: I am using DynamicObjectArray but get mem leak :(
@HeikoS	hushell: what should I check it for?
@HeikoS	ah I see
 marcus_zoq	Hello, I'm trying to run K-Means clustering with given starting points. But I get the following error: [ERROR] assertion idx_b<rhs->get_num_vectors() failed in file ../shogun/distance/Distance.h line 121. Perhaps anybody can help me?
 hushell	HeikoS: mem leak detected in line 19
@HeikoS	marcus_zoq: could you paste some code on pastebin or gist?
 marcus_zoq	sure
@HeikoS	hushell: get_element increases REF
@HeikoS	hushell: removing the print lines removes the leak
 marcus_zoq	https://gist.github.com/zoq/0c4181694e7e6d3d516b
 hushell	HeikoS: so this means I have to keep the pointer returned by get_element() ...
@HeikoS	hushell: yes if you get_element you have to SG_UNREF afterwards
@HeikoS	marcus_zoq: why this derives class?
 hushell	HeikoS: Thanks very much! I know next time similar problem, I go to check SG_REF somewhere
@HeikoS	hushell: no worries, these things are hard to catch if you dont know them, keep in mind that any method that returns a CSGObject should increase the ref-count, we need that for swig
 marcus_zoq	HeikoS: I think shogun has no direct way to set initial centroids?
@HeikoS	marcus_zoq: ah that might be ... maybe write to the mailing list on this one then, I have never used nor written the KMeans code
 marcus_zoq	ok, thanks
@HeikoS	marcus_zoq: sonney2k might know, or iglesias (not here currently)
-!- marcus_zoq [~marcus@vps.virtual-artz.de] has left #shogun []
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
 lisitsyn	pickle27: hey
 lisitsyn	I am back
@sonney2k	HeikoS, hushell well any method that returns a *new* CSGObject does not need a SG_REF, only when you return an object that you use internally too
@HeikoS	sonney2k: yes sure, I forgot to say
@HeikoS	sonney2k: our kmeans seems a bit deprecated , s.o.
@sonney2k	HeikoS, only because we have no function to set the cluster centers?
@HeikoS	sonney2k: no I mean also the code with get/free feature vector
@HeikoS	sonney2k: is it as easy as add a method?
 pickle27	lisitsyn: cool!
 pickle27	lisitsyn: I'm working away on adding ICA right
 pickle27	now
 pickle27	lisitsyn: right now I have it as a public CEmbeddingConverter, not sure if this is the right fit yet
 pickle27	lisitsyn: I am just going to continue going forward and if I need to change the base class in the future I'll do so
@sonney2k	HeikoS, the code is pretty messy but it looks like the function clustknb can start with some predefined mean's
@HeikoS	sonney2k: yeah the things are also sometimes as rhs of the distance
@HeikoS	sonney2k: if you look at the code marcus_zoq: https://gist.github.com/zoq/0c4181694e7e6d3d516b
@HeikoS	this is what he tried
@sonney2k	looks reasonable
@HeikoS	but would be better if we offered that directly I would say
@sonney2k	HeikoS, file a bug report. I think the code should be heavily refactored too btw
@sonney2k	it is way to hard to read
@HeikoS	sonney2k: indeed ;)
 naywhayare	both marcus_zoq and I are looking into this, by the way (he is off getting dinner, so he says)
 naywhayare	"way too hard to read" +1000
 naywhayare	I'll also add that the code did work with an older version of shogun (1.0.0 I think) but I haven't diffed them to see what changed
 votjakovr	HeikoS: i've just sent a PR, please have a look at it
 pickle27	lisitsyn: nvm the ICA methods are just vanilla converters now
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Roman Votyakov :develop * a70e031 / src/shogun/ (6 files): https://github.com/shogun-toolbox/shogun/commit/a70e031e8f4f510693a8844837be9726d53a01be
 shogun-notifier-	shogun: add evaluate_log_probabilities() method for CLikelihoodModel class
 shogun-notifier-	shogun: Heiko Strathmann :develop * d602f99 / src/shogun/ (6 files): https://github.com/shogun-toolbox/shogun/commit/d602f99c95586016c0c827f50a659986498ed19b
 shogun-notifier-	shogun: Merge pull request #1218 from votjakovr/feature/gp_refactoring
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: add evaluate_log_probabilities() method for CLikelihoodModel class
@HeikoS	votjakovr: cool!
@HeikoS	votjakovr: how is the integral?
@sonney2k	HeikoS, no need for a smiley here. We should add a unit test and then sb. should rewrite this thing.
-!- sanyam [uid10602@gateway/web/irccloud.com/x-bxwsbyychdryheqd] has joined #shogun
@HeikoS	sonney2k: yeah rewrite should be best, unit test might be hard to do since implementations might differ, I would rather do this after the rewrite
 votjakovr	HeikoS: not ready yet, but i'd like to send another PR with probit
@HeikoS	votjakovr: go ahead, I will leave soon though
 lisitsyn	pickle27: sorry got distracted - preparing for my flight tomorrow
 pickle27	np!
 pickle27	lisitsyn: We can discuss more later, also I should have the first PR for the ICA algs soon ish (maybe not until tomorrow or so)
@HeikoS	sonney2k: thats a good task for someone who is interested in hacking shogun
@HeikoS	maybe we can recruit someebody at the workshop
 votjakovr	HeikoS: may i add also logit with 3 unimplemented methods?
@HeikoS	votjakovr: yep thats fine, as long as you implement and test them in the near future
 votjakovr	HeikoS: ok
@sonney2k	HeikoS, I would not change the implementation though. This is like 5 functions in one so a cleanup would help
 naywhayare	sonney2k: HeikoS: are you interested in a patch when we dig to the bottom of the issue, or are you planning on a complete rewrite (so a patch is not relevant)?
@HeikoS	sonney2k: yeah maybe
@sonney2k	naywhayare, we are interested in a patch
-!- zxtx [~zv@rrcs-74-62-200-195.west.biz.rr.com] has quit [Ping timeout: 264 seconds]
@sonney2k	I am not a big fan of rewrites (that will never happen)
@HeikoS	yes like cleanup and expose cluster centres
 naywhayare	sonney2k: okay.  I don't know when either marcus or I will figure it out; this is difficult code to read and we're not familiar with the shogun design ideas :)
 naywhayare	sonney2k: but I am beginning to understand what's going on so sooner or later I will get somewhere... :)
@sonney2k	naywhayare, this is pre-shogun code
@sonney2k	some research code from the last century
 naywhayare	sonney2k: haha, really from the 90s?
 naywhayare	wow
 naywhayare	it has lasted quite a while :)
@sonney2k	ahh what am I saying millenioum
 naywhayare	both are true :)
@sonney2k	yeah I 'rescued' it into shogun. at some point I understood it all but now I do regret that I didn't polish it when I did
 naywhayare	when I took over mlpack development some years ago it had previously been done by a bunch of people who were interested in publishing papers and not code, so absolutely nothing was polished
@sonney2k	naywhayare, I think there are like 3-5 massacre classes in shogun. one is CHMM, then the legacy structured output code, kmeans and yay our string kernels :)
@HeikoS	sonney2k: there is also this EM thing somewhere ;)
@sonney2k	naywhayare, so then you know how it is
 naywhayare	heh... I know how reading those goes...
@sonney2k	HeikoS, but that is 'new' GSoC code
 naywhayare	yeah; when I discovered the executable that ran nearest neighbors, I noticed that the genius who wrote it did not give an option for the results to be saved
 naywhayare	so the method would run on the dataset of your choice, complete the calculation, then exit, trashing the results
 naywhayare	who needs results anyway? </sarcasm>
@sonney2k	naywhayare, well actually shogun started out as my student research project
@sonney2k	IIRC 1999 with an HMM
@sonney2k	I wrote
 naywhayare	it must be neat having seen it come such a long way
@sonney2k	back then it was very readable code
@sonney2k	until it got some treats (parallelized and future massacred)
 naywhayare	I've avoided parallelization to some extent because of the nightmare it makes code into
@sonney2k	the svm framework & kernels were done in 2000
@sonney2k	and I basicaly wrote all code in trains
@sonney2k	(I had 7hr train rides back then)
@sonney2k	twice a week
 naywhayare	wow, that is a serious commute
@sonney2k	naywhayare, well we already ran it on some alpha cluster in 2000
@sonney2k	distributed on > 100 CPUs
 naywhayare	wow, alpha, I don't think you can even find those anymore
@sonney2k	no but they were fast
 shogun-buildbot	build #1213 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1213  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@sonney2k	and the cluster was fresh and empty and to our disposal
 naywhayare	convenient :)
@sonney2k	so I trained thousands of HMMs
@sonney2k	and later SVMs utilizing a kernel that was computed on HMMs on-the-fly
@sonney2k	requiring lots of memory
@sonney2k	I am glad to say that we have come a long way and I am not sure this code is even useful nowadays
 naywhayare	now I know a lot about the history of shogun. :)  also, I would not be surprised if someone out there is using your HMM code
 naywhayare	there is kind of a lack of HMM C++ code out there
 votjakovr	HeikoS: i've sent
 naywhayare	there's HTK but last I checked it won't even compile on amd64
@HeikoS	votjakovr: reading :)
 shogun-buildbot	build #1009 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1009
@sonney2k	naywhayare, yeah but we lost multithreading during some refactoring (yes it was even more messy before!)
 shogun-buildbot	build #1010 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1010  blamelist: Roman Votyakov <votjakovr@gmail.com>
@sonney2k	naywhayare, ohh and the first name of shogun was 'gf' for genefinder
 pickle27	naywhayare: totally agree, there is lacking HMM c++ code and examples
@sonney2k	this thing became pretty big before gee eff got a real name
-!- zxtx [~zv@rrcs-76-79-81-162.west.biz.rr.com] has joined #shogun
@sonney2k	and we started with the cmdline itnerface then matlab
@sonney2k	cmdline for running things on the cluster and matlab to try things out
@sonney2k	but then I just tried out swig for fun and I got addicted to python
@sonney2k	so that's it
 shogun-notifier-	shogun: Roman Votyakov :develop * 3641eb7 / / (10 files): https://github.com/shogun-toolbox/shogun/commit/3641eb7eb626541c65cb2055524ec330fc53eaad
 shogun-notifier-	shogun: add probit and logit likelihood models
 shogun-notifier-	shogun: Heiko Strathmann :develop * 330626c / / (10 files): https://github.com/shogun-toolbox/shogun/commit/330626ce0556f4f755a1ddc51ac4a8674499ba17
 shogun-notifier-	shogun: Merge pull request #1219 from votjakovr/feature/gp_binary_classification
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: add probit and logit likelihood models
@HeikoS	ladies and gentlemen, we have the first binary GP classifier :)
 votjakovr	Yeah :)
@sonney2k	naywhayare, hardcore hackers like lisitsyn, HeikoS and all our gsoc'ers and bug reporters did the rest
@HeikoS	yeah :)
 shogun-buildbot	build #1214 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1214  blamelist: Roman Votyakov <votjakovr@gmail.com>
@sonney2k	votjakovr, HeikoS, lisitsyn vodka for everyone!
 gsomix_	good evening
@sonney2k	gsomix_, still in train?
 naywhayare	:)
-!- gsomix_ is now known as gsomix
@sonney2k	gsomix, your keyword ;)
 gsomix	sonney2k, nope. I will be in the train tomorrow.
 lisitsyn	gsomix: are you in train already?
@HeikoS	votjakovr: nice, I will use this for the workshop if I can get a graphical example running
 lisitsyn	ah
@HeikoS	gotta go, bye all!
 pickle27	later!
@sonney2k	gsomix, could you please not use fgets instead of getline to fix the bsd1 buildbot failure
 pickle27	also unfortunately I won't be joining for the workshop
 gsomix	sonney2k, of course. preparing PR.
 pickle27	too expensive, maybe next year! (hoping I can get my future employer to pick up the tab!)
@sonney2k	naywhayare, ohh btw I tried hard to merge collaborate with others but shogun was already too big (and the other projects too) so I think the destiny will be 1000 ml toolboxes or whatever
@sonney2k	pickle27, wiking has set up some live stream
@sonney2k	pickle27, I mean will be setting up
 pickle27	excellent!
@sonney2k	and we will have recordings of the talks
 naywhayare	sonney2k: I had the same thoughts early on -- why not merge with something else? -- but then I thought that everyone taking different approaches is not a bad thing
@sonney2k	to be put on youtube
@sonney2k	seems like 1080p even
 naywhayare	the general community that you have set up through MLOSS is a great thing though
 pickle27	awesome I will deffs watch!
 naywhayare	some amount of collaboration between libraries is definitely useful, especially in interchangeable formats, etc.
@sonney2k	naywhayare, well I wish it would be building blocks
@sonney2k	I mean some kind of general framework everyone could hook to
 votjakovr	HeikoS: good:) So next step: finish numerical evaluation of integrals and implement missing logit and student's methods and then EP i think
 pickle27	yeah actually I had a random question about the ml community did anyone see that lib that Iglesiasg posted about
 naywhayare	pickle27: I heard about it once
@sonney2k	naywhayare, yeah data formats... mldata was my attempt on that but I see some patterns evolving but much much slower than I expected
 pickle27	seems like a waste of duplicated effort is all
 naywhayare	pickle27: thanks ;)
@HeikoS	votjakovr: go for it, this is really good stuff, looking forward to the other things :)
@sonney2k	pickle27, naywhayare is the author of mlpack (or one of the...)
 pickle27	haha oops!
@sonney2k	pickle27, naywhayare but I think so too
@HeikoS	votjakovr: ok running now, bye!
 naywhayare	pickle27: it's okay :).  mlpack focuses on different things than shogun does
 pickle27	well I was basically wondering if we talk to them at all so there is my answer
@sonney2k	I would join some other projects and not start a new one nowadays
 votjakovr	HeikoS: see you
 pickle27	yeah I hadn't looked into it
 naywhayare	the focus is tree-based algorithms
@sonney2k	naywhayare, well I hope so :)
 pickle27	its good that we talk!
@sonney2k	yeah we have 2 trees in here
-!- HeikoS [~heiko@nat-166-97.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
@sonney2k	one for string kernels
@sonney2k	and covertree
 naywhayare	the cover tree code is just jl's horrendous ugly code wrapped though
 naywhayare	what a nightmare that code is
@sonney2k	exactly like k-means :)
 naywhayare	haha
@sonney2k	written by geniouses though
 naywhayare	definitely :)
 naywhayare	I met jl at ICML last week.  interesting guy, maybe a bit eccentric
@sonney2k	naywhayare, yeah I know him well.
@sonney2k	he was mentoring for shogun even
 naywhayare	I didn't know that he was involved with shogun
@sonney2k	naywhayare, we tried to interface somehow
@sonney2k	basically the streaming features in shogun are the result of this
@sonney2k	unfortunately we didn't have unit tests back then
@sonney2k	and our integration tests were b0rken / disabled
 naywhayare	oh, so this was a collaboration between shogun and VW? or was this before then
@sonney2k	so some refactoring killed halve the code
@sonney2k	exactly
@sonney2k	nowadays we would do it differently
@sonney2k	rather use VW as a library
@sonney2k	I mean have a student design soem clean interfaces to VW
@sonney2k	and then use it as lib
 naywhayare	right
@sonney2k	which we didn't back then
@sonney2k	and the student disappeared an no one picked up
@sonney2k	problem with online learnign is that you need HUGE data sets
 naywhayare	huge as in GB or as in TB?
@sonney2k	as in TB
 naywhayare	oye, that gets to be a bit frustrating to deal with
@sonney2k	no I mean it will work with GB's too
@sonney2k	but with GB's you can still use batch and get more reliable results
 naywhayare	ah, okay; even so, once you exceed the limit of the RAM things you have to rewrite to account for that
 naywhayare	although I did have an idea recently; I wonder if it's in use anywhere: use mmap() to get a double* to your raw packed data matrix on disk, then wrap a matrix around that memory pointer, and let the OS handle smartly accessing it
@sonney2k	naywhayare, yeah but with shogun we tried to stretch that limit as far as possible by having all the native data representations
 naywhayare	it wouldn't be optimal but it sure would be easy
@sonney2k	naywhayare, yeah I mmap'd in shogun too (and IIRC python numpy has that too)
@sonney2k	but it is rather not doing the trick
@sonney2k	it is easy access though
@sonney2k	you need some clever memory access pattern
@sonney2k	some kind of mini batch
 naywhayare	yeah, it's definitely not the smartest way to do that.  but you could do it and pester the OS guys to make it faster :)
 lisitsyn	sonney2k: have you prepared your talk?
@sonney2k	so load batches of data that fit in memory do some heavy stuff etc
@sonney2k	lisitsyn, you are right
@sonney2k	not at all :/
 lisitsyn	sonney2k: the same here *crying*
@sonney2k	naywhayare, no it is not possible
 lisitsyn	I depart tomorrow AAAAA
 shogun-buildbot	build #1335 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1335  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@sonney2k	lisitsyn, ohh man then hurry up! or do it in the plane/airport...
 lisitsyn	sonney2k: it is mostly on paper already
 lisitsyn	time to convert it to impress.js
 naywhayare	:)
@sonney2k	naywhayare, mmap is fast but you need a lot of virtual memory (swap!)
 naywhayare	true
@sonney2k	naywhayare, back in 2000 I had some RealFileFeatures (as they were called in shogun) which did some caching / reading from disk of features
@sonney2k	damn they even exist today
@sonney2k	something to be removed :)
@sonney2k	so we did the caching of vectors manually
 naywhayare	there was someone in our lab who had refactored mlpack to read from databases; but he never once talked to me about it and graduated and I never heard about it again
@sonney2k	I guess mmap does it much better for random access patterns (though needing swap)
 naywhayare	so I'm not actually sure if he ever did it or if his committee was asleep
@sonney2k	yeah I've seen papers about people doing SVMs directly from databases
@sonney2k	heh
@sonney2k	naywhayare, the biggest problem with any mloss project is to keep it alive and to get contributors
 pickle27	how would one run a single unit test?
@sonney2k	naywhayare, that is if you are not a professor and have a team of students working on this (e.g. Weka, libsvm, liblinear, ...)
@sonney2k	pickle27, you need to set some environment varialbe IIRC GTEST_FILTER
@sonney2k	pickle27, google for it
 pickle27	kk
@sonney2k	votjakovr, do you already have an example for using GPC?
 shogun-buildbot	build #1215 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1215  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Roman Votyakov <votjakovr@gmail.com>
 naywhayare	sonney2k: this is true.  I have a lot of trouble finding the time to balance both my research and mlpack
 naywhayare	but, the library is starting to get some momentum, and with GSoC it may find its feet
 votjakovr	sonney2k: yep, but i need to polish it
@sonney2k	naywhayare, I know exactly what you are talking about...
 pickle27	I have a lot of respect for researchers who also maintain open libs of their code
-!- travis-ci [~travis-ci@ec2-54-235-27-28.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8856960
-!- travis-ci [~travis-ci@ec2-54-235-27-28.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	pickle27: run it with
 lisitsyn	--gtest-filter=Something
 pickle27	run what exactly? i tried make unit-tests --gtest-filter=Jade and it said unrecognized option
 votjakovr	sonney2k: hmm, c# modular is failed again...
 lisitsyn	pickle27: not make
 lisitsyn	./shogun-unit-test --gtest-filter=Jade
 pickle27	kk
 votjakovr	sonney2k: i'm not sure, but i think, because there are 2 SGVectors in parameters of a function
 lisitsyn	votjakovr: yes your guess is right
 shogun-buildbot	build #1011 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1011
@sonney2k	votjakovr, then please add them to modshogun_ignores.i
@sonney2k	votjakovr, in the very same way I did it last time - you will find your mean_* in there
@sonney2k	and send a PR
 shogun-buildbot	build #1336 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1336  blamelist: Roman Votyakov <votjakovr@gmail.com>
-!- travis-ci [~travis-ci@ec2-54-226-19-153.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8857853
-!- travis-ci [~travis-ci@ec2-54-226-19-153.compute-1.amazonaws.com] has left #shogun []
 votjakovr	sonney2k: ok, i'll do it
 shogun-buildbot	build #1337 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1337  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Roman Votyakov <votjakovr@gmail.com>
 van51	sonney2k: ping
 van51	sonney2k: I had to make some changes to StreamingFileFromStringFeatures to get it working
 van51	sonney2k: should I make a different PR for those?
@sonney2k	van51, yes please
 pickle27	lisitsyn: do I need to do anything for my code to become part of the wrappers?
 lisitsyn	pickle27: yes
 pickle27	what do I need to do?
 lisitsyn	pickle27: I guess you want to make your class visible in swig interfaces, right?
 pickle27	yeah
 lisitsyn	pickle27: check interfaces/Converter.i
 pickle27	kk
 lisitsyn	and interfaces/Converter_includes.i
 lisitsyn	pickle27: just add similar includes
 lisitsyn	one there and one here
@sonney2k	van51, btw we should expose your new classes to python/csharp etc too
@sonney2k	very easy though
 van51	sonney2k: I made the PR
 van51	sonney2k: sure.. is there something I can look at to get an idea of how to do it?
 shogun-notifier-	shogun: van51 :develop * 2279539 / src/shogun/io/streaming/StreamingFileFromStringFeatures.h: https://github.com/shogun-toolbox/shogun/commit/22795395075fd3f9562211c08b453f623e193800
 shogun-notifier-	shogun: Changes in StreamingFileFromStringFeatures to make it work
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 7862aad / src/shogun/io/streaming/StreamingFileFromStringFeatures.h: https://github.com/shogun-toolbox/shogun/commit/7862aadc7aef77608fe4aecd2e7027ea58612411
 shogun-notifier-	shogun: Merge pull request #1220 from van51/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Changes in StreamingFileFromStringFeatures to make it work
 van51	sonney2k: good.. took me some time to find what was wrong there :/
@sonney2k	van51, per class taht you want to expose it is adding 3 lines to .i files in shogun/src/interfaces/modular/
@sonney2k	van51, these features need to use SGVector
@sonney2k	van51, they are from the dawn of ages
 van51	sonney2k: the streaming features?
@sonney2k	I mean before we had refcounted sgvector
@sonney2k	yeah
 pickle27	lisitsyn: I just made a PR for ICA with Jade
@sonney2k	so the problem now is that they don't de-alloc memory or do twice bah!
 van51	sonney2k: ah ok, I thought you were saying I should switch to returning a SGVector instead of a SGSparseVector
@sonney2k	van51, no
 van51	sonney2k: yea it was really frustrating
@sonney2k	van51, look at e.g. Clustering.i
 lisitsyn	pickle27: nice I'll check
@sonney2k	and then KMeans
@sonney2k	pickle27, that is also answering your question :)
@sonney2k	so CKMeans gets renamed to KMeans in e.g. python
@sonney2k	and you need the %include to get the class wrapped
@sonney2k	then there is a Clustering_includes.i file
@sonney2k	where Kmeans is regularly #included
@sonney2k	that's all
 shogun-buildbot	build #1012 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1012  blamelist: van51 <vangelis_51@hotmail.com>
 van51	sonney2k: ok. I'll add it to my todo list :)
 van51	sonney2k: I want to get done with the streaming features today
@sonney2k	van51, pickle27 now any type that returns an SGVector or other SG* datatype or gets it as argument is wrapped to the native' lang's representation
@sonney2k	for example in octave or python a SGMatrix would be mapped to a matrix or numpy array
@sonney2k	van51, yeah it is trivial anyways
 shogun-buildbot	build #1216 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1216  blamelist: van51 <vangelis_51@hotmail.com>
 pickle27	Im trying a build of the python modular now lets see how it works!
 votjakovr	\names
 votjakovr	oops
 votjakovr	sonney2k: i've just sent a PR
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 shogun-notifier-	shogun: Roman Votyakov :develop * a8efb26 / src/interfaces/modular/ (3 files): https://github.com/shogun-toolbox/shogun/commit/a8efb2627df57ff67b8557d32adf552f82907371
 shogun-notifier-	shogun: add swig interfaces for GPC and update ignore list for c# modular
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * c80366d / src/interfaces/modular/ (3 files): https://github.com/shogun-toolbox/shogun/commit/c80366d5a23082baa6a0932ff82035ddeef4cd7e
 shogun-notifier-	shogun: Merge pull request #1222 from votjakovr/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: add swig interfaces for GPC and update ignore list for c# modular
@iglesiasg	hi all
@sonney2k	votjakovr, excellent!
@sonney2k	votjakovr, now if only the build would be back to green with that gp test...
@sonney2k	gsomix, and the bsd1 getline fgets...
@sonney2k	evening iglesiasg!
 votjakovr	sonney2k: yep, but i still can't find what is actually wrong with it
@sonney2k	votjakovr, the only way to figure this out is figure out which change caused this
 shogun-buildbot	build #1217 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1217  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-54-226-19-153.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8860165
-!- travis-ci [~travis-ci@ec2-54-226-19-153.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	iglesiasg: hey
@iglesiasg	lisitsyn: how is it going with the slides?
 lisitsyn	iglesiasg: terrible :D
@iglesiasg	I don't believe that!
 lisitsyn	iglesiasg: I am htmling them now
@iglesiasg	lisitsyn: I bet they will look superb, looking forward to seeing them
 lisitsyn	iglesiasg: I have procrastinated too much
@sonney2k	lisitsyn, can you do mine too :)
 pickle27	hey guys 2 things
@sonney2k	I don't care if it is via procrastination or anything
@iglesiasg	sonney2k: you must be a professional already doing slides :)
 lisitsyn	sonney2k: I will not be in time
 pickle27	first there is a prob in develop with Logit but Im sure you knew that
 lisitsyn	like before flight :)
@sonney2k	iglesiasg, that doesn't make it more interesting
@sonney2k	lisitsyn, me neither
 pickle27	second what is the difference between the doc and undoc examples exactly?
 shogun-buildbot	build #1338 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1338  blamelist: van51 <vangelis_51@hotmail.com>
 lisitsyn	sonney2k: but you won't take a flight ;)
 lisitsyn	pickle27: doc folder is autogenerated
@sonney2k	pickle27, documented examples are generated from undocumented ones
@sonney2k	and the descriptions
 pickle27	kk I thought thats what happened
@sonney2k	make examples does that
@sonney2k	pickle27, rationale is that you write an example in the 5 languages doing the same thing but document it just once
 pickle27	logit crashes travis before I can see if my unit test runs on travis :(
 pickle27	sonney2k: ooooh cool
@sonney2k	pickle27, blame votjakovr
 pickle27	votjakovr: ! lol
* sonney2k round 1 - fight!
 lisitsyn	AAAHH my plane is 13:50 UTC
 lisitsyn	with crazy 1h transfer in SVO it must be funny hah
 pickle27	ha regretting that upstream merge now, I could have waited lol
@iglesiasg	lisitsyn: you are flying already tomorrow, aren't you?
 lisitsyn	iglesiasg: yes
@sonney2k	iglesiasg, when are you?
 lisitsyn	iglesiasg: in 17 hrs
 shogun-buildbot	build #1013 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1013
@sonney2k	shogun-buildbot, dance
 shogun-buildbot	<(^.^<)
@iglesiasg	lisitsyn: cool cool, will you be using there your current cell number?
 shogun-buildbot	<(^.^)>
 shogun-buildbot	(>^.^)>
 shogun-buildbot	(7^.^)7
 shogun-buildbot	(>^.^<)
@iglesiasg	sonney2k: on Wednesday
@sonney2k	I am damn impressed that cyg1 is happy
 lisitsyn	iglesiasg: not sure I will be using it heavily with its price
@iglesiasg	I see
 lisitsyn	iglesiasg: wifi for the win (I hope)
@iglesiasg	then I will contact you through gtalk so we can meet on Thursday :)
 lisitsyn	alright!
@iglesiasg	let's hope I share room with nice people :P
 lisitsyn	iglesiasg: if wifi in the hotel is ok I will definitely be online some time morning and evening
 lisitsyn	iglesiasg: hah I hope so too
 lisitsyn	iglesiasg: when you're back to sweden?
@iglesiasg	lisitsyn: on Sunday
 lisitsyn	I see
@sonney2k	lisitsyn, you too right?
 lisitsyn	sonney2k: no I am departing monday morning
 lisitsyn	like 8-50 or so
@sonney2k	iglesiasg, will you be at the hands on workshop on saturday/sunday?
 lisitsyn	I guess I'd have to get up eeearrly
@iglesiasg	sonney2k: sure!
@sonney2k	lisitsyn, sxf or txl?
 lisitsyn	sonney2k: sxf
@sonney2k	ohh man
@sonney2k	poor guy
@iglesiasg	sonney2k: will you be able to be a little bit there too any of those days?
@iglesiasg	IIRC last time I heard of you mentioned you wouldn't
 lisitsyn	sonney2k: well I'll take taxi but I guess it is a hour still, right?
@iglesiasg	I heard of it*
@sonney2k	well I am away wednesday,thursday,friday for the workshop
@sonney2k	yeah on friday
@sonney2k	lisitsyn, $$$
@iglesiasg	sonney2k: but no Saturday nor Sunday?
 lisitsyn	sonney2k: 38 euro according to the website?
@sonney2k	maybe a little bit of saturday
@iglesiasg	nice
@sonney2k	but I will be dead
@iglesiasg	sonney2k: is it SXF so bad? I read on the website it didn't take that long to the city centre
@sonney2k	a bit too much
@iglesiasg	not that long ~ less than one hour
@sonney2k	no it is ok
@iglesiasg	in public transportation I am talking about
@sonney2k	but you have to walk 10 mins to the s-bahn station
 lisitsyn	it takes a few hops to my hotel from SXF
@sonney2k	one cannot miss it though there is just one way to walk to
@iglesiasg	I really have to check how to download the map of the city in my phone before going!
@sonney2k	iglesiasg, android?
@sonney2k	long press
@sonney2k	then download
@iglesiasg	sonney2k: long press in google maps pointing at Berlin?
@iglesiasg	yes, android
@sonney2k	yes
@iglesiasg	oh cool, it sounds easy enough
@sonney2k	iglesiasg, actually no
@sonney2k	iglesiasg, just menu
@sonney2k	then download for offline use
@iglesiasg	I am reading http://www.google.com/help/maps/helloworld/tips/travel.html
@sonney2k	iglesiasg, lisitsyn weather is supposed to be very nice
 lisitsyn	that's indeed cool
@sonney2k	like 25 C or so
@sonney2k	not too hot
@iglesiasg	yes! That sounds perfect
 shogun-buildbot	build #1339 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1339  blamelist: Soeren Sonnenburg <sonne@debian.org>
@iglesiasg	more than 25 gets close to 30 and #@%& hot
@iglesiasg	I wonder how I survived that many years in Spain :-O
@iglesiasg	nice that Germany is in the offline list
@iglesiasg	https://support.google.com/gmm/answer/2650347?hl=en&topic=2649131&ctx=topic#
@sonney2k	iglesiasg, at least you have sunlight in winter!
@iglesiasg	this year was pretty good in that matter here in Stockholm actually
@iglesiasg	lisitsyn: if it were in Russia or Spain we would be screwed -- no offline maps mode :S
@sonney2k	berlin had no sun the whole winter
-!- travis-ci [~travis-ci@ec2-54-235-60-251.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8860899
-!- travis-ci [~travis-ci@ec2-54-235-60-251.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	iglesiasg: if it were in russia we all would be screwed
@iglesiasg	:DD
@iglesiasg	lisitsyn: more reasons other than the offline maps?
 lisitsyn	iglesiasg: yes dangerous!
@sonney2k	what?
@sonney2k	having a phone or what?
 lisitsyn	everything!
@sonney2k	to breathe?
 lisitsyn	I bet an foreigner in real russia (not like the center of moscow)
 lisitsyn	will be despoiled very fast
 lisitsyn	:D
 lisitsyn	like once they realize you have no idea where to go
 shogun-notifier-	shogun: Roman Votyakov :develop * f8704e4 / src/shogun/machine/gp/LogitLikelihood.cpp: https://github.com/shogun-toolbox/shogun/commit/f8704e450763edd6734563b7d118bae1663545f6
 shogun-notifier-	shogun: fix bug in CLogitLikelihood class
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 4e6e445 / src/shogun/machine/gp/LogitLikelihood.cpp: https://github.com/shogun-toolbox/shogun/commit/4e6e445f2e0004358ef7527a0ca1c236f614a1ea
 shogun-notifier-	shogun: Merge pull request #1223 from votjakovr/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fix bug in CLogitLikelihood class
@sonney2k	alright
* sonney2k ZZzz
@iglesiasg	ok I am saving 82MB of Berlin, that should be enough!
 lisitsyn	iglesiasg: I saved a bit too!
* iglesiasg is surprised all the stuff you get to do while compiling after rebase!
 shogun-buildbot	build #1218 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1218  blamelist: Soeren Sonnenburg <sonne@debian.org>, Roman Votyakov <votjakovr@gmail.com>
 pickle27	ahhhhhh I have merge files in my git commit now
 pickle27	ah there we are
 pickle27	lisitsyn: pending travis success I think I might be good to merge the first ICA technique
 pickle27	lisitsyn: I am pretty happy with the current basic examples too!
 lisitsyn	pickle27: I'll check it in a bit
 pickle27	yeah let Travis do his thing
 shogun-buildbot	build #1219 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1219  blamelist: Soeren Sonnenburg <sonne@debian.org>, Roman Votyakov <votjakovr@gmail.com>
 shogun-buildbot	build #1340 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1340  blamelist: Soeren Sonnenburg <sonne@debian.org>, Roman Votyakov <votjakovr@gmail.com>
 lisitsyn	pickle27: alright looks nice!
 lisitsyn	pickle27: thanks!
 shogun-notifier-	shogun: Kevin :develop * e7f36b5 / / (7 files): https://github.com/shogun-toolbox/shogun/commit/e7f36b554a1e2061184e25ea75fe85ece6035401
 shogun-notifier-	shogun: added Jade algorithm for ICA and BSS along with a unit test and example
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * 20f94d3 / / (7 files): https://github.com/shogun-toolbox/shogun/commit/20f94d361fc821c13d031b34238c6dea7c029314
 shogun-notifier-	shogun: Merge pull request #1221 from pickle27/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: added Jade algorithm for ICA and BSS along with a unit test and example
 pickle27	lisitsyn: thanks!
 van51	question, suppose you have a PR standing by and things get merged in the meantime.. do that PR need to be rebased? :)
 van51	does*
@iglesiasg	hey hushell! I will have a look to the PR ASAP
@iglesiasg	some time tomorrow afternoon probably
@iglesiasg	hushell: you can continue working before we revise, right?
-!- travis-ci [~travis-ci@ec2-54-235-27-28.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8862057
-!- travis-ci [~travis-ci@ec2-54-235-27-28.compute-1.amazonaws.com] has left #shogun []
 pickle27	van51: if you don't merge it into your own branch then you can just make a PR
 pickle27	but if you merge it in yourself then yes rebase
 pickle27	thats what I just had to do because I wanted to merge votjakovr latest PR to see if Travis would run
 hushell	iglesiasg: thanks! yes, I can keep working on unit tests
 hushell	iglesiasg: But I may not be able to finish all of them today, cause I have to prepare a presentation for tomorrow
@iglesiasg	hushell: sure, that's fine
 van51	pickle27: ok thanks :)
 pickle27	lisitsyn: woooo a clean build from my machine to the build bot!
 pickle27	http://shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1414
 shogun-buildbot	build #1341 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1341  blamelist: Soeren Sonnenburg <sonne@debian.org>, Roman Votyakov <votjakovr@gmail.com>
 lisitsyn	pickle27: good!
 pickle27	lisitsyn: I trust you saw my mail today about the final example?
 pickle27	sonney2k seemed to think my modified idea would work
 lisitsyn	pickle27: sorry I am a bit hectic last days
 pickle27	no worries!
 shogun-buildbot	build #1220 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1220  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>, Kevin <kevinhughes27@gmail.com>
 pickle27	hmm wut
 pickle27	I think this error is not from our merhe
 pickle27	lisitsyn: I'll probably spend the rest of this week porting the rest of the algorithms and then start on the example after everyone is done with the workshop
 lisitsyn	pickle27: I am ok with the new approach yes
 lisitsyn	just select a few tracks, mix then demix
 pickle27	yeah!
 pickle27	I'll try and pick some interesting tracks
 lisitsyn	pickle27: something from venetian snares
 lisitsyn	:D
 lisitsyn	there is a nice album of venetian snares
 pickle27	haha maybe
 lisitsyn	winnipeg is a frozen shitty hole or so
 pickle27	I was thinking more along the lines of mashing together movie quotes or something but music too
 pickle27	haha yeah winnipeg sucks!
 lisitsyn	pickle27: is it really that bad?
 pickle27	I've actually never been there lol
 lisitsyn	hahah
 pickle27	but I have been to Saskatchewan and it was fairly boring
 naywhayare	lisitsyn: have you listened to Rossz Csillag Alatt Sz?letett?  I enjoyed that album a lot (okay, I know this is off-topic...)
 lisitsyn	naywhayare: yes sure, interesting thing
 lisitsyn	naywhayare: are you into such IDM music?
 lisitsyn	I am actually not but he got into my sight one day so I listened to it
 lisitsyn	pickle27: so winnipeg should be boring but anything else?
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun ["Fallen asleep!"]
 lisitsyn	naywhayare: szamar madar is kind of classic!
 naywhayare	:)
 naywhayare	I am into IDM (although I think that's a stupid name for the genre)
 naywhayare	I found the genre via Boards of Canada
 pickle27	naywhayare: are you Canadian?
 naywhayare	nope, I'm in Atlanta
 naywhayare	but I have been close to Canada before :)
 pickle27	cool
 pickle27	alright guys Im off to play some Frisbee, see you tomorrow!
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
 lisitsyn	ha!
--- Log closed Tue Jul 09 00:00:23 2013
