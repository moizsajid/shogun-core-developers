--- Log opened Wed Feb 19 00:00:05 2014
@sonney2k	wiking, maybe I just need to prefix it with \$ENV{DESTDIR}
@sonney2k	wiking, yes that fixes it
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 5f9be33 / src/interfaces/r_modular/CMakeLists.txt,src/interfaces/r_static/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/5f9be33cbb93d25de0a3cc201a25393216417dfc
 shogun-notifier-	shogun: fix install of r_static/modular interfaces when DESTDIR is set
-!- new_lido [~walid@41.218.177.240] has quit [Ping timeout: 252 seconds]
-!- new_lido [~walid@41.218.175.159] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 3b51ef5 / src/interfaces/r_modular/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/3b51ef534dd1d5b8ea859bd5356e630e1752b559
 shogun-notifier-	shogun: add another missing DESTDIR
-!- HeikoS [~heiko@2.219.252.217] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- travis-ci [~travis-ci@ec2-23-20-20-64.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/19152963
-!- travis-ci [~travis-ci@ec2-23-20-20-64.compute-1.amazonaws.com] has left #shogun []
-!- alamages [~alamages@46-81-89.adsl.cyta.gr] has quit [Quit: leaving]
@HeikoS	sonney2k: see example projects description in google doc, pls update and add what you think is needed
-!- HeikoS [~heiko@2.219.252.217] has left #shogun []
-!- tricksy___ [uid12458@gateway/web/irccloud.com/x-bnbwjtszpxgvbgbc] has quit [Ping timeout: 252 seconds]
-!- tricksy___ [uid12458@gateway/web/irccloud.com/x-cptxpgonpcltlmzr] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- zxtx [~zv@129-79-241-148.dhcp-bl.indiana.edu] has quit [Ping timeout: 240 seconds]
-!- zxtx [~zv@c-98-223-196-32.hsd1.in.comcast.net] has joined #shogun
-!- new_lido [~walid@41.218.175.159] has quit [Ping timeout: 260 seconds]
-!- new_lido [~walid@41.218.175.12] has joined #shogun
-!- new_lido [~walid@41.218.175.12] has quit [Ping timeout: 260 seconds]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- lisitsyn [~lisitsyn@80.252.20.67] has quit [Ping timeout: 245 seconds]
-!- new_lido [~walid@41.218.176.107] has joined #shogun
-!- new_lido [~walid@41.218.176.107] has quit [Ping timeout: 240 seconds]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Remote host closed the connection]
-!- new_lido [~walid@41.218.177.66] has joined #shogun
 wiking	fuck
 wiking	:d
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- parijat [671b082a@gateway/web/freenode/ip.103.27.8.42] has joined #shogun
-!- parijat [671b082a@gateway/web/freenode/ip.103.27.8.42] has quit [Client Quit]
-!- v101 [~vodka101@115.112.95.154] has joined #shogun
-!- v101 [~vodka101@115.112.95.154] has left #shogun []
-!- lambday [67157f4e@gateway/web/freenode/ip.103.21.127.78] has joined #shogun
-!- lambday_ [67157e4e@gateway/web/freenode/ip.103.21.126.78] has joined #shogun
-!- lambday [67157f4e@gateway/web/freenode/ip.103.21.127.78] has quit [Ping timeout: 245 seconds]
-!- bumblebee [~quassel@202.78.172.162] has joined #shogun
-!- bumblebee is now known as Guest44527
-!- Guest44527 [~quassel@202.78.172.162] has quit [Client Quit]
-!- bumblebee_ [~quassel@202.78.172.162] has joined #shogun
-!- tom__ [2eda6d58@gateway/web/freenode/ip.46.218.109.88] has joined #shogun
 tom__	hi!
 tom__	I would like some advice on a multiclass unbalanced problem
 tom__	I would like to use shogun for multiclass one-vs-rest classification
-!- bumblebee_ [~quassel@202.78.172.162] has quit [Ping timeout: 260 seconds]
 tom__	Is ts possible to assign weights for pos/neg samples for each binary svm machine inside multiclassmachine shogun framework ?
 adrin	tom__: I'm not very familiar with shogun, but sometimes depending on the interface language you're using, available parameters change.
 adrin	tom__: I guess nowadays python is fairly complete in terms of feature support of the underlying C++ code, if I'm not totally wrong.
-!- bumblebee_ [~quassel@202.78.175.199] has joined #shogun
 tom__	I am using c++ interface
 sonne|work	tom__: I don't think this is possible ATM
 tom__	Is it possible to use CMulticlassSVM class and set K CMKLClassification svm machine as K binary classifier ?
 tom__	I give a try and I got "train_machine is not yet implemented for SVM!"
 sonne|work	tom__: but of course do-able. one could basically just set some C matrix which has a size of #examples * #classes
 sonne|work	tom__: that splitting is done automatically
 sonne|work	tom__: if you went that far you could just train your K machines yourself with whatever custom C settings
 sonne|work	tom__: and then later put them into multiclass svm to use its apply() or do it yourself there too
 tom__	allright
 tom__	thank you
-!- tom__ [2eda6d58@gateway/web/freenode/ip.46.218.109.88] has quit [Quit: Page closed]
 sonne|work	adrin: indeed there shouldn't be much difference between C++ and python_modular except that classes have no C prefix ;)
-!- tom__ [2eda6d58@gateway/web/freenode/ip.46.218.109.88] has joined #shogun
-!- bumblebee_ [~quassel@202.78.175.199] has quit [Ping timeout: 265 seconds]
-!- parijat [671b082a@gateway/web/freenode/ip.103.27.8.42] has joined #shogun
 parijat	sonne|work: online? good time to talk?
 sonne|work	parijat: will be off for lunch soon
 sonne|work	parijat: but maybe start typing!
 sonne|work	parijat: and I reply when I am back or so
 parijat	sonne|work:  sorry!
 sonne|work	parijat: no reason to be sorry - I am happy that you ask here!
 parijat	sonne|work: i wanted to ask about the pCA PR
 sonne|work	I guess so
 parijat	what did you mean by in-place?
 parijat	i mean i can get rid of the feature_matrix_centered. will that work?
 sonne|work	parijat: previously the Feature matrix was directly modified
 sonne|work	parijat: that is a bit hacky for sure but did make it work in low memory conditions
 parijat	ok. yes. but the feature matrix dimension is not correct
 sonne|work	parijat: yes that would have to be corrected
 sonne|work	but that is it
 parijat	so, in any case we would need a new matrix right?
 parijat	more so because the final portion of matrix needed is not continuous block in the old matrix
 parijat	sonne|work: did I make sense?
 sonne|work	parijat: yes but ...
 sonne|work	parijat: I did 'hack' that by just moving the matrix columns to the very front and changing sizes
 sonne|work	parijat: it certainly is a hack
 sonne|work	but it did help back then
 sonne|work	parijat: sry afk
-!- bumblebee_ [~quassel@202.78.175.199] has joined #shogun
 parijat	ok! but the final matrix to be returned should be of lesser dimension right? were you somehow able to return a submatrix
-!- HeikoS1 [~heiko@2.219.252.217] has joined #shogun
 parijat	sonne|work: whenever you are bach . :) My point was, I am directly modifying feature_matrix (m in our case) via Eigen3 interface matrix 'feature_matrix'. but the final result I am storing in a different matrix with proper target dimension which I return
 parijat	HeikoS1: hello! :)
 HeikoS1	parijat:  hi!
 parijat	HeikoS1: i was just discussing about the in-place PCA thing with sonney2k :)
-!- alamages [~alamages@46-81-89.adsl.cyta.gr] has joined #shogun
 HeikoS1	parijat: cool, any results on that?
 parijat	HeikoS1: may be I am missing something trivial but you would need a new matrix anyways right? because the dimension of current matrix is not correct?
 HeikoS1	parijat: maybe realloc helps? since the new matrix is smaller
 HeikoS1	this should be in place
 HeikoS1	parijat: tricky thing :) it only worked before since there was this size bug :)
 parijat	HeikoS1: I mean the method returns SGMatrix of smaller size. I will have to form that maatrix anyways right?
 HeikoS1	parijat: just to make sure I get everything, what are the matrices involved, how was it before, how is it now?
 parijat	HeikoS1: earlier there was only this SGMatrix m obtained from features and it was returned
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: lambday :develop * 4fc837f / / (10 files): https://github.com/shogun-toolbox/shogun/commit/4fc837f7b031501ac975b1c3aec3061dfaeee388
 shogun-notifier-	shogun: ssk renamed to SubsequenceStringKernel for naming consistency
 shogun-notifier-	shogun: Heiko Strathmann :develop * a2e27d9 / / (10 files): https://github.com/shogun-toolbox/shogun/commit/a2e27d91c220aa6961e737b1e540e2ea53b1912a
 shogun-notifier-	shogun: Merge pull request #1879 from lambday/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: ssk renamed to SubsequenceStringKernel for naming consistency
 parijat	HeikoS1: it had wrong dimensions
 HeikoS1	parijat: my question is: is it possible to do this in place?
 HeikoS1	via resizing something?
 HeikoS1	or is that impossible
 HeikoS1	am let me look at the code ....
 shogun-notifier-	shogun-data: Parijat Mazumdar :master * a7c153f / testsuite/python2-tests/preprocessor_pca_modular0.txt: https://github.com/shogun-toolbox/shogun-data/commit/a7c153f611cfba4ffcaea68c6fbb5f0f22490466
 shogun-notifier-	shogun-data: PCA python-2 data changed
 shogun-notifier-	shogun-data: Parijat Mazumdar :master * 865f0d2 / testsuite/python3-tests/preprocessor_pca_modular0.txt: https://github.com/shogun-toolbox/shogun-data/commit/865f0d2594b23719d93eb375d48ea9ae11a2db90
 shogun-notifier-	shogun-data: PCA python-3 data changed
 shogun-notifier-	shogun-data: Heiko Strathmann :master * 70491d2 / testsuite/ (2 files): https://github.com/shogun-toolbox/shogun-data/commit/70491d2fed0bce5561fde94a5e7b157d41c8dd2f
 shogun-notifier-	shogun-data: Merge pull request #32 from mazumdarparijat/master
 shogun-notifier-	shogun-data:
 shogun-notifier-	shogun-data: PCA test data change
 parijat	HeikoS1: I am not sure! let me check resizing of matrices
 parijat	HeikoS1: unless we can resize an SGMatrix, I think no.
 HeikoS1	parijat: its possible to resize, but dont we loose things then?
 parijat	HeikoS1: no we want to lose some things
 HeikoS1	parijat: looking at code currently
 HeikoS1	afk for 5 mins, ill be back soon and then check
-!- HeikoS1 [~heiko@2.219.252.217] has quit [Quit: Leaving.]
 parijat	HeikoS1: num_vectors remains same num_features changes
 parijat	alright
-!- HeikoS1 [~heiko@2.219.252.217] has joined #shogun
 lambday_	HeikoS1: hi!
 lambday_	HeikoS1: I didn't get what you mean by update the data :(
 lambday_	HeikoS1: the matrices are being returned as well as the kernel obj, right?
 HeikoS1	lambday_:  hi!
 HeikoS1	lambday_: if the kernel object is returned in the function, then the integration tests will fail after a class name change
 HeikoS1	lambday_: so data needs to be updated
 HeikoS1	with the new names
 lambday_	HeikoS1: oh I didn't know that!
 lambday_	checking
 lambday_	HeikoS1: by data you mean shogun-data ?
 HeikoS1	lambday_: yes
 parijat	HeikoS1: the PCA data that you have already merged will cause travis failure for other PRs? because the PCA change in not merged yet
 lambday_	HeikoS1: umm.. I am not getting - tests worked fine locally... you mean updating the submodule in buildbot?
 HeikoS1	parijat: yes :)
 HeikoS1	parijat: so better hurry up :D
 HeikoS1	lambday_: mmh weird, this should have broken things, lets just wait and i fit stays green things are fine. Have an eye on the buildbot
-!- bumblebee_ [~quassel@202.78.175.199] has quit [Ping timeout: 245 seconds]
 lambday_	HeikoS1: alrighty
 HeikoS1	parijat: did you get my point with the realloc or doing vector wise projectsions?
 parijat	HeikoS1: nope. could you explain again plz?
 HeikoS1	parijat: ok, 1 sec ....
 HeikoS1	finishing emali
 parijat	HeikoS1: specifically how can I generate the final feature matrix with some of the cells of original feature matrix missing?
 parijat	HeikoS1: I think I may have uunderstood your point! let me see if it works.
 HeikoS1	parijat: you can use eigen3 views to access only subsets of the matrix
 HeikoS1	but that depends on how its stored in memory
 HeikoS1	and then you can do stuff, and aferwards cut off the remaining part with realloc
 parijat	HeikoS1: yes. I got your point.
 HeikoS1	parijat:  if all this doesnt work, you can do it like the existing implementation, i.e. vector wise
 HeikoS1	thats same computational costs
-!- tom__ [2eda6d58@gateway/web/freenode/ip.46.218.109.88] has quit [Quit: Page closed]
 HeikoS1	(if done in serial)
 parijat	yes actually I am trying to avoid looping! lets see
 HeikoS1	parijat: would be best to do this in eigen3 since it might parallelise the operation internally
 HeikoS1	so with the view, thats the best solution
 HeikoS1	I am not sure about the cutting off
 HeikoS1	parijat: the problem is that we reduce dimensions
 HeikoS1	i.e. number of rows
 HeikoS1	but we store matrices column by column
 parijat	HeikoS1: yup! i am in absolutely 0 mood to let go of eigen3
 HeikoS1	so we cannot just cut off at the end
 parijat	:)
 HeikoS1	we need to remove element from within the memory block
 HeikoS1	ah thats messy
 HeikoS1	maybe transpose before
 parijat	HeikoS1: yes! I am thinking of taking transpose
 parijat	yeah my point
 HeikoS1	parijat: but transpose is slow
 parijat	:)
 HeikoS1	no we dont want to do that
 HeikoS1	I suggest to do this then:
 parijat	ok!
 HeikoS1	mmh tricky .....
 HeikoS1	actually I dont see a way without transposing
 HeikoS1	that doesnt allocate a new matrix
 HeikoS1	ok then, transpose!
 HeikoS1	its sensible since matrix multiplication is more expensive
 HeikoS1	and allocating memory is also more expensive
 HeikoS1	ah
 HeikoS1	wait
 HeikoS1	transposing back has the same problem when the matrix is not square anymore
 parijat	HeikoS1: I can also loop element by element to fill up the first elements of feature matrix and then get rid of rest. and also change num_features and num_vectors in feature
 parijat	would that be less expensive?
 parijat	got my point?
 HeikoS1	the "getting rid" is the problem
 HeikoS1	cutting of in place is not possible in shoguns matrix format
 HeikoS1	cutting off dimensions I mean
 HeikoS1	so you could transpose and do it then
 HeikoS1	and then transpose back
 HeikoS1	the tranposing back should work in place in fact
 HeikoS1	I was wrong earlier
 HeikoS1	sorry for the mess ;)
 HeikoS1	I think transpose is best, but make sure its in place and on the real matrix memory, not the eigen3 view
 parijat	no if i line up the needed cells in the pointer to matrix and then use realloc??
 parijat	lining up will be element by element operation
 HeikoS1	1.) transpose memory 2.)eigen3 view on subset 3.) projection view eigen3 multiplication 4.) realloc on the matrix memory to get rid of the last columns (aka dimensions since transposed) 4.) transpose back ..... all transposes should be in place
 HeikoS1	parijat: no try to avoid loops over matrix elements, eigen3 calls are better
 HeikoS1	parijat: since we can replace eigen3 with a multicore eigen3 or GPU eigen3
 HeikoS1	without having to change our code
 parijat	i think i am not able to convey my idea clearly! let me push my patch. In case you dont like it, I got the transpose thing. I will implement that
 parijat	no i am not doing away with eigen3!
 HeikoS1	parijat: hehe sorry
 HeikoS1	could you explain me again? :)
 HeikoS1	or just send, I will be able to have a look later today
 parijat	HeikoS1: lets try with an example.
 HeikoS1	parijat: interesting stuff this efficient linear algebra in c++, isnt it? :)
 parijat	HeikoS1: yeah! :)
 HeikoS1	cant do this stuff if matlab/python/R :)
 HeikoS1	its always slower
 HeikoS1	apart from the loops
 HeikoS1	anyways, I gotta go, will be back later today, see you!
 parijat	HeikoS1: yeah sure. I will push code for your perusal
 parijat	bbye!
-!- parijat [671b082a@gateway/web/freenode/ip.103.27.8.42] has quit [Quit: Page closed]
-!- bumblebee_ [~quassel@202.78.175.199] has joined #shogun
-!- bumblebee_ [~quassel@202.78.175.199] has quit [Client Quit]
-!- bumblebee__ [~quassel@202.78.175.199] has joined #shogun
-!- HeikoS1 [~heiko@2.219.252.217] has quit [Quit: Leaving.]
-!- new_lido [~walid@41.218.177.66] has quit [Ping timeout: 252 seconds]
-!- new_lido [~walid@41.218.172.173] has joined #shogun
 wiking	btw
 wiking	this site is the awesomeness factor 2.0: http://techcrunch.com/2014/01/26/google-deepmind/
 wiking	no
 wiking	http://deepmind.com/
 wiking	shogun refactor should look like this imo
 sonne|work	wiking: you mean no content?
 sonne|work	totally awesome!
 wiking	i was refering to infinite canvas
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has quit [Quit: Leaving.]
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has joined #shogun
 lisitsyn	wiking: yeah the site is awesome though no info as sonne|work said :D
 wiking	lisitsyn: was never talking about the content
-!- HeikoS1 [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has joined #shogun
 lambday_	HeikoS1: hey.. you were right.. changing name did break the integration test.. I had the something wrong at my side
 lambday_	HeikoS1: tested locally again.. failing tests
 HeikoS1	lambday_: thats good news then, all as expected :)
 lambday_	HeikoS1: btw I started working on the multitask notebook.. reading malsar doc as well... thinking of including some real world example...
 HeikoS1	lambday_: man thats great!
 lisitsyn	lambday_: hmm I have some draft of this notebook
 HeikoS1	your other notebook was great, so looking forward to see it
 lisitsyn	if you could continue with it - would be fantastic :D
 HeikoS1	lambday_, lisitsyn writing those notebooks is a great thing to practice writing about ML btw, it really helps for later
 HeikoS1	lisitsyn: speaking of writing, we should write the GSoC veteran blog post
 lambday_	yep!
 HeikoS1	lisitsyn: any suggestions?
 HeikoS1	we should make something catchy, like a dialog between us or a fake interview or so
 lisitsyn	HeikoS1: what time works for you?
 HeikoS1	lisitsyn:  what time?
 lisitsyn	HeikoS1: to take care of this :)
 HeikoS1	weekend?
 lisitsyn	yeah!
 HeikoS1	lisitsyn: saturday afternoon?
 lisitsyn	good
 lisitsyn	should be possible
 lambday_	lisitsyn: could you please share with me what you already have? or.. you wanna finish this?
 lisitsyn	lambday_: I want but have time pressure
-!- lambday_ is now known as lambday
 lambday	lisitsyn: umm... you'll do it best - its all your code...
 lisitsyn	lambday: sure
 HeikoS1	lisitsyn: btw we desperately need a multiclass notebook
 HeikoS1	lisitsyn: or extend the existing one
 HeikoS1	with all the OvO and accuracy stuff
 HeikoS1	like the guy in the mail asked
 HeikoS1	lisitsyn: you should do that! you know best
 HeikoS1	lisitsyn:  and then you should also document all classes :)
 lisitsyn	HeikoS1: I'll answer the mail tonight
 lambday	HeikoS1: umm should I go ahead with string kernel noteboook then? or focus on gsoc topics - lol I am all confused! :D
 lambday	sonney2k: I can create shogun tag on stack overflow I guess!
 HeikoS1	lambday: what ever you want!
 HeikoS1	lambday: you can start doing gsoc stuff when we are accepted :)
 lambday	HeikoS1: alright then - I'll start the string kernel one then - this one is gonna be huge!
 lisitsyn	HeikoS1: lambday: so I mean
 lisitsyn	we should not duplicate the work on multitask notebook
 lambday	lisitsyn: yeah totally makes sense
 HeikoS1	lisitsyn: just put the notebook into your git and then update there, then lambday can join forces if he wants
 lisitsyn	ok
 lambday	yeah that sounds good :)
* lambday goes back reading stuffs
 HeikoS1	lisitsyn: https://github.com/shogun-toolbox/shogun/issues/1880
 lisitsyn	HeikoS1: haha another duty ;)
 lisitsyn	alright
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 lambday	HeikoS1: lisitsyn: can the notebook documentation page have titles for the notebooks and then one can put a toc sort of thing at the top so that its easier to browse?
 lambday	like the ideas page
 HeikoS1	lambday: great idea! could you hunt fernanod down on this? like pusing them to do it? :) I have not idea how the website works
 lambday	HeikoS1: neither do I or I would have done it! I can create an issue though and tag him :P
 HeikoS1	lambday: thats good! but not enough to make it happen ;)
 lambday	HeikoS1: lol okay I will catch him at irc :)
 HeikoS1	lambday: every day :)
 lambday	the shogun-web repo is not the one that is used currently I guess :-/
 lambday	last updated a month ago
-!- new_lido [~walid@41.218.172.173] has quit [Quit: Leaving]
-!- lambday [67157e4e@gateway/web/freenode/ip.103.21.126.78] has quit [Ping timeout: 245 seconds]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
 sonne|work	lambday: it is the one
 sonne|work	lambday: could you please add the string kernel notebook?
 sonne|work	I mean write one :D
 sonne|work	or start at least
 lambday	sonne|work: hehe.. yeah I will asap..
 lambday	sonne|work: I found your thesis somewhere that had all the references to most of the string kernels that we have
 sonne|work	lambday: I can give you the source code for string kernels if you do more than 1 kernel :D
 sonne|work	lambday: the latex code I mean :D
 lambday	sonne|work: that would be really helpful :) I will also get to know about them :D
 lambday	sonne|work: oh btw do you agree that having a toc for the notebooks in the documentation page is a good idea?
 lambday	imo mini desc is helpful but toc would help largely in browsing
 lambday	brb after dinner :)
 sonne|work	lambday: sure!
 sonne|work	lambday: just do it
 sonne|work	lambday: and yes the code is up-to-date :D
 lambday	sonne|work: lol its django and I don't know anything - will try :D
 sonne|work	lambday: hehe then better don't try it :)
 lambday	sonne|work: hehe! :D
 lambday	brb :)
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has quit [Quit: Leaving.]
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has joined #shogun
-!- HeikoS1 [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
-!- bumblebee__ [~quassel@202.78.175.199] has quit [Ping timeout: 252 seconds]
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has quit [Client Quit]
-!- lisitsyn [~lisitsyn@80.252.20.67] has joined #shogun
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 245 seconds]
-!- alamages [~alamages@46-81-89.adsl.cyta.gr] has quit [Ping timeout: 260 seconds]
-!- HeikoS [~heiko@nat-184-104.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- [paladin] [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
-!- alamages [~alamages@213.249.12.26] has joined #shogun
-!- parijat [671b082a@gateway/web/freenode/ip.103.27.8.42] has joined #shogun
 parijat	HeikoS: I have pushed in the new code https://github.com/shogun-toolbox/shogun/pull/1874
 parijat	HeikoS: I believe this is better than taking transpose 2 times
 parijat	:)
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 parijat	iglesiasg: hello!  hows life? :)
@iglesiasg	hey parijat
@iglesiasg	life's good
@iglesiasg	haha
@iglesiasg	parijat, what about you?
 parijat	iglesiasg: good so far! :D
@iglesiasg	nice to hear
 parijat	iglesiasg: i have been working on fixin the pca bug.
@iglesiasg	parijat, yeah, I have seen the commits and the comments from HeikoS and sonney2k
 parijat	iglesiasg: running into troubles now n then! lets see how it turns out finally :)
@iglesiasg	it will be good ;)
 parijat	iglesiasg: hoping so. ;)
 wiking	iglesiasg: hey man
 wiking	iglesiasg: so if i'm good then i should just copy-paste the html in your repo right?
-!- [paladin] [73f91219@gateway/web/freenode/ip.115.249.18.25] has left #shogun []
 wiking	iglesiasg: i'll send you soon a PR with the other 2 projects and then i'll do the copy-paste...
-!- HeikoS [~heiko@nat-184-104.internal.eduroam.ucl.ac.uk] has quit [Ping timeout: 272 seconds]
-!- HeikoS [~heiko@nat-184-104.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@nat-184-104.internal.eduroam.ucl.ac.uk] has quit [Remote host closed the connection]
@iglesiasg	wiking, cool
@iglesiasg	wiking, sure do that, get the file and copy-paste
 parijat	iglesiasg: I am getting this wierd exception in travis EXCEPTION 'module' object has no attribute '_Unpickler'
 parijat	iglesiasg: any clue about it?
@iglesiasg	parijat, maybe it is an issue with serialization in Python?
 parijat	sorry whats that?
@iglesiasg	parijat, serialization?
 parijat	iglesiasg: yes
@iglesiasg	parijat, when the state of an object or a data structure in general is stored so that it can be used outside the program
@iglesiasg	parijat, maybe because you want to recover that state later, or maybe because you want to send over the network, etc
@iglesiasg	the pickle module is used in Python for serialization, that's why I guessed so from Unpickler
 parijat	iglesiasg: there might be a problem with the format in which output expected is stored?
 parijat	iglesiasg: thats why I might be getting this exception?
@iglesiasg	parijat, I am not sure at all. Have you detected when was the first time the error happen?
@iglesiasg	send me the link to the travis log you mean also please
 parijat	iglesiasg: here https://s3.amazonaws.com/archive.travis-ci.org/jobs/19203009/log.txt
 parijat	iglesiasg: test 173
@iglesiasg	parijat, does it happen to you locally? Is it with python2 or python3?
 parijat	iglesiasg: yes! with python 2. I thought it might be some random thing
@iglesiasg	parijat, I can restart the travis build and see if next time happens. Is it in your opened PR?
 parijat	yes!
 parijat	iglesiasg: thanks.
@iglesiasg	parijat, although I think it might be something else... mm
@iglesiasg	parijat, it is an integration test what is failing I think
@iglesiasg	integration, indeed yeah
 parijat	parijat: yup its integration test.
 wiking	iglesiasg: pr sent
@iglesiasg	parijat, have you tried running that test locally?
@iglesiasg	wiking, done!
 wiking	cool i'll now copy-paste
@iglesiasg	wiking, sure, thanks!
 wiking	hope i dont delete some ideas :)
@iglesiasg	haha man that's been such a mistake from me, sorry really
 wiking	iglesiasg: mmm do u know that not the full html is in the repo?
@iglesiasg	but it didn't cross my mind at all
@iglesiasg	wiking, what? it is it is
@iglesiasg	the one you have to copy for the ideas is
 wiking	</tbody>
 wiking	</table>
 wiking	is missing
 wiking	oh wait
 wiking	yeah
 wiking	that part is missing
 wiking	the closing tags i've mentioned
 wiking	no worries i'll add it like that
@iglesiasg	ok
 wiking	updated
 wiking	http://shogun-toolbox.org/page/Events/gsoc2014_ideas
 wiking	but i have a backup of the prev one
 wiking	if needed
@iglesiasg	sounds good
-!- parijat [671b082a@gateway/web/freenode/ip.103.27.8.42] has quit [Ping timeout: 245 seconds]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
 alamages	 /clear
-!- alamages [~alamages@213.249.12.26] has quit [Quit: leaving]
-!- new_lido [~walid@41.218.176.133] has joined #shogun
-!- parijat [6adf654d@gateway/web/freenode/ip.106.223.101.77] has joined #shogun
-!- parijat [6adf654d@gateway/web/freenode/ip.106.223.101.77] has quit [Client Quit]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 245 seconds]
-!- alamages [~alamages@213.249.12.26] has joined #shogun
-!- iglesiasg [~iglesiasg@82.74.224.167] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
--- Log closed Thu Feb 20 00:00:06 2014
