--- Log opened Sun Aug 04 00:00:00 2013
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has quit [Ping timeout: 264 seconds]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@sonney2k	gsomix_, I am thinking about using C_ORDER per default
@sonney2k	gsomix_, with csv data it is most likely that one has one vector per line
@sonney2k	(C_ORDER)
@sonney2k	IIRC there is the .tcsv format
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has joined #shogun
@sonney2k	that does one vector per column
-!- travis-ci [~travis-ci@ec2-54-224-79-102.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9816903
-!- travis-ci [~travis-ci@ec2-54-224-79-102.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 7da4bc1 / src/shogun/io/CSVFile.cpp: https://github.com/shogun-toolbox/shogun/commit/7da4bc1f0bffea270703ed2fd3622e3275a261f9
 shogun-notifier-	shogun: switch to C_ORDER per default
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 68834f7 / src/shogun/features/DenseFeatures.cpp: https://github.com/shogun-toolbox/shogun/commit/68834f729478f5690a06de1efbffd6f738b3a3c2
 shogun-notifier-	shogun: don't call DotFeatures(fname) to fix loading from within constructor
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * f8e2b9a / examples/undocumented/python_modular/kernel_anova_modular.py: https://github.com/shogun-toolbox/shogun/commit/f8e2b9a04a737dda42620ef83308fdfebd1a7d6c
 shogun-notifier-	shogun: move anova kernel to use csvfile class
@sonney2k	gsomix_, ok changed that now please fix the vector reader asap please
@sonney2k	then I can finally get things working
@sonney2k	alrighty
* sonney2k ZZZzzzz
 shogun-buildbot	build #1150 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1150  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * f6fbd64 / tests/unit/transfer/MALSAR_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/f6fbd649d11d45bc48a27c90c84ca31aa13e8cc1
 shogun-notifier-	shogun: Added simple tests for algorithms from the MALSAR
 shogun-buildbot	build #1151 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1151  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1152 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1152  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-54-224-79-102.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9817515
-!- travis-ci [~travis-ci@ec2-54-224-79-102.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1459 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1459  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-54-227-68-127.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9817783
-!- travis-ci [~travis-ci@ec2-54-227-68-127.compute-1.amazonaws.com] has left #shogun []
@iglesiasg	lisitsyn, sonney2k: did you guys see https://github.com/shogun-toolbox/shogun/issues/1351?
@iglesiasg	I think there is something weird with get_distance_matrix
 shogun-buildbot	build #1153 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1153  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #1460 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1460  blamelist: Soeren Sonnenburg <sonne@debian.org>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has quit [Remote host closed the connection]
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has joined #shogun
-!- pickle27 [~Kevin@67.193.243.174] has quit [Quit: Leaving]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has quit [Ping timeout: 245 seconds]
 shogun-buildbot	build #478 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/478
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has joined #shogun
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- lambday [67157d4c@gateway/web/freenode/ip.103.21.125.76] has joined #shogun
-!- lambday [67157d4c@gateway/web/freenode/ip.103.21.125.76] has quit [Ping timeout: 250 seconds]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: lambday :develop * 09b5bf2 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/09b5bf2cc0049d10c314ce1d4fda58594610a6ef
 shogun-notifier-	shogun: Lanczos eigensolver added
 shogun-notifier-	shogun: Heiko Strathmann :develop * 3966c12 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/3966c12f65af9e07f20ec53b1765668b5c1a8dea
 shogun-notifier-	shogun: Merge pull request #1353 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Lanczos eigensolver added
 shogun-notifier-	shogun: Heiko Strathmann :develop * 37bac96 / / (15 files): https://github.com/shogun-toolbox/shogun/commit/37bac96cc454612a4496e5a439a7b44cdcc79bdc
 shogun-notifier-	shogun: -added unbiased estimator for marginal likelihood.
 shogun-notifier-	shogun: -new class for probability distributions and a Gaussian for sampling and log-pdf (numerically stable)
 shogun-notifier-	shogun: -log-sum-exp and log-mean-exp in CMath
 shogun-notifier-	shogun: -CLikelihood model now is able to evaluate many likelihoods at once
 shogun-notifier-	shogun: -some fixes
 shogun-notifier-	shogun: Heiko Strathmann :develop * 13ec4b7 / / (5 files): https://github.com/shogun-toolbox/shogun/commit/13ec4b7f87afd704b5db853f40b4e779c496e863
 shogun-notifier-	shogun: removed SVD_QR for Gaussian, too unstable, replaced by ridge on diagonal
 shogun-notifier-	shogun: Heiko Strathmann :develop * e49119c / src/interfaces/modular/Distribution.i/ (2 files): https://github.com/shogun-toolbox/shogun/commit/e49119c28654dd123967f221100ceab8603f0aea
 shogun-notifier-	shogun: added GaussianDistriution to modular interfaces
 shogun-notifier-	shogun: Heiko Strathmann :develop * 7fcbcbf / src/shogun/machine/gp/InferenceMethod.cpp: https://github.com/shogun-toolbox/shogun/commit/7fcbcbfef1bdf08816d130052205700c057d9ee6
 shogun-notifier-	shogun: make covariances symmetric
 shogun-notifier-	shogun: Heiko Strathmann :develop * e14944d / src/shogun/distributions/classical/GaussianDistribution.cpp: https://github.com/shogun-toolbox/shogun/commit/e14944d5766fa724928144f919118a76ae066518
 shogun-notifier-	shogun: some security checks for psd matrices
 shogun-notifier-	shogun: Heiko Strathmann :develop * f4340e8 / src/shogun/distributions/classical/GaussianDistribution.cpp: https://github.com/shogun-toolbox/shogun/commit/f4340e818a7f62c7bbc71856f8a3d64c9d31ca6d
 shogun-notifier-	shogun: removed hacky psd checks, user has to do this. Print smallest eigenvalue instead
 shogun-notifier-	shogun: Heiko Strathmann :develop * f5d402e / src/shogun/kernel/LinearARDKernel.cpp,src/shogun/kernel/LinearARDKernel.h: https://github.com/shogun-toolbox/shogun/commit/f5d402e4f3d7b080ad2ee1b0f75b72e35fab01f5
 shogun-notifier-	shogun: added method to set/get weights as a whole and some doc updates
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- travis-ci [~travis-ci@ec2-54-227-68-127.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9825642
-!- travis-ci [~travis-ci@ec2-54-227-68-127.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-224-79-102.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9825717
-!- travis-ci [~travis-ci@ec2-54-224-79-102.compute-1.amazonaws.com] has left #shogun []
-!- vgorbati [~vgorbati@91.216.173.29] has joined #shogun
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has quit [Ping timeout: 268 seconds]
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has joined #shogun
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has quit [Ping timeout: 268 seconds]
-!- vgorbati [~vgorbati@91.216.173.29] has quit [Quit: vgorbati]
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- foulwall [~user@110.17.1.73] has joined #shogun
-!- HeikoS [~heiko@nat-160-11.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- foulwall [~user@110.17.1.73] has quit [Remote host closed the connection]
 lisitsyn	hey HeikoS
@HeikoS	lisitsyn: hi!
 lisitsyn	HeikoS: how is it going?
@HeikoS	well :)
@HeikoS	and you?
 lisitsyn	yeah fine too
 lisitsyn	HeikoS: I am still debugging this thing that fails in python :)
@HeikoS	lisitsyn: is that a hard one?
@HeikoS	lisitsyn: oh btw do the tests work fine on your machine on current git?
 lisitsyn	HeikoS: yeah IIRC it worked yesterday
 lisitsyn	HeikoS: what fails on your machine?
@HeikoS	lisitsyn: ok good
@HeikoS	lisitsyn: nothing, but travis seems to freeze and fernando also had a problem with my latest commit
 lisitsyn	HeikoS: I was surprised with the number of tests
@HeikoS	lisitsyn: where?
 lisitsyn	HeikoS: the total number
 lisitsyn	like 11**
@HeikoS	lisitsyn: well half of it is created automagic
 lisitsyn	yeah
@HeikoS	lisitsyn: but still good
@HeikoS	we test things on every class
@HeikoS	lisitsyn: still I would like to take this a step further in the near future
@HeikoS	make serialisation/clone/equals 100% reliable
@HeikoS	currently its only tested on empty classes
 lisitsyn	HeikoS: what about migration and etc?
@HeikoS	lisitsyn: I am for dropping that (and the integration tests with it) since we cannot really maintain it. But open for discussions
 lisitsyn	HeikoS: the only one that can maintain it is you probably
@HeikoS	lisitsyn: and I fail miserably ;)
@HeikoS	lisitsyn: the code is too complicated, too dirty, not tested etc
 lisitsyn	no you are doing other things
 lisitsyn	that are more important
@HeikoS	lisitsyn: it is extremely hard to use
@HeikoS	lisitsyn: and nobody really uses that parts that work
@HeikoS	lisitsyn: rather, we always re-commit the integration tests
@HeikoS	lisitsyn: well thats the same result, I dont think an open-source project focussed on ML can offer migration for its fil format
 lisitsyn	HeikoS: hehe that's true everybody should do their job
@HeikoS	lisitsyn: how are things going with you?
 lisitsyn	HeikoS: I feel we are maintaining a bit more than we should
@HeikoS	lisitsyn: yeah maybe
@HeikoS	lisitsyn: see my issues on dropping code
 lisitsyn	HeikoS: what things?
@HeikoS	marking stable things, etc
@HeikoS	lisitsyn: work, shogun etc
@HeikoS	gsoc
 lisitsyn	ahh
 lisitsyn	we had some failure at my job and I moved to a new place
 lisitsyn	:D
@HeikoS	exciting?
 lisitsyn	gsoc wise everything is ok - fernando and kevin are doing pretty well
 lisitsyn	HeikoS: well I changed my 12 m2 to 58 m2
 lisitsyn	;)
@HeikoS	I see
@HeikoS	like I change my e2 7dj to e2 7ja recently :)(
 lisitsyn	HeikoS: ehmhmm
 lisitsyn	:D
 lisitsyn	what?
 lisitsyn	HeikoS: m2 = m^2
@HeikoS	ah
 lisitsyn	like sq.m.
@HeikoS	haha :)
 lisitsyn	hahah
@HeikoS	wow thats nice then
 lisitsyn	I get your joke haha
@HeikoS	I though that was a postcode
 lisitsyn	ahh
 lisitsyn	it wasn't
 lisitsyn	:D
 lisitsyn	I thought you said some non-sense like I did
 lisitsyn	HeikoS: yeah that's area
 lisitsyn	HeikoS: what about you?
 lisitsyn	ohohoh
 lisitsyn	what's with doc sprint
@HeikoS	?
 lisitsyn	I think we're missing it
@HeikoS	lisitsyn: we could apply
@HeikoS	deadline is 6th
 lisitsyn	do we have real idea?
@HeikoS	I am not really sure though
 lisitsyn	HeikoS: carol didn't contact me too
@HeikoS	we are missing a clear goal with that
 lisitsyn	about gsoc meeting
@HeikoS	contact?
 lisitsyn	well I am on the waiting list
@HeikoS	ah we still need to get the PO number
@HeikoS	ah man
@HeikoS	so annoying with my bank
 lisitsyn	what's with your bank?
@HeikoS	I dont have an account on my name
@HeikoS	or I do have but I dont know the number
 lisitsyn	hmm
@HeikoS	and my parents are in vaccation
 lisitsyn	what kind of account?
@HeikoS	post lying at their place
@HeikoS	for GSoC money
 lisitsyn	but you do have some mastercard or visa or anything?
@HeikoS	I will call them tomorow again
@HeikoS	not in Germany
 lisitsyn	ahh
@HeikoS	in England I would have to pay taxes
 lisitsyn	complicated
@HeikoS	yeah annoying
@HeikoS	lisitsyn: I will get some food now, be back in 15 mins
 lisitsyn	HeikoS: I think I'll ask carol if I have any chances
 lisitsyn	ok see you then ;)
@HeikoS	lisitsyn: ask sonney, I think we get a fixed amount
@HeikoS	so we should book flights asap
@HeikoS	so I need to sort out bank stuff asap
@HeikoS	ill be back soon, catch up then
 lisitsyn	HeikoS: hmm but that's the flight
 lisitsyn	we need a hotel reservation for me etc
 lisitsyn	so it is all about google's decision
 lisitsyn	(if I get it right)
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	hello guys
@HeikoS	re
@HeikoS	iglesiasg: any updates on that freeze you had?
@iglesiasg	HeikoS, no, not yet sorry. I am doing the unit test sonney2k ask for this issue https://gist.github.com/iglesias/6145782
@iglesiasg	HeikoS, I won't be able to take a further look at it until tomorrow
@iglesiasg	HeikoS, Tuesday morning latest
@HeikoS	iglesiasg: ah I see, unit test is good :)
@iglesiasg	but I won't forget about it! I leave your mail as not read :)
@HeikoS	iglesiasg: cool thanks :)
@HeikoS	iglesiasg: no rush on this btw
@HeikoS	as long as travis and the buildbot dont complain
@iglesiasg	HeikoS, sure
@iglesiasg	HeikoS, although the travis build for that PR was a bit weird, wasn't it? Lot of grey in there
@HeikoS	iglesiasg: yeah it was
@HeikoS	I thought it ran out of time (it does sometimes=
@HeikoS	so I merged since the previous compile error were gone
@iglesiasg	aham I see
@iglesiasg	HeikoS, I was thinking for the multi-threaded cross-validation issue
@HeikoS	iglesiasg: yes?
@iglesiasg	what if the subset is not in shared memory, so you have several process running with its own subset
@iglesiasg	then I think it would not be necessary to have multiple subsets
@HeikoS	iglesiasg: yeah thats the goal
@HeikoS	iglesiasg: but the labels should stay shared
@HeikoS	or labels dont matter
@HeikoS	features should be shared
@iglesiasg	HeikoS, indeed
@HeikoS	so they need multiple subsets
@HeikoS	since all threads work on the same feature object
@iglesiasg	mmm
@iglesiasg	I was thinking if there is a way to have the features shared but not the subset
@iglesiasg	but that would break with how it is currently done
@iglesiasg	since the subset is a member of the features IIRC
@HeikoS	iglesiasg: where is the difference?
@HeikoS	iglesiasg: when features store multiple subsets and 1 object is shared
@HeikoS	or if implementations store their own subset?
@HeikoS	I think they also should be  kept within the features to avoid problems
@iglesiasg	HeikoS, I have the idea that it could be different. If cross-validation is run by different processes, then each process has its own subset in its own memory space
@iglesiasg	but in the code there is only one subset, no multiple ones
@HeikoS	iglesiasg: yes, but where is the difference or advantage to store the subset on the shared feature object?
@iglesiasg	HeikoS, I think it should be easier to program if there is only one subset to take into account
@HeikoS	iglesiasg: there is, you just have to pass/remember the id
@HeikoS	the only difference is where it is stored
@iglesiasg	HeikoS, I didn't understand that, sorry
@HeikoS	iglesiasg: only difference is where the subset is stored
@iglesiasg	HeikoS, yes
@iglesiasg	in any case I think my idea is not correct
@HeikoS	why nor?
@HeikoS	not?
@iglesiasg	I don't think it is possible to have several processes that share part of the memory (the features) and not other part (the subsets)
 gsomix_	good evening
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Fernando Iglesias :develop * 1c598fd / tests/unit/distance/EuclideanDistance_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/1c598fd9180a3397058e69b1586cf489031e7435
 shogun-notifier-	shogun: Add EuclideanDistance unit test
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 646363b / tests/unit/distance/EuclideanDistance_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/646363b95f060f58afae340a769e2177ec22b55f
 shogun-notifier-	shogun: Merge pull request #1357 from iglesias/euclidean_unittest
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Add EuclideanDistance unit test
-!- lambday [67157f37@gateway/web/freenode/ip.103.21.127.55] has joined #shogun
 lambday	HeikoS: hi
 lambday	HeikoS: should we try seeing the performance of cg_m instead of individual cg? I think this would be the bottleneck!
 lambday	cg solvers are not trustworthy :(
 lambday	HeikoS: another thing, the only thing that changes in "LogRationalApproximationIndividual::submit_jobs" is the part which creates new operators for dense and sparse matrices... I don't want to write just another class for sparse... so I can check for types dynamically I think!
 shogun-buildbot	build #1646 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1646  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-204-236-192-191.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9835487
-!- travis-ci [~travis-ci@ec2-204-236-192-191.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1645 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1645  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
 lisitsyn	HeikoS: ha it seems that my code fails because of C++11
 lisitsyn	:D
 lisitsyn	lambday: you worked with complex a bit
 lisitsyn	may be you have seen something like that
 lisitsyn	I have the following line
 lisitsyn	cout << "eigenvalue " << eigensolver.eigenvalues()[i] << "=" << eigensolver.eigenvalues()[i].real() << "+i" << eigensolver.eigenvalues()[i].imag() << endl;
 lisitsyn	the output is
 lisitsyn	eigenvalue (0.666667,0)=3.22526e-319+i8.25667e-317
-!- gsomix__ [~gsomix@178.45.37.229] has joined #shogun
-!- lambday_ [67157d37@gateway/web/freenode/ip.103.21.125.55] has joined #shogun
 lambday_	lisitsyn: sorry I got dc
 lisitsyn	lambday
 lisitsyn	lambday_:
 lambday_	lisitsyn: which one is failing for c++11
 lisitsyn	(11:20:38 PM) lisitsyn: I have the following line
 lisitsyn	(11:20:43 PM) lisitsyn: cout << "eigenvalue " << eigensolver.eigenvalues()[i] << "=" << eigensolver.eigenvalues()[i].real() << "+i" << eigensolver.eigenvalues()[i].imag() << endl;
 lisitsyn	(11:20:56 PM) lisitsyn: the output is
 lisitsyn	(11:20:57 PM) lisitsyn: eigenvalue (0.666667,0)=3.22526e-319+i8.25667e-317
 lisitsyn	the question is what the fuck :D
 lisitsyn	may be you have seen something like that?
 lambday_	holy shit!
 lambday_	:-o
@sonney2k	lisitsyn, valgrind?
 lambday_	lisitsyn: try taking eigensolver.eigenvalues() into a VectorXcd and then print may be?
 lisitsyn	lambday_: it is okay in vector
 lisitsyn	lambday_: shit happens on real()
 lisitsyn	sonney2k: checking
 lambday_	lisitsyn: try real(val) instead of val.real()
-!- gsomix_ [~gsomix@109.169.187.164] has quit [Ping timeout: 240 seconds]
 lambday_	lisitsyn: I don't remember exactly but there was some stuff in c++11
-!- lambday [67157f37@gateway/web/freenode/ip.103.21.127.55] has quit [Ping timeout: 250 seconds]
@sonney2k	lambday, but that shouldn't even compile
 lisitsyn	sonney2k: why that?
 lambday_	sonney2k: that thing that we were doing for c++11, remember?
 lambday_	:-/
@sonney2k	the complex.real()=x
 lambday_	I am not sure!
@sonney2k	yeah
@sonney2k	lisitsyn, it just didn't here
@sonney2k	only complex.real(x) did compile
 lisitsyn	sonney2k: what's the reason?
 lisitsyn	real(x)?
 lisitsyn	what does it do?
 lisitsyn	puts real to x?
@sonney2k	lisitsyn, set the real part of a complex
@sonney2k	yes
@sonney2k	no x -> to real of the complex number
@sonney2k	named complex
 lisitsyn	okay
 lisitsyn	how to get real part then
@sonney2k	lisitsyn, same thing w/o args
@sonney2k	should be correct
 lisitsyn	that's what I was doing
 lisitsyn	std::complex<MatrixXd::Scalar> eigenvalue = eigensolver.eigenvalues()[i];
 lisitsyn	cout << "eigenvalue " << eigenvalue << "=" << std::real(eigenvalue) << "+i" << std::imag(eigenvalue) << endl;
 lisitsyn	the output is
@sonney2k	lisitsyn, that is why I rather think it is some memory corruption
 lisitsyn	eigenvalue (0.666667,0)=3.22526e-319+i7.06327e-304
@sonney2k	lisitsyn, errm why not eigenvalue.real() ?
 lisitsyn	sonney2k: tried both
@sonney2k	same result?
 lisitsyn	sonney2k: yes uninitialized memory
 lambday_	lisitsyn: that's weird!
@sonney2k	lisitsyn, ok so try a minimal unit test to figure out why that is happening
 lisitsyn	yeah..
 lambday_	lisitsyn: shouldn't it be MatrixXcd??
 lambday_	oh no sorry
 lisitsyn	lambday_: no that's just double
 lambday_	yeah sorry I misunderstood
@sonney2k	iglesiasg, btw you found a nice one  - bug in threading code. it works ok with pthreads disabled
 lambday_	lisitsyn: eigensolver is an instance of SelfAdjointEigenSolver?
 lisitsyn	lambday_: no, it is basic eigensolver
 lisitsyn	I can't assume it is selfadj
 lambday_	okay
 lisitsyn	lambday_: lets see if I reproduce that in a minimal script
 lambday_	alright
 gsomix__	sonney2k, hello. if you have a minute. https://github.com/shogun-toolbox/shogun/pull/1356
-!- gsomix__ is now known as gsomix
-!- zxtx [~zv@c-98-207-60-193.hsd1.ca.comcast.net] has quit [Ping timeout: 240 seconds]
 lambday_	lisitsyn: in my machine its working! :-/ for random matrix and i=0
 lisitsyn	lambday_: yes same for me
 lisitsyn	I have no idea :D
 shogun-notifier-	shogun: Evgeniy Andreev :develop * 1c3bc6f / src/shogun/io/CSVFile.cpp,tests/unit/io/CSVFile_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/1c3bc6f90bde2f5446fc672e4986d57c1a772de6
 shogun-notifier-	shogun: changed behavior of get_vector in CSVFile
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * b56da3c / src/shogun/io/CSVFile.cpp,tests/unit/io/CSVFile_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/b56da3cd29ca0ede02b1cc8b660ea219b72a12b3
 shogun-notifier-	shogun: Merge pull request #1356 from gsomix/feature/get_vector
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Changed behavior of get_vector in CSVFile
 lisitsyn	I am checking if it is really related to C++11
 lisitsyn	but I'd guess because it appeared once sonney2k added it
 lambday_	lisitsyn: where does it fail?
 lambday_	argh in 8 mins my net connection is gonna get cut off!
 shogun-buildbot	build #1647 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1647
 shogun-buildbot	build #836 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/836  blamelist: Evgeniy Andreev <gsomix@gmail.com>
-!- lambday_ [67157d37@gateway/web/freenode/ip.103.21.125.55] has quit [Ping timeout: 250 seconds]
 shogun-buildbot	build #1154 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1154  blamelist: Evgeniy Andreev <gsomix@gmail.com>
 shogun-buildbot	build #1461 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1461  blamelist: Evgeniy Andreev <gsomix@gmail.com>
 shogun-buildbot	build #1648 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1648  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 56b4f34 / src/shogun/kernel/Kernel.cpp,src/shogun/kernel/Kernel.h: https://github.com/shogun-toolbox/shogun/commit/56b4f342dafe3857a7102cdcf39617b8760cd4e7
 shogun-notifier-	shogun: fix formatting / doc
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * d474227 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/d474227dac6e804fd8376877237f5b6bf49af67a
 shogun-notifier-	shogun: compute distance matrix the same way kernel matrix is computed
@sonney2k	iglesiasg, ^ that should fix it
@sonney2k	iglesiasg, any idea for a proper name for a base class of CKernel and CDistance?
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 240 seconds]
 shogun-buildbot	build #837 of rpm1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/837  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- zxtx [~zv@199-188-193-9.PUBLIC.monkeybrains.net] has joined #shogun
 shogun-buildbot	build #1155 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/1155  blamelist: Soeren Sonnenburg <sonne@debian.org>
 lisitsyn	sonney2k: I am disabling it with C++11 for now :D
@sonney2k	lisitsyn, errm? so you have a small test case now?
 lisitsyn	sonney2k: no
 lisitsyn	I can't reproduce it
@sonney2k	lisitsyn, so it only fails on travis?
 lisitsyn	sonney2k: it fails on my machine too
-!- travis-ci [~travis-ci@ec2-184-73-123-75.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9838977
-!- travis-ci [~travis-ci@ec2-184-73-123-75.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	but I can't reproduce it separately
 lisitsyn	just in this case and with C++11
 lisitsyn	without C++11 it works ok
-!- zxtx [~zv@199-188-193-9.PUBLIC.monkeybrains.net] has quit [Ping timeout: 240 seconds]
@sonney2k	lisitsyn, so it fails on your machine with c++11 too ok
 lisitsyn	sonney2k: it seems for me it is something quite complex with eigen3 and C++11
 lisitsyn	I'll try to debug it again later
 lisitsyn	but for now I'll just disable it for C++11
@sonney2k	lisitsyn, and did you use g++ or clang++ ?
 lisitsyn	sonney2k: both
@sonney2k	and it fails with both?
 lisitsyn	yes
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * ba2bb88 / src/shogun/ (2 files): https://github.com/shogun-toolbox/shogun/commit/ba2bb88463c013f78bfbaf334ea31d0a61004609
 shogun-notifier-	shogun: Disabled malsar clustered LR for C++11 due to wrong behaviour
@sonney2k	lisitsyn, but then you could probably create a small code snippet that shows this failure?
 shogun-buildbot	build #1462 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1462  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 2301565 / src/shogun/ (3 files): https://github.com/shogun-toolbox/shogun/commit/2301565053670c63fc1ece2e63a95d6cba2c0489
 shogun-notifier-	shogun: ifdef lapack in inference method - since gaussian is only available with it
 shogun-buildbot	build #1651 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1651  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- travis-ci [~travis-ci@ec2-184-73-123-75.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9839311
-!- travis-ci [~travis-ci@ec2-184-73-123-75.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1649 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1649  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1652 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1652  blamelist: Soeren Sonnenburg <sonne@debian.org>
 lisitsyn	argh
 lisitsyn	okay will fix in a minute
 lisitsyn	sonney2k: I failed to create such a snippet :/
@sonney2k	lisitsyn, hmmhh
@sonney2k	lisitsyn, well sth not too big would at least be of interest to the eigen3 people
@sonney2k	I mean it must be their bug to fix
 lisitsyn	sonney2k: yeah I'll try to minimize it
-!- iglesiasg [~iglesias@83.179.44.135] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	sonney2k, oh cool
@iglesiasg	sonney2k, how is possible though? It works fine when the number of threads is equal to 1
-!- travis-ci [~travis-ci@ec2-184-73-123-75.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9839737
-!- travis-ci [~travis-ci@ec2-184-73-123-75.compute-1.amazonaws.com] has left #shogun []
@iglesiasg	anyway, time to rest
@iglesiasg	see you tom
-!- iglesiasg [~iglesias@83.179.44.135] has quit [Client Quit]
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * 33d16a4 / src/shogun/transfer/multitask/MultitaskClusteredLogisticRegression.cpp: https://github.com/shogun-toolbox/shogun/commit/33d16a4f3fbd6d55b7831c05b96cb25a55c499ec
 shogun-notifier-	shogun: Really disabled clustered LR with C++11
--- Log closed Mon Aug 05 00:00:01 2013
