--- Log opened Thu Feb 14 00:00:46 2013
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
-!- cwidmer [8ca3fe9d@gateway/web/freenode/ip.140.163.254.157] has quit [Quit: Page closed]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- FSCV_ [~FSCV@173.254.212.46] has quit [Quit: Leaving]
-!- FSCV [~FSCV@189.139.160.181] has joined #shogun
-!- FSCV_ [~FSCV@204.45.110.163] has joined #shogun
-!- FSCV [~FSCV@189.139.160.181] has quit [Ping timeout: 240 seconds]
-!- FSCV_ [~FSCV@204.45.110.163] has quit [Quit: Leaving]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- lambday [3ba2174d@gateway/web/freenode/ip.59.162.23.77] has joined #shogun
-!- sumit_ [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
-!- sumit_ [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- sumit_ [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
 sumit_	Hey blackburn,Haven't talked to you for long.Denoising Auto-encoders/Stack Denoising Auto-Encoders will be the next to work upon|However,The devotion/work fervour slows down a bit as the midterm exams are nearing! :P
 sumit_	Anyways I shall get back to you,This Time Versed with The workflows at shogun :)
 sumit_	Thanks  :)
 blackburn	sumit_: wait wait no need to implement it one by one without integration
 blackburn	it would be better if you finish rbm and integrate it - I can't use your standalone code anyhow
@sonney2k	blackburn, we have an issue with de-serializing sparse features
@sonney2k	everything works ok
@sonney2k	but the inplace constructor & sgvector make it crash once the object is SG_UNREF'd
 blackburn	sonney2k: is that the issue I commented I can't reproduce it?
@sonney2k	blackburn, yes because you forgot to destroy the object
 blackburn	ah
@sonney2k	blackburn, but i've put in a unit test now
 blackburn	I see
 blackburn	sonney2k: so it is a unit test now and it fails?
 blackburn	ah reading yesterday logs
@sonney2k	blackburn, yes but I commented out the failure
@sonney2k	gtg
@sonney2k	cu
 blackburn	okay then I'll take a look once I get to that
 blackburn	sonney2k: sonne|work as of SO idea - feel free to suggest better naming :)
 sumit_	Oh Sorry I had to go somewhere Blackburn, All Right , I shall focus on RBM first , render it useful and proceed further :)
 blackburn	alright
 sumit_	:)
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 244 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
 wiking	btw: we should as well use mocking macros since we have them: e.g. EXPECT_CALL
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has quit [Ping timeout: 246 seconds]
 wiking	sonney niiice hostname :)
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has joined #shogun
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
 blackburn	wiking: isn't my hostname nice? :D
 blackburn	I want nice hostname too!
 wiking	:>
 wiking	kgru
 wiking	kenguruu
 wiking	:>>
 blackburn	wiking: heh, 'knowledge genesis'
-!- sumit_ [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- FSCV [~FSCV@204.45.110.163] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 wiking	blackburn: here?
 blackburn	wiking: ja
 wiking	blackburn: have u manage to get clang_complete work under tests/unit ?
 wiking	for some reason it does not work for me
 blackburn	wiking: hmm I didn't try
 blackburn	wiking: what does clist show?
 wiking	blackburn: full vim command?
 blackburn	wiking: :clist
 wiking	E42: no errors ?
 blackburn	hmm
 wiking	blackburn: have u seen this: https://github.com/exclipy/clang_indexer
 wiking	but i'm missing Index.h :)
 blackburn	hmm
 blackburn	wiking: ctags works ok I think though
 wiking	lolface
 wiking	this is some heavy shit: http://www.sublimetext.com/
 blackburn	it is always told sublime is cool but I didn't try yet :)
 wiking	i'm just checking it out
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@188.168.128.140] has joined #shogun
-!- heiko [~heiko@027d8b72.bb.sky.com] has joined #shogun
-!- blackburn [~blackburn@188.168.128.140] has quit [Quit: Leaving.]
-!- KMcQuisten [d8338942@gateway/web/freenode/ip.216.51.137.66] has joined #shogun
 KMcQuisten	Hello all
-!- KMcQuisten [d8338942@gateway/web/freenode/ip.216.51.137.66] has quit [Quit: Page closed]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Heiko Strathmann :master * e4b0d2b / tests/unit/features/CGaussianBlobsDataGenerator_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/e4b0d2b1e4130780ecc50a555ac2f14e2a0389ee
 shogun-notifier-	shogun: my first unit-test to ensure that Gaussian blobs data is produced roughly the right way
 shogun-notifier-	shogun: Heiko Strathmann :master * 09c467a / examples/undocumented/python_modular/ (2 files): https://github.com/shogun-toolbox/shogun/commit/09c467a5694e89d9a3bcb0e9f3f0ff5742de3ffd
 shogun-notifier-	shogun: examples work again so use them
 shogun-notifier-	shogun: Heiko Strathmann :master * 5903252 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/59032523db4e58f95b32fe93449b999f7e7fcea3
 shogun-notifier-	shogun: Merge pull request #876 from karlnapf/master
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: my first unit test
 heiko	wiking, ^
 heiko	finally :)
 shogun-buildbot_	build #822 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/822  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- heiko [~heiko@027d8b72.bb.sky.com] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@188.168.128.140] has joined #shogun
-!- lambday [3ba2174d@gateway/web/freenode/ip.59.162.23.77] has quit [Ping timeout: 245 seconds]
@sonney2k	blackburn, I start to miss some features of eclipse in vim :D
@sonney2k	too much java coding I guess :/
 blackburn	sonney2k: you should try intellij
@sonney2k	blackburn, b'cause it's made by Russians?
 blackburn	sonney2k: no, best java ide
@sonney2k	blackburn, why - what is better wrt eclipse
 blackburn	sonney2k: autocompletion
 blackburn	(at least)
@sonney2k	I don't see what could be improved
 blackburn	much faster and you start to think it knows better what you want to write
@sonney2k	I mean what can it autocomplete or in a better way thatn eclipse?
 blackburn	what I don't like - eclipse autocomplete is by demand
@sonney2k	you mean intellij *always* autocompletes?
 blackburn	sonney2k: most of time
 blackburn	when you write
 blackburn	Message <your cursor here>
 blackburn	it suggests message
 blackburn	and so on
 blackburn	sonney2k: if you don't trust me - ask mikio :)
@sonney2k	ahh ok that eclipse cannot do but in eclipse you would write new Message() and then it would suggest Message message
@sonney2k	as variable
@sonney2k	it is not about trust :)
@sonney2k	I cannot change anyways but I am tempted to use the refactoring features w/i shogun
@sonney2k	did anyone try to use shogun & eclipse?
 blackburn	sonney2k: oh it won't work in idea then :)
 blackburn	sonney2k: well I tried
@sonney2k	intellj lost then :)
 blackburn	I've been using eclipse as an IDE first two months of shoguning or so
@sonney2k	I would rather code with one ui for c++ / java / python
@sonney2k	blackburn, so tell me how to do it?
 blackburn	sonney2k: do what?
@sonney2k	use eclipse for shogun
@sonney2k	I am totally clueless
 blackburn	sonney2k: hmm I am too now actually
 blackburn	sonney2k: so you need refactoring?
@sonney2k	blackburn, what I like about eclipse is to see all functions/classes etc
 blackburn	sonney2k: yeah it is possible in vim as well though
 blackburn	with some headache just like everything in linux
@sonney2k	ahh it can use an existing makefile project
 blackburn	sonney2k: yes I think so
@sonney2k	I am just doing this
@sonney2k	question is whether I can only use this for the src/shogun dir or src/
 blackburn	sonney2k: if we get shogun to cmake we could generate projects for everything
 blackburn	even for visual scheisse 2010
 blackburn	:D
 blackburn	sonney2k: well to navigate you can use any folder I think
 blackburn	makefile would be used only for 'build project'
 blackburn	sonney2k: works quite ok but so slow comparing to vim
@sonney2k	blackburn, well I would want to use it completely obviously
 blackburn	sonney2k: I feel cumbersome in eclipse :D
@sonney2k	me too
@sonney2k	what sucks is that you have to give it all INCLUDES
@sonney2k	manually somehow :/
 wiking	mmm this sublimetext is actually good
 wiking	but i miss some vim shortcuts :)
@sonney2k	uhh making progress
@sonney2k	blackburn, does eclipse have a git plugin?
@sonney2k	probably woa?
 blackburn	sonney2k: yes it does IIRC
 shogun-notifier-	shogun: Soeren Sonnenburg :master * ac7aa2a / src/shogun/classifier/mkl/MKL.h: https://github.com/shogun-toolbox/shogun/commit/ac7aa2a4d0da9576f5e90a821d1231acba7d0098
 shogun-notifier-	shogun: fix compile error / forgotten glpk include
@sonney2k	ok I will give eclipse a try
@sonney2k	lets see whether it behaves
@sonney2k	blackburn, you don't happen to know how we get serializaton to work with SGVector stuff right?
@sonney2k	I am asking because of the inplace issue...
@sonney2k	*hate*
 shogun-buildbot_	build #823 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/823  blamelist: Soeren Sonnenburg <sonne@debian.org>
 blackburn	sonney2k: no, I don't - what is the problem whough?
 blackburn	th*
@sonney2k	blackburn, wasn't that even the problem when you attempted to convert SGString* stuff
 blackburn	sonney2k: inplace? yeah it was a problem
@sonney2k	blackburn, that we when we de-serialize allocate some void* of SGVectors
 blackburn	ahh
 blackburn	argh hate
@sonney2k	yeah as nice as this SGVector stuff is as tough it is with serialization
@sonney2k	it needs an extra treatment in the (de)-serialization code
@sonney2k	heiko is the expert there ...
 blackburn	sonney2k: any guidance to line of code?
@sonney2k	parameters.cpp IIRC
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 59719ba / tests/unit/classifier/svm/SVMOcas_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/59719ba652c35ac206feb39945e262b83f7663f6
 shogun-notifier-	shogun: require single thread usage & initialize rnd number generator
 shogun-buildbot_	build #824 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/824
 blackburn	sonney2k: you should like it http://www.tldrlegal.com/
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- heiko [~heiko@027d8b72.bb.sky.com] has joined #shogun
@sonney2k	blackburn, I think I know how to fix it - just add SGSparseVector to lib/memory.h
@sonney2k	let me try
 n4nd0	blackburn: around?
 n4nd0	sonney2k: around? :)
@sonney2k	n4nd0, ?
 n4nd0	I think it would be very convenient to introduce cmake in shogun
@sonney2k	haha
 n4nd0	blackburn commented something before related to eclipse projects
 n4nd0	but also, I think it could handle very well the fact of selecting to build different parts of shogun
 n4nd0	I mean sometimes we don't need to rebuild everything for example when we are developing a new part
 n4nd0	sonney2k: haha why do you think it is funny? :D
@sonney2k	n4nd0, not so sure what you mean but I have no strong preferences
 n4nd0	it would be something pretty big to do probably
@sonney2k	n4nd0, b'cause blackburn was saying this too me
@sonney2k	and I said it is a massive undertaking
@sonney2k	so nothing we can do before gsoc starts
 n4nd0	so I thought that we could include as part of one of GSoC projects
 n4nd0	yeah sure, but what about *during* GSoC?
 n4nd0	one of the projets related to usability improvements
@sonney2k	I think this should be done by some core developer though
 n4nd0	sonney2k: why?
@sonney2k	but I don't see the benefits for myself
 n4nd0	but anyway a student is a core develooper, at least during the summer of his/her project
@sonney2k	it involves all parts of the code and we have lots of small customized tests
 n4nd0	mmm I think it is still possible to do it with the tests
 n4nd0	and I think there are big benefits
 n4nd0	it becomes easier to handle new dependencies than modifying the current configure script
 n4nd0	and what I meant before with selecting what parts of the code to build
 n4nd0	say we are introducing a new preprocessor
 n4nd0	why to build all the kernels, classifiers, etc?
@sonney2k	n4nd0, not sure if you said sth - I ran out of battery
 n4nd0	sonney2k: check
 n4nd0	21:35 < n4nd0> but anyway a student is a core develooper, at least during the summer of his/her project
 n4nd0	21:35 <@sonney2k> it involves all parts of the code and we have lots of small customized tests
 n4nd0	21:36 < n4nd0> mmm I think it is still possible to do it with the tests
 n4nd0	21:37 < n4nd0> and I think there are big benefits
 n4nd0	21:37 < n4nd0> it becomes easier to handle new dependencies than modifying the current configure script
 n4nd0	21:39 < n4nd0> and what I meant before with selecting what parts of the code to build
 n4nd0	21:39 < n4nd0> say we are introducing a new preprocessor
 n4nd0	21:39 < n4nd0> why to build all the kernels, classifiers, etc?
 wiking	my 2 cents: cmake transition should be fairly easy. we don't really use any very very funky stuff in ./configure script
 wiking	i mean there are far more bigger libraries that uses cmake
 n4nd0	we could use their CMakeLists.txt as inspiration
 wiking	and a lot of .cmake file exists already for various library tests, moreover some libraries already provide a cmake file as well
 wiking	who's?
 wiking	ah i was meaning itk and vtk
 wiking	they are big libraries
 wiking	as well as opencv
 n4nd0	and pcl
 wiking	opencv really has some funky shit in it
 wiking	and most of the libraries that we use are used by opencv as well
 wiking	but yeah afaik it's just CMakeList.txt + a cmake folder with all the funky finder scripts
 n4nd0	it looks like that
 wiking	but i think we should not waste a gsoc slot for this task at all
 wiking	it's far too simple imho
 n4nd0	I didn't mean a whole slot for this
@sonney2k	I don't think it is simple.
@sonney2k	but if someone has time to do it feel free
 n4nd0	I think my opinion is a bit in between yours
 wiking	well yeah we already have some cmakefile.txt
 wiking	that's a good start
 n4nd0	I don't think it is a piece of cake like wiking does but I think it should be doable in max two weeks of work for a gsocer
 n4nd0	:)
 wiking	n4nd0: max 2 days
@sonney2k	and I think 1-2 months
 n4nd0	wiking: pi rule
 wiking	and the 2nd day is testing :)
 n4nd0	say one week at least
 wiking	nop
 wiking	who cannot do this in 2 days
 wiking	does not deserve to be a shogun developer
 n4nd0	haha c'mon... say we don't get any cmake expert
 wiking	;DDDD
 n4nd0	:DDD
 wiking	heheh yeah i was a bit ironic here
 wiking	but yeah i reckon that could be done within 2 weeks
 n4nd0	sonney2k: why do you think it would be soo much work?
 wiking	n4nd0: well we are already wasting time!
 wiking	out of those hours
 wiking	instead of talking about it, let's just fucking doit
 wiking	:)))
@sonney2k	n4nd0, it is a lot of very non-standard stuff
 n4nd0	wiking: this is management time :)
 wiking	pffff
 wiking	petting time
 wiking	it's just <nop> <nop>...<nop>
 wiking	:D
 n4nd0	hehe
 n4nd0	sonney2k: what non-standard stuff?
@sonney2k	n4nd0, you have to integrate gcc / g++ all the lib detection, optimization settings, swig, doxygen, version header and dependency generation
@sonney2k	and that for java,lua,ruby,csharp,python,r,octave ...
 n4nd0	sonney2k: that is actually the most difficult thing I see
 n4nd0	I am unsure how would it be together with SWIG
 wiking	n4nd0: http://blog.cryptomilk.org/2011/01/15/cmake-java-support/
 n4nd0	and its bindings
 n4nd0	I will look around if I see any other project using swig + cmake
 wiking	n4nd0: http://www.swig.org/Doc1.3/Introduction.html#Introduction_build_system
 n4nd0	I think that the rest of the stuff would be very doable
 n4nd0	wiking: aham, that's nice
 n4nd0	wiking: do you also think that it would be positive to introduce cmake?
@sonney2k	n4nd0, in any case - what is much more important is to get shogun 2.1 out
@sonney2k	before gsoc students start to do PRs
 n4nd0	sonney2k: agree
 wiking	n4nd0: well since cmake is getting more and more supported by various libs
 wiking	it does make life easier
 n4nd0	so I understand that we should try to get valgrind errors as close to zero as possible
 wiking	but honestly
 n4nd0	sonney2k: what else?
 wiking	what cmake can do an autoconf + automake script can do as well
@sonney2k	n4nd0, all the warnings down to 0
@sonney2k	look at the build bots
 n4nd0	sure the warnings
@sonney2k	do some tests, update README
@sonney2k	and bugs down if possible
 wiking	i'm not soo much fan of current ./configure script (the mplayer style) + but it works... i prefer the configure.ac stuff.... but yeah it works now, and it's not soooo hard to add extra stuff into that configure script, only thing is that it's going to grow and grow and grow with new stuff, and it's really not easy to make it modular, like cmake... that's kind of like the only positive thing i think about cmake. that it can be broken down into smaller pi
 wiking	but imho cmake is more of an eye-candy
 wiking	i mean i tried cross-compiling with the current setup shogun, and it's possible
 n4nd0	sonney2k: can you remind me how do you do from vim to compile so it breaks every time a warning is found?
 n4nd0	I think you mentioned that once
 wiking	i.e. with this aspect we wouldn't benefit too much from cmake - the most advertised thing about cmake is that makes your project pretty much cross-platform
 n4nd0	wiking: that is a very good advantage - cross-platform
 wiking	lol: http://mjtsai.com/blog/2013/02/14/adobe-photoshop-1-0-1-source-code/
 wiking	n4nd0: but that one pretty much works with current setup, except native windows :D
@sonney2k	n4nd0, shogun's code is not cross platform
 n4nd0	ok so I doesn't make matter that much to use cmake in this aspect :)
@sonney2k	wiking, is that a joke?
 wiking	n4nd0: well as said it's more about have a very clean/sterile build system
 wiking	sonney2k: what?
 n4nd0	haha
 n4nd0	the adobe thing I guess
 wiking	sonney2k: no i mean it's 1.0 :D
@sonney2k	yeah but pascal on 68k?
 n4nd0	yeah but I can feel some irony too
 wiking	i think this is kind of like the version they created for star wars
 n4nd0	uncommented but well structured code!
 n4nd0	it seems to be very clean code hehe
 wiking	btw i hope u know that the reason we have adobe photoshop in the first place is star wars
 wiking	:
 wiking	:P
 wiking	they developed the first version of adobe photoshop for that :)
 wiking	pretty funny stuff :>
 n4nd0	I didn't know that
 wiking	"Then his brother, John Knoll, who was in charge of the special effects department for Industrial Light and Magic on the 1st Star Wars movie showed interest in the project and recommended that it be developed into a full image editing program. Hence it was named 'Display'. The Knoll brothers then renamed Display to Image-Pro. Image-Pro could be used for rack card printing too and that wasn't the only thing it could do."
 wiking	"Image-Pro had many advanced features for displaying images so in the year 1988, Knoll brothers started to sell Image-Pro commercially. And for this purpose they renamed Image-Pro to "Photoshop".
 wiking	sonney2k: yeah i mean 68k is because of mac
 wiking	i guess
@sonney2k	wiking, yeah but not C?
 wiking	sonney2k: mmm mac:))
 wiking	and come oooon
 wiking	it's done by a phd student
 blackburn	re!
 wiking	i mean by definition he had to use a funky fucking language to write it :P
 wiking	as he was doing his phd :D
 wiking	and back in 80s pascal was like the first language everybody learned @ uni for programming
 wiking	i even had to fucking learn that language
 wiking	:=
 wiking	:= for defintion :D
 wiking	the only more funkier stuff i ever saw was delphi
 wiking	 :D
 blackburn	students here still learning it as a first language
 n4nd0	blackburn: join the cmake discussion! :D
 blackburn	no joke, they are really doing that
 wiking	blackburn: :>
 blackburn	n4nd0: I have to try that and check
 blackburn	I don't know
 wiking	blackburn: indeed
 wiking	i mean it's a clean syntax
 wiking	but ugly
 wiking	:DD
 n4nd0	wiking: in my Spanish uni it is still the first language...
@sonney2k	you guys just do the cmake thing and once it works I don't mind using it - I don't have strong preferences
 wiking	procedure cmake
 wiking	:D
 blackburn	soeren is a old jedi he could be right we could get troubles
 n4nd0	yes
 n4nd0	the fact that he estimates 2 months to make it work scares me
 blackburn	I don't know - for student - maybe yes
 wiking	n4nd0: and then on the end we will cmake shogun for android ;)
 blackburn	for me it is not
 blackburn	shogun on android could be kind of funny, don't know how useful though
 wiking	blackburn: well if we could separete the code easily from learning and classifying
 wiking	then actually it is interesting
 blackburn	wiking: could you elaborate what to separate?
 wiking	i mean just to compile the part that can read a learned model and do classification
 blackburn	ahh
 wiking	blackburn: like for example a video codec
 wiking	normally u will only need a decoder
 n4nd0	blackburn: who doesn't to apply SVMs to the pictures taken with the phone camera?
 wiking	on a handheld device
 wiking	but encoder is not necessarily required
 blackburn	n4nd0: ah linear svm is easy to write - why to bother with library
 wiking	blackburn: well as i showed u earlier
 wiking	ios has liblinear and libsvm
 n4nd0	blackburn: jk :)
 blackburn	wiking: yeah, I was surprised
 wiking	so for some reason they use it
 wiking	as the license is there
 wiking	for what i have no clue
 blackburn	liblinear and libsvm are great mature tools
 wiking	i guess with a jailbroken ios
 wiking	one could easily find out where those libs are used
 blackburn	wiking: I tired to google but didn't manage to discover anything Iirc
 wiking	but afaik they would never go with shogun
 blackburn	iirc*
 wiking	as it's gplv3
 wiking	:D
 blackburn	haha righto, gpl is tough
 wiking	well lgpl ;)
 blackburn	wiking: do you know that blog? http://nuit-blanche.blogspot.com/
 wiking	dunno about andro practices
 wiking	if they go with gplv3 projects
 wiking	blackburn: nou haven't seen it b4
 blackburn	wiking: I will be trying to convince and then support the author being a mentor
 wiking	cool
 blackburn	he knows (some mature words sonney2k denies me to say) a lot
 blackburn	about compressive sensing
 wiking	!@#$
 wiking	:D
 blackburn	and matrix factorization
@sonney2k	blackburn, I am off to bed - so you can switch to free speech mode
 blackburn	sonney2k: zaebis!
 blackburn	sonney2k: thanks! :D
 blackburn	sonney2k: you tried to go to bed a few times before as I can see ;)
@sonney2k	blackburn, no I didn't spent the evening talking to some lawyer :/
 blackburn	sonney2k: so you have stolen that car? I told you not to do that
@sonney2k	blackburn, you must have forgotten :)
@sonney2k	l8r
 n4nd0	sonney2k: good night
 wiking	gnite'
 wiking	blackburn: time series analysis would be cool to have as well in shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 blackburn	wiking: still pursuing quant stuff? :)
 blackburn	n4nd0: main problem with any phones integration (as I see it) - we don't integrate to pipelines nicely
 blackburn	image -> features -> labels
 n4nd0	mmm I am not sure what you mean, sorry
 blackburn	n4nd0: we can't compute any image features
 blackburn	n4nd0: then may be we can integrate with opencv/etc? still no
 n4nd0	blackburn: aha! I see what you mean
 blackburn	it is a general problem - how to design such api that would be so flexible
 n4nd0	blackburn: how have you done when you used shogun for CV problems?
 n4nd0	e.g. you road signs classification
 blackburn	n4nd0: just computed features and then feed it to shogun
 blackburn	won't work with any embedding
 blackburn	but actually may be with trained svm it is not a problem
 blackburn	wiking: n4nd0: do you happen to know akka library?
 blackburn	about it I meant
 n4nd0	blackburn: you mentioned it not so long ago right?
 blackburn	n4nd0: I do not remember :D
 n4nd0	because I remember browsing this page some days ago
 n4nd0	hehe
 n4nd0	aah no I think I checked when I read a paper about FastSLAM with map/reduce
 blackburn	it is really hot
 blackburn	somewhat 2-3 times slower than erlang
 n4nd0	hot because it is slower? mmm
 blackburn	hah
 blackburn	no, because any other approach would be 200-300 times slower may be :)
 blackburn	like idiot way: actors made of threads
 blackburn	n4nd0: actually tests differ and some say it is even faster than erlang
 n4nd0	why is erlang the mark to beat?
 blackburn	n4nd0: because it is the best actor-based thing
 n4nd0	ahm I didn't know it is so appropriate for large scale systems
 blackburn	n4nd0: I am talking about message passing only
 blackburn	not math or methods call, etc
 blackburn	n4nd0: yes it is useful for large-scale (like some game servers for example) systems
 blackburn	and I am using it for multiagent system I am implementing
 n4nd0	facebook chat is done in erlang I think
 n4nd0	trains?
 blackburn	yeah trains
 blackburn	n4nd0: actor-like systems are *so* easy to understand and design sometimes
 blackburn	you just describe messages and reactions
 blackburn	loose coupling, bla bla :)
 n4nd0	can you put me an example of a message and a reaction?
--- Log closed Fri Feb 15 00:00:45 2013
