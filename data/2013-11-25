--- Log opened Mon Nov 25 00:00:39 2013
-!- thoralf [~thoralf@91-66-33-4-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
 shogun-buildbot_	build #628 of nightly_default is complete: Failure [failed notebooks]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/628
-!- sonne|osx [~sonne@89.204.153.54] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Thoralf Klein :develop * 7d36d76 / src/shogun/base/SGRefObject.cpp,src/shogun/base/SGRefObject.h: https://github.com/shogun-toolbox/shogun/commit/7d36d76abdfb1cc81d139c082131f14d23c155d6
 shogun-notifier-	shogun: Introduced SGRefObject (pulling refcounting out of CSGObject)
 shogun-notifier-	shogun: Thoralf Klein :develop * f9f46bf / src/shogun/base/SGObject.cpp,src/shogun/base/SGObject.h: https://github.com/shogun-toolbox/shogun/commit/f9f46bf0b4b7ff093664371f1d3153f3ed01fd3c
 shogun-notifier-	shogun: Putting refcounting from SGObject to new super class SGRefObject.
 shogun-notifier-	shogun: Thoralf Klein :develop * 9893df5 / examples/undocumented/libshogun/library_gc_array.cpp: https://github.com/shogun-toolbox/shogun/commit/9893df5b2423b330782f0a9b02f335277b677c40
 shogun-notifier-	shogun: Fix libshogun example (preventing segfault when shogun_exit() is called before
 shogun-notifier-	shogun: kernel objects are destroyed)
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 4412de8 / / (5 files): https://github.com/shogun-toolbox/shogun/commit/4412de87b2d5921e1bf38e283c51cc2a2ff170c4
 shogun-notifier-	shogun: Merge pull request #1771 from tklein23/csgobject_refactoring
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: CSGObject refactoring: Introduced SGRefObject
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 8b4597d / NEWS: https://github.com/shogun-toolbox/shogun/commit/8b4597d5592547961e130073ffea0aa9c8bad8f2
 shogun-notifier-	shogun: update news
-!- sonne|osx [~sonne@89.204.153.54] has quit [Quit: sonne|osx]
-!- travis-ci [~travis-ci@ec2-54-226-108-81.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/14476975
-!- travis-ci [~travis-ci@ec2-54-226-108-81.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-242-253-145.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/14477187
-!- travis-ci [~travis-ci@ec2-54-242-253-145.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot_	build #136 of clang34 - undefined behaviour analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20undefined%20behaviour%20analysis/builds/136  blamelist: Thoralf Klein <thoralf.klein@zib.de>
 shogun-buildbot_	build #1978 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/1978  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- lisitsyn1 [~lisitsin@mxs.kg.ru] has joined #shogun
 shogun-buildbot_	build #134 of clang34 - thread analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20thread%20analysis/builds/134  blamelist: Thoralf Klein <thoralf.klein@zib.de>
-!- thoralf [~thoralf@enki.zib.de] has joined #shogun
 thoralf	Ho.
 shogun-buildbot_	build #2053 of deb3 - modular_interfaces is complete: Failure [failed test csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2053  blamelist: Soeren Sonnenburg <sonne@debian.org>, Thoralf Klein <thoralf.klein@zib.de>
 shogun-buildbot_	build #153 of clang34 - static analysis is complete: Failure [failed analyse]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20static%20analysis/builds/153  blamelist: Thoralf Klein <thoralf.klein@zib.de>
 sonne|work	hey thoralf
 thoralf	sonne|work: Seems my first patch works fine.  Now talking about the next one?
 sonne|work	thoralf: yes sure
 thoralf	https://github.com/shogun-toolbox/shogun/pull/1772
 sonne|work	I think we need DynamicRefObjectArray ...
 sonne|work	otherwise you have the same issues again with you not knowing when to ref / unref
* wiking is writing a new qp library
 sonne|work	wiking: hurray another one :D
@wiking	delibrately not making part of shogun so that ppl can use it externally
@wiking	but the thing is that it'll be lgpl3
 sonne|work	wiking: libqp
@wiking	and will do a completely subtitute in sense of qp
@wiking	of mosek
@wiking	so finally we can do mosek like qp for structural learners
@wiking	sonne|work: libqp is almost good
@wiking	but it's too strickt with the s.t. of the minimization
@wiking	*strict
@wiking	and another thing
@wiking	it's gonna have a general KKT solver using various factorization methods
@wiking	so if we manage to get this into shogun
@wiking	we might consider to exchange the kkt solving in other qps
@wiking	using these ones
@wiking	as they'll be superoptimized
@wiking	using eigen
@wiking	and openmp
@wiking	basically what i'm trying to implement is a quadrating cone program
@wiking	so it'll solve a pair of primal and dual quadratic cone programs
 thoralf	wiking: Ehr.  Many people from my institute are developing for LP/QP/fooP-solver.  Sure you wanna start from scratch?
@wiking	the idea came from CVXOPT
 sonne|work	wiking: that is a massive effort... not sure you have the time...
@wiking	thoralf: ^
@wiking	sonne|work: well about kkt interfacing i'm sure that i dont have time for that
 thoralf	wiking: fyi: http://www.zib.de/en/optimization/software.html
@wiking	i just want to give an eigen like (hpp only implementation) for KKT solving
@wiking	thoralf: license?
@wiking	or all gpl3 valid
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 thoralf	http://scip.zib.de/licence.shtml
 thoralf	One of them (ZIBopt)
@wiking	thoralf: yeah it's almost like svmlight license :S
 thoralf	wiking: If you have concerns about the license, let me talk to my boss. ;)
@wiking	thoralf: yeah we already have issues with svmlight :S
@wiking	and basicaly it's almost like mosek in one way
@wiking	sonne|work: hehehe remember when u told me this "sonne|work> wiking: that is a massive effort..." about cmake? :)
 sonne|work	wiking: yes and we are still not at the stage where cmake is working without a hassle
 thoralf	lol
@wiking	sonne|work: sorry :S
 thoralf	The Gallileo gambit.
@wiking	for trying my best
@wiking	:P
@wiking	thoralf: http://pystruct.github.io/index.html
@wiking	u know this one... ?
 sonne|work	wiking: so just dont' underestimate the work
@wiking	pretty cool about ssvm
@wiking	sonne|work: yeah sure note
@wiking	*not
@wiking	sonne|work: but we are getting there with cmake i think
@wiking	thoralf: btW: big up for the separation for structuralData from sgobjc
 thoralf	wiking: Yeah, heard of, but Python is painful when you're having huge data... :(
 thoralf	wiking: Even thought of using it.
@wiking	sonne|work: if i manage to get that KKT shit working and when we get gsoc slots it could be a good idea to dedicate a student to do that kkt interfacing for other qp solvers
@wiking	thoralf: sure, this is why i started this whole shit ... wanna do it in c++
@wiking	eigen style
@wiking	or tapkee style
 lisitsyn1	hah
 lisitsyn1	tapkee style come on yo
@wiking	lisitsyn1: heheh yeah if u r around i have questions
 lisitsyn1	wiking: sure
-!- lisitsyn [~lisitsyn@80.252.20.67] has quit [Disconnected by services]
-!- lisitsyn1 is now known as lisitsyn
@wiking	lisitsyn1: do u know if for example in eigen the llt solver (cholesky factorization)
@wiking	if i give it a sparsematrix
@wiking	will it use the sparse cholesky
@wiking	or it will use the dense one?
 lisitsyn	wiking: don't remember by heart actually
 lisitsyn	but I tend to think it is dense
@wiking	as i've tested that it works
 thoralf	sonne|work: Well, about the DynamicRefObjectArray thing: I already spend too much time on this issue.  I did got a working patch - and did even a refactoring of CSGObject.
@wiking	Eigen::LLT<MatrixType> lltOfK
@wiking	where MatrixType = Sparse
@wiking	works as well
@wiking	but dunno if it's actually calling the sparse one
-!- lisitsyn1 [~lisitsyn@80.252.20.67] has joined #shogun
 thoralf	sonne|work: To make it short: I won't do this DynamicRefObjectArray class... but I could adapt my patch if you could provide it.
@wiking	or just does the dense on sparse matrix
-!- mode/#shogun [+o lisitsyn] by ChanServ
@wiking	if so
-!- lisitsyn1 was kicked from #shogun by lisitsyn [lisitsyn1]
@wiking	how would u do this then
@wiking	say template<typename MatrixType> class KKTCholeskySolver
@lisitsyn	wiking: there is SimplicialLLT or so
@wiking	lisitsyn: yeah i know
@wiking	but it would depend on the MatrixType which one to use
@lisitsyn	that works with sparse quite ok
@lisitsyn	do you want it generic?
@wiking	yes
@wiking	i want it to be able to do it both on sparse and dense
 sonne|work	wiking: you were working on cmake since june this year ... and your estimate was 2 weeks max
@lisitsyn	wiking: well template specialization ;)
@wiking	sonne|work: well i've got cmake working in 2 weeks no? :))
@wiking	lisitsyn: ok so that's the only way right?
 sonne|work	wiking: lol
@wiking	i thought so....
@wiking	sonne|work: well we are really now better off with this than the ./configure i'd say
@lisitsyn	wiking: you can actually support not only eigen but any other stuff
@wiking	but we can always switch back to ./configure ;PP
@wiking	lisitsyn: yeah i dont want :D
@wiking	lisitsyn: just fucking have eigen
@wiking	it's really easy to have installed on a toaster even :PP
@lisitsyn	wiking: with sfinae you could check if method supports some operator() :D
@lisitsyn	plug n play haha
@wiking	hahaha p'n'p
@wiking	what was that shit about in the 90s
@wiking	:DD
@lisitsyn	wiking: yeah I still remember even though I was like 5 in the middle of 90s haha
@wiking	lisitsyn: woah http://www.boost.org/doc/libs/1_55_0/libs/utility/enable_if.html
@lisitsyn	wiking: yeah that's easy
@wiking	lisitsyn: do we have something similar in stdc?
@lisitsyn	wiking: no, I don't think yet
@lisitsyn	wiking: I usually rewrite sfinae haha
@wiking	hahahah
@lisitsyn	because boost slows down compilation way too much
@lisitsyn	and my autocompletion goes slower :D
@wiking	yeps
@wiking	:D
@wiking	so true
@wiking	:>
@wiking	oh woah
@wiking	http://nonchalantlytyped.net/blog/2012/06/27/yet-another-sfinae/
@lisitsyn	wiking: yes canonical sfinae
@lisitsyn	ah
@wiking	ok so actually it's doable
@lisitsyn	one more sfinae
@lisitsyn	:D
@wiking	yes
@lisitsyn	wiking: well yeah if you want to check if it is sparse it is easy
@wiking	cool i'll do it then laater
@wiking	first i want to have it ready for initial commit that it actually works
@wiking	and then i'll do writing
@lisitsyn	wiking: if you want to choose solver you'd have to have two parts
@lisitsyn	compile time part which selects sparse/dense
@lisitsyn	and runtime part which selects proper solver
@wiking	mmmhmmm
@wiking	well we'll see how far i can get with it
@wiking	and then if u have time for comments i'll give u a link
@wiking	to check on the shit
@lisitsyn	wiking: sure
@wiking	oooh maaan
@wiking	lisitsyn: this is really daily wtf
@wiking	11:34 < lmatteis> i have an Microsoft Access file database
@wiking	11:34 < lmatteis> what's the easiest way to query it using SPARQL
@wiking	the first line
@wiking	Microsoft Access file database
@lisitsyn	wiking: haha
@lisitsyn	wiking: I actually tried another approach
@lisitsyn	like
@lisitsyn	template <typename MatrixType, typename SolverType>
@wiking	yeah i thought o fthat
@wiking	but what if the idiot user (see academic 99%)
@wiking	gives u
@wiking	DenseMatrix, SparseSolver
@wiking	:)))
@wiking	of course i can do template specialization
@wiking	but i dont want
@lisitsyn	wiking: you fail compile time then
@wiking	lisitsyn: heheh
@lisitsyn	wiking: it is ideal to see no <> so you could use that builder like syntax
@lisitsyn	to approach with inference
@lisitsyn	so you do solve(matrix).using(LLT)
@lisitsyn	again compile-time failure when doing something dumb
@lisitsyn	wiking: if you want to have fun of users I have one thing I didn't implement yet
@lisitsyn	wiking: solve[method=LLT,matrix=X]
@lisitsyn	:D
@lisitsyn	legal C++
 shogun-buildbot_	build #2054 of deb3 - modular_interfaces is complete: Failure [failed test csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2054  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- sukalpo [8622b0e0@gateway/web/freenode/ip.134.34.176.224] has joined #shogun
 sukalpo	Hello...could someone refer me any proper documentation to implement kernel Caching for MKL ..I  am about to code my own MKL (wrapper approach )  ...the only issue I cannot figure out is how to deal with kernel matrices bigger than my memory...... I have all the other required algorithms though....Can anyone suggest me something
-!- besser82 [~besser82@2a02:8108:8840:1800:e8b:fdff:fe16:bb33] has joined #shogun
-!- besser82 [~besser82@2a02:8108:8840:1800:e8b:fdff:fe16:bb33] has quit [Changing host]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- new_lido [~walid@41.218.174.238] has joined #shogun
 sonne|work	sukalpo: just use a kernel from shogun and let the svms use their kernel cache
 sukalpo	Actually I would like to use my optimization routines and stuff like that
 sonne|work	sukalpo: for solving the inner svm problem?
 sukalpo	yes ....
 sukalpo	for the outer loop as well
-!- new_lido is now known as new_lido_bsy
 sonne|work	sukalpo: well then you have to do the caching your own of course
 sukalpo	could you suggest me any well documented algorithm?
-!- new_lido_bsy [~walid@41.218.174.238] has quit [Ping timeout: 272 seconds]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- sukalpo [8622b0e0@gateway/web/freenode/ip.134.34.176.224] has quit [Quit: Page closed]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- thoralf [~thoralf@enki.zib.de] has quit [Quit: Konversation terminated!]
-!- thoralf [~thoralf@zib-52-158.zib.de] has joined #shogun
 thoralf	Heyhey.
-!- sonne|osx [~sonne@89.204.137.159] has joined #shogun
-!- sonne|osx [~sonne@89.204.137.159] has quit [Quit: sonne|osx]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * ecb17dd / src/interfaces/modular/SGBase.i,src/shogun/base/SGDynamicRefObjectArray.h: https://github.com/shogun-toolbox/shogun/commit/ecb17ddd8852359cb8ab2245eaea3929b1f82b1f
 shogun-notifier-	shogun: - add dynamic array for SGRefObject's
 shogun-notifier-	shogun: - make SGRefObject the class that is swig ref/unref'd
-!- sonne|osx [~sonne@89.204.137.159] has joined #shogun
 sonne|osx	thoralf: ok there you go!
 sonne|osx	thoralf: base/SGDynamicRefObjectArray.h
-!- sonne|osx [~sonne@89.204.137.159] has quit [Client Quit]
 shogun-buildbot_	build #1979 of bsd1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/1979
-!- lisitsyn [~lisitsyn@80.252.20.67] has joined #shogun
 thoralf	Hey Sergey
-!- thoralf [~thoralf@zib-52-158.zib.de] has quit [Quit: Konversation terminated!]
 shogun-buildbot_	build #2055 of deb3 - modular_interfaces is complete: Failure [failed test python modular test ruby modular test java modular test csharp modular test lua modular test octave modular test r modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2055  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-54-237-127-137.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/14500367
-!- travis-ci [~travis-ci@ec2-54-237-127-137.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	ah missed thoralf
-!- new_lido [~walid@41.218.174.238] has joined #shogun
-!- sonne|osx [~sonne@f053040204.adsl.alicedsl.de] has joined #shogun
 shogun-buildbot_	build #308 of osx1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx1%20-%20libshogun/builds/308  blamelist: Soeren Sonnenburg <sonne@debian.org>, Thoralf Klein <thoralf.klein@zib.de>
-!- new_lido_ [~walid@41.218.174.238] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 9caa249 / src/ (3 files): https://github.com/shogun-toolbox/shogun/commit/9caa249776eb00d7d0b33fd59ae2291c60ddf67d
 shogun-notifier-	shogun: fix typo and documentation of SGRefObject
 shogun-buildbot_	build #357 of FC19 - libshogun is complete: Failure [failed git]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC19%20-%20libshogun/builds/357  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot_	build #351 of FCRH - libshogun is complete: Failure [failed git]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/351  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- new_lido_ [~walid@41.218.174.238] has quit [Quit: Leaving]
-!- new_lido_ [~walid@41.218.174.238] has joined #shogun
 shogun-buildbot_	build #309 of osx1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx1%20-%20libshogun/builds/309
 shogun-buildbot_	build #2056 of deb3 - modular_interfaces is complete: Failure [failed examples and unit tests]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2056  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	good evening guys
 lisitsyn	hey iglesiasg
-!- travis-ci [~travis-ci@ec2-54-237-127-137.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/14510465
-!- travis-ci [~travis-ci@ec2-54-237-127-137.compute-1.amazonaws.com] has left #shogun []
-!- thoralf [~thoralf@91-66-33-4-dynip.superkabel.de] has joined #shogun
 thoralf	Hey.
 thoralf	sonney2k: Just fixing some compile errors... thanks for adding the class.
-!- thoralf [~thoralf@91-66-33-4-dynip.superkabel.de] has quit [Ping timeout: 245 seconds]
--- Log closed Tue Nov 26 00:00:40 2013
