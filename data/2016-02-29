--- Log opened Mon Feb 29 00:00:16 2016
@HeikoS	lisitsyn: jo
@HeikoS	around?
 lisitsyn	HeikoS: ja
@HeikoS	guten abend
@HeikoS	lisitsyn: schau mal hier:
@HeikoS	https://github.com/shogun-toolbox/shogun/pull/3021
 lisitsyn	uh
 lisitsyn	you wrote the whole thing
@HeikoS	using shogun serialisation of lists to store multiple lists and vectors
@HeikoS	not general yet
@HeikoS	but it works
@HeikoS	and can be integrated in meta language I guess
@HeikoS	only thing is:
@HeikoS	the stored file is a serialised list
 lisitsyn	uh you being very productive last weeks
@HeikoS	so if this changes, then all reference file become bad
@HeikoS	and the order matters, so cannot be changed after reference file has been created
 lisitsyn	HeikoS: what about two steps
 lisitsyn	first step we just compare outputs of different langs
@HeikoS	lisitsyn: ah good point
 lisitsyn	much later - second step - we start to store them and compare against versions
@HeikoS	like all examples produce the exact same result
@HeikoS	lisitsyn: good idea
 lisitsyn	yes like first horizontally
 lisitsyn	across langs
 lisitsyn	then vertically
@HeikoS	mmh
 lisitsyn	across versions
@HeikoS	can be done on the fly I guess
@HeikoS	but the comparison against reference file is really what I wanted
@HeikoS	but in any case
@HeikoS	good idea
 lisitsyn	HeikoS: what's the meaning of sgmatrixobject?
@HeikoS	what do you think of file format?
@HeikoS	lisitsyn: it is just a SGMatrix wrapper that is a CSGObject
@HeikoS	so that I can put it in list
@HeikoS	which is serialisable
 lisitsyn	HeikoS: what about making it even more generic
 lisitsyn	SGObjectWrapper<T>
 lisitsyn	T m_value;
@HeikoS	lisitsyn: SG_ADD might cause problems then no?
@HeikoS	thats why I avoided
@HeikoS	but in fact you are right
@HeikoS	one class is enough
@HeikoS	let me change
 lisitsyn	why? SG_ADD will receive T
 lisitsyn	which is either
 lisitsyn	SGMatrix<something>
 lisitsyn	or SGVector or even float
 lisitsyn	HeikoS: anyway, I can go with patching generator maybe?
@HeikoS	yeah go ahead
@HeikoS	I will use this branch to draft it
@HeikoS	pushing in there
@HeikoS	you can adjust the generator
 lisitsyn	HeikoS: ah also, NumericList is not the best name
 lisitsyn	HeikoS: what about storing them by name?
 lisitsyn	so we don't really rely on order
@HeikoS	also ok
@HeikoS	gotta change data structure then
@HeikoS	ok going to bed
@HeikoS	see you
 lisitsyn	cu
@HeikoS	lisitsyn: pushed again
@HeikoS	but linker error ;)
@HeikoS	you can fix it
@HeikoS	see you finally!!
 lisitsyn	HeikoS: ok
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has quit [Ping timeout: 260 seconds]
-!- travis-ci [~travis-ci@ec2-107-22-51-111.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112481164
-!- travis-ci [~travis-ci@ec2-107-22-51-111.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-92-141-248.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112483293
-!- travis-ci [~travis-ci@ec2-54-92-141-248.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-92-141-248.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112483328
-!- travis-ci [~travis-ci@ec2-54-92-141-248.compute-1.amazonaws.com] has left #shogun []
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- besser82 [~besser82@fedora/besser82] has quit [Remote host closed the connection]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
 sonne|work1	lisitsyn: so today accepted orgs will be announced?
@besser82	sonne|work1, yes, sir! =)
 sonne|work1	besser82: hey...
 sonne|work1	besser82: do you know more exactly when?
@besser82	sonne|work1, yo!  =)
 sonne|work1	:P
@besser82	sonne|work1, I think around the "usual" time  ;)
 sonne|work1	17-21 hrs?
@besser82	sonne|work1, around 6 p.m. UTC
@besser82	sonne|work1, until 9 p.m. UTC
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has quit [Client Quit]
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@besser82	lisitsyn, yo?
@besser82	HeikoS, yo! =)
@HeikoS	besser82: jojo whazup?
@besser82	HeikoS, How do we want to handle the plugin-loader library?
@HeikoS	besser82: details please!
@besser82	HeikoS, shall I keep it in my Github-namespace or do we want to have it in Shogun-namespace?
@HeikoS	besser82: oh, shogun feature branch
@HeikoS	or a seperate repo
@besser82	Question is just where to keep the repo?  ;)
@HeikoS	is it a whole repo?
@HeikoS	I see
@HeikoS	yeah put it in shogun
@HeikoS	we have a few things in there that are ongoing
@HeikoS	such as the web2
@besser82	It's a stand-alone lib...  Okie will init the repo in sg-namespace, then ^^
@besser82	HeikoS, any proposals for it's name?
@besser82	HeikoS, until now I called it "Dynaplugz"
@HeikoS	besser82: hey its your baby, so you can choose ;)
@HeikoS	besser82: haha ok maybe something else then
@besser82	HeikoS, okie  =)
@HeikoS	what about just sg_plugin?
@HeikoS	but is it only shogun?
@HeikoS	or general
 lisitsyn	I am ok with dynaplugz
@HeikoS	ok then
@HeikoS	go for it
 lisitsyn	crazier the names the better
 lisitsyn	:D
@HeikoS	lisitsyn: besser82 ok, I am fine with that too
@besser82	lisitsyn, my thinking ^^
@HeikoS	haha I am just too coservative ;)
@besser82	HeikoS, it's pretty versatile
@besser82	HeikoS, so one can use the lib out of shogun for own stuff and all
@HeikoS	besser82: great
@besser82	lib has platform-independent dynamic-loader and platform-indep. thread-safe logger
@HeikoS	besser82: also put a link in the gsoc proposal for plugins
@HeikoS	and a few sentences
@HeikoS	we have a potential student for that already
@HeikoS	so he can have a look
@besser82	HeikoS, I'll do  Greati =)
@besser82	HeikoS, lisitsyn: what about license?
@HeikoS	besser82: the usual bsd! is my opinion
@besser82	HeikoS, lisitsyn: I used ASL-2 on the code so far...  Which is pretty BSD-3 clausecompat
@besser82	Do we have a license boiler-plate laying around somewhere?
@besser82	So I can use that, when initializing the repo?
@besser82	HeikoS, lisitsyn ^
@HeikoS	besser82: yes we have
 lisitsyn	lets just refer LICENSE
 lisitsyn	it goes crazy when this license plate is bigger than source
@HeikoS	lisitsyn: yeah agreed
@HeikoS	but lets use a proper thing for htat
@HeikoS	like unified acress Shogun
@HeikoS	Copyright (c), Shogun Toolbox Foundation
@HeikoS	Written (W) 2016 Heiko Strathmann
@HeikoS	Distributed under BSD3 license, see LICENSE
@HeikoS	something like this
 lisitsyn	???
 lisitsyn	oops
 lisitsyn	yes pleas
 lisitsyn	e
@besser82	HeikoS, lisitsyn: That wouldn't be enough for US jurisdiction...  :(
 lisitsyn	besser82: really?
 lisitsyn	oh
@besser82	HeikoS, lisitsyn: They require full license in every licensed file...
@HeikoS	besser82: I still would do Sergeys suggestion
 lisitsyn	that's crazy
@HeikoS	it is so annoying otherwise
@HeikoS	we are not US anyways ;)
 lisitsyn	ok what are dangers?
@HeikoS	short header is so much better
@besser82	HeikoS: but people from there can sue us otherwise...  :S
 lisitsyn	sue like?
@HeikoS	for not having a license? :D
@besser82	HeikoS: since the warranty disclaimer isn't effective
@HeikoS	no they cant we are not on us territory
@HeikoS	haha f***ers ;)
@besser82	HeikoS: I'm not sure about that...  We need to check the "Schengen-Abkommen" about that...  :S
@HeikoS	besser82: haha
@HeikoS	no but seriously, I think lisitsyn is very right with his point
@HeikoS	lets have a 3 liner in every file
@HeikoS	1.) Copyright Shogun Foundation
@HeikoS	2.) Authors of this file
 lisitsyn	HeikoS: lets do this if we find any other example of such thing
 lisitsyn	is anybody doing that?
@HeikoS	3.) Licensed BSD3, see LICENSE for details
@HeikoS	lisitsyn: I am sure
@HeikoS	https://github.com/SheffieldML/GPy/blob/master/GPy/kern/_src/ODE_UY.py
@HeikoS	neil lawrence does it this way
@HeikoS	they dont even have authors in the files
@HeikoS	just reference to AUTHORS and LICENSE
 lisitsyn	oh that's not the best example
 lisitsyn	something widely used ;)
@besser82	HeikoS, lisitsyn: That doesn't imply it is safe to do so...
@HeikoS	the guy is pretty big and active in opens source
@HeikoS	but I am sure there is another
@HeikoS	go find it ;)
 lisitsyn	apache spark - full license
 lisitsyn	sklearn - Authors: ... License: ....
@HeikoS	second then!
@HeikoS	lisitsyn: c++ question
@HeikoS	lisitsyn: I have non-template class
@HeikoS	and want a template member function
@HeikoS	I get undefined references in linking, what is wrong?
 lisitsyn	HeikoS: to this function?
@HeikoS	yes
 lisitsyn	HeikoS: where is it defined?
@HeikoS	template<class T> void append(T value);
@HeikoS	in the class
@HeikoS	that is non template
 lisitsyn	where are the impls?
 lisitsyn	in the .cpp?
@HeikoS	besser82: lets do sklearn style
@HeikoS	yes
@HeikoS	lisitsyn: yes
@HeikoS	lisitsyn:
@HeikoS	template <class T> void CNumericList::append(T value)
@HeikoS	{
@HeikoS	this->append_element(new CSGObjectWrapper<T>(value));
@HeikoS	}
 lisitsyn	HeikoS: then either this cpp is not being compiled
@HeikoS	it is
 lisitsyn	wait
 lisitsyn	do you implement it in .cpp?
@HeikoS	yes
@HeikoS	ah
 lisitsyn	no you can't
@HeikoS	thats the problem right
@HeikoS	with templates
@HeikoS	I forgot
 lisitsyn	you have to put your impl into .h
@HeikoS	its a while since I wrote c++
@besser82	HeikoS, lisitsyn: I'm still not convinced...   I'll ask the lawyers over at RedHat, what they think about that...  :/
 lisitsyn	besser82: apparently no one sued sklearn while they are much more popular
@HeikoS	besser82: I think this is merely a detail
@HeikoS	but ok
 lisitsyn	HeikoS: there is a point in that
 lisitsyn	speaking of file
 lisitsyn	there is no such LICENSE thing around
@HeikoS	lisitsyn: maybe lets put one :)
 lisitsyn	it is something 'not complete'
 lisitsyn	no I mean file itself is self-fulfilling this way
 lisitsyn	but if we refer LICENSE
 lisitsyn	I am curious if we can refer LICENSE + its md5 hash
 lisitsyn	:)
 lisitsyn	besser82: does it sound crazy for you?
 lisitsyn	HeikoS: but apparently it is ok to refer some law stuff without copying it altogether
@HeikoS	ok then
@HeikoS	lets do it
@besser82	lisitsyn, HeikoS: just had quick chat to Tom Callaway from RH
@HeikoS	besser82: and?
@besser82	lisitsyn, HeikoS: Every source-file *MUST* contain the license individually, since the license itself demands that by itself
@besser82	"Redistributions of source code must retain the above copyright notice,
@besser82	     this list of conditions and the following disclaimer."
@HeikoS	besser82: well ....
@HeikoS	ok then
@HeikoS	put it in :)
@besser82	HeikoS, allrighty
@HeikoS	besser82:  btw
@HeikoS	I am not sure I agree still
@HeikoS	see e.g. here http://stackoverflow.com/questions/845895/putting-license-in-each-code-file
@HeikoS	according to this, copyright needs to be in every file
@HeikoS	but not full license
@HeikoS	just name of license
@besser82	HeikoS, they are mostly discussing the GPL, where in fact the Copyright is enough, since the license itself is viral
@HeikoS	ok
@HeikoS	lisitsyn: more c++ questions
@HeikoS	template<class T> bool append_wrapped_element(T data)
@HeikoS	{
@HeikoS	return this->append_element(new CSGObjectWrapper<T>(data));
@HeikoS	}
@HeikoS	I put this in CList
@HeikoS	but now I get undefined references again
@HeikoS	undefined reference to `shogun::CSGObjectWrapper<shogun::SGMatrix<double> >::CSGObjectWrapper(shogun::SGMatrix<double>)'
 lisitsyn	HeikoS: CSGObjectWrapper constructor is not in .h?
@besser82	HeikoS, there is no constructor ;)
@HeikoS	thanks! :)
@HeikoS	ah man
@HeikoS	my brain is a cheese
@HeikoS	things drop out
@HeikoS	so quickly
@HeikoS	can only remember math ;)
@besser82	HeikoS, hehe, lol  =)  Do we have a general mailing-address for Shogun e.V.?
@HeikoS	yes we do
@HeikoS	gotta find it
@HeikoS	its in publicity git I think
@HeikoS	will send later
-!- HeikoS [~heiko@host-92-0-162-192.as43234.net] has quit [Ping timeout: 248 seconds]
 lisitsyn	dynaplugz!
@wiking	:>
@besser82	lisitsyn, coming soon XD
@besser82	wiking, do you know we have common email-addy for shogun?
 lisitsyn	shogun-team
@besser82	wiking, like info@shogun-toolbox.org?
@besser82	lisitsyn, ^
@besser82	lisitsyn, is the mailing list open without subscription?
 lisitsyn	besser82: shogun-team@shogun-toolbox.org
@besser82	lisitsyn, okie, will use that in the LICENSE.txt  :P
 lisitsyn	ah
 lisitsyn	yeah
 lisitsyn	ok
@besser82	lisitsyn, hope this is open for public  :P
 lisitsyn	besser82: for mails outside?
 lisitsyn	should be
@besser82	yes, like someone can use it as a contact addy
-!- HeikoS [~heiko@host86-160-51-46.range86-160.btcentralplus.com] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- lisitsyn [~lisitsyn@37.139.2.75] has left #shogun []
-!- lisitsyn [~lisitsyn@37.139.2.75] has joined #shogun
@HeikoS	lisitsyn: so the storing works
@HeikoS	lisitsyn: I also had another thought about the two levels of testing you suggested
@HeikoS	lisitsyn: not sure we need the comparison across all target languages: if we compare against referencee file, we get that automatically
@HeikoS	lisitsyn: thoughts?
@HeikoS	lisitsyn: re the map data structure, this might be more work as CMap is not serializable
@HeikoS	lisitsyn: and not idea how much work it is to make it
@besser82	lisitsyn, HeikoS:  pushed the bsd3-templates to publicity-repo:  https://github.com/shogun-toolbox/shogun-publicity/tree/master/bsd3-license
@HeikoS	besser82:  nice!
@HeikoS	besser82: any idea how to approach changing the licenses of all files?
@HeikoS	besser82: might have to update this:
@HeikoS	https://github.com/shogun-toolbox/shogun/issues/2958
@HeikoS	besser82: would be cool to do this soon and before next 5.0 release
@besser82	HeikoS, will try to find a way to shift them without much problems...
@HeikoS	besser82: great!
@HeikoS	let me know
@HeikoS	besser82: whats with the encoding in the license file?
@besser82	HeikoS, that's to make sure the compiler / interpreter uses the correct file-encoding
@besser82	HeikoS, I have seen python-stuff going boom, when python ran on ASCII and the file was UTF-8
@besser82	HeikoS, same with some compilers on Windows
@besser82	HeikoS, it also make sure, the files keeps the correct encoding, when it is edited by people having a strange enconding in their env
@HeikoS	ok cool
@besser82	HeikoS, those two lines make sure 99.8% of possible sh*t happening is prevented
@besser82	^^
@HeikoS	ok great then :)
@HeikoS	used it
@HeikoS	besser82: looking forward to plugin
@HeikoS	ever tried to modify List.h?
@HeikoS	have to re-compile all of shogun to test
@HeikoS	the changes
-!- HeikoS [~heiko@host86-160-51-46.range86-160.btcentralplus.com] has quit [Quit: Leaving.]
-!- travis-ci [~travis-ci@ec2-54-147-132-119.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112573330
-!- travis-ci [~travis-ci@ec2-54-147-132-119.compute-1.amazonaws.com] has left #shogun []
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	besser82: around?
@besser82	wiking, yo
@wiking	so i've just got back to my libarchive feature branch
@wiking	but
@wiking	have you been working with libarchive before?
@wiking	my problem is seeking
@wiking	because we usually process files in 2 pass
@wiking	maybe we should remove that :)
@besser82	Hmmm...  Never directly used libarchive before...  :S  But I think there might be some good good-examples in MATE-archiver...
-!- travis-ci [~travis-ci@ec2-54-147-13-163.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112574072
-!- travis-ci [~travis-ci@ec2-54-147-13-163.compute-1.amazonaws.com] has left #shogun []
@besser82	https://github.com/mate-desktop/engrampa
@besser82	wiking, ^
-!- humility [uid138660@gateway/web/irccloud.com/x-ncecteifyfsjaezg] has joined #shogun
@besser82	Maybe with libarchive double-pass processing isn't needed anymore...
@HeikoS	besser82:  what is this?
@besser82	HeikoS, which? the fail on Travis or libarchive?
@wiking	besser82: the thing is that currently we do double pass in order to know what size of an SGMatrix we should allocate
@besser82	wiking, for the file? Or it's contents?
 sonne|work1	and that double pass is extremely cheap if the file fits in memory :)
@wiking	content
@wiking	sonne|work1: the problem here is that with libarchive seeking is not so straightforward :)
 sonne|work1	wiking well there are 2 options: either we open twice and read twice or we read once and re-alloc as needed...
@wiking	sonne|work1: heheh yeah i know :)
@wiking	i was just wondering if maaaaybe somebody knwos a good trick for
@wiking	libarchive seeking
@wiking	so that i dont have to refactor our code :)
@wiking	as other than that the code is ready :)
 sonne|work1	wiking: the lazy guy in you is speaking :P
@wiking	indeed
@wiking	:)))
@wiking	btw the circular buffer has a bug :)
 sonne|work1	wiking: didn't libarchive work with FD's instead of FILE?
 sonne|work1	wiking: did you solve this?
 sonne|work1	wiking: circular* - what bug?
@wiking	yeah that's not a problem (libarchive)
@wiking	bbl
-!- HeikoS [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	sonne|work1: so the circular buffer (ringbuffer) has a little bug
@wiking	:)
 sonne|work1	and which?
@wiking	ahhaha
@wiking	it actually has more than one problem
@wiking	a) it's not thread safe
@wiking	b) if you use that and process a file bigger than the buffer
@wiking	it's counter is not correct
 sonne|work1	sigh
@wiking	why wasn't this implemented thread safe? :)
 sonne|work1	so we need that + tests for this or an alternative impl.
@wiking	yeah
@wiking	can i just use c++11 for this?
@wiking	it'd be fairly easy to do this whole story using std::atomic etc
@wiking	btw shouldn't we actually as Heiko say have Eigen as a required library
@wiking	as well as c++11 ?
@wiking	or we wanna work with old compilers?
@wiking	HeikoS sonne|work1 besser82 lisitsyn ^^^ ? :)
-!- travis-ci [~travis-ci@ec2-54-147-13-163.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112591038
-!- travis-ci [~travis-ci@ec2-54-147-13-163.compute-1.amazonaws.com] has left #shogun []
 sonne|work1	wiking: ask the boss
@wiking	who's the boss? :)
* sonne|work1 is pointing fingers to HeikoS
@wiking	HeikoS: BOSS!
@besser82	wiking, I'm fine with support for let's say gcc >= 4.4, so we can build at least on RHEL6
@besser82	wiking, since that will be actively supported until 2022
@besser82	wiking, but we should step up on CMake >= 3.1
@besser82	wiking, so we can use CMake's internal target_compile_features
@besser82	wiking, https://cmake.org/cmake/help/v3.1/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES
@wiking	gcc 4.4 has c++11 or only c++0x?
@wiking	oh ok
@wiking	i see
@wiking	https://gcc.gnu.org/projects/cxx0x.html
@wiking	:)
@wiking	it has enough stuff :)
@HeikoS	hahaha
@HeikoS	wiking, sonne|work1 I am all for requiring eigen3 (as can be bundled) and requiring c++11 (we did already I think)
@HeikoS	keeps us moving
@HeikoS	and the old compiler ppl have to use old version
@wiking	mmm c++11 we dont require
@wiking	we just use it if we can
@HeikoS	lisitsyn: https://github.com/shogun-toolbox/shogun/pull/3021/files
@wiking	but still provide the alternative if needed
 lisitsyn	HeikoS: good
@HeikoS	wiking: I dont really like all these #IFDEFS floating around and breaking the build, as for eigen3
@HeikoS	wiking: but you decide
@HeikoS	lisitsyn: this works
@HeikoS	lisitsyn: stores the things named
 lisitsyn	eigen is not optional
 lisitsyn	it is header only
 lisitsyn	lets just always use specific eigen version
@HeikoS	lisitsyn: thats why I think we should remoive the #ifdef HAVE_EIGEN3 stuff
 lisitsyn	like ignoring system one by default
@HeikoS	lisitsyn: agreed
@HeikoS	wiking: ^
 lisitsyn	HeikoS: I had some prototype before I went to sleep yesterday
@HeikoS	lisitsyn: cool
@HeikoS	lisitsyn: shall we continue to do this in the integration branch?
 lisitsyn	HeikoS: I create virtual 'Init' expressions
 lisitsyn	no sorry, I use Init
 lisitsyn	and then create MethodCall
 lisitsyn	so in the end I just put all the things
@wiking	HeikoS: ok so i'll go ahead and fix with c++11 the circular buffer
@wiking	dunno what to do with libarchive for now
@HeikoS	wiking: cool!
@HeikoS	lisitsyn: nice, let me know when you pushed it :)
@HeikoS	wiking: okok
@wiking	anybody knows how to get the open mode of a FILE* f?
@HeikoS	wiking: thats needed for the CSV right?
@wiking	HeikoS: yes
@wiking	btw it's used in LibSVMFile.h
@wiking	as well
@wiking	so i suppose that's broken as well :)
@HeikoS	wiking: so lisitsyn and me are working on this meta-example wide integration testing
@HeikoS	that is, integration tests for numerical results for all target languages
@HeikoS	which first ensures that they all give the same, and second avoids errors so slip if not covered by unit tests
@wiking	yep
@wiking	that's sounds great!
@HeikoS	almost there
@HeikoS	wiking: we use shogun serialisation though
@HeikoS	https://github.com/shogun-toolbox/shogun/pull/3021/files
@HeikoS	ascii
@wiking	that's ok
@besser82	wiking, when we are pluginizing and all:  Can we reconfigure the buildbot?
@besser82	Since I want to save the cpu of the buildbot and split out builds to OBS
@besser82	It's a public accessible thing and we can do amazing CI on it, like automatically rebuild dependencies and everything
@besser82	and we can ship our own debian / ubuntu / SUSE / Arch repos there
@HeikoS	besser82: that sounds cool
@besser82	HeikoS, thought so, too  =)  Free and useful  :D
@wiking	besser82: yeah sure of course
@besser82	wiking, great!  So let me finish the dynaplugz lib and prepare all for it to be the first thing built on the OBS-service  =)
@wiking	mmm has it been pushed?
@besser82	wiking, not fully yet currently just enough to build an empty lib in the repo
@besser82	wiking, I want to have CMake fully working
@wiking	oh ok i see
@wiking	kk
@besser82	when I'm done with all, I'll give a shout  ^^
@wiking	ping me anytime
@besser82	will do so! Thank you =)
@wiking	until then i'll try to work on the ringbuffer and the libarchive stuff
@besser82	great!
@besser82	btw...  can we teach buildbot to create and push git-tags?
@wiking	yes
@besser82	Yay! That will come in handy then, too
-!- humility [uid138660@gateway/web/irccloud.com/x-ncecteifyfsjaezg] has quit [Quit: Connection closed for inactivity]
-!- travis-ci [~travis-ci@ec2-107-22-55-79.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112594355
-!- travis-ci [~travis-ci@ec2-107-22-55-79.compute-1.amazonaws.com] has left #shogun []
@HeikoS	lisitsyn:  jo
 shogun-buildbot	build #3572 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/3572
-!- travis-ci [~travis-ci@ec2-107-22-55-79.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112616585
-!- travis-ci [~travis-ci@ec2-107-22-55-79.compute-1.amazonaws.com] has left #shogun []
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has joined #shogun
 shogun-buildbot	build #329 of trusty - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun/builds/329  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has quit [Ping timeout: 252 seconds]
 shogun-buildbot	build #2767 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2767
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has joined #shogun
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has quit [Ping timeout: 252 seconds]
 shogun-buildbot	build #329 of CentOS7 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/CentOS7%20-%20libshogun/builds/329  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #446 of trusty - libshogun - viennacl is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun%20-%20viennacl/builds/446  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	lisitsyn: around=?
@HeikoS	lisitsyn:  see the latest version: https://github.com/shogun-toolbox/shogun/pull/3021
@HeikoS	lisitsyn: the last part of the .sg file has to be autogenerated. The ball is with you
@HeikoS	lisitsyn: once this works, we can write a python script to compare results
@HeikoS	integration will be a bit messy
@HeikoS	wiking: latest class list is 404
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has joined #shogun
 sanuj	HeikoS: Congrats!!
 sanuj	GSoC accepted :)
@HeikoS	sanuj: ha really?
@HeikoS	totally forgot about the deadline
@HeikoS	seems like good news then :)
 sanuj	yeah see
 sanuj	HeikoS: https://summerofcode.withgoogle.com/organizations/5104067932061696/
 sanuj	It was announced just now.
@HeikoS	whoooo!
@HeikoS	 :) :) :)
@HeikoS	great news
 sanuj	Great :)
 sanuj	Indeed
@HeikoS	thanks for notifying us :)
 sanuj	my pleasure
 sanuj	HeikoS: can't wait to start contributing back again
 sanuj	have an exam tomorrow :P
@HeikoS	sanuj: oh good luck for that
 rcurtin	HeikoS: congratulations!  mlpack got in too so maybe we can have an ML summit at the mentor summit :)
@HeikoS	sanuj: yeah looking forward to your patches
@HeikoS	rcurtin: thanks
@HeikoS	rcurtin: and congrats to you too! :)
@HeikoS	rcurtin: could even think again about that joint project now ;)
@HeikoS	rcurtin: definitely hang out at the summit
 rcurtin	also Orange is in this year
 rcurtin	but no other ML libraries (other than R) as far as I can see
@HeikoS	rcurtin: ml is on the hype so there is room for many libs
@HeikoS	surprised all the new projects are not in
 rcurtin	yeah
@HeikoS	tensorflow
@HeikoS	sklearn
@HeikoS	torch
@HeikoS	autograd
@HeikoS	etc etc
 rcurtin	tensorflow at least I think already has google's support :)
@HeikoS	true
 rcurtin	I would not be surprised if many of those organizations did not apply
 rcurtin	lots of ML people don't know about GSoC, I'm constantly explaining what it is to people at conferences
 sanuj	HeikoS: tensorflow and torch probably don't require funding
 sanuj	rcurtin: gsoc is very popular in india.
 rcurtin	I met the caffe maintainer, Evan something I think was his name, he wasn't familiar with GSoC and didn't seem to be very familiar with the open-source world
 sanuj	among the students atleast
 rcurtin	sanuj: absolutely, that's where the majority of the applications I see come from :)
 rcurtin	but most of the researchers I work with aren't familiar with it
 rcurtin	so maybe lots of these organizations just aren't aware of the opportunity, or maybe they don't have people with enough spare cycles to do mentoring
 sanuj	yeah.
 rcurtin	but I dunno, I am not them, I'm just idly guessing :)
 lisitsyn	are we accepted?
 lisitsyn	uhm interesting
 lisitsyn	:D
 sanuj	lisitsyn: yeah
@HeikoS	lisitsyn: yeah :D
@HeikoS	I gotta leave now
@HeikoS	see you guys later
 sanuj	cool
 sanuj	goodnight
-!- mode/#shogun [+o sonney2k] by ChanServ
@besser82	sonney2k, He's alive! \o/
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 246 seconds]
@besser82	sonney2k, You're preparing the invitations for GSoc2016-mentors?  :P
 shogun-buildbot	build #330 of trusty - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun/builds/330
 shogun-buildbot	build #447 of trusty - libshogun - viennacl is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun%20-%20viennacl/builds/447
-!- ebadawy [~ebadawy@197.163.32.61] has joined #shogun
@besser82	lisitsyn, yo?
 lisitsyn	besser82: hey
@besser82	lisitsyn, you know any generic way <tm> to list the files in a dir?
@besser82	using C++
@besser82	without using POSIX or Windows specific system-calls?
 lisitsyn	besser82: C++17 haha
 lisitsyn	http://en.cppreference.com/w/cpp/experimental/fs
@besser82	lisitsyn, okie, so boost::filesystem  :P
 lisitsyn	yeah probably
-!- nelson-liu [~nelsonliu@nelsons-macbook-pro.dyn.cs.washington.edu] has joined #shogun
-!- sanuj [0e8bc402@gateway/web/freenode/ip.14.139.196.2] has quit [Quit: Page closed]
 nelson-liu	hi! I was checking out shogun on gsoc, and noticed that you mentioned python in your description. However, I looked at your "Getting Involved" page on github, and it seemed to place more of an emphasis on c++
 nelson-liu	I'm pretty experienced with general ML theory and such, and contribute a lot to scikit-learn. Was just wondering if I'd be able to contribute substantially if I'm completely unfamiliar with cpp
-!- mlenthu [0e8b5206@gateway/web/freenode/ip.14.139.82.6] has joined #shogun
 mlenthu	Hi, I am Shashank. I am a MS By Research, CSE student at IIIT Hyderabad working in applications of Deep Learning in NLP. I came across your organization's profile in GOSC 2016 list. There are some very exciting Deep Learning projects in description. I want to contribute in some project. How should I start?
@besser82	lisitsyn, any objection, when I'll make Boost a dependency of Dynaplugz?
@besser82	lisitsyn, I mean, every distro and Cygwin/MinGW ship some version of it...
-!- nelson-liu [~nelsonliu@nelsons-macbook-pro.dyn.cs.washington.edu] has quit [Remote host closed the connection]
@besser82	brew has it, too...
@wiking	so what?
@wiking	what happened? :)
@wiking	reading logs
@wiking	:)
@wiking	:>>>>>>>>>>>>
@wiking	oh man
@wiking	here we go!
-!- nelson-liu [~nelsonliu@D-173-250-146-196.dhcp4.washington.edu] has joined #shogun
@wiking	btw somebody who has access to the twitter account retweet my status or send out that we've got accepted
-!- nelson-liu [~nelsonliu@D-173-250-146-196.dhcp4.washington.edu] has quit [Remote host closed the connection]
-!- lordon [~Thunderbi@2a02:810a:13c0:8494:584a:5b07:c89:caa6] has joined #shogun
@wiking	channel infestation official has begun
@wiking	welcome all! :)
@wiking	sonne|work1: around?
@sonney2k	wiking, no
 shogun-buildbot	build #586 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/586  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@wiking	:>
@wiking	ok
-!- nelson-liu [~nelsonliu@D-69-91-185-195.dhcp4.washington.edu] has joined #shogun
 nelson-liu	btw, where are most of the devs located?
 lisitsyn	random points
@wiking	:)
@wiking	besser82: no boost
 lisitsyn	remember no line in boost
@besser82	lisitsyn, wiking:  Y?
@besser82	lisitsyn, wiking: Boost::filesystem is really fun
@wiking	no
 lisitsyn	just like any other boost library
 lisitsyn	;)
@wiking	no boost
@wiking	listing ifles
@wiking	listing files is easy
@wiking	no need boost fs for that
@besser82	wiking, yes, but not if you need to be platform-indep...
@besser82	wiking, I know how to do that in POSIX, too...  But POSIX != Windows
@wiking	yes
@wiking	you write ifdef
@wiking	not that complicated
@wiking	and btw
@wiking	shogun does not run on window
@wiking	*windows
@wiking	so that'll take some loooonger time
@besser82	wiking, when we're done it will :P
@wiking	to get that running on none-posix place
@wiking	hahahha
@wiking	there are tooo many
@wiking	code that doesn't compile with vc++
@besser82	wiking, and with plugins we can stomp them one after another in little time  :P
 lisitsyn	 vc++ is not a C++ compiler
@besser82	lisitsyn, I know...
@wiking	besser82: have u tried
@wiking	to compile the code in shogun
 lisitsyn	it is some magic world
@wiking	with vc++
@wiking	?
@wiking	because i did
@wiking	and trust me
@wiking	making plugins
@wiking	will not get you anywhere
@besser82	wiking, not yet...
@wiking	in that effort
@wiking	i did some patches and fixes
@wiking	but there's still a significant amount of code that needs 'fixing'
@besser82	wiking, there are other compilers for windows than just VC++
@wiking	yes
@wiking	with mingw it works
@wiking	:)
@wiking	dunno if there's still borland
@wiking	c++ ? :))))
@besser82	wiking, If I remeber correctly there are even more than Borland
@wiking	mmm
@wiking	ok please let's not get into nitpicking
@wiking	if you want windows support
@wiking	you better have vc++ support
@wiking	and that is a significant effort
@besser82	wiking, that's true...
@wiking	because there's a lot of stuff in shogun
@wiking	that is none-vc++ ready
@wiking	and no
@wiking	no boost dependency
@wiking	that has been a rule for a loooooong time now
@wiking	:)
 lisitsyn	what about no exceptions ;)
@wiking	:)
@wiking	fuck try catch
@wiking	:D
@wiking	that is for pussies :)))
 lisitsyn	google uses this rule
 lisitsyn	O_o_O
@wiking	in java?
@wiking	because it makes sense in jvm
 lisitsyn	hmm not in java I think hah
@wiking	getting stack in jvm i actually a horror
 lisitsyn	java without exceptions is something interesting
@wiking	so it actually makes sense not to have exceptions in jvm
@besser82	wiking, What is the real problem with boost?
@wiking	besser82: too big
@wiking	too bloated
@wiking	not necessary
@wiking	you can do fs
@wiking	natievely
 lisitsyn	wiking: well it is a good practice to avoid checked exceptions
@besser82	wiking, boost::filesystem is exactly what c++17 will be, same author
 lisitsyn	have seen production code doing checked->unchecked conversion
@wiking	besser82: will be
@wiking	until then
@wiking	there are many things
@wiking	that was boost
@besser82	guys c'mon...  :P
@wiking	that became c++11
@wiking	no come on
@wiking	this has been like this
@wiking	for a long time
@wiking	worked out just fine
@wiking	write that code
@wiking	or ask somebody to write it
@besser82	I have POSIX for that here...
@wiking	good
@wiking	use that
@besser82	ready code, but it won't do on win...  :(
@wiking	good enough
@wiking	nobody case for that
@wiking	if we have a gsoc for win this summer
@wiking	then we do it
@wiking	if not
@wiking	then we will not
@wiking	again aas said there are many more problems with win support for shogun
@wiking	the listing of files and dirs is the least of them all
-!- lordon [~Thunderbi@2a02:810a:13c0:8494:584a:5b07:c89:caa6] has quit [Quit: lordon]
@besser82	okie
 shogun-buildbot	build #330 of CentOS7 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/CentOS7%20-%20libshogun/builds/330
-!- nelson-liu [~nelsonliu@D-69-91-185-195.dhcp4.washington.edu] has quit [Remote host closed the connection]
-!- alaaelnouby [292f264e@gateway/web/freenode/ip.41.47.38.78] has joined #shogun
-!- alaaelnouby [292f264e@gateway/web/freenode/ip.41.47.38.78] has quit [Client Quit]
-!- ghoshbinayak [~AndChat29@117.251.210.78] has joined #shogun
 shogun-buildbot	build #1121 of precise - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/1121  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- ghoshbinayak [~AndChat29@117.251.210.78] has quit [Read error: Connection reset by peer]
-!- travis-ci [~travis-ci@ec2-54-147-13-163.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/112660055
-!- travis-ci [~travis-ci@ec2-54-147-13-163.compute-1.amazonaws.com] has left #shogun []
-!- psitae [a5e6e0df@gateway/web/freenode/ip.165.230.224.223] has joined #shogun
--- Log closed Tue Mar 01 00:00:18 2016
