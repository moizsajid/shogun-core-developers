--- Log opened Sun Mar 17 00:00:13 2013
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- heiko [~heiko@5ac1f59f.bb.sky.com] has joined #shogun
-!- heiko [~heiko@5ac1f59f.bb.sky.com] has left #shogun []
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Sergey Lisitsyn :master * ce73ba2 / src/shogun/lib/tapkee/ (19 files): https://github.com/shogun-toolbox/shogun/commit/ce73ba244b96ffdf01f132184f53c831df8197ff
 shogun-notifier-	shogun: Last update of tapkee before release
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: - Much more doc
 shogun-notifier-	shogun: - Various code improvements (better naming, less warnings)
-!- heiko [~heiko@5ac1f59f.bb.sky.com] has joined #shogun
-!- heiko [~heiko@5ac1f59f.bb.sky.com] has left #shogun []
 shogun-buildbot_	build #358 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/358  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- votjak [~votjak@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has joined #shogun
@sonney2k	blackburn, make prepare-release ran through here!
@sonney2k	blackburn, so we could release - but question is if we don't better fix the label bug in static interfaces?
@sonney2k	always returning real valued outputs is important
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 731cbde / src/ChangeLog: https://github.com/shogun-toolbox/shogun/commit/731cbde006d6cf9ee7f8d6c188b211de26a3d986
 shogun-notifier-	shogun: updated changelog
 shogun-notifier-	shogun: Soeren Sonnenburg :master * b97829a / doc/pages/ (4 files): https://github.com/shogun-toolbox/shogun/commit/b97829a764ec077b07169939382bc9ae30e301d4
 shogun-notifier-	shogun: updated reference documentation
 shogun-notifier-	shogun: Soeren Sonnenburg :master * cc2410f / src/shogun/ui/SGInterface.cpp: https://github.com/shogun-toolbox/shogun/commit/cc2410f56db398e71e34ffd651645682fc9905b9
 shogun-notifier-	shogun: support various label types in static interface
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- sidi_ [~sidi@14.139.122.114] has joined #shogun
-!- zxtx [~zv@75-59-238-10.lightspeed.sntcca.sbcglobal.net] has joined #shogun
 shogun-buildbot_	build #815 of deb2 - static_interfaces is complete: Failure [failed test octave_static]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/815  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 shogun-buildbot_	build #816 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/816
 shogun-buildbot_	build #359 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/359  blamelist: Soeren Sonnenburg <sonne@debian.org>
 blackburn	sonney2k: I finally managed to wake up
 blackburn	sonney2k: so we can release?
@sonney2k	blackburn, I think so
@sonney2k	blackburn, and good morning russia :)
 blackburn	sonney2k: heh I was having fun with cmake whole night so it is not morning already
* sonney2k runs make release
 blackburn	okay I've got to write a mail
 blackburn	sonney2k: is it late to update news?
@sonney2k	make data-release fails :/
@sonney2k	blackburn, ohh what do you want to do?
 blackburn	sonney2k: I forgot to mention that last bug
 blackburn	sonney2k: ah it is already here hah
 blackburn	sonney2k: I tried to fix that, but failed to do that right
@sonney2k	blackburn, oh #*$#YH!
 blackburn	sonney2k: what's up?
@sonney2k	we forgot to increase data counter
@sonney2k	in NEWS
 blackburn	ahm
@sonney2k	blackburn, so add whatever you need to NEWS
@sonney2k	and change data to 0.5
 blackburn	sonney2k: what about parameter version?
@sonney2k	I would say doesn't matter
@sonney2k	we screwed that anyways
@sonney2k	ohh and please mention that bug I hopefully fixed
@sonney2k	about sg('lclassify') returning -1/+1 labels
 blackburn	got it
 shogun-buildbot_	build #360 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/360  blamelist: Soeren Sonnenburg <sonne@debian.org>
 blackburn	sonney2k: done
 shogun-notifier-	shogun: Sergey Lisitsyn :master * a0e0d95 / src/NEWS: https://github.com/shogun-toolbox/shogun/commit/a0e0d95f03d03528e89e5b56bc7767846c9a064e
 shogun-notifier-	shogun: Updated NEWS
@sonney2k	blackburn, SGString is not based on SGReferencedData
@sonney2k	news is still telling this
 blackburn	sonney2k: yes
 blackburn	ahhhh
 blackburn	oops
 blackburn	sonney2k: string list is though
@sonney2k	yeah
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 89d073b / src/NEWS: https://github.com/shogun-toolbox/shogun/commit/89d073bcdcbb14cbec897f632d6585969ed3a467
 shogun-notifier-	shogun: SGString is not based on SGReferencedData
@sonney2k	blackburn, ohh and the date is 03-17 :)
 blackburn	ahah
@sonney2k	blackburn, do you fix it?
 blackburn	sonney2k: yes
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 9702994 / src/NEWS: https://github.com/shogun-toolbox/shogun/commit/970299480069e165da69e6dae5a32e0aad7ae116
@sonney2k	or shall I
 shogun-notifier-	shogun: Fixed date of release
@sonney2k	ok
* sonney2k runs make-prepare-release again
@sonney2k	blackburn, look at this... http://shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/360/steps/test/logs/stdio
@sonney2k	something weird is going on
 blackburn	sonney2k: I am quite sure it is a heisenbug
 blackburn	sonney2k: all libshogun examples pass on my machine - so we play with probabilities haha
@sonney2k	blackburn, it is real on this machine - fails for some time now...
@sonney2k	no idea tough
@sonney2k	it works everywhere else
@sonney2k	blackburn, anyway prepare the announcement email in an hour so so we should be ready
 blackburn	sonney2k: alright
@sonney2k	blackburn, argh _ don't really know how to properly udpate the website
 blackburn	sonney2k: what do you mean?
@sonney2k	previously make release did fully take care of this
@sonney2k	make update-website
 blackburn	ahh
 blackburn	heh
@sonney2k	but now NEWS is not automatically parsed :/
-!- heiko [~heiko@5ac1f590.bb.sky.com] has joined #shogun
@sonney2k	blackburn, I need n4nd0 I guess or bern4rd
 blackburn	sonney2k: asked him to join #shogun
@sonney2k	heiko, soon soon
 heiko	sonney2k: release? :)
@sonney2k	heiko, yeah - we would have one if NEWS was upto-date
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 heiko	sonney2k:  blackburn fixed another bug yesterday, that could go in there
@sonney2k	heiko, already in
@sonney2k	heiko, release date was wrong too :)
@sonney2k	n4nd0, I am lost again with the website
 heiko	sonney2k: haha :)
@sonney2k	n4nd0, we need to change it to 2.1 and NEWS too
 n4nd0	sonney2k: what?
 n4nd0	was does it imply to change it to 2.1 and what do you want to change of the NEWS?
@sonney2k	n4nd0, we have that new version available and 2.0 on the website
@sonney2k	I am trying to figure out how to cahgne it to 2.1
@sonney2k	the news file I figured out by now
@sonney2k	n4nd0, sigh it is an image!
 n4nd0	sonney2k: like everything in the webpage :D
@sonney2k	n4nd0, except the text :D
@sonney2k	n4nd0, now I would wish I knew the font
@sonney2k	blackburn, let us introduce version subtiles
 blackburn	sonney2k: subtiles?
@sonney2k	like 'mighty iceberg'
 blackburn	hah
 blackburn	+1
@sonney2k	any suggestions?
 blackburn	sonney2k: borsch
-!- heiko [~heiko@5ac1f590.bb.sky.com] has quit [Quit: Leaving.]
 blackburn	sonney2k: vodka
@sonney2k	blackburn, I don't know if "In vodka we trust" will gain us users :D
@sonney2k	wiking, n4nd0, what do you guys drink over there
@sonney2k	blackburn, "Powered by Vodka, Beer and Mate"
 blackburn	sonney2k: girls and vodka
 blackburn	sonney2k: if I didn't make any mistake there were ~8900 commits since last release
 blackburn	I am afraid I did
 blackburn	:D
 blackburn	yeha 9705 totally
 blackburn	I got wrong
 blackburn	805
@sonney2k	blackburn, not good
-!- sidi_ [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
@sonney2k	too much between releases
 blackburn	sonney2k: not good what?
 blackburn	ah
@sonney2k	lets release more often
 blackburn	sonney2k: I did count that to impress people
 blackburn	:D
 wiking	sonney2k: palinka
 wiking	sonney2k: mmm do we have tag?
 wiking	blackburn: which one is the release commit?
 blackburn	wiking: palyonka in russian is a slang name for pirate vodka made of some shit like acetone
@sonney2k	blackburn, wiking n4nd0 - current subtitle is (for real!) Powered by Vodka, Beer and Mate.
@sonney2k	I could still exchange beer (as I dont' drink any)
 blackburn	wiking: I don't know, put any commit made on 1st of sept
 blackburn	:D
 wiking	:>>
 wiking	and 2.1?
 blackburn	wiking: I hope 2.1 will be tagged now
 wiking	oookeey
 wiking	lets see
 wiking	when is it coming? :)
* sonney2k is uploading the release
 wiking	woohooo
 wiking	ok so then we have a commit version already
@sonney2k	(make update-webpage)
 wiking	sonney2k: can u copy-paste here
@sonney2k	$ git branch
@sonney2k	  master
@sonney2k	* shogun_2.1
 wiking	is that pushed?
 wiking	seems not yet
@sonney2k	git tag | grep shogun_2.
@sonney2k	shogun_2.1.0
@sonney2k	wiking, not yet
 wiking	ok so shall we create a dev branch?
@sonney2k	uploading first
 wiking	called dev or development
@sonney2k	yes dev is long enough
 wiking	cool
 wiking	let's go with that then
 wiking	so from now on all the stuff go into dev
 wiking	and keep master as stable..?
 wiking	or the other way round
 wiking	keep master as development branch
 wiking	and create a stable?
@sonney2k	blackburn, do you recall that email from ?#?$# on the mailinglist about proper git development?
 wiking	anyhow the default branch on github should be the stable branch
 blackburn	sonney2k: yes
@sonney2k	he suggested a scheme that we figured woudl be very useful
@sonney2k	I cannot find it
 blackburn	hmm
-!- sidi_ [~sidi@14.139.122.114] has joined #shogun
@sonney2k	(as usual)
 blackburn	sonney2k: he was mentioned in news I think
 blackburn	sonney2k: evan shelhamer
 wiking	https://github.com/diaspora/diaspora/wiki/Git-Workflow
 wiking	it's with git flow
 wiking	pretty handy tool
 wiking	we could start using that
 shogun-buildbot_	build #361 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/361  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 wiking	ok dev branch is there
 wiking	i'll try start using git-flow
 blackburn	sonney2k: writing mails is pain sometimes haha
@sonney2k	blackburn, releases etc should be uploaded
@sonney2k	doc is still uploading
 blackburn	sonney2k: mail is not yet ready anyway
@sonney2k	http://shogun-toolbox.org/
@sonney2k	doc is still uploading though
 wiking	hehe: https://github.com/vigsterkr/shogun/tree/feature/ChangeReleaseHash
 wiking	with git flow
 wiking	but afaik in this case PR-ing our code is useless
 wiking	i mean if we choose to go with git-flow
 wiking	then we should directly work on shogun.git
 wiking	because in that case PR is an unecessary overhead
 wiking	i mean this for the developers who has write access to the shogun.git
 wiking	as fetching around from other developers' repos features
 wiking	is really just a painful overhead
 blackburn	wiking: I do believe PRs for core devs is overhead
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 6ce4431 / src/ChangeLog: https://github.com/shogun-toolbox/shogun/commit/6ce44315fdc21bfee6876d006201530c3c28d885
 shogun-notifier-	shogun: updated changelog
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 1b1130d / doc/Doxyfile: https://github.com/shogun-toolbox/shogun/commit/1b1130d2ca8f48e97737caa405ede519abe70253
 shogun-notifier-	shogun: Preparing for new Release shogun_2.1.0
 shogun-notifier-	shogun: Soeren Sonnenburg :master * e6138dd / src/ChangeLog: https://github.com/shogun-toolbox/shogun/commit/e6138ddfb06ea1ad193a2a3c0f941a7bfadff26b
 shogun-notifier-	shogun: Preparing for new Release shogun_2.1.0
 shogun-notifier-	shogun: Soeren Sonnenburg :shogun_2.1 * 96e8031 / src/shogun/lib/versionstring.h: https://github.com/shogun-toolbox/shogun/commit/96e803197bed1d1253060e4050f7e4791e302315
 shogun-notifier-	shogun: Tagging shogun_2.1.0 release
 shogun-notifier-	shogun: Soeren Sonnenburg :shogun_2.1 * 463c42b / doc/ (5 files): https://github.com/shogun-toolbox/shogun/commit/463c42b49e9b35e274379217b85b0e3faef283f6
 shogun-notifier-	shogun: update example list
@sonney2k	blackburn, any update on the release email?
 blackburn	sonney2k: just a few minutes
 blackburn	sonney2k: want to read it before?
@sonney2k	blackburn, send it
 wiking	email sent
 wiking	btw: sorry for my shitty explanation, but i'm a bit hangover :P
 blackburn	wiking: palinka?
 blackburn	sonney2k: n4nd0: wiking: see the mail
@sonney2k	http://mloss.org/software/
@sonney2k	announcement is on mloss.org
@sonney2k	n4nd0, please twitter about the release!
 blackburn	sonney2k: I'll do
 wiking	blackburn: yes :)
 wiking	blackburn: where's the email
 blackburn	wiking: sent minute ago
 wiking	on the list?
 blackburn	wiking: I am afraid it was send by russian post
@sonney2k	blackburn, didn't see it
 blackburn	haha alright lets wait
@sonney2k	blackburn, did you sent it out?
@sonney2k	d
 blackburn	sonney2k: yes
@sonney2k	blackburn, to which address?
 blackburn	sonney2k: I just forwarded it to you
 blackburn	sonney2k: did you receive?
 blackburn	sonney2k: may be something is wrong with @shogun-toolbox.org address
@sonney2k	blackburn, yes arrived
@sonney2k	oscar winning email :D
 blackburn	sonney2k: a glitch of mailing list?
 n4nd0	sonney2k: will tweet and put something in g+
 n4nd0	when it appears in the webpage
-!- votjak [~votjak@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun []
 blackburn	n4nd0: ok let you do it :)
 blackburn	sonney2k: I am afraid - what should I do, re-send?
 blackburn	:D
@sonney2k	blackburn, relax and wait?
@sonney2k	blackburn, I send some news blob to freshmeat too
 blackburn	sonney2k: ok lets wait then
@sonney2k	posted to G+
@sonney2k	posted to blog and thus debian planet
 shogun-buildbot_	build #362 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/362  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 wiking	sonney2k: if we start using dev branch, shouldn't we switch buildbots to use that?
@sonney2k	wiking, we need to discuss how we do things
 blackburn	sonney2k: I could send it again may be
@sonney2k	maybe this evening?
 wiking	kk
 wiking	any idea when heiko will be around again?
@sonney2k	too bad he left
@sonney2k	I figured some issues in the relese Makefile
@sonney2k	where how do I fix this?
@sonney2k	wiking, btw is it properly tagged now?
 blackburn	sonney2k: https://github.com/shogun-toolbox/shogun/tags
 blackburn	sonney2k: https://mloss.org/software/viewstats/372/ can you view that?
 wiking	sonney2k: seems so
@sonney2k	blackburn, yes why?
 blackburn	sonney2k: strange peak :D
 blackburn	sonney2k: still don't understand what happened
 blackburn	sonney2k: its tapkee downloads
@sonney2k	blackburn, is that tapkee?
@sonney2k	ahh
 blackburn	err views
@sonney2k	same date as http://mloss.org/software/viewstats/2/ ?
@sonney2k	no
@sonney2k	whatever
 blackburn	sonney2k: near
@sonney2k	blackburn, wiking n4nd0 - so now we need to a) decide about future development process (maybe even with irc meetings from time to time!) b) workshop announcement / advertisement  c) gsoc planning
@sonney2k	application
 blackburn	sonney2k: next week is to *finish* proposal and ideas for me
 blackburn	sonney2k: I'll let you all know how can you help
 blackburn	where the heck the mail is
 shogun-buildbot_	build #363 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/363  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- sidi_ [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- sidi_ [~sidi@14.139.122.114] has joined #shogun
-!- heiko [~heiko@5ac1f590.bb.sky.com] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 264 seconds]
 heiko	sonney2k: blackburn, wiking, just saw the update! :)
 blackburn	heiko: we are still waiting the mail to come
 heiko	blackburn: who writes it? S?ren?
 blackburn	heiko: I did and sent it..
 blackburn	ohhh
 blackburn	it arrived!
 blackburn	:D
 heiko	ah
 heiko	!
 heiko	seeing it :)
 blackburn	http://permalink.gmane.org/gmane.comp.ai.machine-learning.shogun/3325
 heiko	blackburn: yeah! :) well done!
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 wiking	heiko: yo
 wiking	heiko: check gitflow
 wiking	heiko: and the mail i wrote about it
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has quit [Ping timeout: 252 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	blackburn: nice work with the mail!
 blackburn	n4nd0: heh thanks
 n4nd0	Shogun 2.1 powered by vodka, beer and mate haha
 blackburn	n4nd0: it took a few hours for mail to arrive
 wiking	heheeh yeah blackburn thnx for the mail! :)
 blackburn	wiking: I am still failing to use clang analyzer haha
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: Reconnecting]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 blackburn	wiking: that's what I always get:  scan-build: Removing directory '/tmp/scan-build-2013-03-17-1' because it contains no reports.
-!- heiko [~heiko@5ac1f590.bb.sky.com] has quit [Quit: Leaving.]
-!- sidi [~sidi@14.139.122.114] has joined #shogun
-!- sidi_ [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- kishan [1883ef0b@gateway/web/freenode/ip.24.131.239.11] has joined #shogun
-!- heiko1 [~heiko@5ac1f590.bb.sky.com] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 246 seconds]
 heiko1	wiking, I read quickly and will do in more detail
 heiko1	wiking, my main point is to have a sophisticated dev-process of some form (eg the one you proposed)
 heiko1	and more importantly, hake tests madatory, and check whether tests pass before merging
 heiko1	so that it is not possible to commit code which breaks tests/examples
 heiko1	(at least on same basic level - not all configurations)
 heiko1	and another thing I would like to have is auto-rejects
 blackburn	heiko1: autorejects of?
 heiko1	these should happen when tests fail /leak, warnings, missing documentation, incomplete examples, 0% test coverage
 heiko1	blackburn:  of pull requests
 heiko1	blackburn: so that we can only merge if things work
 blackburn	heiko1: travis already does that
 heiko1	there should be a hotfix branch to avoid this in emergencies, but in general it should not be possible to merge code which doesnt work
 heiko1	blackburn: even the core-devs should not be allowed to merge
 heiko1	blackburn:  currently, we only get the info, but still can press merge
 heiko1	which is what we do
 heiko1	should not be possible
 heiko1	this way we force ourselves to do proper patches
 blackburn	you must have been in army :D
 heiko1	blackburn: no, just talked to some friends who work in software engineering
 heiko1	 :)
 heiko1	if you merge a patch in a company and it doesnt work, you basically get killed :)
 blackburn	heiko1: oh really? :D
 heiko1	but also increases discipline (warnings/documentation) etc
 heiko1	one can also do other cool things with such a process
 blackburn	heiko1: I pulled in a crazy number of breakers during doing my job actually
 blackburn	that could be true for some companies but in general it is not such disciplined
 heiko1	blackburn:  I know
 heiko1	ideally
 heiko1	defining the ideal here
 heiko1	blackburn:  one could to some other cool things with that
 blackburn	heiko1: such discipline requirements should have a reason
 heiko1	eg only accept examples if they come with a description and produce a screenshot
 heiko1	blackburn: well I can argue
 heiko1	so what happens before a release=?
 heiko1	big bug hunt
 heiko1	very annoying
 heiko1	how are warnings fixed?
 heiko1	by empty doxygen comments
 heiko1	example descriptions? never done
 blackburn	heiko1: that's true but there should be an explanation
 heiko1	but we have to do these things *anyway*
 heiko1	so why not immediately
 heiko1	its actually less work if you do it when you write the code
 heiko1	same with tests
@sonney2k	heiko1, blackburn, wiking - so whats going on?
 blackburn	sonney2k: heiko1 wants to walk around with a rifle :D
 heiko1	sonney2k:  we are raving about the release :)
 blackburn	and shoot ya leg!
 heiko1	blackburn: its not more work, we have to remove warnings anyway
 heiko1	and its so annoying to do this before release
 blackburn	heiko1: it is a question of motivation (for me too)
 heiko1	indeed
 blackburn	heiko1: that's a great motivation that is needed to have such restricted thing
 heiko1	its just a matter of getting used to it
 heiko1	for me, it costs way more motivation to do all these pain in the a** things
 heiko1	I just want to minimise the time spent on stupid things
 blackburn	heiko1: I am still lost with what do we do
@sonney2k	heiko1, blackburn alright lets discuss this
 blackburn	sonney2k: discussion time?
@sonney2k	heiko1, the biggest issue I see is that people don'tlike to write doxygen comments
 heiko1	sonney2k: true
@sonney2k	look at wiking - his CCSOSVM is still not well documented
@sonney2k	and we are admittedly no better
 blackburn	look at me, my code is not documented at all :D
 heiko1	sonney2k: what is the point of writing code if you dont tell people how to use it?
@sonney2k	blackburn, documenting code is not what I meant
 heiko1	sonney2k: agreed
@sonney2k	I meant API doc
 heiko1	writing documentation is annoying
 heiko1	thats why we should have a process that ensures it is done anyway
 heiko1	sonney2k: but documentation is not my main concern in fact
@sonney2k	yes true but heiko1 we cannot do it with a black / white approach
 blackburn	heiko1: the only way i see is metrics computation
@sonney2k	we have to find something we can all somehow live with
 heiko1	sonney2k: agreed, but I totally dont like this postponing forever
 blackburn	heiko1: we should know weak points
 heiko1	sonney2k: my biggest point actually is the fact that we loose code
 blackburn	we don't know them now
@sonney2k	heiko1, well one way would be to turn on warning -> error
 heiko1	streaming for example
 heiko1	json another one
 blackburn	sonney2k: warnings are rather useless
@sonney2k	we all the time fix warnings before a release be it doxygen or in code
@sonney2k	blackburn, they helped me a lot
 heiko1	sonney2k, blackburn thing is we have to fix this stuff anyway
@sonney2k	heiko1, yes sure I agree ... but if we had integration tests turned on from 1.1 on we would have catched this
 heiko1	sonney2k:  yes
 heiko1	so make it madatory
@sonney2k	so my take on this is to *gradually* improve the situation
 heiko1	then these things dont happen
@sonney2k	i.e. step 1) make integration test pass mandatory
 heiko1	sonney2k: yeah of course, as said, I describe the "ideal situation"
 heiko1	sonney2k: good idea.
 blackburn	sonney2k: heiko1: I still want to define what do we develop
@sonney2k	2) force people to *repair* the tests
@sonney2k	heiko1, ^2 is what we also sometimes suck with
 heiko1	how?
@sonney2k	we had tests failing for 1 week or so
 heiko1	sonney2k: this is another things which *has* to be done, so why not forbid to merge without passing tests?
@sonney2k	and heiko1 there is no way to force people to do it before submitting - otherwise you would have to compile *all* interfaces
@sonney2k	and need all shogun deps & compile time is like 1hr
 heiko1	sonney2k: good point, so lets just do it for libshogun
 heiko1	no interfaces
 heiko1	main thing is the unit-tests should pass
@sonney2k	heiko1, libshogun is already taken care of by travis
 heiko1	sonney2k: yeah, but Id like to change the ability to merge
@sonney2k	heiko1, but we usually don't struggle with libshogun stuff but the more involved code we have in all the *modular interfaces
@sonney2k	 examples
 heiko1	sonney2k: this will change
 heiko1	unit tests are way more important for us
 heiko1	examples catch errors on the very last bit of the code
@sonney2k	heiko1, ok I don't mind having libshogun unit tests to pass as a precondition to git commit
 heiko1	this is not sufficient for fixing things
 heiko1	unit tests (which should be madatory for new things) will  be able to tell you exactly what fails
 heiko1	and I agree, building everything takes too long, so yeah this sounds good
@sonney2k	heiko1, so we could add a git pre-commit hook like here http://mark-story.com/posts/view/using-git-commit-hooks-to-prevent-stupid-mistakes
 heiko1	let me have a look
@sonney2k	heiko1, so lets implement these 2 things for now - that should already help *a lot*
 heiko1	sonney2k:  yes
 heiko1	sonney2k:  I would also like to have a rejection if one has 0% unit-test coverage on code one commits
 heiko1	this forces at least to think about one test
 heiko1	we dont need a vast coverage
@sonney2k	heiko1, no idea how to do this
 heiko1	sonney2k: me neither, more talking about the idea
@sonney2k	computing code coverage I mean
 heiko1	sonney2k:  its probably possible to compute this, I have seen it in the gnunet project
 heiko1	they use buildbot too and have this, I could ask them
 heiko1	sonney2k:  what do you think of the general idea?
 blackburn	heiko1: I am not sure that would work for us
 heiko1	blackburn:  what exactly?
 blackburn	heiko1: computing test coverage on commit..
 heiko1	blackburn: you mean techinally?
 blackburn	heiko1: yeah
@sonney2k	heiko1, yeah why not ask them
@sonney2k	anyway I think this is good enough for the start: the other big change would be the way we develop
 heiko1	sonney2k: yeah gradually change things
@sonney2k	and I don't really know how we can do this
@sonney2k	if we introduce a dev and feature branches etc
@sonney2k	what does the buildbot build
-!- kishan [1883ef0b@gateway/web/freenode/ip.24.131.239.11] has quit [Ping timeout: 245 seconds]
 heiko1	sonney2k, do we really need the feature branches?
 heiko1	since small number of developers
@sonney2k	heiko1, sometimes I would think so - e.g. some big underlying change like we had with SGVector
 blackburn	heiko1: would be better if you develop not through PRs but your own branch
 blackburn	(I think so)
 heiko1	ok agreed
@sonney2k	heiko1, blackburn - what is the minimal thing we want?
@sonney2k	a dev branch and a stable master?
 heiko1	sonney2k:  yes
 heiko1	they should have slightly different tests I guess
 heiko1	stable should be compiled with warnings as errors for example
 blackburn	sonney2k: master is stable, and feature branches
 heiko1	blackburn:  general dev branch would be good
 blackburn	okay
 heiko1	master should be "production ready"
 blackburn	master (stable) development and feature branches
 heiko1	so our current release is master
 blackburn	I wish we could allow commits to specific branches
 blackburn	like to feature branch but not master
@sonney2k	just FYI - if we create a release we do create a release branch
@sonney2k	and can put in bugfixes in there
 heiko1	sonney2k:  good idea
@sonney2k	there is also one particular issue
@sonney2k	heiko1, that already is like this!
@sonney2k	we autogenerate the lib/versionstring.h file
 heiko1	sonney2k:  I see
@sonney2k	that file is generated on configure/make
@sonney2k	and contains the current git version
 heiko1	sonney2k: ok understoof
@sonney2k	we use this git version when people send us bug reports
 heiko1	what would be really good if we had a stable branch that is always in the condition that we could release
@sonney2k	we cannot generate this file in a release shogun version
 heiko1	with just one click
@sonney2k	heiko1, it cannot be 1 click
@sonney2k	heiko1, the release script is already very simple
 heiko1	sonney2k: not to be taken literal
 heiko1	sonney2k: I mean more the code is in the condition to release
@sonney2k	heiko1, look at the toplevel makefile
 heiko1	we dont have to spend days in fixing things like removing warnings
@sonney2k	# * To make a release (and tag it) run
@sonney2k	#
@sonney2k	#       make prepare-release
@sonney2k	#       make git-tag-release
@sonney2k	#       make release
@sonney2k	#       make data-release
@sonney2k	#       make update-webpage
 heiko1	sonney2k: ok cool didnt know that
 blackburn	ha, mikio twitted about shogun
@sonney2k	but then you will need to a) send out announcement to mailinglist, g+, twitter, mloss.org, freshmeat, my blog
@sonney2k	blackburn, link?
 blackburn	https://twitter.com/mikiobraun/status/313371488839405568 sonney2k
 heiko1	sonney2k: will write a tweet later today
 heiko1	sonney2k: ok these are non-automatic things
 blackburn	heiko1: twitt is already here if you mean @ShogunToolbox
@sonney2k	heiko1, and the biggest concern is make prepare-release to actually go through
@sonney2k	heiko1, yeah n4nd0 did it :)
 heiko1	cool!
 heiko1	good
@sonney2k	heiko1, make prepare-release can take ~1 hour
@sonney2k	it compiles all interfaces / updates doc / runs all examples & tests
@sonney2k	the rest is fast but can take 30 mins too just to upload data etc
 heiko1	ok, so this is already there then
 heiko1	question, how to make sure that we dont have this huge pile of work before release?
@sonney2k	heiko1, more or less ... there were some bugs in the scripts I would like to fix
@sonney2k	heiko1, release more often!
@sonney2k	heiko1, we have 6-12 months between releases
@sonney2k	no wonder that lots of stuff breaks
 heiko1	how do releases prevent things from breaking?
@sonney2k	if we release every 1-2 months not so many features enter
@sonney2k	-> less testing needed
@sonney2k	-> faster release
 heiko1	sonney2k:  we dont do testing currently
@sonney2k	heiko1, impossible even integration / unit tests won't help
@sonney2k	heiko1, I do
 heiko1	sonney2k: I mean we have no systematic way of doing it
@sonney2k	heiko1, I run some example code and check if things are still ok
@sonney2k	heiko1, is there any?
 blackburn	heiko1: you are a pure german ;)
 heiko1	in my eyes this problem can only be solved if writing unit/integration is part of the development process
 heiko1	we currently have no mechanism to ensure that things work
 heiko1	we only detect if things crash
 heiko1	so catching problems earlier I think would help a lot
 heiko1	if one realised that an example crashes its usually too late
 heiko1	take the GP stuff
 heiko1	was implemented - worked fine
@sonney2k	heiko1, let me tell you that 100% unit / integration test coverage won't help you
@sonney2k	(from experience)
 heiko1	then was extended  - which broke the first working part
 heiko1	but no detection
 heiko1	later on detected in example by pure chance
 heiko1	sonney2k:  I know
@sonney2k	you change sth and voila your cool unit/integration test exactly did not test for that borderline thing
 heiko1	sonney2k: but *having* tests helps
@sonney2k	happens to me all the time
@sonney2k	heiko1, yes sure
 heiko1	sonney2k: you are right, I am not saying this solves everything
 heiko1	but my experience is that almost all bugs I fix can be catched by unit testing
 heiko1	the multiclass SVm bug yesterday another example
 heiko1	if there was a test that actually *ran* the code once, we would not have had this bug
 blackburn	I tell that each minute but - do our users care so much about bugs? that's the question
 blackburn	if we are striving for quality - what for?
 heiko1	blackburn:  if you install shogun, and try an example, and all you get is sefault, you instantly delete
@sonney2k	heiko1, but we have to face reality too - if we don't want any future contributions we require 100% unit tests & 100% dyxgen api doc
@sonney2k	we need some tradeoff
 heiko1	not 100%
@sonney2k	fun <-> stability
 heiko1	but not zero %
 heiko1	thats my point
@sonney2k	heiko1, yes sure!
 heiko1	at least think of *some* things to test
 heiko1	that was my point, forbid 0% coverage
-!- sidi [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
 heiko1	not aim for 100
 heiko1	we dont need that
 heiko1	but at least *think* of it
 heiko1	which we currently dont do
 heiko1	especially important for the gsoc project to be suistainable
 blackburn	heiko1: then some verbal pushes is what we can do
@sonney2k	blackburn, heiko1 - the most important thing is to nicely respond to bug reports on the mailing list - and I mean not like - ahh don't use that interface or I look at this when I find some time in a few weeks
@sonney2k	just fix the bug and notify the user that it is fixed
@sonney2k	heiko1, yeah but it was our fault not requiring unit tests back then
@sonney2k	heiko1, but we were in no shape to have that a few years back
@sonney2k	heiko1, situation of shogun gradually improved over years
 blackburn	sonney2k: yeah we weren't that wise we are now
 blackburn	I feel ok about that
 heiko1	my gf just started a fire in the kitchen
@sonney2k	heiko1, look - we had no unit tests not build bots no integration test no doc no nothing back then
 heiko1	sonney2k: yes, we are on a good way
 blackburn	heiko1: yikes
@sonney2k	heiko1, hand her some fire extinguisher
 heiko1	*done*
@sonney2k	then continue chatting
 heiko1	actually the l?schdecke
@sonney2k	hehe
 heiko1	haha :)
 blackburn	oh these german words make me crazy
@sonney2k	we just have pretty well buildbot infrastructure since last gsoc
@sonney2k	this gsoc we will have integration / unit tests
 heiko1	sonney2k: just want to push this test thing, I think we have to make ourselves change our habits
@sonney2k	and we will require students to write both or fail them
 heiko1	sonney2k: yes thats really good
 heiko1	exactly thats my goal :)
@sonney2k	but we need to tell them upfront!
 heiko1	sonney2k: yes, that was the point of the guidelines
@sonney2k	heiko1, we have README.developer in src
@sonney2k	lets add the part about unit/integration tests
 heiko1	good, lets merge it
@sonney2k	not all of it
 heiko1	maybe after some reviewing
@sonney2k	yesh
@sonney2k	yeah
 heiko1	sonney2k: what do you think of making examples fail if they do not return things or do not create a screenshot?
 blackburn	sonney2k: heiko1: a good thing would be - all PRs should be 'ok' from all committers
@sonney2k	we are not there yet
 heiko1	blackburn: that would be good, but too much work
 blackburn	heiko1: why?
@sonney2k	blackburn, everyone wouldhave to do code reviews -> impossible
 heiko1	rahter make the system do as much as possible
 blackburn	sonney2k: no I mean we three
@sonney2k	that doesn't scale
 blackburn	(four)
@sonney2k	no
@sonney2k	one of us
 blackburn	I don't like that - there should be a few reviewers
@sonney2k	and if sth breaks we punish the merging guy :D
 heiko1	student patches should not be merged if anything is missing :)
 heiko1	guys, as you probably already thought, diner is ready soon here,
 heiko1	its roast :)
 heiko1	I gotta buy some things and then eat.
 heiko1	so sorry, gotta go
 blackburn	heh alright
@sonney2k	heiko1, blackburn btw are you ok with the slogan on the website?
 blackburn	sonney2k: hah sure
 heiko1	sonney2k: sure :)
@sonney2k	hehe
 blackburn	sonney2k: I like crazy things - being serious is a fault
 heiko1	sonney2k: you should add coffee and almonds for my part :)
 heiko1	bye!
-!- heiko1 [~heiko@5ac1f590.bb.sky.com] has quit [Quit: Leaving.]
@sonney2k	heiko1, chocolate here
@sonney2k	bye
@sonney2k	blackburn, so I guess we agree on the unit test stuff but how do we do it with the git branches etc?
 blackburn	sonney2k: good q
@sonney2k	blackburn, it is really pressing for me to fix some erros in the release scripts while I still remember what they were
@sonney2k	I am totally clueless what the buildbot should then check
 blackburn	sonney2k: both..
 blackburn	:D
 blackburn	development and stable
 blackburn	sonney2k: need advice
@sonney2k	blackburn, and feature branches?
 blackburn	https://dl.dropbox.com/u/10139213/SS/lisitsyn12a.pdf sonney2k plots, page 3
 blackburn	sonney2k: no, feature branches should not be builded I think
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
@sonney2k	blackburn, IIRC there is subfix or sth where you can have >1 fig
 blackburn	sonney2k: I don't get it - what is it for?
@sonney2k	to have the figures name a) b) c)
 blackburn	sonney2k: ahh
 blackburn	sonney2k: but figures? are they ok?
@sonney2k	blackburn, btw I like evan shelhamers suggestion
@sonney2k	blackburn, yes
@sonney2k	to create a release branch to stabilize things
 blackburn	sonney2k: I don't know what to do with faces though - they are not visible, too small..
@sonney2k	a long time before we release
 blackburn	sonney2k: yes that's a good way
@sonney2k	so we could even do sth like this:
 blackburn	sonney2k: kernel do the same?
@sonney2k	release every month
@sonney2k	with a delay of one month
@sonney2k	we just create a shogun_2.2 branch in one month
@sonney2k	then fix things for 1 month and release
@sonney2k	and at the same time develop in master
@sonney2k	dev branch
 blackburn	sonney2k: looks good but don't know how well in practice
@sonney2k	blackburn, what I dont' understand though is how we do it all with github. I mean w/ github we have these pull requests
@sonney2k	which are branches itself right?
@sonney2k	so these are feature branches?
@sonney2k	we intend to merge to the dev branch - correct?
 blackburn	sonney2k: it is ok to PR to some branch
 blackburn	sonney2k: why not to feature branch?
@sonney2k	blackburn, don't you have to create a branch to even do a PR?
@sonney2k	so isn't that then the same like a feature branch?
 blackburn	sonney2k: well you can do a PR from a master
 blackburn	sonney2k: selective rights would be awesome
@sonney2k	blackburn, you mean from your fork's master right?
 blackburn	sonney2k: yes
@sonney2k	blackburn, yeah well ok but that kind of is a feature branch ...
@sonney2k	but only a local one
 blackburn	sonney2k: yes
@sonney2k	we probably don't need shared feature branches (at least not often)
 blackburn	sonney2k: it is not really relevant for us actually
@sonney2k	so all that we want to change is have a dev branch & a master branch
 blackburn	sonney2k: yeah I think dev+master would be enough for now
@sonney2k	the only problem I have is that we cannot git tag the released version in the master branch
@sonney2k	because we include lib/versionstring.h in the release
@sonney2k	which we *never* put in the git repo in master/dev
@sonney2k	blackburn, btw our shogun2.1 announcement has 14 +1's on g+ & 3 reshares
 wiking	yoyo
 blackburn	sonney2k: quite cool
@sonney2k	blackburn, wiking so what do we do? we cannot git tag in dev/master but have to do it in a release branch
@sonney2k	can we live with that?
 blackburn	sonney2k: I don't know
@sonney2k	blackburn, anyway no matter what - let me create a dev branch and then I can commit my fixes there
 blackburn	sonney2k: sure
@sonney2k	blackburn, and you do the gsoc stuff otherwise we won't make it
 blackburn	sonney2k: yeah I'll spend some time tonight on that
 blackburn	sonney2k: so I should not expect real help from mentors, right?
 blackburn	sonney2k: I asked cheng to write some descriptions but no answer at all :D
@sonney2k	blackburn, no you should get some push them as much as you can but prepare at least 1 example to give them something they can base their stuff on!
 blackburn	sonney2k: I gave them 2012 ideas
@sonney2k	blackburn, I see you created a dev branch on github
 blackburn	sonney2k: I?
@sonney2k	blackburn, how do I get that pulled?
 blackburn	ahh
@sonney2k	I don't see it locally not with git branch -a (as remote branch)
 blackburn	sonney2k: I don't get the question
 blackburn	sonney2k: did you create your branch?
@sonney2k	blackburn, no
 blackburn	do that
@sonney2k	what?
@sonney2k	at github there is a dev branch
 blackburn	sonney2k: you wanted a branch?
@sonney2k	for shogun
 blackburn	sonney2k: where? :D
 blackburn	https://github.com/shogun-toolbox/shogun/branches
@sonney2k	dev
@sonney2k	Last updated 9 hours ago by lisitsyn.
 blackburn	sonney2k: ehmmm - where do you see it?
 blackburn	interesting
@sonney2k	blackburn, I just type dev into branches
 blackburn	sonney2k: the thing is that I didn't create any branch
 blackburn	I just pulled and what I saw is
 blackburn	From github.com:shogun-toolbox/shogun
 blackburn	   9702994..e6138dd  master     -> origin/master
 blackburn	 * [new branch]      dev        -> origin/dev
@sonney2k	huh?
@sonney2k	it is there now!?
@sonney2k	wtf
 blackburn	sonney2k: wiking may be?
@sonney2k	maybe
 wiking	just a sec
 wiking	i just came back
@sonney2k	so how do I work on this?
 blackburn	wiking: is that you who created 'dev'?
 wiking	es
@sonney2k	it is a remote branch so I can only push to this right?
 wiking	yes
 wiking	i even told here
 wiking	:))))
 blackburn	wiking: yeah
 wiking	check logs
 wiking	about 5 hours ago i told
 blackburn	wiking: I remember something :)
 wiking	that there's dev branch now in git
@sonney2k	wiking, you did this before we released so we need to rebase it to master
 wiking	yes
@sonney2k	so I create a dev branch locally based on that?
 wiking	we need a simple repbase
@sonney2k	and then git rebase
@sonney2k	and push to the dev branch?
 wiking	naaah just a sec
 wiking	i'll fish it
 wiking	fix it
 wiking	:)))
@sonney2k	no no
@sonney2k	I want to do it
@sonney2k	and learn how to :)
 wiking	hehehehe
 wiking	with git flow?
 wiking	btw do we agree to use that?
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Quit: Page closed]
@sonney2k	wiking, no
 wiking	so no gitflow?
 wiking	no direct writing to git shogun repo?
 wiking	and PRing every stuff?
@sonney2k	wiking, no idea but likely not git flow
 wiking	i'm totally 4 gitflow :)))
 wiking	helps a lot in branch maintaining
 wiking	especially the whole release - dev branch maintaining
@sonney2k	wiking, we have the issue with our lib/versionstring.h not being part of git master/dev
 wiking	yep i get it
@sonney2k	wiking, no idea what to do about it
 wiking	just a sec
 wiking	(eatig)
 wiking	(eating)
@sonney2k	we have to think about it a bit more
 wiking	sonney2k: what's against having lib/versionstring.h in the repo?
 wiking	i mean we can even have like a template version of that in the repo, and have a makefile script that automagically updates it? :P
 wiking	and that's just part of the actual release....?
 wiking	here's an example: https://github.com/arq5x/bedtools/pull/16/files
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- zxtx [~zv@75-59-238-10.lightspeed.sntcca.sbcglobal.net] has quit [Ping timeout: 246 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 wiking	sonney2k: so actually regardless of gitflow
 wiking	sonney2k: can we agree that if one has a write access on shogun-toolbox/shogun.git repot then he can push commits directly into dev branch w/o doint the PR->merge cycle?
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has quit [Ping timeout: 252 seconds]
--- Log closed Mon Mar 18 00:00:14 2013
