--- Log opened Thu Mar 08 00:00:06 2012
--- Day changed Thu Mar 08 2012
 n4nd0	I am really glad I discovered it, I think it can become very useful once I start working on my thesis :)
 n4nd0	sonney2k: anyway, I will check again what can I apply for in gsoc and maybe we can bring again the topic of the documentation after summer if everything goes well
@sonney2k	n4nd0, of course no one hinders you to work on this - to the contrary :)
 n4nd0	sonney2k: what is your opinion about making more than one gsoc application for different projects within shogun?
@sonney2k	I guess more than 2 doesn't make sense
@sonney2k	n4nd0, of course you can propose anything you'd like to do - this list is not exhaustive
 n4nd0	sonney2k: the more I am discovering about SO, the more I like it :)
 n4nd0	sonney2k: I will give a try to it, and maybe something easier like the GPs just in case
 n4nd0	but SO looks pretty cool
 n4nd0	there is nothing in shogun implemented yet, right?
@sonney2k	n4nd0, I would say easiest task is the newton svm one - just port a few lines of matlab code
@sonney2k	SO - it is about the framework - so indeed nothing like that exists though we have the argmax already in there
 n4nd0	sonney2k: btw, how does the new documentation get included in the official doxygen in the web?
 n4nd0	I have seen that there is nothing about Mahalanobis yet and I got curious
@sonney2k	I guess I should automate this - whenever all tests go well, run make doc and put it live
 n4nd0	ok
@sonney2k	all of that is prepared but not done :(
 n4nd0	so there is a testing framework that checks if the things that are about to enter in the project work well?
@sonney2k	n4nd0, there is the examples/undocumented/python_modular directory (for example)
@sonney2k	all things in there are examples illustrating things for the user but they are also used as tests
@sonney2k	so there is a generator.py running these examples and dumping the output they produce
@sonney2k	and there is a tester.py that checks if results are the same
 n4nd0	but what are the results compared to?
@sonney2k	problem is that this is not 100% enabled for everything
 n4nd0	so for example, right now for the Mahalanobis distance stuff
@sonney2k	n4nd0, nothing - it is not activated
 n4nd0	aha ok
@sonney2k	you would have to run generator.py
@sonney2k	that would then store the output of mahalanobis distance stuff
@sonney2k	and so tester could later compare it
@sonney2k	I think this would also be an excellent gsoc task - but again I don't know about googles official policy about such endeavors
@sonney2k	in any case writing just 1 example and getting regression tests for free with it is the most painless way I can think of for tests :)
 n4nd0	ok
 n4nd0	I was thinking that maybe the tester compared the results with the ones obtained by other software or sth like that
@sonney2k	n4nd0, no - that is something we do of course when implementing $METHOD
@sonney2k	but from then on it is not needed
@sonney2k	anyways bed time
@sonney2k	cu
 n4nd0	good night
 n4nd0	wiking: hey!
 n4nd0	wiking: are you thinking also of applying for gsoc?
 n4nd0	wiking: if you don't mind that I ask of course ;)
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 246 seconds]
-!- wiking_ [~wiking@2002:4e17:bfc9:1:fc01:a93b:44d8:ae33] has joined #shogun
-!- wiking_ [~wiking@2002:4e17:bfc9:1:fc01:a93b:44d8:ae33] has quit [Changing host]
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 245 seconds]
-!- wiking_ is now known as wiking
-!- in3xes [~in3xes@180.149.49.227] has joined #shogun
-!- in3xes [~in3xes@180.149.49.227] has quit [Quit: Leaving]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 wiking	n4nd0: hey mate! sorry yesterday i was already sleeping....
 wiking	n4nd0: yeah i'm planning to apply for gsoc
 wiking	it's not only a matter of which course to take... but most probably it's going to be the latent-svm implementation within shogun
 n4nd0	wiking: no problem, it was already late actually :)
 n4nd0	wiking: ok, I have never heard of them apart from your conversations around here with blackburn
 n4nd0	complet
 n4nd0	completely ignorant in that topic :S
 wiking	heheh no worries :P
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 245 seconds]
-!- conor [~cronor@fb.ml.tu-berlin.de] has joined #shogun
 conor	Hello!
 conor	how can i compile shogun with an old compiler? there is this problem that matlab interfaces must be compile with g++-4.3 and i can't find where to change it in the configure or Makefile.
 sonne|work	./configure --help :)
-!- n4nd0 [~nando@n179-p53.kthopen.kth.se] has joined #shogun
-!- vikram360 [~vikram360@117.192.160.160] has quit [Read error: Connection reset by peer]
 conor	sonne|work: thanks that was helpful :)
-!- vikram360 [~vikram360@117.192.180.45] has joined #shogun
 conor	i have a weird problem. i'm used an older shogun version with the LIBLINEAR_L1R_L2LOSS_SVC classifier. there everything worked fine, but now i use the recent shogun version and use LIBLINEAR_L1R_L2LOSS_SVC again. But now i have to transpose the features and the results for w are all NaN. Does anyone know what this could be? I searched the commit messages for LIBLINEAR_L1R_L2LOSS_SVC but couldn't find anything so i don't know what changed there.
 sonne|work	conor: you could help figuring out when this problem happened by doing a git bisect and determining the commit which caused this
 conor	ok i will do this
 sonne|work	btw you can do git log shogun/classifier/svm/SVM_linear.cpp
 sonne|work	or shogun/classifier/svm/LibLinear.cpp to see the changes for these files only
 sonne|work	(I guess I broke it ...)
-!- conor [~cronor@fb.ml.tu-berlin.de] has quit [Read error: Operation timed out]
-!- blackburn [~qdrgsm@109.226.105.25] has joined #shogun
 CIA-64	shogun: Sergey Lisitsyn master * rdb96f7c / (3 files): Added bias usage capability for crammer-singer liblinear - http://git.io/LJ3IeQ
-!- vikram360 [~vikram360@117.192.180.45] has quit [Ping timeout: 245 seconds]
-!- vikram360 [~vikram360@117.192.186.135] has joined #shogun
-!- cronor [~cronor@141.23.80.206] has joined #shogun
 cronor	sonne|work: i looked into that but is there a way to access the pre-May2011 logs?
 sonne|work	all logs since 2006 are in there
 sonne|work	ahh but I probably moved files around
 sonne|work	before that data the dir shogun/ did probably not exist
 sonne|work	s/data/date
 n4nd0	sonne|work: hey! one question about dynamic memory allocation, if I want to create an array of SGVector
 n4nd0	SG_MALLOC(SGVector< float64_t >, nvecs)
 n4nd0	and later loop for each vector and do
 n4nd0	SG_MALLOC(float64_t, nelems)
 n4nd0	is that the right way to do it?
 n4nd0	I have doubt about the second MALLOC, to allocate space for each of the vectors
 blackburn	n4nd0: you may use array_of_vectors[i] = SGVector<float64_t>(nelems)
 n4nd0	n4nd0: hey! I didn't see you are around :)
 n4nd0	ups I talked to me
 blackburn	yeah
 n4nd0	blackburn: thank you very much :)
 blackburn	:)
 blackburn	sonne|work: +0.01% of accuracy for adding bias LOL
 blackburn	(I've added bias support for crammer-singer liblinear)
 wiking	blackburn: yoyo
 blackburn	wiking: hey
 wiking	mmm i wonder where's alex :)
 wiking	i supposed to have a Skype conf with him now :P
 blackburn	lets shout ALEX and wait him to come ;)
 wiking	hahahhaah
 wiking	maybe he won't be able to decode the irc protocoll
 n4nd0	blackburn: what about later to free that stuff, would SG_FREE(array_of_vectors) do the trick without having to call free_vector for every one of them?
 blackburn	n4nd0: it won't, you would have to free it
 n4nd0	n4nd0: ook, thank you again :)
 blackburn	blackburn: no problem
 blackburn	:D
 CIA-64	shogun: Sergey Lisitsyn master * r0c71dba / src/shogun/classifier/svm/MulticlassLibLinear.cpp : Added bias usage capability for crammer-singer liblinear - http://git.io/iKQ-hw
 blackburn	wiking: did you try multiclassliblinear already?
 wiking	haven't had time yet :(
 wiking	sorry man
 blackburn	no need to sorry, I mean you were waiting for it :)
-!- cronor [~cronor@141.23.80.206] has quit [Quit: cronor]
 wiking	heheh he has shown up \o/
 n4nd0	:)
 wiking	sonney2k: here?
 sonne|work	wiking: yes
 sonne|work	whats up?
 vikram360	sonney2k : There seems to be no information about how or why C5.0 is better than C4.5. Is there any paper in particular or any resource that you know about that elicits the superiority?
-!- n4nd0 [~nando@n179-p53.kthopen.kth.se] has quit [Ping timeout: 244 seconds]
@sonney2k	blackburn, how did you add the bias term to multiclass liblinear?
 blackburn	sonney2k: I'd say virtually
 blackburn	w = [w, b] , x = [x, 1]
@sonney2k	so you added some constant?
@sonney2k	without modifying features?
 blackburn	yes
 blackburn	attached b to w and 1 to x
@sonney2k	ok
 blackburn	virtually
 blackburn	:)
@sonney2k	how?
@sonney2k	ok
 blackburn	sonney2k: just replaced dotproducts in MCSVM solver
@sonney2k	that is one of the problems that they modify data from time to time
 blackburn	pretty useless though
@sonney2k	IIRC L1 svm had that problem
@sonney2k	depends on the problem
 blackburn	sonney2k: how can it be true that bias is so useless?
@sonney2k	I have to leave the train...
@sonney2k	cu
 blackburn	I never thought it is not really required for high-dim tasks
 blackburn	ok
 vikram360	:(
-!- cronor [~cronor@141.23.80.206] has joined #shogun
-!- vikram360 [~vikram360@117.192.186.135] has quit [Read error: Connection reset by peer]
-!- vikram360 [~vikram360@117.192.186.135] has joined #shogun
@sonney2k	blackburn, well it is a *regularized* bias so not really the the one you have in standard SVM
@sonney2k	so one more dim more doesn't really matter much
 blackburn	sonney2k: I guess it is the one vojtech did in his 2002 paper
 blackburn	for kernel bsvm
@sonney2k	I haven't read his paper
@sonney2k	but almost everyone does this 'hack'
@sonney2k	ocas / liblinear ...
 blackburn	sonney2k: min (||w||^2+b^2) + C \sum \xi
 blackburn	sonney2k: I'm nearly finished with mc ocas!
 blackburn	took a little while
@sonney2k	very good
@sonney2k	now we only need to get good old ocas back to work :)
 blackburn	sonney2k: yeah probably we need to
 blackburn	sonney2k: what do you think about that idea you suggested?
@sonney2k	there is certainly enough other stuff too... ohh well
@sonney2k	well I would say we don't have to rush
 blackburn	deadline is coming, but ideas are not concerned I guess?
@sonney2k	have to leave train now
 blackburn	damn do you move in train whole day long? ;)
 blackburn	do you work in siberia? :)
@sonney2k	Re
@sonney2k	well I think one can even do spontaneous things
@sonney2k	so if some student has some nice idea that he wants to persue - that woudl be possible as well
@sonney2k	but I certainly would love tighther python integration
@sonney2k	in the end that is the interface I use mostly
 blackburn	sonney2k: others are pretty useless for me as well
@sonney2k	not useless - I but I just use them very rarely
 blackburn	do you use it? :)
 blackburn	I have never used neither java nor ruby :)
 blackburn	sonney2k: btw java integration is pretty interesting thing as well
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 blackburn	sonney2k: directory arrangement is still crappy unclear for me :(
-!- cronor [~cronor@141.23.80.206] has quit [Quit: cronor]
-!- cronor [~cronor@141.23.80.206] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- cronor [~cronor@141.23.80.206] has quit [Quit: cronor]
 blackburn	sonney2k: done with mc ocas - got 21.6% accuracy :D
 blackburn	going to diff libocas
-!- cronor [~cronor@141.23.80.206] has joined #shogun
-!- cronor [~cronor@141.23.80.206] has quit [Quit: cronor]
 blackburn	ah I see, maxtraintime :)
 blackburn	sonney2k: btw I checked libocas and libqp - all looks ok
 blackburn	I do not understand why you ->ed it to int32_t/float64_t, but everything else is ok
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 246 seconds]
-!- cronor [~cronor@e178170108.adsl.alicedsl.de] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 CIA-64	shogun: Sergey Lisitsyn master * rec86ec8 / (2 files): Updated multiclass machine base class - http://git.io/QgS8CA
 CIA-64	shogun: Sergey Lisitsyn master * r229943e / src/shogun/classifier/svm/libocas.cpp : Fixes for MC OCAS - http://git.io/yfEKbQ
 CIA-64	shogun: Sergey Lisitsyn master * r7e1d354 / (5 files in 3 dirs): Introduced multiclass OCAS - http://git.io/HnBINg
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Read error: Operation timed out]
-!- wiking [~wiking@78-23-191-201.access.telenet.be] has joined #shogun
-!- wiking [~wiking@78-23-191-201.access.telenet.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 260 seconds]
-!- blackburn [~qdrgsm@109.226.105.25] has quit [Ping timeout: 276 seconds]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
--- Log closed Fri Mar 09 00:00:19 2012
