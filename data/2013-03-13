--- Log opened Wed Mar 13 00:00:11 2013
 blackburn	I was in high school when house md first seasons were coming out
 n4nd0	yeah me too
 blackburn	as I was doing nothing in school I watched it
 n4nd0	I watched house while in high school too
 blackburn	I finished school in 2008 IIRC
 blackburn	:D
 blackburn	n4nd0: when did you?
 n4nd0	mmmmm
 n4nd0	I finished high school 6 years ago
 blackburn	2007 then I guess
 n4nd0	2007 probably
 n4nd0	yeah
 n4nd0	I started uni when I was 17
 n4nd0	now I am 23
 n4nd0	so yeah 2007, indeed
 blackburn	I am still 21 but 3 days lef
 blackburn	t
 n4nd0	happy birthday!!
 blackburn	hah
 n4nd0	haha
 blackburn	my brother has b-day today
 n4nd0	happy birthday to him!
 blackburn	yeah I'll let him know, thanks :)
 n4nd0	Saturday 16th yours right?
 blackburn	yeah
 blackburn	our parents were precise
 n4nd0	haha yeah
 n4nd0	older brother?
 blackburn	13 and 16 march but 7 years
 blackburn	yes, 29
 blackburn	n4nd0: https://dl.dropbox.com/u/10139213/share/image2.png
 blackburn	https://dl.dropbox.com/u/10139213/share/image.png
 blackburn	https://dl.dropbox.com/u/10139213/shogun/lle.png
 blackburn	n4nd0: ^ something like that in d3.js would be ideal
 n4nd0	yeah
 n4nd0	I have to see how to do it
 blackburn	https://dl.dropbox.com/u/10139213/shogun/pics.png
 blackburn	n4nd0: http://bl.ocks.org/mbostock/950642
 blackburn	n4nd0: images as nodes
 n4nd0	cool
 blackburn	n4nd0: http://bl.ocks.org/mbostock/1804919 that's an example of graph layout with 'suggested' position
 blackburn	n4nd0: so you could change gravity function, add image nodes and that's it
 blackburn	time to sleep
 n4nd0	ok
 n4nd0	gn!
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- FSCV_ [~FSCV@65.19.131.247] has quit [Quit: Leaving]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 shogun-buildbot	build #276 of nightly_none is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/276
-!- zxtx [~zv@cpe-98-148-115-57.socal.res.rr.com] has joined #shogun
-!- zxtx [~zv@cpe-98-148-115-57.socal.res.rr.com] has quit [Ping timeout: 258 seconds]
-!- blackburn [~blackburn@188.168.13.118] has quit [Ping timeout: 264 seconds]
-!- blackburn [~blackburn@188.168.3.95] has joined #shogun
-!- zxtx [~zv@76.91.87.166] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 3b6afdd / src/shogun/lib/tapkee/ (3 files): https://github.com/shogun-toolbox/shogun/commit/3b6afdd8ed5266523fff13bf0b061c944cac25c4
 shogun-notifier-	shogun: Compilation fix for tapkee code which fails w/o ARPACK
-!- zxtx [~zv@76.91.87.166] has quit [Ping timeout: 250 seconds]
-!- blackburn [~blackburn@188.168.3.95] has left #shogun []
-!- n4nd0 [~nando@n177-p170.kthopen.kth.se] has joined #shogun
 sonne|work	shogun-buildbot: force build nightly_none
 shogun-buildbot	build forced [ETA 15m26s]
 shogun-buildbot	I'll give a shout when the build finishes
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
 shogun-buildbot	build #277 of nightly_none is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/277
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- lambday [b613104d@gateway/web/freenode/ip.182.19.16.77] has joined #shogun
 lambday	hi.. I've been writing a string kernel and I want to normalize the it... how do I do it?
 lambday	I've set the normalizer in the constructor as set_normalizer(new CSqrtDiagKernelNormalizer());
 lambday	and tried to use return normalizer->normalize(total, idx_a, idx_b); in the compute function but got a segmentation fault
 blackburn	lambday: normalizer is being called in base CKernel class, no need to call it once more
 lambday	but compute function returns the unnormalized kernel value :(
 blackburn	lambday:https://github.com/shogun-toolbox/shogun/blob/master/src/shogun/kernel/Kernel.h#L234
 blackburn	lambday: compute should return unnormalized value as kernel() computes final value
 lambday	blackburn: oh... I get it now..
 lambday	thanks a lot
 sonne|work	lambday: just make sure that you call init_normalizer() in kernels' init(a,b) function
 lambday	sonne|work: yes... I did and its working fine now :)
 sonne|work	k
 lambday	one more thing... I want to add this SSKStringKernel to modular interface... what exactly should I do? blackburn told me few days back that it needs to be added to interfaces/modular/Kernel.i, and Kernel_includes.i.
 lambday	I see a few renames and includes in Kernel.i
 blackburn	lambday: that's the only thing
 blackburn	yes, rename and include in Kernel.i
 blackburn	and just include in Kernel_includes.i
 lambday	blackburn: okay... i'm checking
-!- Netsplit *.net <-> *.split quits: sonne|work
-!- Netsplit over, joins: sonne|work
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 lambday	blackburn: thanks man... its working perfectly... the kernel matrix is symmetric.. tested with some data..
 sonne|work	lambday: now it only has to be positive :-]
 lambday	how do i test its psd?
 sonne|work	lambday: empirically? check if eigenvalues are positive
 lambday	sonne|work: I gotta check it manually? :(
 sonne|work	lambday: yeah proof it!
 lambday	sonne|work: okay...
 sonne|work	lambday: but don't worry if it is not - we have some 'kernels' in there that are not by theory but empirically everything is good
 lambday	sonne|work: that sounds relaxing :)
 lambday	I gotta check its performance on some protein test data... I should compare its performance against other string kernels... let's see :)
 lambday	thanks a lot :)
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- heiko [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
 blackburn	heiko: I have fixed something
 heiko	blackburn:  nice :)(
 heiko	I am scanning the gpr framework
 heiko	found some bugs
 heiko	still results are nonsense
 heiko	hope to finish this today
 heiko	at least for regression
 heiko	btw while looking through this, I think I will write a project description for GP classification for gsoc
 heiko	spent whole yesterday evening with this gpr stuff, we really have to make people write tests
 blackburn	heiko: I don't get a thing about GP - that's a lot of code I am quite lost within
 heiko	blackburn:  I know it should have been  better documented/organised
 heiko	the variable names are very misleading
 heiko	but I am on it
 blackburn	heiko: that's "-" of part-time gsoc development
 blackburn	"+" is that we get some code though
 heiko	blackburn:  I think that is our fault
 heiko	not the student's
 heiko	since we did not make them
 heiko	so lets do this differently this year
 blackburn	heiko: exactly
 heiko	I wont merge any new code without a unit test
 blackburn	heiko: that's always management
 heiko	and without loads of comments
 blackburn	heiko: that's actually my PM who should be blamed I am reading about C++11 instead of doing something useful :D
 blackburn	so yes, I agree
 blackburn	heiko: it would be nice if you declare such principle on the mailing list
 blackburn	I could send a scan of my sign :D
 blackburn	heiko: there is an anecdote about russian diplomates
 heiko	blackburn:  yes? :)
 blackburn	heiko: something like that: teachers asked future diplomates to write a letter to somalian pirates
 blackburn	which would force to set hostages free
 heiko	haha :)
 blackburn	week later - teacher "nice, but assholes should be written without a space and you made some mistakes in word f*cking"
 blackburn	heiko: that's a lame translation but I hope you get it right :)
 heiko	I get it
 heiko	well, we have the power to merge :)
 blackburn	heiko: in russian it sounds funnier as we have infinite amounts of various blames
 blackburn	heiko: so when you have some time and will, could you please write a manifest about that?
 heiko	blackburn: I will, we can put it on the GSoC page
 heiko	like guielines
 heiko	on developing code
 blackburn	heiko: yeap
 heiko	blackburn: yeah I fixed the bug
 heiko	blackburn: would have been easily catched by a test
 heiko	caused by something that was developed after this first thing was checked
 heiko	#but since not test, no detection that old breaks when new is added
 blackburn	heiko: that's quite cool we all get importance of unit-tests
 heiko	blackburn: sorry :) I am too keen on this
 blackburn	heiko: no that's ok
 blackburn	heiko: ideal case is first tests then code
 heiko	blackburn: yes, code a module/method, add test, then use it in code
 blackburn	heiko: it won't work with software you don't know how to write but for established stuff it is the only way
 heiko	blackburn:  well ideally one things of the stuff you gonna write before you do it right? :)
 blackburn	heiko: well interface should be know first - so interface tests should come before real coding
 blackburn	(ideal)
 blackburn	heiko: one thing sklearn rocks with is that they have ->100% test coverage
 heiko	i know
 heiko	but we will increase ours !
-!- n4nd0 [~nando@n177-p170.kthopen.kth.se] has quit [Ping timeout: 246 seconds]
 sonne|work	heiko: please don't document code!
 sonne|work	(I am serious here)
 heiko	sonne|work:  not doing
 blackburn	sonne|work: that's interesting - motivate ;)
 heiko	fixing
 sonne|work	comments are not a good idea
 heiko	?
 sonne|work	only for doxygen api use
 blackburn	yeah that's true, code should be selfcommenting
 sonne|work	heiko: if you need comments your code is not readable
 heiko	sonne|work: I do  not agree
 heiko	I think it is very good to explain what one is doing
 sonne|work	heiko: no
 sonne|work	heiko: give the function a proper name
 sonne|work	instead of calling it do_stuff
 sonne|work	call it compute_variance etc
 sonne|work	-> no comment necessary
 heiko	its way easier to read "compute cholesky" than
 heiko	cblas_dsymm(CblasColMajor, CblasLeft, CblasUpper,
 heiko	m_ktrtr.num_rows, temp2.num_cols, (m_scale*m_scale)/(sigma*sigma),
 heiko	m_ktrtr.matrix, m_ktrtr.num_cols,
 heiko	temp2.matrix, temp2.num_cols, 1.0,
 heiko	temp1.matrix, temp1.num_cols);
 heiko	memcpy(m_kern_with_noise.matrix, temp1.matrix,
 heiko	temp1.num_cols*temp1.num_rows*sizeof(float64_t));
 heiko	clapack_dpotrf(CblasColMajor, CblasUpper,
 heiko	temp1.num_rows, temp1.matrix, temp1.num_cols);
 heiko	m_L = SGMatrix<float64_t>(temp1.num_rows, temp1.num_cols);
 blackburn	heiko: eigen3 :)
 heiko	blackburn: I did not write that! :)
 blackburn	true
 sonne|work	heiko: yes but call it compute_cholesky
 sonne|work	and put it in a function
 heiko	sonne|work: also sometimes its good to describe what the next section will be doing
 sonne|work	no code needed
 sonne|work	heiko: no!
 sonne|work	exactly not!
 sonne|work	if you want to comment what the next section does
 blackburn	heiko: matrix.ldlt().solve(rhs)
 sonne|work	put it in a function and give it a self-describing name!
 blackburn	heiko: ^ eigen3 way
 sonne|work	heiko: btw what is the state about this GP stuff?
 heiko	sonne|work: I do not agree, of course this is what one should do, but still, sometimes comments are needed.
 heiko	sonne|work, I solved the bug that made the basic GPR return nonsense
 sonne|work	very extremely rarely
 sonne|work	nice!
 heiko	and wrote many tests to check
 heiko	but now
 heiko	it crashes depending on size of test data
 heiko	(it did that before)
 heiko	so investigating ....
 heiko	at least the regression works if it terminates
 heiko	 blackburn: I know, but I am not going to change all these calls :)  (as long as they work)
 blackburn	heiko: just persuading you to join the dark side
 heiko	hey, I use eigen3 for my current project! :)
 heiko	btw exactly this call you mentioned :)
 blackburn	heiko: then I am helping you with motivation to not left the dark side :)
 heiko	hehe
 heiko	blackburn: maybe I should use eigen3, there is an error in the cholesky for certain matrix sizes
 heiko	blackburn, whats the best way to convert a shogun matrix into an eigen3 one?
 heiko	I think thats the problem, there is some uninitialised memory
 blackburn	heiko: Map class
 blackburn	heiko: Map<MatrixXd>(pointer,cols,rows)
 blackburn	heiko: act just like with typical matrix afterwards
 heiko	Map class of eigen3?
 heiko	so this returns a 2d array?
 blackburn	heiko: yes, just like MatrixXf
 blackburn	or MatrixXd
 heiko	nice, what about K^T * x , blackburn?
 heiko	how do I do that?
 heiko	will get lunch now, see you in a bit
 blackburn	heiko: K.transpose()*x
-!- n4nd0 [~nando@n177-p170.kthopen.kth.se] has joined #shogun
-!- FSCV [~FSCV@204.45.132.11] has joined #shogun
 heiko	blackburn, does that work in place?
 heiko	I guess so
 blackburn	heiko: no, y = K*transpose()*x will form it inplcae
 heiko	blackburn:  I see thanks
 blackburn	but just K.transpose()*x does nothing
 heiko	blackburn, LLT
 blackburn	heiko: mutable stuff is in array mainly
 heiko	does it change the given matrix?
 blackburn	heiko: solveInPlace()
 blackburn	I think you need it if you want to change it
 heiko	blackburn: is there any example eigen code in shogun that I could borrow some things from?
 blackburn	heiko: argh wait that's not true
 blackburn	heiko: LLT computes a copy
 blackburn	yes
 blackburn	heiko: https://github.com/shogun-toolbox/shogun/tree/master/src/shogun/lib/malsar
 blackburn	these algorithms are made of eigen
 heiko	Map<VectorXd> Mzp_DiagSigz(x,n_tasks);Mzp_Pz = eigensolver.eigenvectors().real();
 blackburn	heiko: yeah I had to keep naming to track with original implementation
 heiko	no worries, just asking whether this map is then the 2d array?
 blackburn	heiko: yes, a vector of variable length (X) and (d)ouble type
 blackburn	heiko: this code adhere Mzp_DiagSigz to pointer x
 blackburn	and then steal eigenvectors I guess
 blackburn	I don't remember exactly how can that work though
 blackburn	:D
 blackburn	eigenvectors must be a matrix..
 heiko	blackburn:
 heiko	sorry I always have problems with new frameworks
 heiko	what is the code
 heiko	I have a shogun matrix , I want to turn it into MatrixXd
 heiko	or similar
 blackburn	heiko: map is the thing you need
 heiko	how
 heiko	Map<MatrixXd> K(m_kern_with_noise.matrix, m_ktrtr.num_rows,
 heiko	m_ktrtr.num_cols);
 heiko	I did this
 heiko	now I want to add something to the diagonal, how do I do that?
 heiko	how to get the MatrixXd instance?
 heiko	blackburn: ah I finally found the documentation site :) nevermind
-!- FSCV [~FSCV@204.45.132.11] has quit [Ping timeout: 245 seconds]
 blackburn	heiko: sorry getting distracted
 blackburn	heiko: asDiagonal() += vec
 blackburn	K.asDiagonal().array() += vec
 blackburn	sth like that IIRC
 blackburn	heiko: but actually yes they have not that bad doc
 blackburn	some things are not clear though
 blackburn	I asked about some thing once on their channel
 blackburn	the answer I got was 'check doc'
 blackburn	go figure :D
 heiko	ha
 heiko	so now I have a MatrixXd
 heiko	how to get the 2d array?  :D
 blackburn	heiko: what do you mean by array?
 sonne|work	blackburn: double[]
 heiko	yes
 blackburn	heiko: K.data()
 heiko	thanks!
 blackburn	that's pointer for me
 blackburn	:D
 heiko	blackburn, what I am trying to do:
 heiko	I have a shogun matrix
 heiko	and I want another shogun matrix of the cholesky of it
 heiko	so it seems like I have to copy the data twice
 heiko	or once?
 heiko	or at all=?
 blackburn	heiko: first map
 blackburn	existing matrix
 blackburn	you get Map<MatrixXd>
 blackburn	then prepare llt()
 blackburn	ahh I see what you mean
 blackburn	yes matrix would try to shoot your leg if you just steal the matrix
 blackburn	* the array
 heiko	yes, I need to store the llt suff
 heiko	so I need to memcpy right?
 blackburn	heiko: yes I think so
 blackburn	heiko: but I'd avoid memcpy here
 heiko	so what to do?
 blackburn	heiko: I don't like that solution
 blackburn	heiko: just copy values with for
 blackburn	heiko: but again that feels wrong, let me check
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
 blackburn	heiko: why do you need it btw?
 heiko	blackburn:  because the GP code stored the L for late ruse
 blackburn	can't you store LLT?
 blackburn	ahh
 heiko	and I dont want to store an eigen object
 blackburn	heiko: alright, copying is quite bad though
 heiko	why?  isnt it faster than for
 blackburn	heiko: I mean in general I don't like that you've got to copy it twice
 heiko	it is only once right?
 heiko	the map should not copy?
 blackburn	heiko: I think I got a solution
 heiko	or does llt copy?
 blackburn	okay
 blackburn	you have SGMatrix G
 heiko	lets call it K
 blackburn	you create Map<MatrixXd> K
 blackburn	okay
 blackburn	sgK
 blackburn	and eigK
 blackburn	you also have matrix SGMatrix L
 heiko	eigK is the ma?p
 blackburn	which is cholesky factor
 blackburn	you add Map<MatrixXd> eigL
 blackburn	and
 blackburn	eigL = eigK.llt().matrixL();
 heiko	I see
 heiko	good idea
 heiko	btw how to I get upper?
 blackburn	heiko: that sounds like a most efficient way to do that
 heiko	like in matlab?
 blackburn	heiko: matrixU but what is upper?
 blackburn	do you need it?
 heiko	the upper triangular part
 heiko	yes
 blackburn	heiko: alright then matrixL and matrixU
 heiko	ok
 heiko	thanks
 heiko	I will try ...
 blackburn	heiko: these matrices are actually a views
 blackburn	heiko: ah btw if your K is symmetric
 blackburn	K.selfadjointView<Eigen::Upper>().llt().matrixU()
 blackburn	that can be more efficient
-!- FSCV [~FSCV@vpnreactor-static44.den.icastcenter.com] has joined #shogun
 heiko	what does it do?
 blackburn	heiko: it tells eigen that your matrix can be treated as selfadjoint
 blackburn	thus all operations that can improve from that would improve from that
 blackburn	heiko: for example I use it in PCA-like algorithms
 blackburn	covariance is C.selfadjointView<Eigen::Upper>().rankUpdate(v,v,1.0);
 blackburn	rank update is C <- C + alpha*x*x' - it is done much faster then you know C is symmetric
 blackburn	when*
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
 heiko	blackburn: ha you know what
 heiko	the cholesky is stored
 heiko	but not used for solving
 blackburn	heiko: are you talking about the bug?
 heiko	blackburn: plural, but no
 heiko	the thing about storing the factor
 heiko	say is there a way to solve a system with an existing cholesky?
 heiko	llt.solve(b)
 heiko	only does it for the computed one
 blackburn	heiko: ahh yes that's a problem
 blackburn	heiko: they didn't expect such thing I guess :)
 heiko	blackburn: mmh that is annoying
 heiko	I mean
 heiko	currently the GP framework solves again anyway
 heiko	but it would be good not to do that
 heiko	uuuh
 heiko	there are so many bugs
 heiko	its not possible to deal with all of them
 blackburn	heiko: okay I'll get back to you in a hour or a little more
 heiko	ok see you
 blackburn	switching place
-!- FSCV_ [~FSCV@85.17.20.88] has joined #shogun
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- FSCV [~FSCV@vpnreactor-static44.den.icastcenter.com] has quit [Ping timeout: 248 seconds]
-!- FSCV_ [~FSCV@85.17.20.88] has quit [Ping timeout: 260 seconds]
-!- FSCV_ [~FSCV@76.73.18.131] has joined #shogun
-!- FSCV_ [~FSCV@76.73.18.131] has quit [Ping timeout: 264 seconds]
-!- FSCV_ [~FSCV@65.19.131.247] has joined #shogun
-!- n4nd0 [~nando@n177-p170.kthopen.kth.se] has quit [Quit: leaving]
-!- blackburn [~blackburn@83.234.54.160] has joined #shogun
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has quit [Quit: Leaving.]
 blackburn	heiko: I'll have some 2-3 hours tonight for shogun stuff I think, let me know what can I fix
 heiko	blackburn:  cool will do
 heiko	gpr is about to be working again
 heiko	just had a break
 heiko	blackburn: heureca, it works!
 heiko	blackburn: multiclass ocas test fails
 blackburn	heiko: alright
 blackburn	heiko: mc ocas then
 blackburn	heiko: what was wrong with gps?
 heiko	blackburn: two things:
 heiko	a wrong feature object was used at a place so the thing was doing a different thing that it should have
 heiko	and a lapack method was wrongly called, causing memory errors/crashes
 heiko	seems to work quite nice now
 heiko	but only tested the basic GPR
 blackburn	I am going to update tapkee in shougn now
 heiko	which is only a small part of the framework
 blackburn	and then check mc ocas
 heiko	blackburn:  no
 heiko	lets do bugs
 heiko	I suggest
 blackburn	heiko: that's just one commit
 heiko	blackburn: ok :)
 blackburn	heiko: I feel uncomfortable when tapkee is out of date in shogun
 blackburn	heiko: I had to write a script that updates all includes to match that <shogun/lib/tapkee/...> :D
 heiko	here we go!
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Heiko Strathmann :master * 1a024d4 / / (5 files): https://github.com/shogun-toolbox/shogun/commit/1a024d413ab76903a24c0876f12b9e2bbd15be99
 shogun-notifier-	shogun: added additional parameter to mean shift data generator (select dimension of shift) and make sure that tests/examples still work
 shogun-notifier-	shogun: Heiko Strathmann :master * b847c03 / examples/undocumented/python_modular/library_time.py: https://github.com/shogun-toolbox/shogun/commit/b847c03973f7855bb5a3f873a6ce081aebe98e8e
 shogun-notifier-	shogun: added more test cases and make use of parameter list
 shogun-notifier-	shogun: Heiko Strathmann :master * 7c25b13 / src/shogun/regression/ (2 files): https://github.com/shogun-toolbox/shogun/commit/7c25b13b5d880ea87aa89f28a3c3e42850300855
 shogun-notifier-	shogun: fixes the bug that GP regression returns nonsense
 shogun-notifier-	shogun: Heiko Strathmann :master * f37c2d8 / src/shogun/regression/gp/InferenceMethod.h: https://github.com/shogun-toolbox/shogun/commit/f37c2d87321ab9dc71c77a8d615343d4510c6ae6
 shogun-notifier-	shogun: added a note
 shogun-notifier-	shogun: Heiko Strathmann :master * 8bd57ff / src/shogun/regression/gp/ExactInferenceMethod.cpp: https://github.com/shogun-toolbox/shogun/commit/8bd57ff2b969f63f66f29f8ddc7b9c039a33c262
 shogun-notifier-	shogun: replaced lapack by eigen3 calls and make code much easier to read
 shogun-notifier-	shogun: Heiko Strathmann :master * 58366b5 / examples/undocumented/libshogun/ (2 files): https://github.com/shogun-toolbox/shogun/commit/58366b5899ed5b890fd27ca379780023bd8a296c
 shogun-notifier-	shogun: added a simply GP regression example
 shogun-notifier-	shogun: Heiko Strathmann :master * 42a7929 / tests/unit/regression/ (2 files): https://github.com/shogun-toolbox/shogun/commit/42a79292ec8311cc2c8f4a4bb94e02189a86e176
 shogun-notifier-	shogun: new unit tests for gp regression with exact inference
 shogun-notifier-	shogun: Merge pull request #919 from karlnapf/master
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Made classic GP regression work again
 blackburn	heiko: big thin
 blackburn	g
 heiko	blackburn: when you fix ocas, also update the integration test since it is broken
 heiko	blackburn: yes, that was a nasty one
 blackburn	alright
 heiko	eigen3 makes things much easier btw
 heiko	30 lines -> 4 lines
 heiko	and no bugs
 blackburn	heiko: you get it
 heiko	blackburn: converter_multidimensionalscaling_modular.py also has a broken integration test, could you add unit test to make sure it works and then replace integration test?
 blackburn	heiko: yeah I changed it and will replace integration test
-!- lambday [b613104d@gateway/web/freenode/ip.182.19.16.77] has quit [Quit: Page closed]
 blackburn	white smoke!
-!- AnkitAgrawal [3ba21749@gateway/web/freenode/ip.59.162.23.73] has joined #shogun
-!- AnkitAgrawal [3ba21749@gateway/web/freenode/ip.59.162.23.73] has quit [Ping timeout: 245 seconds]
 blackburn	heiko: I like the system I built in tapkee
 blackburn	terminate called after throwing an instance of 'tapkee::wrong_parameter_type_error'
 blackburn	  what():  Wrong type for parameter target_dimension. Should be IndexType
 blackburn	heiko: quite easy to fix anything :)
 heiko	blackburn
 heiko	multiclass labels cannot be serialized
 heiko	due to SGVector<SGVector ...
 heiko	could you replace that by a SGMatrix?
 blackburn	heiko: oops
 heiko	number is known
 blackburn	yeah
 blackburn	yes sure
 heiko	cool, let me know when its done, I have more integration tests working then :)
 blackburn	heiko: how many are failing?
 heiko	not too many
 heiko	getting there
 heiko	let me check
 blackburn	heiko: we won't get it to zero though
 heiko	blackburn:  I know
 heiko	but we fix bugs
 heiko	that is important
 heiko	more importantly: yet unknown bugs
 heiko	the known ones are in the giuthub issue list
 heiko	so everyone can check
 heiko	blackburn: btw I really like this matrix view of eigen
 blackburn	heiko: which one?
 blackburn	selfadjoint?
 heiko	no the map in general
 blackburn	ah
 heiko	thats cool stuff
 heiko	blackburn: I will go home now, need some rest, worked all day on this stuff
 blackburn	heiko: people have understood how to C++ finally
 blackburn	:D
 heiko	blackburn:  yeah :)
 blackburn	yeah have a rest, I am on the duty now
 heiko	after killing themselves a few times in the future :D
 heiko	blackburn: I have some time tomorrow so I can do final things
 blackburn	exactly
 heiko	when to release tomorrow?
 heiko	evening?
 blackburn	heiko: I don't know
 blackburn	the master should say
 heiko	ok then
 heiko	so see you later or tomorrow more probably
 heiko	let me know when the multiclass labels are changed
 blackburn	heiko: I am writing tests for tapkee
 heiko	I will change the test the
 heiko	n
 blackburn	I am not sure if I should include it too
 blackburn	in shogun
 heiko	what?
 heiko	tests?
 blackburn	yeah
 heiko	dont know
 blackburn	heiko: yeah me too
 heiko	is it that distinct?
 blackburn	the code of tapkee is just the same
 blackburn	in standalone and in shogun
 blackburn	so in principle they are not really required
 heiko	I would say yes since then we can see them from shogun
 blackburn	but tests for interface of tapkee in shogun (CClasses) should be here for sure
 heiko	you know, I dont have to get involved into yet another framework then :D
 blackburn	heiko: heh I use gtest too
 blackburn	so I can just put them directly..
 blackburn	heiko: almost no alternative to gtest for C++ I think
 blackburn	boost.test may be
 heiko	dont know
 heiko	blackburn: have a good evening, see you around
 blackburn	see you
@sonney2k	heiko, afternoon
@sonney2k	tomorrow would be good
 blackburn	sonney2k: tomorrow evening?
@sonney2k	afternoon
 blackburn	alright
 heiko	sonney2k: ok then
 heiko	sonney2k: why not evening?
 heiko	sonney2k: I have some more time in evening not so much in the afternoon (even earlier here)
 blackburn	libshogun.a 280 mb
 blackburn	hah
@sonney2k	heiko, the release process takes hours... and I want to get some sleep....
 heiko	sonney2k: okay, thats a good point
 heiko	 :)
-!- heiko [~heiko@pat-191-250.internal.eduroam.ucl.ac.uk] has left #shogun []
 shogun-notifier-	shogun: Sergey Lisitsyn :master * d3d518c / src/shogun/lib/tapkee/ (25 files): https://github.com/shogun-toolbox/shogun/commit/d3d518cacac72cf33d7078be3063250c35293c2d
 shogun-notifier-	shogun: A big update for Tapkee
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: - Fixed a few VS 2012 compilations
 shogun-notifier-	shogun: - Parallel MDS
 shogun-notifier-	shogun: - Parallel
 shogun-buildbot	build #959 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/959  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 blackburn	damn
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/5480717
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has left #shogun []
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 6e01346 / src/shogun/lib/tapkee/tapkee_shogun.cpp: https://github.com/shogun-toolbox/shogun/commit/6e013467d73a06c61fa89c808eaa06927af546e3
 shogun-notifier-	shogun: Fixed compilation
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/5481238
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #960 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/960
 shogun-buildbot	build #772 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/772  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 48366db / / (4 files): https://github.com/shogun-toolbox/shogun/commit/48366db1a2f832edcae22d05382a91fb4e5bef0d
 shogun-notifier-	shogun: Some improvement for multiclass confidences
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: - Changed the way confidences are stored (array of sgvectors -> sgmatrix)
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: - Added a unit test for confidences
 blackburn	oops
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/5482719
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #787 of deb2 - static_interfaces is complete: Failure [failed test cmdline_static]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/787  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 blackburn	bad attempt haha
 shogun-buildbot	build #773 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/773  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-notifier-	shogun: Sergey Lisitsyn :master * c80ac5e / src/shogun/machine/MulticlassMachine.cpp: https://github.com/shogun-toolbox/shogun/commit/c80ac5e045d35c0d37d857e7b3dcec5a926cd7e2
 shogun-notifier-	shogun: Fixed MC machine confidences allocation
 shogun-buildbot	build #774 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/774  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/5483214
-!- travis-ci [~travis-ci@ec2-50-19-78-12.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #912 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/912  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #788 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/788
 shogun-buildbot	build #913 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/913
--- Log closed Thu Mar 14 00:00:12 2013
