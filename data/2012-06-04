--- Log opened Mon Jun 04 00:00:41 2012
-!- heiko [~heiko@host86-181-155-21.range86-181.btcentralplus.com] has quit [Ping timeout: 260 seconds]
 CIA-9	shogun: Heiko Strathmann master * rbe0a1f5 / (2 files): -added create_centering_matrix which returns a matrix that can be used - http://git.io/aeUyOw
 CIA-9	shogun: Heiko Strathmann master * r7830e2e / (2 files): Merge pull request #564 from karlnapf/master - http://git.io/t9J37g
 blackburn	heiko: are you sure you need centering matrix?
-!- heiko [~heiko@host86-176-176-136.range86-176.btcentralplus.com] has joined #shogun
 blackburn	heiko: why do you need centering matrix?
 heiko	blackburn hi
 heiko	It makes things much easier
 blackburn	hi :)
 heiko	in conjunction with my new matrix_multiply method
 blackburn	I just want to aware you it is inefficient
 heiko	mmh, well I know
 heiko	but I think in this case is negliable
 heiko	since the expensive parts happen somewhere else
 n4nd0	good night guys
 blackburn	what do you need to center?
 blackburn	and how?
 blackburn	n4nd0: good night
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 heiko	kernel matrices
 blackburn	ok if C is centering matrix and K is kernel matrix
 blackburn	you need C K C?
 heiko	K*C
 heiko	K*C*L
 heiko	for K and L kernel matrices
 blackburn	??!
 blackburn	wow
 blackburn	ok then I do not really have idea how to do that better
 blackburn	IIRC C K C is CMath::center_matrix
 heiko	yes I think its fine
 heiko	really?
 heiko	mmh
 blackburn	yes
 heiko	Ill check
 blackburn	CKC is actually
 blackburn	subtract column mean
 blackburn	subtract row mean
 blackburn	and add grand mean
 blackburn	much faster
 heiko	oh yes seeing it
 heiko	thats actually better
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Remote host closed the connection]
-!- heiko [~heiko@host86-176-176-136.range86-176.btcentralplus.com] has quit [Ping timeout: 260 seconds]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- heiko [~heiko@host86-177-117-162.range86-177.btcentralplus.com] has joined #shogun
 CIA-9	shogun: Heiko Strathmann master * r95228e9 / (2 files in 2 dirs): -added SGVector method for sum - http://git.io/rEuQ-w
 CIA-9	shogun: Heiko Strathmann master * r2b27934 / (2 files in 2 dirs): Merge pull request #565 from karlnapf/master - http://git.io/kxlbyQ
 blackburn	hahh
 blackburn	heiko: I managed to cite Karl Popper :D
 heiko	who is that? :)
 blackburn	wow I thought you should know him :)
 blackburn	german philosopher
 blackburn	heiko: VC capacity is related to Popper's falsifiability
 heiko	what did he do? :)
 heiko	really, hehe citing philosophy in ML dissertations? :)
 blackburn	yes
 blackburn	:D
 blackburn	just for fun
 blackburn	heiko: ok by Popper science knowledge should be falsifiable
 blackburn	i.e. there should be a case when this knowledge is false
 heiko	I once wanted to cite a guy called Scott E. Fahlman
 heiko	who invented the :-) sign
 blackburn	VC capacity of linear discriminant is d+1 you know
 heiko	yes
 heiko	oh this VC-stuff, I find it annoying
 blackburn	d+1 is the number of points *to falsify* linear classifier
 blackburn	to falsify in means of popper
 heiko	all the bounds are non-tight and so philosophical :)
 heiko	ah nice
 heiko	thats a nice connection
 blackburn	there was a paper by vapnik and corfield describing relation between VC and falsifiability
 blackburn	yes
 blackburn	that's why I wanted to mention this
 heiko	probably good, how is it going with your thing?
 blackburn	90% ready I think
 blackburn	https://dl.dropbox.com/u/10139213/ml/thesis.pdf
 blackburn	that's how it look like for now
 blackburn	heiko: 40 is my favourite number so I think 40 references would stay :D
 heiko	hey, I can understand which topic some pages are about :)
 blackburn	that's easy
 blackburn	I think
 heiko	ah sobel filters, I wonder what the russian word for that is :)
 blackburn	no that's prewitt
 blackburn	sobel is 1 3 1
 heiko	oh yes
 heiko	sorry :)
 heiko	why are you writing is russian?
 blackburn	argh
 blackburn	1 2 1
 blackburn	heiko: I have no choice
 heiko	really?
 blackburn	yeah I don't think it is possible
 heiko	ok
 heiko	btw I just saw that liblinear has now svr
 heiko	thats really cool
 blackburn	yeah
 heiko	and we already have it in shogun right?
 blackburn	yes - thanks to sonney2k@island
 blackburn	:D
 blackburn	I work on some regression too btw
-!- heiko1 [~heiko@host86-177-117-162.range86-177.btcentralplus.com] has joined #shogun
 heiko1	blackburn, argh connection troubles again :(
 heiko1	I gotta go to bed anyway ...
 heiko1	good night!
 blackburn	I just said I do som regression too
 blackburn	and currently I'm working on thing that learns linear regression models with task tree regularization
 heiko1	ah ok so thats nice for you too
 blackburn	should be cool
 heiko1	nice :)
 blackburn	not really
-!- heiko [~heiko@host86-177-117-162.range86-177.btcentralplus.com] has quit [Ping timeout: 260 seconds]
 blackburn	I implement other method
 blackburn	heh okay so see you tomorrow
 heiko1	take care!
 heiko1	bye
-!- heiko1 [~heiko@host86-177-117-162.range86-177.btcentralplus.com] has left #shogun []
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
 shogun-buildbot	build #600 of csharp_modular is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/csharp_modular/builds/600  blamelist: heiko.strathmann@gmail.com
-!- blackburn [~blackburn@31.28.59.65] has quit [Read error: Operation timed out]
-!- av3ngr [~av3ngr@122.110.222.137] has joined #shogun
-!- av3ngr [~av3ngr@122.110.222.137] has quit [Remote host closed the connection]
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has quit [Quit: Page closed]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Remote host closed the connection]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- wiking_ [~wiking@208.76.55.198] has joined #shogun
-!- wiking_ [~wiking@208.76.55.198] has quit [Changing host]
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking_ is now known as wiking
-!- wiking_ [~wiking@78-23-189-112.access.telenet.be] has joined #shogun
-!- wiking_ [~wiking@78-23-189-112.access.telenet.be] has quit [Changing host]
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 256 seconds]
-!- wiking_ is now known as wiking
-!- av3ngr [~av3ngr@106.70.150.8] has joined #shogun
-!- av3ngr [~av3ngr@106.70.150.8] has quit [Read error: Connection reset by peer]
-!- av3ngr [av3ngr@nat/redhat/x-xhwxdalqowhhovrg] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-xhwxdalqowhhovrg] has quit [Client Quit]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@78-23-189-112.access.telenet.be] has joined #shogun
-!- wiking [~wiking@78-23-189-112.access.telenet.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 260 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- blackburn [~blackburn@31.28.59.65] has joined #shogun
-!- pluskid [~pluskid@li400-235.members.linode.com] has joined #shogun
-!- pluskid [~pluskid@li400-235.members.linode.com] has quit [Client Quit]
-!- flxb [~cronor@fb.ml.tu-berlin.de] has joined #shogun
-!- foo__ [2e1fd566@gateway/web/freenode/ip.46.31.213.102] has joined #shogun
 foo__	hi
 foo__	I have some questions about "CommWordStringKernel"
 foo__	what shall I use  SortWordString preprocessor ?
 foo__	Is it possbile to fixe the k parameters for k-mer frequency in the spectrum kernel ?
-!- uricamic [~uricamic@cmpgw-27.felk.cvut.cz] has joined #shogun
-!- foo__ [2e1fd566@gateway/web/freenode/ip.46.31.213.102] has quit [Quit: Page closed]
-!- pluskid [~pluskid@111.120.32.87] has joined #shogun
-!- wiking [~wiking@78-23-189-112.access.telenet.be] has joined #shogun
-!- wiking [~wiking@78-23-189-112.access.telenet.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Client Quit]
-!- romi_ [~mizobe@187.66.121.115] has joined #shogun
-!- blackburn [~blackburn@31.28.59.65] has quit [Ping timeout: 260 seconds]
-!- pluskid [~pluskid@111.120.32.87] has quit [Ping timeout: 244 seconds]
-!- pluskid [~pluskid@202.130.113.138] has joined #shogun
-!- heiko [~heiko@dhcp-174-242.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- nicococo [~nico@lacedcoffee.ml.tu-berlin.de] has joined #shogun
 n4nd0	hey nicococo
 nicococo	hola dudes
 n4nd0	how is it going?
 nicococo	well, its a bit chaotic (nips deadline, some peple visting, seminar preparation,...) but okay
 nicococo	how was your exams and how is the vanilla sosvm ..
 n4nd0	the exam went good, I passed the course
 n4nd0	regarding the vanilla sosvm
 n4nd0	I have made some progress with the opt. algorithm
 n4nd0	I think I should have it finished soon
 n4nd0	have you seen the code?
 nicococo	not yet.. how can i download your changes again?
 n4nd0	just check them in github if so: https://github.com/iglesias/shogun/blob/so/src/shogun/so/PrimalMosekSOSVM.cpp
 n4nd0	so what I have left is the part of the constraints Ax <= b
 n4nd0	to build A and b to give it to the QP solver
 nicococo	yep
 nicococo	is the max_slack selection correct?
 n4nd0	lines 103-104?
 nicococo	(well i guess it is) the lines 99-105 yes..
 nicococo	cur_list = (CList*) results->get_element(i);
 nicococo	each example has an own list, right?
 n4nd0	yes
 n4nd0	I discovered that yesterday ....
 nicococo	okay :)
 n4nd0	the max_slack looks right to me
 n4nd0	let me know what bugs you
 nicococo	yes..  i think you can skip lines 107-116 and just do the same thing in 120-126
 nicococo	(just init max_slack with -inf)
 n4nd0	120-126 are there to handle the case when the lists are empty
 n4nd0	for the first iteration of the outher do ... while
 nicococo	well, for me it would be nice to have this functionality at one place but its up to you ;)
 n4nd0	do you mean the piece of code to insert?
 n4nd0	ok ... I will take a look to it
 nicococo	its not really important..
 nicococo	CPrimalMosekSOSVM::compute_loss_arg(CResultSet* result)
 nicococo	shouldn't it be part of the application ?
 nicococo	(i remember the coffin discussion)
 n4nd0	mmm
 n4nd0	I just defined this method as a shortcut
 n4nd0	since we are doing quite a few of times that operation
 n4nd0	taking into account coffing
 n4nd0	coffin sorry :D
 nicococo	a propos: i need coffee..
 nicococo	just wait 30sec ;)
 n4nd0	ok
 nicococo	back again.. coffeinized
 n4nd0	nice
 nicococo	now i can type twice as fast..yeah
 n4nd0	so I think that using coffin strategy here
 nicococo	predicted_delta_loss(int32_t idx)  ??
 n4nd0	I think that will be useful to build A
 n4nd0	let's get into that
 n4nd0	so as I understand
 nicococo	well okay..
 nicococo	these coding issues are rather small right
 n4nd0	each of the CResultSets that are stored
 nicococo	lets gete it to work
 nicococo	okay
 n4nd0	yeah ... is almost a matter of style
 n4nd0	so each of the CResultSets are associated with a constraint right?
 nicococo	yes
 n4nd0	and this structure is always growing in the algorithm
 n4nd0	no element is removed from there
 nicococo	yes
 nicococo	no element is removed (BY NOW)
 n4nd0	so the constraints that are introduced in the QP in the first iteration, will be used as well in the last one
 nicococo	there is a nice and simple heuristic
 nicococo	YES
 n4nd0	ok
 nicococo	i know this sounds shitty
 nicococo	there will be thousands of constraints in A in the end
 n4nd0	I see
 nicococo	and the solver will become slower and slower
 n4nd0	but the argmax will still be the bottleneck
 nicococo	but as i mentioned there is a nice heuristic to remove inactive constraints before solving the qp
 nicococo	in most applications the argmax is the bottleneck
 nicococo	(being ~10 times slower than the optimizing part)
 n4nd0	I see
 n4nd0	I have checked a videolecture about how to handle cases when the argmax gets intractable
 nicococo	of course that depends on the application...
 n4nd0	I guess that speeds things up
 n4nd0	to use approximations for the argmax and the like
 nicococo	there is also a paper that states: why approximations don't wokr :)
 nicococo	sry, work
 n4nd0	:D
 n4nd0	it is not a good idea to use them then?
 nicococo	for some applications we have LINEAR time algos that solve the argmax
 nicococo	(HMM, CRF)
 nicococo	oops hmm for sosvm and crf
 nicococo	and yes, i find approximations very interesting..
 nicococo	but thats another topic
 n4nd0	yes
 n4nd0	let's focus again
 n4nd0	so I did some paper work
 n4nd0	and got that A should be
 n4nd0	A = [-dPsi_i(y) | -I_n]
 n4nd0	-I_n is the identity matrix of size n; n = # training examples
 n4nd0	that would be for the first iteration
 n4nd0	when we have one constraint for each training example
 n4nd0	b = - DeltaLoss(y_true, y_pred)
 nicococo	what about delta?
 nicococo	ohh sry.. :)
 n4nd0	does it look ok?
 nicococo	in the first iteration you also have -delta for b, right?
 n4nd0	isn't what I said ^?
 n4nd0	< n4nd0> b = - DeltaLoss(y_true, y_pred)
 n4nd0	or do you mean another thing?
 nicococo	(sounds a bit confusin): that would be for the first iteration
 nicococo	when we have one constraint for each training example
 nicococo	but okay.. we mean the same thing.
 n4nd0	why does that sound confusing
 n4nd0	?
 nicococo	and yes, that sound right
 nicococo	i thought you divide into 2 cases: one is the first iteration and second all other iterations..
 nicococo	anyway, lets move on
 n4nd0	all right
 n4nd0	so later
 n4nd0	the new constraints that can be added for each iteration
 n4nd0	I remember you told me that we may add one constraint per iteration
 nicococo	one constraint per iteration per example
 n4nd0	but as I understand it now, it would be one constraint per each training example per iteration
 n4nd0	all right
 n4nd0	and do they look the same?
 n4nd0	I mean with this
 n4nd0	we add one constraint
 n4nd0	then this implies a row in A that looks like
 n4nd0	-dPsi_i(y_i_pred) |
 n4nd0	the part to the right would be a vector of zeros everywhere
 n4nd0	except from one position that is equal to 1
 n4nd0	that position is i, the index of the training example
 nicococo	correct! :)  (with -1 or?)
 n4nd0	ooo gotme! -1 :D
 nicococo	that sound absolutely correct to me, sire!
 n4nd0	good
 nicococo	that means, we should now focus on the example application.
 n4nd0	and of course one new value for b
 nicococo	(of course) ;)
 n4nd0	yeah! I think I have clear how to this part
 n4nd0	I will change a couple of things though
 n4nd0	since right now it is prepared to load to MOSEK the full A and C matrices each iteration
 n4nd0	and this is rather stupid in this case ....
 nicococo	the mosek part is quite big, right?  i thought it would be a simple quadprog(...)
 n4nd0	haha yes.. kind of
 nicococo	how would you do the application?
 n4nd0	you have to input to mosek sparse matrices and stuff like that
 n4nd0	take a few lines ;)
 n4nd0	ok
 n4nd0	let's move to multiclass classification then
 n4nd0	I read about it a couple of weeks ago and took notes about the points I didn't have clear
 n4nd0	let's make it like this, we have just to focus on the application specific parts
 n4nd0	the labels here are simple, I think I will use something like MulticlassLabels for this
 n4nd0	argmax function?
 nicococo	argmax is super-simple: for (c=0;c<CLASSES;c++) ... take max_c
 nicococo	more details??
 n4nd0	yeah
 nicococo	okay: example with 3 classes
 n4nd0	ok
 nicococo	w = [w_1;w_2;w_3]
 nicococo	psi(x,y) = [phi(x); phi(x); phi(x)]
 n4nd0	I have not clear how to find out the size of each w_i
 n4nd0	but I think this is because I don't really understand how psi is defined
 nicococo	well its all linear -> we know the mapping phi
 nicococo	lets assume phi is id mapping : phi(x) = x
 nicococo	then psi(x,y) = [x;x;x]
 nicococo	or structured: psi = [x and y=0; x and y=1; x and y=2]
 n4nd0	ok ... wait a moment here
 n4nd0	I read that Psi(x,y) = phi(x) x Delta(y)
 n4nd0	fuck , too many xs...
 n4nd0	the x between phi and Delta is the tensor product
 nicococo	not exactly it is psi(x,y) = phi * kronecker-delta, right
 n4nd0	in the paper it is written something like orthogonal encoding of label y
 n4nd0	and I got a bit O_O
 nicococo	big words for small issue :)
 n4nd0	agree :)
 nicococo	it is exactly like training 3 linear svms:   f_i(x) = w_i ^T phi(x)   /forall i
 nicococo	and put all together into a giant vector: f = argmax_i f_i(x)
 nicococo	f(x) = argmax_i w_i^T phi(x)
 n4nd0	ok but
 n4nd0	mmm
 n4nd0	you said psi(x,y) = phi(x) * kronecker-delta
 nicococo	yes i said this and its bullshit i see :)
 n4nd0	I guess that the kronecker-delta (let's call it d for short) must depend on y
 n4nd0	something like d(y)
 nicococo	yes
 n4nd0	ok, tell me how it depends on it
 n4nd0	for me a kronecker delta is a vector of zeros and one value equal to 1
 nicococo	in short:  psi(x,y=i) = phi(x)
 n4nd0	d(y) = 1 if y = 0, 0 otherwise
 nicococo	the kronecker is to select a certain phi(x) out of the psi-vector: psi(x,y) = [phi(x);phi(x);...]
 n4nd0	ok, I got the idea
 n4nd0	so I think I am just missing how to define phi
 nicococo	ohh.. okay thats the usual svm phi.. so we make it linear phi(x) = x
 n4nd0	aham ok
 n4nd0	structured loss?
 n4nd0	correct = 0, incorrect = 1?
 nicococo	right :)
 n4nd0	ok
 n4nd0	then I have all the pieces
 nicococo	well it is a debug setting right... we don't want to win a competition ;)
 n4nd0	true
 n4nd0	ok
 nicococo	thats something we do afterwards
 n4nd0	I will work on this within the next few days then
 nicococo	can you setup the application in python?
 nicococo	(generating the examples ...)
 n4nd0	I like C++ but I will do it in python ;)
 nicococo	hurray
 nicococo	okay.. then lets talk on thursday again?
 nicococo	or wednesday is even better
 n4nd0	so what about if I let you know by mail once I am done with the algorithm so you can visual-debug it?
 n4nd0	let's make it on Wednesday then
 n4nd0	how did it go with the NIPS deadline by the way?
 n4nd0	what are you presenting?
 nicococo	submitted the paper 10minutes before deadline :)
 n4nd0	what about?
 nicococo	application paper some l_1 density level set estimation
 n4nd0	no idea what that is :O
 nicococo	like one-class learning
 n4nd0	that doesn't make sense in my head
 n4nd0	one-class classification :P
 nicococo	imagine you have a lot of unlabeled data (for instance network traffic)
 nicococo	you know that most of the examples are normal data (userr clicking on website,..)
 nicococo	but you also know that some of the examples are spurious (hackers)
 nicococo	a simple setting would be: learn a hypersphere that encloses most of the data
 nicococo	hence, learn a tight bound around a single class of examples excluding examples that deviate from normal behaviour
 n4nd0	oh, looks interesting
 n4nd0	machine learning applied to computer security right?
 nicococo	right ;)
 nicococo	(but for nips we had some brain-computer interface data)
 n4nd0	what do you mean with brain-computer?
 nicococo	eeg-measurements of your brain activity
 n4nd0	ok
 nicococo	http://www.bbci.de/
 nicococo	quite interesting... but i like structured output more ;)
 n4nd0	I think the computer security example looks nicer :)
 n4nd0	what applications of SO do you know beyond CV?
 nicococo	bioinformatics, machine translation
 nicococo	part-of-speech tagging
 nicococo	speech recognition
 nicococo	mmm... and all upcoming interesting new applications ;)
 n4nd0	have you seen something applied in communications?
 n4nd0	I've not found anything yet
 n4nd0	but I know that in decoding, in wireless communications some things are modelled with HMMs
 n4nd0	so I guess there must be room to apply SO there
 nicococo	there are ic that do message passing all the time
 n4nd0	what is its relation to SO?
 nicococo	to adjust the parameters (transmission and emission scores )
 nicococo	i guess there is room for new inventions :)
 n4nd0	I am interested in re-using my knowledge of SO for my thesis
 nicococo	mmhh.. its about communication?
 n4nd0	I meant like the knowledge I'll have after the project
 n4nd0	not that much probably but something :P
 n4nd0	my degree is in telecommunications
 nicococo	what is the title?
 n4nd0	my Spanish one
 n4nd0	here in Sweden I'm studying robotics
 nicococo	i also studied communication and robotics :)
 nicococo	(but forgot everything :( )
 n4nd0	:O
 n4nd0	ok
 n4nd0	I should go now!
 n4nd0	but we talk again on Wednesday, bye!
 nicococo	bye
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- nicococo [~nico@lacedcoffee.ml.tu-berlin.de] has left #shogun []
-!- pluskid [~pluskid@202.130.113.138] has quit [Quit: Leaving]
-!- uricamic [~uricamic@cmpgw-27.felk.cvut.cz] has quit [Quit: Leaving.]
-!- emrecelikten [~emrecelik@176.40.245.70] has joined #shogun
-!- hoijui [~hoijui@141.23.65.251] has joined #shogun
-!- romi_ [~mizobe@187.66.121.115] has quit [Ping timeout: 250 seconds]
-!- romi_ [~mizobe@187.66.121.115] has joined #shogun
-!- heiko [~heiko@dhcp-174-242.internal.eduroam.ucl.ac.uk] has quit [Ping timeout: 256 seconds]
-!- heiko [~heiko@dhcp-174-242.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- wiking [~wiking@78-23-189-112.access.telenet.be] has joined #shogun
-!- wiking [~wiking@78-23-189-112.access.telenet.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- gsomix [~gsomix@85.112.35.132] has joined #shogun
 gsomix	hello
 gsomix	I passed theoretical mechanics exam \(^_^)/
-!- flxb [~cronor@fb.ml.tu-berlin.de] has quit [Ping timeout: 260 seconds]
-!- blackburn [~blackburn@31.28.59.65] has joined #shogun
 gsomix	blackburn, yo
 blackburn	hey
 blackburn	wiking: gsomix: weekly reports please ;)
 gsomix	gsomix, aha
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
 gsomix	huh :)
 blackburn	just in time
-!- heiko [~heiko@dhcp-174-242.internal.eduroam.ucl.ac.uk] has left #shogun []
-!- cronor [~cronor@g231231221.adsl.alicedsl.de] has joined #shogun
-!- hoijui [~hoijui@141.23.65.251] has quit [Quit: Leaving]
-!- gsomix [~gsomix@85.112.35.132] has quit [Quit: Ex-Chat]
 shogun-buildbot	build #250 of nightly_none is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/250
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 shogun-buildbot	build #259 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/259
-!- heiko [~heiko@host86-181-154-139.range86-181.btcentralplus.com] has joined #shogun
 CIA-9	shogun: Soeren Sonnenburg master * rfc9099c / src/shogun/labels/Labels.h : fix documentation error - http://git.io/ly8B7Q
 CIA-9	shogun: Soeren Sonnenburg master * ref62fca / (src/shogun/lib/SGVector.h src/shogun/lib/SGVector.cpp): split up SGVector into .cpp / .h file and only enable it for numerical types - http://git.io/_ynlYA
 CIA-9	shogun: Soeren Sonnenburg master * reac5249 / (4 files in 2 dirs): drop GMM - it abuses SGVector to store Gaussians - http://git.io/U-4vug
 CIA-9	shogun: Soeren Sonnenburg master * rba6bb44 / src/shogun/so/StructuredModel.h : fix error in formula - http://git.io/hGDiQw
 blackburn	drop??
 shogun-buildbot	build #170 of nightly_default is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/170
 n4nd0	sonney2k: weren't you on holidays? :D
 blackburn	hmm drop gmm
 n4nd0	blackburn: what's it?
 n4nd0	or was it ...
 blackburn	gaussian mixture models
 CIA-9	shogun: Heiko Strathmann master * rf6951d0 / (2 files): -finishing touches to the spectrum based null-distribution sampling - http://git.io/xuQsfQ
 CIA-9	shogun: Heiko Strathmann master * r8836c0a / (2 files): Merge pull request #566 from karlnapf/master - http://git.io/a1-Bdg
 shogun-buildbot	build #938 of cmdline_static is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cmdline_static/builds/938  blamelist: sonne@debian.org
 n4nd0	blackburn: btw, let me ask you something
 n4nd0	general SVM theory :)
 blackburn	ask
 n4nd0	the optimization problem for SVMs is convex
 blackburn	right
 n4nd0	even when we are talking about soft margin
 n4nd0	with slack variables and so on
 n4nd0	then it exists a global minima of the function we seek to optimize
 shogun-buildbot	build #917 of r_static is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/r_static/builds/917  blamelist: sonne@debian.org
 blackburn	yes, while problem is convex
 n4nd0	ok
 blackburn	there should be a theorem I think
 n4nd0	so all the different SVM solvers should give the same output right?
 blackburn	hmmmm
 blackburn	well due to numerical stuff not really the same
 n4nd0	it is their efficiency what differs?
 blackburn	but yes they should mostly coincide
 n4nd0	but does that turn to be a big difference?
 blackburn	no I don't think it is big
 n4nd0	curious
 n4nd0	I find that almost magical
 blackburn	why?
 n4nd0	that there are a bunch of different algorithms out there giving the same solution!
 blackburn	but formulation is the same
 n4nd0	out there = inside here in shogun :D
 n4nd0	I find it funny, don't you?
 blackburn	well.. just different way to obtain solution
 blackburn	just like solving nonlinear equations
 blackburn	n4nd0: about convexity
 blackburn	imagine polygon in R^2
 shogun-buildbot	build #904 of python_static is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/python_static/builds/904  blamelist: sonne@debian.org
 blackburn	and you want to find a point nearest to origin
 blackburn	can you stuck somewhere if it is convex?
 n4nd0	with polygon are you thinking of a closed curve?
 blackburn	yes
 n4nd0	something like an U closed in the upper part
 blackburn	linear piecewise
 n4nd0	?
 n4nd0	then I guess you could get stuck in the corners
 blackburn	any area with linear piecewise boundary
 blackburn	can there be a case with corner which are nearer to origin than its neighbors?
 blackburn	which is*
 n4nd0	mmm I think that depends on where the curve is
 n4nd0	you can put it in such a way that one of the corners is the origin
 blackburn	_/\_
 blackburn	like that?
 n4nd0	that is not convex
 blackburn	yes
 n4nd0	is it?
 blackburn	that's what I mean
 blackburn	not convex - so if convex you always can travel for better corner
 blackburn	and you will never be at local minima
 n4nd0	ok
 n4nd0	nice property of convexity
 blackburn	btw let me ask you now
 blackburn	is SO svm convex?
 blackburn	n4nd0: btw did you check logs where we were discussing VC capacity with heiko? :)
 n4nd0	blackburn: no I didn't, was it today?
 blackburn	hard to remember.. probably or yesterday
 n4nd0	blackburn: it must be convex, it is reduced to a QP
 blackburn	n4nd0: I became so interested with relations between Popper's falsifiability and VC dimension
 n4nd0	I don't know if that is a good answer though...
 blackburn	I even asked my former philosophy teacher about that :D
 blackburn	however I had to describe what VC is to him
 shogun-buildbot	build #827 of octave_static is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/octave_static/builds/827  blamelist: sonne@debian.org
 heiko	n4nd0 check out the boyd and vanderberghe book
 heiko	thats amazing, I recently bought it and its a pleasure to read
 blackburn	ah I awakened heiko
 heiko	covers all the convexity/SVM/Lagrange stuff
 heiko	yes :)
 heiko	I am listeing all the time :)
 n4nd0	heiko: yeah, I started with it :)
 blackburn	why did you buy it?
 n4nd0	I am following it together with the lectures in youtube
 blackburn	:)
 heiko	I also got some nice notes which are a good summary of the stuff you need for SVM
 heiko	blackburn, well I like books :)
 blackburn	I prefer to read using my kindle dx - so awesome
 heiko	n4nd0,  try lecture 7 of these: http://www.gatsby.ucl.ac.uk/~gretton/coursefiles/rkhscourse.html
 heiko	I like paper :)
 heiko	also, you can defend yourself with heavy books in contrast to kindle :)
 heiko	oh food is ready
 heiko	see you later!
 n4nd0	heiko: bye, and thanks!
 blackburn	see you
 n4nd0	I am an old guy in that sense too, I prefer the paper
 n4nd0	I have not tried kindle though
 n4nd0	I've heard is comfortable to read with it too
 blackburn	yes
 blackburn	dx is the first thing I bought with gsoc money :D
 blackburn	last year I mean
 blackburn	n4nd0: I'll start with boyd book after my thesis I think
 blackburn	I know *a little* and need to systemize
 n4nd0	blackburn: cool
 n4nd0	blackburn: we can talk about our respective progress
 blackburn	in cvxopt?
 n4nd0	yeah
 blackburn	yeah
 heiko	n4nd0, blackburn, re
 heiko	I just had the exam about it, had to derive one-class nu-svm with soft margin :)
 heiko	I also wanna get more into the stuff, very interesting, so lets talk about it at some point
 n4nd0	sure
 blackburn	I talked about VC dim for an hour today with philosopher :D
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Read error: Connection reset by peer]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- romi_ [~mizobe@187.66.121.115] has quit [Ping timeout: 245 seconds]
-!- romi_ [~mizobe@187.66.121.115] has joined #shogun
-!- emrecelikten [~emrecelik@176.40.245.70] has quit [Quit: Leaving.]
 CIA-9	shogun: Heiko Strathmann master * r4400786 / src/shogun/statistics/QuadraticTimeMMD.h : added comment - http://git.io/ui0sdQ
 CIA-9	shogun: Heiko Strathmann master * r2fbbd7a / (2 files): added inverse_incomplete_gamma for computing the CDF of the - http://git.io/aU7hyQ
 CIA-9	shogun: Heiko Strathmann master * r816d12d / examples/undocumented/libshogun/statistics.cpp : added test to ensure high-quality results for new alglib routines - http://git.io/4OSF1Q
 CIA-9	shogun: Heiko Strathmann master * r0d707d8 / (4 files in 3 dirs): Merge pull request #567 from karlnapf/master - http://git.io/kXv1bw
 blackburn	heiko: so now you are completely free?
 heiko	blackburn, not yet :)
 heiko	one more
 heiko	wednesday
 blackburn	ah
 heiko	another harder one
 heiko	so tomorrow all day studying
 blackburn	what is it is about?
 heiko	general machine learning algos
 heiko	math, FA, GMM, HMM, ICA, LDS, optimisation, sampling, dimensionality reduction
 blackburn	oh wtf weren't ones you had about ML?
 blackburn	:D
 heiko	mathematical basics of them
 heiko	what? :)
 n4nd0	heiko: you take really cool courses
 blackburn	you had exams about ML ML ML and ML
 blackburn	:D
 heiko	n4nd0, thanks :)
 heiko	yes
 heiko	I mean thats what I am studying
 heiko	and why I cam ehere
 blackburn	what is LDS??
 blackburn	:D
 heiko	in Germany I would have to take all this CS crap :)
 heiko	linear dynamical systems
 blackburn	no idea
 blackburn	:)
 heiko	kalman filter, auto-regressive models etc
 blackburn	argh?
 blackburn	why is it ml
 heiko	pretty important and useful stuff
 blackburn	yes I know kalman and ARMA models
 heiko	I mean this is all related to Bayesian methods
 blackburn	wait
 blackburn	kalman applied to bayesian inference?
 heiko	kalman filter has a bayesian interpretation
 blackburn	oh gosh
 heiko	btw the guy who did the lecture is david barber
 heiko	he has a really nice book
 blackburn	which dim reduction algos do you study?
 heiko	http://web4.cs.ucl.ac.uk/staff/D.Barber/pmwiki/pmwiki.php?n=Brml.HomePage
 heiko	great book about ML and bayesian, theres nearly everything in it
 heiko	we did mostly PCA
 heiko	but in quite detail
 heiko	also how to use it for matrix completition etc
 blackburn	I really think Isomap is must to know
 heiko	Ill put it on my list :)
 heiko	currently a bit short on time
 heiko	blackburn, n4nd0, this course here was really great and I reccomend it without any doubts :)
 blackburn	too much studies for me
 blackburn	:)
 heiko	yeah, its kind of a lot of work
 heiko	but London is a lovely place to be :)
 heiko	I will go offline now, guys, have a good evening :)
 blackburn	see ya
--- Log closed Tue Jun 05 00:00:41 2012
