--- Log opened Sat Jul 06 00:00:19 2013
-!- sanyam [uid10602@gateway/web/irccloud.com/x-dagcmudckvzdcxma] has quit [Remote host closed the connection]
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has joined #shogun
-!- nube [~rho@49.244.14.60] has joined #shogun
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 276 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has quit [Client Quit]
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	have you guys seen this? http://jmlr.org/papers/volume14/curtin13a/curtin13a.pdf
@iglesiasg	I bet they didn't use our cover tree for the benchmark, but yes theirs ?_?
-!- FSCV [~FSCV@187.210.54.166] has joined #shogun
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- nube [~rho@49.244.14.60] has quit [Quit: Leaving.]
-!- nube [~rho@49.244.14.60] has joined #shogun
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Quit: Leaving.]
-!- FSCV [~FSCV@187.210.54.166] has quit [Quit: Leaving]
-!- nube [~rho@49.244.14.60] has quit [Quit: Leaving.]
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has joined #shogun
 shogun-buildbot	build #449 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/449
 lambday	pickle27: hi
 pickle27	lambday: hey
 lambday	pickle27: how's it going?
 pickle27	pretty good you?
 lambday	pickle27: pretty good too :D
 lambday	pickle27: hey could you please have a look at this - https://travis-ci.org/shogun-toolbox/shogun/jobs/8787066
 pickle27	lambday: yeah I just fixed that earlier this eve but it hasn't been merged yet
 lambday	pickle27: okay, thanks man :)
 pickle27	yeah heres the latest
 pickle27	https://travis-ci.org/shogun-toolbox/shogun/builds/8785919
 lambday	pickle27: feels so good seeing travis green :D
 pickle27	yeah haha
 pickle27	lambday: I hate trying to debug travis when things run on my machines but Im getting better at it
 lambday	tell me about it !! :(
 pickle27	that unit test was a weird fix
 lambday	but that worked :D
 pickle27	yeah I think it was a bad memcpy on my part from eigen3 back to an SGMatrix
 pickle27	I don't know why my machines are so resilient to these bugs lol and Travis picks them up
 lambday	travis is like an annoyed girlfriend.. gets mad at pretty much every single mistake :D
 pickle27	haha
 lambday	btw.. you were using eigen3 for matrix, and then copied the results back to SGMatrix?
 pickle27	yeah thats what I had, turns out it was easier and cleaner to just leave it as eigen3
 pickle27	I usually create SGMatrix and then use eigen::map but had this one the other way around
 pickle27	worked on my machine but I don't think it memcpy'd fully on travis which was the issue
 lambday	I see.. yes I too use map, seems easier :)
 pickle27	yeah talking about it now Im really not sure why I had it that way in the first place
 lambday	hehe... been there just 2 days back! :D
 lambday	pickle27: will be back after breakfast.. for you its dinner time I guess
 pickle27	haha its like almost bedtime lol
 pickle27	lambday: catch ya later
 lambday	pickle27: hehe... ciao man!
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- sanyam [uid10602@gateway/web/irccloud.com/x-qnjvagnlypgbldrp] has joined #shogun
-!- gsomix [~gsomix@109.188.126.242] has joined #shogun
 gsomix	sonney2k, good morning. finally I fixed my reader. preparing PR.
 gsomix	I'm sorry for what I wasn't yesterday on the channel
 lambday	sonney2k: moin moin
 lambday	sonney2k: SGSparseMatrix is not under parameter framework, shall I add that?
* gsomix away
-!- nube [~rho@49.244.47.119] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: lambday :develop * 350616d / / (4 files): https://github.com/shogun-toolbox/shogun/commit/350616dbfdd96135f5f330f49ff810dff145c32c
 shogun-notifier-	shogun: rational approximation unit-test added
 shogun-notifier-	shogun: Heiko Strathmann :develop * eddf5ca / / (4 files): https://github.com/shogun-toolbox/shogun/commit/eddf5ca6d6412d8dcff95300c1e191a48423e32a
 shogun-notifier-	shogun: Merge pull request #1212 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: rational approximation unit-test added
 shogun-buildbot	build #1198 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1198  blamelist: lambday <heavensdevil6909@gmail.com>
 shogun-buildbot	build #1199 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1199  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #1321 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1321  blamelist: lambday <heavensdevil6909@gmail.com>
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- foulwall [~user@2001:da8:215:6100:acb5:df7a:527c:2a23] has joined #shogun
 shogun-buildbot	build #1322 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1322  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- foulwall` [~user@2001:da8:215:6100:acb5:df7a:527c:2a23] has joined #shogun
-!- gsomix [~gsomix@109.188.126.242] has quit [Remote host closed the connection]
-!- foulwall` [~user@2001:da8:215:6100:acb5:df7a:527c:2a23] has quit [Quit: ERC Version 5.3 (IRC client for Emacs)]
-!- foulwall [~user@2001:da8:215:6100:acb5:df7a:527c:2a23] has quit [Remote host closed the connection]
-!- foulwall [~user@2001:da8:215:6100:acb5:df7a:527c:2a23] has joined #shogun
-!- foulwall [~user@2001:da8:215:6100:acb5:df7a:527c:2a23] has quit [Ping timeout: 252 seconds]
-!- lisitsyn [~lisitsyn@109-226-115-134.clients.tlt.100megabit.ru] has left #shogun []
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@sonney2k	lambday, that would be excellent!
@sonney2k	lambday, and btw regarding implementing DenseFeatures for the complex type - so far everything I implemented in shogun got used sooner or later. In particular if it is data type related.
@sonney2k	So it is not a time waste!
 van51	sonney2k: hey
 van51	sonney2k: should I make an option to normalize the vector if the user wants so and make a PR?
 van51	sonney2k: and if so I'll normalize with just vector.size() which is an upper bound
 lambday	sonney2k: hey.. sorry I was away..
 lambday	sonney2k: alright I'll add support for complex64 in DenseFeatures... (and there were a few others)
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has quit []
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has quit [Remote host closed the connection]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has left #shogun ["PING 1373112359"]
-!- foulwall [~user@2001:da8:215:6100:1422:e7f8:7364:2ed6] has joined #shogun
-!- foulwall [~user@2001:da8:215:6100:1422:e7f8:7364:2ed6] has quit [Ping timeout: 245 seconds]
-!- foulwall [~user@2001:da8:215:6100:895c:6f5:d9c:ece9] has joined #shogun
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
-!- foulwall [~user@2001:da8:215:6100:895c:6f5:d9c:ece9] has quit [Ping timeout: 264 seconds]
-!- lambday [67157f36@gateway/web/freenode/ip.103.21.127.54] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Kevin Hughes :develop * d40ed8e / / (5 files): https://github.com/shogun-toolbox/shogun/commit/d40ed8e4bc8749fc82d5e4ae334ca606b8d647ef
 shogun-notifier-	shogun: added FFDiag AJD algorithm and a unit test.
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * d38be81 / / (5 files): https://github.com/shogun-toolbox/shogun/commit/d38be81e4a61bd4dd73d657041523ae0bdc4b268
 shogun-notifier-	shogun: Merge pull request #1211 from pickle27/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: added FFDiag AJD algorithm and a unit test.
-!- FSCV [~FSCV@189.139.250.209] has joined #shogun
 shogun-buildbot	build #1200 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1200  blamelist: Kevin Hughes <kevin@kevin-M3920.(none)>
-!- lisitsyn [~lisitsyn@109-226-115-134.clients.tlt.100megabit.ru] has joined #shogun
 shogun-buildbot	build #1323 of deb3 - modular_interfaces is complete: Failure [failed compile python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1323  blamelist: Kevin Hughes <kevin@kevin-M3920.(none)>
-!- lambday [67157f36@gateway/web/freenode/ip.103.21.127.54] has quit []
 shogun-buildbot	build #1201 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1201  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- nube [~rho@49.244.47.119] has quit [Quit: Leaving.]
 shogun-buildbot	build #1324 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1324  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- foulwall [~user@li379-21.members.linode.com] has joined #shogun
 foulwall	ping sonney2k
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Read error: No route to host]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- foulwall [~user@li379-21.members.linode.com] has quit [Ping timeout: 268 seconds]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Client Quit]
 van51	sonney2k: I
 van51	sonney2k: I've started working on a streaming version of the HashedDocFeatures
 van51	sonney2k: do these streaming have features *have* to use the CInputParser?
 van51	sonney2k: because I don't see the current version of the Parser to be able to be used easily in text collections like the webspam
 van51	I may be missing something though
 van51	when you see this (and what I asked before) please comment and I'll check the logs later
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has left #shogun ["PART #gsoc-gr :PING 1373132672"]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@sonney2k	van51, yes streamingfeatures is what you would have to support. if it doesn't work with webspam just yet then we just use a different dataset for now
@sonney2k	van51, so just do the online streamingdoc*features trying to not have too much code duplication
@sonney2k	hurray
@sonney2k	the cygwin buildbot find g++ again
@sonney2k	no more compiler RIP
 lisitsyn	sonney2k: what's the reason?
@sonney2k	oh I am upgrading cygwin
@sonney2k	new one has swig 2.0.9
@sonney2k	and lua etc etc
@sonney2k	votjakovr, any idea why regression_gaussian_process_modular.py fails on http://shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1324/steps/test%20python_modular/logs/stdio ?
@sonney2k	votjakovr, could you add some debug code to let us figure out what is wrong?
 votjakovr	sonney2k: hi, have the same problem with numpy 1.7.1
@sonney2k	sonney2k, what do you mean? it is failing or what?
 votjakovr	sonney2k: i mean, that i think that this problem depends on numpy
 lisitsyn	votjakovr: really? why do you think so?
@sonney2k	votjakovr, Checking for Python numpy support ... 1.6.2
@sonney2k	votjakovr, seems an old version is on the buildbot
@sonney2k	votjakovr, IIRC you changed some things in GPs recently no?
@sonney2k	couldn't that be the reason?
@sonney2k	I mean examples also needed to be changed so maybe it is just missing a test data regenerate
 votjakovr	sonney2k: hmm... so why is diff empty?
@sonney2k	votjakovr, no idea
@sonney2k	votjakovr, sounds like bug in test framework
@sonney2k	votjakovr, last working version was
@sonney2k	c868efbc9dc180433fce5b8bf04f77d56fc59c2a
@sonney2k	votjakovr, git diff c868efbc9dc180433fce5b8bf04f77d56fc59c2a  shogun/regression/GaussianProcessRegression.*
@sonney2k	votjakovr, maybe this helps ...
 votjakovr	sonney2k: but i didn't change implementation of algorithms
 votjakovr	sonney2k: so i think, that data should stay the same
@sonney2k	votjakovr, who changed it then?
 votjakovr	sonney2k: sorry, what is changed?
@sonney2k	votjakovr, well please checkout c868efbc9dc180433fce5b8bf04f77d56fc59c2a and see if it still passes the test
@sonney2k	votjakovr, if it does figure out what has changed
@sonney2k	it is bad to have a broken test ...
@sonney2k	so it is important to get it back to work
-!- gsomix [~gsomix@109.188.125.161] has joined #shogun
 gsomix	good evening
@sonney2k	gsomix, good evening! good to see you alive
 gsomix	sonney2k, yeah. There was a storm in Moscow. However, I was saved by the castle of Catherine the Great. :)
 gsomix	sonney2k, btw, https://github.com/shogun-toolbox/shogun/pull/1130
 votjakovr	sonney2k: i've rolled back to c868efbc9dc180433fce5b8bf04f77d56fc59c2a, then i've run tests, and this test is failed and diff is empty (i've reinstalled shogun) :(
@sonney2k	gsomix, did you just update?
 gsomix	sonney2k, yep
@sonney2k	gsomix, looks pretty good now. lets see what travis says and I will merge
@sonney2k	votjakovr, weird
@sonney2k	votjakovr, only explanation would be some update of data or library then
 votjakovr	sonney2k: i've figured, that on line 29 of tester.py: return numpy.all(a == b) is false
@sonney2k	votjakovr, tester.py has some option to -d IIRC to stop when sth differs
@sonney2k	you can then use
@sonney2k	p a
@sonney2k	p b
@sonney2k	to see the two objects
 votjakovr	hmm, yep, they are different
@sonney2k	ok then now you 'only' have to figure out whats wrong
 votjakovr	sonney2k: maximal difference is approx. 1e-12
@sonney2k	votjakovr, if it is just a numerical issue then use some numpy.round trick!
 votjakovr	sonney2k: Btw regenerating of the data helps :)
@sonney2k	votjakovr,
@sonney2k	heh
@sonney2k	if the 1e-12 is justified then we can use this as a fix
 shogun-buildbot	build #996 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/996  blamelist: lambday <heavensdevil6909@gmail.com>, Kevin Hughes <kevin@kevin-M3920.(none)>, foulwall <liuzhengyang@outlook.com>, Soeren Sonnenburg <sonne@debian.org>, Thoralf Klein
 shogun-buildbot	<thoralf.klein@zib.de>, Viktor Gal <vigsterkr@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>, Kevin <kevinhughes27@gmail.com>, Heiko Strathmann <heiko.strathmann@gmail.com>, Fernando Iglesias <fernando.iglesiasg@gmail.com>, van51 <vangelis_51@hotmail.com>, Roman Votyakov <votjakovr@gmail.com>
 lisitsyn	hahha
 gsomix	wow, how many
 votjakovr	sonney2k: ok:) i'll try to find the reason...
@sonney2k	haha
@sonney2k	yeah I managed to get the buildbot back to fail
@sonney2k	looks like the update did help a lot :`-(
 gsomix	sonney2k, green. https://travis-ci.org/shogun-toolbox/shogun/builds/8803120
 votjakovr	wow! travis is green :)
@sonney2k	shogun-buildbot, force build 'cyg1 - libshogun'
 shogun-buildbot	build #997 forced
 shogun-buildbot	I'll give a shout when the build finishes
@sonney2k	gsomix, yeah travis doesn't do everything and no cygwin in particular
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * c392690 / examples/undocumented/python_modular/serialization_complex_example.py: https://github.com/shogun-toolbox/shogun/commit/c39269021fbe8983b9a372320a9a49a8302c6421
 shogun-notifier-	shogun: don't fail bsd bot when json is not available
 shogun-notifier-	shogun: Evgeniy Andreev :develop * 6e4b7db / / (13 files): https://github.com/shogun-toolbox/shogun/commit/6e4b7db37174e8c6b60989966fb086e455212d86
 shogun-notifier-	shogun: added CircularBuffer and LineReader
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * db2aecf / / (13 files): https://github.com/shogun-toolbox/shogun/commit/db2aecff490d83ff12c5b6d595613b58373c9172
 shogun-notifier-	shogun: Merge pull request #1130 from gsomix/feature/getline
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: LineReader class for reading lines from file stream
@sonney2k	gsomix, finally!
 gsomix	sonney2k, thank God. :)
 lisitsyn	there is no such thing!
@sonney2k	gsomix, lisitsyn thank $DEITY then
@sonney2k	in my case DEITY=vapnik
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has joined #shogun
 lisitsyn	well that's better than some unexistent thing ;)
@sonney2k	lambday, what is your $DEITY? DEITY=HeikoS or vapnik?
@sonney2k	lambday, and good evening!
 gsomix	lol
@sonney2k	lambday, you are free to choose
@sonney2k	lambday, I mean choose me ;)
 lambday	sonney2k: :-o
 lambday	:-s
@sonney2k	lisitsyn, I manually rm -rf'd the build directory on cyg1
@sonney2k	lisitsyn, and now it builds
* sonney2k sighs
 lisitsyn	sonney2k: haha
@sonney2k	there might be some weird race condition
 lambday	export DEITY="sonney2k" :-o
 lambday	echo $DEITY
 lambday	sonney2k:
 lambday	sonney2k: lisitsyn I have a problem :-
 lisitsyn	lambday: houston on the line
 gsomix	in my case DEITY=random cool physicist or mathematician. And it seems I know not many cool computer scientists, hm.
* gsomix z-z-z-z
@sonney2k	lisitsyn, https://plus.google.com/photos/111049168280159033135/albums/5897522656212965009/5897522659811359522?pid=5897522659811359522&oid=111049168280159033135
 lambday	lisitsyn: huh?
@sonney2k	lisitsyn, baikonur rather no?
* lambday max(confused)
 shogun-buildbot	build #997 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/997
@sonney2k	lambday, or that https://plus.google.com/photos/111049168280159033135/albums/5897522656212965009/5897522659811359522?pid=5897522659811359522&oid=111049168280159033135
 lisitsyn	lambday: what is the problem?
 lisitsyn	sonney2k: baikonur is kazakhstan actually you know ;)
@sonney2k	lisitsyn, yes since borat
 lambday	sonney2k: whoa!! what was that? looks like our Indian festival "Diwali"
 lambday	:-o
@sonney2k	lambday, a notebook!
 shogun-buildbot	build #1202 of bsd1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1202
@sonney2k	lambday, I thought that was your problem
@sonney2k	all hail shogun-buildbot !
 gsomix	nite guys.
 lambday	sonney2k: HAHAHAHA =)
@sonney2k	he is good
@sonney2k	gsomix, nite
 lambday	luckily, I use insti's computer for shogun stuff... my laptop is safe so far :D
@sonney2k	lisitsyn, this one Borat: Cultural Learnings of America for Make Benefit Glorious Nation of Kazakhstan (2006)
@sonney2k	lambday, heh
 lambday	sonney2k: lisitsyn: the problem is -
 lambday	borat?
 lisitsyn	sonney2k: is that the full name of the movie?
 lisitsyn	haha
 lambday	isn't that the movie maker or something
 lambday	he's hilarious
 lambday	well, the problem is :(
 lisitsyn	that's a role of sacha baron-cohen  lambday
@sonney2k	lisitsyn, yes
 lisitsyn	just like admiral general aladeen :D
 lisitsyn	I don't know what is more hilarious
@sonney2k	lambday, just tell us
 lambday	lisitsyn: I only know "that's" "a" "role" "of" "lambday" of what you just said :D
 lambday	sonney2k: I need to work with sparse matrices
@sonney2k	we are drunk and entropy increasing at this time of day anyways
@sonney2k	lambday, do it!
@sonney2k	so what is the problem
@sonney2k	I do that to
@sonney2k	o
@sonney2k	too
@sonney2k	too tuuut
 lambday	sonney2k: the problem is... :D
 lambday	sonney2k: I need to convert it to eigen3 sparse each time I use that
* sonney2k grabs  a beer and prepares for the worst
 lisitsyn	we had a problem with performance and we went for multithreading
@sonney2k	lambday, uhh ok big one
 lambday	sonney2k: you better.. I'm gonna drop a bomb
 lisitsyn	nwo ew h vea a wto bplemros
@sonney2k	lisitsyn, any experience with that so far
 lisitsyn	sonney2k: sparse?
 lisitsyn	yes
-!- gsomix [~gsomix@109.188.125.161] has quit [Ping timeout: 268 seconds]
@sonney2k	sparse from eigen3 I mean
 lisitsyn	yes
@sonney2k	what format do they internally use
 lambday	so, the number of times I have to convert that is HUGE.. and each time new memory will be allocated and will be real bad performance wise
 lambday	and here is the bomb
 lisitsyn	CCR sonney2k
@sonney2k	lambday, yeah not possible that is clear
 lambday	I want to use eigen
 lisitsyn	ehm
 lambday	3s' sparsematrix as a member
 lisitsyn	CC/CR
 lisitsyn	any
 lambday	and want serialization/param registration :(
 lisitsyn	uh
 lambday	with that
* lisitsyn kills himself
 lambday	lisitsyn: no don't die :(
 lambday	me cries
 lambday	fuck!
* lambday cries
 lisitsyn	lambday: hah
 lisitsyn	okay
@sonney2k	lets all wine like real men!
 lisitsyn	we should go for SURGERY
* sonney2k grabs another beer
 lambday	shit man! I am missing all the drinks.. :(
 lambday	I don't have any atm :'(
 lisitsyn	lambday: I am into the eigen3 code now
 lambday	lisitsyn: which code?
@sonney2k	lambday, how big is that matrix?
 lisitsyn	lambday: sparse
@sonney2k	lambday, there are a couple of options
 lambday	sonney2k: say, a mil x a mil
@sonney2k	a) not use eigen3 for sparse
 lambday	sonney2k: what else we're gonna use?
 lambday	I need to run iterative solvers with that :(
@sonney2k	b) use eigen3 for sparse but convert it *once* from SGSparseMatrix
 lambday	I like the second..
 lambday	but then I need to keep it as a param
 lisitsyn	lambday: all you need is love^W
 lisitsyn	is
@sonney2k	c) not use SGSparseMatrix except for serialization
@sonney2k	lambday, no I mean how big is the matrix in terms of non-zero elements
 lisitsyn	CompressedStorage::Map(Index* indices, Scalar* values, size_t size)
@sonney2k	lambday, mil x mil is nothing for a really sparse matrix :)
 lambday	sonney2k: wait let me check
@sonney2k	lisitsyn, shogun uses LIL :) https://en.wikipedia.org/wiki/Sparse_matrix#List_of_lists_.28LIL.29
 lambday	200,000 nz elements
 lisitsyn	sonney2k: I know
@sonney2k	lambday, so small
 lisitsyn	sonney2k: I believe its conversion is fast
 lisitsyn	nobody would ever notice that
 lambday	sonney2k: but that's the demo that we're gonna prepare
@sonney2k	lambday, in this case conversion is very cheap
 lisitsyn	I construct sparse matrices in tapkee dynamically
@sonney2k	lambday, do you know how big matrices might become
 lisitsyn	it is like less than 0.01s or so
 lambday	Heiko knows
@sonney2k	lisitsyn, yeah even less I think
 lisitsyn	lambday: serious things happen in solvers I guess rgiht?
@sonney2k	lambday, conversion is only a problem when you have hard memory constraints
@sonney2k	lambday, but this here is just 1MB
 lambday	sonney2k: wait, that can't be right! the matrix I have for ozone is about 32 mb
 lisitsyn	lambday: what I suggest now
 lisitsyn	use construct from triplets thingy
 lisitsyn	if it is slow (measure first!)
@sonney2k	lisitsyn, does eigen3 support using CRS / CCS based matrices
 lisitsyn	sonney2k: if you have arrays of indices and values
 lisitsyn	yes
 lambday	sonney2k: lisitsyn and the main problem is - I need to do this convert this like 1,000,000x20 times
@sonney2k	lambday, lisitsyn, if so we should have a converter from LIL -> CRS / CCS
 lisitsyn	lambday: why?
 lambday	lisitsyn: sonney2k I already added an util to convert to eigen3 sparse in eigen3.h
@sonney2k	lambday, yeah why?
 lambday	sonney2k: I can convert it once and store inside the class as a member.. but that requires eigen3 sparse to be make it as a member
 lambday	no serialization no cloning nothing is possible
 lambday	but
 lisitsyn	still?
 lisitsyn	20M times?
 lambday	we'll be needing that I guess for parallel computation thing - same framework shoudl work
 lambday	sonney2k: lisitsyn we actually need to compute many many estimates of log-det
 lambday	20 for each
 lambday	1 mil is the number of estimates I am guessing
 lisitsyn	what 1M comes from?
 lisitsyn	ah
 lambday	oh no
 lambday	wait!
 lambday	I was wrong!
 lambday	it should be 1,000,000x20x100
 lisitsyn	ehm
@sonney2k	superpowers!
 lisitsyn	you need to solve
 lisitsyn	1M x 1M sparse matric
 lisitsyn	matrix
 lisitsyn	1M times
 lisitsyn	*20*100
@sonney2k	lisitsyn, don't forget it is /really/ sparse
 lisitsyn	sonney2k: no I understand but it is like a lot of time anyway
@sonney2k	lambday, I still don't understand how exactly this is working
 lambday	I don't need to solve, but I need to convert it to eigen3-sparse from SGSparse this number of time
 lambday	sonney2k: well
 lisitsyn	lambday: okay why to convert it so many times?
 lambday	initial plan was to keep SGSparseMatrix as a member of our opertor class
 lisitsyn	ahh so you apply operator
 lambday	yes
 lambday	exactly
 lisitsyn	and when you apply operator
 lisitsyn	you convert
@sonney2k	lambday, ahh ok
 lambday	each time I need to apply, I need to convert
@sonney2k	lambday, well a few more ideas
 lisitsyn	yes I have too
 lambday	and if I don't get to keep eigen3's sparse inside the class, we're stuck
 lisitsyn	sonney2k: you first
 lisitsyn	:D
 lisitsyn	lambday: there is a way to put it inside
 lambday	sonney2k: please :(
@sonney2k	a) you could call finalize() or sth to make the conversion back to SGSparseMatrix
 shogun-buildbot	build #1325 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1325  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	b) we could add a different storage layout to SGSparseMatrix
@sonney2k	(as in CCS, CRS)
@sonney2k	if eigen3 can immediately use this
 lambday	that would be great!
 lambday	like map for dense
 lambday	ours is an adjacency list, right
 lisitsyn	my other solution is
@sonney2k	lisitsyn, your ideas?
 lisitsyn	just add a base class in operator
 lisitsyn	like MatrixHandler
 lambday	then?
 lisitsyn	and declare EigenMatrixHandler in .cpp
 lisitsyn	and use it inside
@sonney2k	lisitsyn, so it would be making eigen3 work with LIL?
 lambday	lisitsyn: I didn't get.. I need to store it as a member.. AND also probably need serialization
 lisitsyn	sonney2k: I mean it would convert once
 lisitsyn	lambday: ahh serialization sorry
 lambday	sonney2k: lisitsyn can't we add Eigen::SparseMatrix as a ctype or something?
 lambday	:(
 lisitsyn	ctype?
@sonney2k	taht would be option c) then - make eigen3 support LIL
 lambday	LIL=? :(
 lisitsyn	list of lists
@sonney2k	lambday, our sparse matrix format
 lambday	ohkay
 lambday	but when we need to multiply vectors with it, I think LIL is not a good option
@sonney2k	lambday, why not?
 lambday	I mean, if I can directly use eigen3's sparse, I don't need SGSparseMatrix at all for our purpose
 lisitsyn	lambday: what do you use eigen3 here ?
 lisitsyn	for*
@sonney2k	lambday, yeah problem is with serializtion only
 lambday	mat-vec multiplications
 lambday	which is really fast
 lisitsyn	just multiply?
 lambday	for iterative solvers, yes
 lisitsyn	there is no special tricks here
 lambday	and that's what we'll be using sparse for, so yes
 lisitsyn	lambday: are you computing largest eigenvalues?
@sonney2k	lambday, ok in this case we have d) do multply with shogun's code
 lambday	lisitsyn: yes that, and also writing a cg solver
 lisitsyn	lambday: are you going to estimate smallest too?
 lambday	sonney2k:you mean, add  a new method with SGSparse?
 lambday	lisitsyn: yes, extremal
 lambday	but that's not where I'll be using it only..
@sonney2k	lambday, it has it already IIRC
* sonney2k checks
 lisitsyn	lambday: then you'd need to solve systems too?
 lambday	lisitsyn: yes that's the main part
 lambday	each estimate generates like a lot of systems which need to be solved using iterative solvers
 lambday	for sparse
 lisitsyn	are you writing your own solver for that?
@sonney2k	lambday, yes you could do sparse_matrix[index].dense_dot()
 lambday	yep, have to
 lambday	(well, taking krylstat's)
 shogun-buildbot	build #1203 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1203  blamelist: Evgeniy Andreev <gsomix@gmail.com>, Soeren Sonnenburg <sonne@debian.org>
 lisitsyn	lambday: why have to btw?
 lambday	sonney2k: that computes mat-vec product?
 lambday	lisitsyn: we need a solver that solves a family of shifted systems simultaneously
 lambday	COCG_M
 lambday	for complex
 lisitsyn	I see
 lambday	I don't think eigen3 provides that
 lisitsyn	no
 lisitsyn	haven't seen such thing there
 lambday	but mat-vec product is the key here and we gotta do it many many times
@sonney2k	lambday, well just for one row.
 lambday	I want it to be fast :(
* lambday scratches his head
@sonney2k	lambday, but you could easily add a function to SGSparseMatrix using that then
 lisitsyn	most of things that make code fast are not that obvious and you'd have to measure anyway
@sonney2k	it is easy and will be fast
@sonney2k	the dense_dot has jus non-zero elements in vector operations
 lambday	sonney2k: we'll be needing sparse-matrix-dense vec products
 lambday	and also sparse-matrix-sparse-vector products
 lisitsyn	bah boeing 777 crashed at SFO
 lambday	what!
@sonney2k	lambday, we have that
@sonney2k	lambday, sparse_dot()
 lisitsyn	*just* two dead
 lambday	sonney2k: alright I'll check then
 lambday	so, not use eigen3 at all??
@sonney2k	lisitsyn, that is where we will arrive for GSoC summit
 lambday	when is it?
 lisitsyn	sonney2k: I am on the waiting list :P
@sonney2k	lisitsyn, lucky you
@sonney2k	lambday, it should take you no more than a few minutes to add these 2 funcitons to SGSparseMatrix
 lambday	sonney2k: lisitsyn oh but the problem is.. we don't have serialization with SGSparseMatrix either
@sonney2k	lambday, just use dense_dot and sparse_dot from SGVector for that
 lambday	is there any reason it wasn't added?
 lisitsyn	lambday: oh well it is easier though
 lambday	sonney2k: alright then
@sonney2k	lambday, then you can measure how fast things are for eigen3 / sgsparse* for your application
 lisitsyn	lambday: the only reason is not enough hours in day of sonney2k and lazyness of me
 lambday	:D
 lambday	sonney2k: okay
@sonney2k	no idea if eigen3 is doing it faster currenlty
 lambday	sonney2k: I think they do :-/
 lisitsyn	sonney2k: what exactly?
 lambday	mat-vec products, right?
@sonney2k	lambday, problem with sparse matrices is that you don't have contiguous memory access
 lambday	yes
@sonney2k	so I don't expect taht
 lisitsyn	I think their storage is more cache-efficient
 lisitsyn	it is contiguous
@sonney2k	lisitsyn, ours is contiguous
@sonney2k	they have to look into different index tables all the time
 lisitsyn	sonney2k: but our columns are not continuous right?
@sonney2k	but we have index / value contiguos in memory
 lisitsyn	of a column
 lisitsyn	not of the whole matrix, right?
-!- lambday_ [67157f4c@gateway/web/freenode/ip.103.21.127.76] has joined #shogun
 lambday_	sonney2k: lisitsyn sorry I got dc
 lisitsyn	eigen's storage is just two arrays
@sonney2k	lisitsyn, well malloc will usually allocate it contigously
 lisitsyn	we have an arrays of contiguous arrays
@sonney2k	yes true
 lisitsyn	sonney2k: still a room for cache misses
@sonney2k	lisitsyn, for a nnz=100k matrix theirs might be in cvache completely
 lambday_	yep
@sonney2k	lisitsyn, I don't expect CCS / CSR to be better to the contrary
 lisitsyn	I have no idea what is better
@sonney2k	lisitsyn, I mean if we allocated one block of memory
@sonney2k	and then had the lists in there contigously
@sonney2k	then we would certainly win
@sonney2k	and I guess malloc does just that normally
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has quit [Ping timeout: 250 seconds]
 lisitsyn	I don't know if compilers optimize that
 lisitsyn	but you still kind of jump here
 lambday_	is there any way we can test that?
 lisitsyn	from array of pointers to the array of values
 lisitsyn	lambday_: hmm you can indeed
 lisitsyn	lambday_: multiply some matrix as SGSparsematrix and as Eigen3 sparsematrix
 lisitsyn	with some vector or so
 lisitsyn	and check cache misses with valgrind ;)
@sonney2k	lisitsyn, look at this
 lisitsyn	and walltime and other things like that
 lambday_	I was trying to find some page that I saw probably, regarding mat-vec products
@sonney2k	int main(int argc, char** argv)
@sonney2k	{
@sonney2k	    void* a=malloc(256);
@sonney2k	    void* b=malloc(256);
@sonney2k	    printf("%p %p\n", a,b);
 lambday_	not sure where did I see that
@sonney2k	}
@sonney2k	0x1dcb010 0x1dcb120
 lisitsyn	sonney2k: yes I understand that
@sonney2k	contigous!
@sonney2k	but there might be other tricks
@sonney2k	I think cache misses might rather come from accessing the million dim vector
 lisitsyn	I am just afraid it reloads the cache
@sonney2k	it is randomly jumping in there
 lisitsyn	when working with list of lists and the list
@sonney2k	lambday_, ok we are guessing too much now. just try it out
 lambday_	but the entries are SparseVectorEntries, can be created randomly, not col by col.. and then added to particular row or col.. so when we try to access it sequentially, it can be slow
@sonney2k	lisitsyn, should we have some directory in shogun/benchmarks?
@sonney2k	or so where we do such experiments?
 lisitsyn	sonney2k: not in code right?
 lisitsyn	in examples I guess
@sonney2k	lisitsyn, no
@sonney2k	benchmarks
 lisitsyn	they are typically not in code I think
@sonney2k	as in shogun/tests shogun/examples shogun/benchmarks
 lisitsyn	ahh
 lisitsyn	yes
 lisitsyn	didn't get you
@sonney2k	lambday_, so please add it there
@sonney2k	lambday_, van51 can add his dotfeatures benchmarks there too
 lambday_	sonney2k: umm... what will go there in the benchmarks?
 lambday_	I mean, I shouldn't add the dot in lib/SGSparseMatrix.h ?
@sonney2k	lambday_, the mil x mil SGSparsematrix with nnz=100k times dense vector run say 100 times
 lambday_	or just the experiment code goes there
@sonney2k	lambday_, yes
@sonney2k	to both
 lambday_	okay
@sonney2k	lambday_, so feel free to do the same test with eigen3 there and compare
@sonney2k	I am curious what the result will be
 lambday_	yes...
@sonney2k	lambday_, so just do it for the most needed operation for now (and only implement that)
@sonney2k	so when we figure out it doesn't work we can do it differently again
 lambday_	sonney2k: alright then
 lambday_	in the krylstat code (that erlend wrote) they use eigen3 everywhere.. ours shouldn't be slower than that
 lambday_	I'm sorry again. our mil x mil sparse matrix would have at least a mil nz entries (main diagonal)
 lambday_	anyway, I'm trying
@sonney2k	lambday_, try to create a 'realistic' sparse matrix ohh and note that sparse vector indices must be sorted
 lambday_	sonney2k: yes
 shogun-buildbot	build #1326 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1326  blamelist: Evgeniy Andreev <gsomix@gmail.com>, Soeren Sonnenburg <sonne@debian.org>
--- Log closed Sun Jul 07 00:00:20 2013
