--- Log opened Wed Nov 28 00:00:15 2012
-!- ptizoom [~christian@79-71-89-182.dynamic.dsl.as9105.com] has quit [Quit: Ex-Chat]
-!- ptizoom [~christian@79-71-89-182.dynamic.dsl.as9105.com] has joined #shogun
 wiking	blackburn:     http://en.wikipedia.org/wiki/S.N.U.F.F.
-!- heiko [~heiko@46.17.162.114] has quit [Quit: Leaving.]
 shogun-buildbot	build #188 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/188
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 250 seconds]
 blackburn	wiking: the most scary thing about pelevin is that his dreams come true :D
-!- blackburn [~blackburn@37.61.180.167] has quit [Quit: Leaving.]
-!- K0stIa [~kostia@alt2.hk.cvut.cz] has left #shogun []
-!- ptizoom [~christian@79-71-89-182.dynamic.dsl.as9105.com] has quit [Quit: Ex-Chat]
-!- ptizoom [~christian@79-71-89-182.dynamic.dsl.as9105.com] has joined #shogun
-shogungit:#shogun- [shogun] sonney2k pushed 2 new commits to master: https://github.com/shogun-toolbox/shogun/compare/11acf9002c3f...b093d9e7b397
-shogungit:#shogun- shogun/master 31e07b6 Viktor Gal: Define EMachineType for the SO learners
-shogungit:#shogun- shogun/master b093d9e Soeren Sonnenburg: Merge pull request #841 from vigsterkr/master...
@sonney2k	wiking, we should rename get_classifier_type to get_machine_type though :)
-!- K0stIa [~kostia@2001:718:2:1634:4a5b:39ff:fe99:cc49] has joined #shogun
 shogun-buildbot	build #449 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/449  blamelist: Viktor Gal <viktor.gal@maeth.com>
-shogungit:#shogun- [shogun] sonney2k pushed 1 new commit to master: https://github.com/shogun-toolbox/shogun/commit/cb56c98b97bd259a507be3aec37d63985a62ff68
-shogungit:#shogun- shogun/master cb56c98 Soeren Sonnenburg: fix hdf5file (implement missing functions) and add toy data set and example
 shogun-buildbot	build #450 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/450  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #685 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/685  blamelist: Viktor Gal <viktor.gal@maeth.com>
 shogun-buildbot	build #686 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/686  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #451 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/451  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- heiko [~heiko@46.17.162.114] has joined #shogun
 shogun-buildbot	build #687 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/687  blamelist: Soeren Sonnenburg <sonne@debian.org>
 sonne|work	wiking: is that on your account or is this due to the director bmrm changes from blackburn http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/687/steps/test%20python_modular/logs/stdio ?
 wiking	sonne|work: director changes
 wiking	imho
-!- heiko [~heiko@46.17.162.114] has quit [Quit: Leaving.]
 wiking	sonne|work: well all of them are classifiers indeed
 wiking	i mean the so learners
 wiking	so it's appropriate there
-!- heiko [~heiko@46.17.162.114] has joined #shogun
-!- heiko [~heiko@46.17.162.114] has quit [Client Quit]
-!- heiko [~heiko@46.17.162.116] has joined #shogun
-!- heiko [~heiko@46.17.162.116] has quit [Read error: Connection reset by peer]
-!- heiko [~heiko@46.17.162.116] has joined #shogun
 sonne|work	wiking: yeah but we have this in CMachine and it will certainly be defined for some regression method too
-!- heiko [~heiko@46.17.162.116] has quit [Ping timeout: 260 seconds]
-!- heiko [~heiko@46.17.162.116] has joined #shogun
-!- heiko [~heiko@46.17.162.116] has quit [Ping timeout: 250 seconds]
-!- heiko [~heiko@46.17.162.116] has joined #shogun
-!- heiko [~heiko@46.17.162.116] has quit [Ping timeout: 265 seconds]
-!- heiko [~heiko@46.17.162.116] has joined #shogun
-!- zxtx [~zv@ool-45750cfe.dyn.optonline.net] has quit [Ping timeout: 246 seconds]
-!- heiko [~heiko@46.17.162.116] has quit [Quit: Leaving.]
-!- heiko [~heiko@46.17.162.116] has joined #shogun
-!- heiko [~heiko@46.17.162.116] has quit [Ping timeout: 252 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 sonne|work	n4nd0: K0stIa had a suggestion regarding directors for structured ouptut machine... check the IRC logs from yesterday...
 n4nd0	sonne|work: all right, thanks!
 n4nd0	K0stIa: hi!
 n4nd0	wiking: around?
 K0stIa	n4nd0: Hi
 n4nd0	K0stIa: so you had a couple of suggestions for the so-svm, right?
 n4nd0	I have just read your conv with wiking yesterday in the logs
 n4nd0	first, there is something about the loss function, you say that it is not necessary?
 K0stIa	n4nd0: 1. in so-svm is not only working with features, but in current shogun implementation it does. in so-svm there should be some oracle which at given point can evaluate risk value and its subgradient
 wiking	n4nd0: yes
 wiking	n4nd0: tell me
 n4nd0	wiking: hey, let me discuss with K0stIa first about this and I will ask you later :)
 wiking	k
 K0stIa	for bmrm its enough just to provide such oracle. i.e. function
 n4nd0	K0stIa: is the oracle the same as the argmax function?
 K0stIa	no
 K0stIa	well...
 n4nd0	ok :) tell please what it is then
 n4nd0	tell me*
 K0stIa	it fact it will compute some argmax
 K0stIa	however currently you have to pass features in advance, right ?
 n4nd0	the features have to be given to the svm object before training,yes
 n4nd0	I am not sure if that is what you meant though
 K0stIa	it is
 n4nd0	ok
 K0stIa	and this is not good for so-vsm
 n4nd0	K0stIa: if not given, how would you perform training?
 K0stIa	there could be given a MRF or P-CFG or something else.. and to put in so-svm as a features in your implementation is not correct I guess
 n4nd0	well I guess that depends on what do you mean with correct :) AFAIK it properly worked not so long ago
 n4nd0	maybe it is not the best way of doing it, but still correct probably
 n4nd0	anyway, let me see what you mean with MRF and P-CFG because idk what tha is
 K0stIa	agree, it used to work correctly :)
 K0stIa	MRF = Markov Random Field
 K0stIa	P-CFG = probabilistic contex free grammar
 n4nd0	okej
 n4nd0	mmm
 K0stIa	how would you learn such things with current implementation ?
 K0stIa	it's possible..
 n4nd0	well I don't think that is implemented
 K0stIa	and what I say
 K0stIa	is to provide just an oracle
 K0stIa	and then it could be easily used for such things
 n4nd0	hehe I am not still sure what the oracle concept is :)
 wiking	n4nd0: that generates u the features imho
 wiking	so that u want to be able to set an MRF as an oracle
 wiking	right?
 K0stIa	oracle is something that takes a vector as input parameter and returns risk subgradient and its value
 n4nd0	aham I see
 wiking	well u can do that with overriding risk function
 n4nd0	yeah
 n4nd0	isn't it that oracle precisely what we were calling risk function here?
 K0stIa	yep, and currently it is not possible
 K0stIa	yes, it is
 wiking	K0stIa: it is
 n4nd0	ok ...
 K0stIa	moreover
 K0stIa	there is a sum
 n4nd0	then I believe this is not a problem with giving features
 wiking	K0stIa: class MyOwnStructuredModel : public CStructuredModel
 wiking	and you can write any kind of risk function
 n4nd0	K0stIa: yeah, I read also the problem you mentioned with the sum
 n4nd0	K0stIa: but about the oracle thing, can't it be done as wiking is saying?
 wiking	K0stIa: as it's virtual float64_T risk(...)
 n4nd0	I believe you are just talking about the risk function
 wiking	so it's a virtual function, you implement it as u wish
 wiking	more over
 wiking	it's a pure virtual
 n4nd0	you just need to provide your own implementation if the one that exists doesn't fit your needs
 wiking	hence u must implement it afaik
 K0stIa	yyes, it could be done. and then it would be nice to create a class that takes just oracle and doesn't require loss, and features ti pass in so-svm
 wiking	ok it's not pure virtual ... but virtual
-!- heiko [~heiko@46.17.162.116] has joined #shogun
 wiking	K0stIa: ?
 K0stIa	because in that sum you supose the features to be not None
 wiking	you can NULL the loss function
 K0stIa	and I cannot with features
 K0stIa	you take dimension from them
 wiking	no
 K0stIa	and the sum is the number of features...
 K0stIa	yes
 wiking	get_dim is pure virtual
 wiking	so you set it as u wish
 wiking	what sum we are talking about now?
 K0stIa	shogun / src / shogun / structure / StructuredModel.cpp 
 wiking	n4nd0: enlighten me as i didn't read the sum part from yesterday
 K0stIa	oh, sorruy
 wiking	K0stIa: so what sum?
 n4nd0	wiking: yeah I think K0stIa is concerned about a sum performed in the learning algo. he/she suggested to be able to it outside so it could be parallelized
 K0stIa	float64_t CStructuredModel::risk(float64_t* subgrad, float64_t* W, TMultipleCPinfo* info)
 wiking	K0stIa: yes
 n4nd0	K0stIa: but it just parallelization your concern?
 K0stIa	you go through all features and do sum
 wiking	n4nd0: sum in which learning algo?
 wiking	K0stIa: you do whatever in that risk function
 n4nd0	K0stIa: then I think the solution is not to allow to give it from outside but to implement parallelization in shogun
 n4nd0	wiking: let me see
 K0stIa	there is no risk function in python
 K0stIa	only argmask
 K0stIa	argmax
 wiking	K0stIa: c++ it
 n4nd0	wiking: the one required byt bmrm
 wiking	n4nd0: which?
 wiking	n4nd0: CStructuredModel::risk(float64_t* subgrad, float64_t* W, TMultipleCPinfo* info)
 wiking	?
 wiking	K0stIa: float64_t CStructuredModel::risk(float64_t* subgrad, float64_t* W, TMultipleCPinfo* info)
 wiking	this is a virtual function
 n4nd0	wiking: I am not sure to be honest
 wiking	you can implement it as you wish in your own structuredmodel
 wiking	just give back a gradient vector
 wiking	and a risk value
 K0stIa	can you make it visible in python such that I can work with it as with oracle ?!
 wiking	that's all u need to do
 wiking	K0stIa: mate.... c++
 wiking	you are now doing something funky so i highly suggest u to implement this in c++
 n4nd0	but that should be possible to do from python as well
 wiking	because maybe in a director class u won't be able to do it
 n4nd0	wiking: why not? isn't it just a similar idea to provide a custom argmax?
 K0stIa	wiking: don't teach me please what shall I use to ehat I am doing it.... I just thought that I can use shogun for it.. so far I can not..
 wiking	K0stIa: lolface
 wiking	K0stIa: i'm not teaching you
 wiking	i'm saying that maybe you would be better off doing that
 wiking	instead of doing this with python
 wiking	as in c++ you would sure get what u would like to have
 wiking	and director classes cannot really do everything you really want
 wiking	n4nd0: yeah sure, implement in the director class as a virtual func
 K0stIa	with python the it is the same if it is done properly..
 n4nd0	K0stIa: well that's probably not true..
 wiking	K0stIa: if u think it's not done properly feel free to send in fixes of course
 K0stIa	it is...
 K0stIa	there is still segmention fault in python
 wiking	K0stIa: yes
 n4nd0	I am just guessing but my fundamentals tell me that if you want to do it something fast, then you rather C++ than python
 wiking	K0stIa: do you know why? do you have a fix for it?
 K0stIa	so, it is not done properly
 wiking	K0stIa: i think it's a little bit rude coming in here and telling it that this is not done properly
 K0stIa	could be.
 wiking	i hope you realise that everybody works on this for free as an open source project
 K0stIa	sorry.
 n4nd0	c'mon, let the peace flow in here :)
 wiking	out of their free time
 wiking	so if u think that it's not done properly
 wiking	then please have a fix for it as you think it would be proper
 K0stIa	I just wanted to say there is a bug
 wiking	i think that's fair thing to ask
 K0stIa	ok.
 wiking	or at least point out where the bug is coming from
 wiking	exactly
 n4nd0	K0stIa: so to sum up
 K0stIa	at least I am not claiming that I know how to find global minimum of non-convex functions :)
 wiking	K0stIa: ok mate
 wiking	i think you stepped over a line here
 wiking	if u don't know what u are really talking about that's ok
 wiking	but if you start bitching people
 wiking	that's really not nice
 wiking	moreover... the code for it is there
 wiking	so if u don't believe it then please test it before really starting here to be sarcastic
 wiking	diky
 n4nd0	K0stIa: are you still around? I just want to find a possible solution for the flaws you pointed out
 K0stIa	n4nd0: I am
 n4nd0	K0stIa: all right
 n4nd0	K0stIa: so, would being able to provide a custom implementation of the risk function from python solve your request?
 n4nd0	as far as I understood, it should
 K0stIa	1. the main idea about structured output learning is not to work with features. so, there just should be interface for svm where you will say which solver you want to use and risk function, there should be no features, labels and no dependency in structuremodel class about it in very abstract class
 wiking	K0stIa: from what you are writing i think you mean bundle method risk minimization instead of SO learning
 n4nd0	K0stIa: I am not sure what you mean at the end with "about it in very abstract class"
 wiking	as SO learning is really all about structured labels
-!- heiko [~heiko@46.17.162.116] has quit [Ping timeout: 260 seconds]
-!- heiko [~heiko@46.17.162.116] has joined #shogun
 K0stIa	wiking: since shogun has only BMRM, yes I mean BMRM
 wiking	K0stIa: nope
 n4nd0	K0stIa: you are wrong in that
 n4nd0	K0stIa: we have more than BMRM
 wiking	K0stIa: shogun has 3 different SO learners atm
 K0stIa	n4nd0: in what ?
 K0stIa	n4nd0: you have proximals
 n4nd0	proximals?
 K0stIa	proximal BMRM
 wiking	K0stIa: primalmosekSOSVM and CCSOSVM
 K0stIa	and something with non-convex bmrm
 wiking	they are completely unrelated with BMRM
 wiking	and they are SO learners
 n4nd0	K0stIa: exactly
 wiking	what you want is a pure bundle method risk minimizer
 n4nd0	there is more stuff in here than the bundle methods to do SO
 wiking	untangled from SO model
 wiking	about which there has been plans to do so
 wiking	but time is a bad constraint for everybody here
 wiking	but we would be more than happy if u would do that code refactoring
-!- heiko [~heiko@46.17.162.116] has quit [Read error: Connection reset by peer]
 K0stIa	well, can I do that changes by myself ?
-!- heiko1 [~heiko@46.17.162.116] has joined #shogun
 n4nd0	or you could talk with Michal since he is the bundle guru here :)
 wiking	K0stIa: yeah sure
 wiking	clone yourself a shogun repo
 wiking	make the changes
 wiking	send in via a standard PR
 K0stIa	I will do it after deadline :D
 wiking	and people will review it and when it's n a good shape
 wiking	it's going to be merged into master branch for sure
 n4nd0	hehe and you can always ask around here if you need help with development
 wiking	the plan was to put that under src/shogun/optimization
 K0stIa	guys, I am sorry for being rude
 wiking	something like RiskMinimizer
 wiking	and it would not need more than 2 function calls
 wiking	imho
 wiking	and a new class called RiskFunction
 K0stIa	wiking: there is still segmentation fault in python
 wiking	that is a pure abstract class
 wiking	where you cen define your risk function
 wiking	*can
 K0stIa	wiking, I understand what is written there...
 wiking	and then move all the current BMRM implementations under that
 wiking	RiskMinimizer
 wiking	and then you would have what u would like to have
 wiking	with the current state
 wiking	you can have BMRM
 wiking	w/o features and labels
 wiking	and anything
 wiking	as BMRM only calls 2 functions from StructuredModel
 wiking	if u check
 wiking	get_dim
 wiking	and risk
 wiking	so you only need to really implement that 2 function properly
 wiking	and the rest as a dummy function
 wiking	and pass just dummy values to the structuredmodel
 K0stIa	do you agree that for SO features and labels not needed if you want to model really complex structure ?
 wiking	K0stIa: well if u want to do SO learning
 wiking	you need to define yourself
 wiking	a SO label
 wiking	otherwise what's the use of SO learning
 K0stIa	the point that you cannot have features as a vectors....
 wiking	and how would you then calculate w on the end?
 K0stIa	it could be graphs... grammars and etc/
 wiking	i mean you need to generate from your input somehow a vector
 n4nd0	K0stIa: your features don't need to be vectors
 K0stIa	by w you mean what ?
 wiking	K0stIa: in BMRM you calculate 1/2*lambda ||w||^2 + R(w)
 wiking	right?
 K0stIa	right
 wiking	so that w
 wiking	is a vector
 wiking	there's no way around that one
 K0stIa	n4nd0: in python they are only vectors
 n4nd0	K0stIa: mmm no
 wiking	K0stIa: no
 n4nd0	check under shogun/features
 wiking	K0stIa: you can have any type of features
 wiking	K0stIa: moreover if you don't like it
 wiking	or none of them fits your needs
 wiking	you can define your own features
 wiking	but then again
 K0stIa	but not in oython right ?
 K0stIa	*python
 n4nd0	you can use them in python yes
 wiking	shogun::CDirectorDotFeatures
 wiking	there's a director class for it
 wiking	so you can define your own features in python as well
 n4nd0	K0stIa: I am not sure if you are aware that shogun's core is written in C++. We use SWIG to generate code from this C++ core to be used in other languages, e.g. python
 wiking	^ so you are really better off to do implement your stuff in c++
-!- heiko1 [~heiko@46.17.162.116] has quit [Ping timeout: 260 seconds]
 wiking	as swig has some limitations
 K0stIa	n4nd0: I am aware, but for instance you can not overload risk function there
-!- heiko [~heiko@46.17.162.116] has joined #shogun
 K0stIa	ok, guys.. I have to work.
 wiking	K0stIa: do u have a fix for it?
 wiking	i mean essentially you have to do 2 things, fix the DirectorStructuredModel
 n4nd0	K0stIa: but that is becuase probably there is no director for the risk function implemented (I am not sure it there is or not actually)
 wiking	and then maybe hack around in the swig headers
 K0stIa	n4nd0: there is no.. but I guess blackburn already did it
 n4nd0	K0stIa: what?
 K0stIa	director for risk
 n4nd0	if he did it, how it is that tere is no?
 K0stIa	function
 K0stIa	I asked him, he said when he willl be at home he will do it
 n4nd0	I see
 wiking	why not just fix it yourself?
 K0stIa	well, I have not been developing it.. I could easily break it
 wiking	K0stIa: well try it and send a patch
-!- heiko [~heiko@46.17.162.116] has quit [Ping timeout: 256 seconds]
 wiking	there's plenty of people here who would comment on it
 K0stIa	maybe letter I will do it...
 K0stIa	*later
 K0stIa	:D
@sonney2k	w00t
 K0stIa	wiking: will you check that segmentation fault ?
 wiking	K0stIa: i'd like to
 wiking	K0stIa: but aint' got the resources for it
 wiking	i have to work on my own stuff as well
 wiking	but as i said earlier
@sonney2k	we still have crappydo ptr's in Sparse/StringFeatures instead of SG* data structures
 K0stIa	I understand
 wiking	if you point me to the exact bug
 wiking	so do the debugging for me
 K0stIa	wiking: I don't know shogun well :(
 wiking	K0stIa: it's not about shougn
 wiking	it's about debugging
 wiking	so just give me the segfault result from gdb for example
 wiking	then i could at least be able to tell you something
-shogungit:#shogun- [shogun] sonney2k pushed 1 new commit to master: https://github.com/shogun-toolbox/shogun/commit/c2983fb04f8394fa2e5a6cfc7e1c835ab8fbfd97
-shogungit:#shogun- shogun/master c2983fb Soeren Sonnenburg: use overloading for all file functions...
 K0stIa	well, if you know the code then it easier to look for bugs
 wiking	K0stIa: but here's it's a segfault
@sonney2k	wiking, I still have /home/sonne/Documents/priv/repositories/shogun/src/shogun/structure/libncbm.cpp|693 col 55| warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
 wiking	catch it with gdb
-!- heiko [~heiko@46.17.162.116] has joined #shogun
 wiking	and send me back the backtrace
@sonney2k	alright. time to leave the train
 wiking	K0stIa: this is completely unrelated to shogun
 n4nd0	and time to leave to train for me :)
 n4nd0	see you guys!
 K0stIa	could be...
 wiking	it's about debugging the problem itself
 wiking	as now i don't have the means to do the debugging
 K0stIa	me neither:)
 wiking	i.e. get the backtrace of that segfault
 wiking	K0stIa: yes you do
 wiking	you have the modular python installed
 wiking	and you have the code
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 wiking	and i guess you have gdb in your machine
 K0stIa	yep :)
 wiking	so if you have all these
 K0stIa	I will try to look at it later ...
 wiking	then you have to just do the debugging
 K0stIa	we will see :)
 K0stIa	I have to work
 wiking	good luck with it
 K0stIa	good luck
 K0stIa	and bye
-!- K0stIa [~kostia@2001:718:2:1634:4a5b:39ff:fe99:cc49] has left #shogun []
-!- K0stIa [~kostia@2001:718:2:1634:4a5b:39ff:fe99:cc49] has joined #shogun
-!- heiko [~heiko@46.17.162.116] has left #shogun []
-shogungit:#shogun- [shogun] vigsterkr opened pull request #842: Fix warning in libncbm (master...master)  https://github.com/shogun-toolbox/shogun/pull/842
-!- K0stIa [~kostia@2001:718:2:1634:4a5b:39ff:fe99:cc49] has left #shogun []
 shogun-buildbot	build #452 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/452  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- blackburn [~blackburn@188.168.3.0] has joined #shogun
 blackburn	HOT today
 blackburn	you rock guys :D
 blackburn	ok I am confused - kostiantin said there is a segfault but I am unsure how to reproduce it
 wiking	blackburn: ipython -> %run so_multiclass_director_BMRM.py
 wiking	and do that 3-4 times
 wiking	w/o exiting ipython
 wiking	after the 2nd or 3rd run it'll segfault
 wiking	but i guess putting a for loop into so_multiclass_director_BMRM.py will do the same...
 wiking	the same thing doesn't happen with so_multiclass_BMRM.py
 blackburn	cool
 shogun-buildbot	build #688 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/688  blamelist: Soeren Sonnenburg <sonne@debian.org>
-shogungit:#shogun- [shogun] sonney2k pushed 2 new commits to master: https://github.com/shogun-toolbox/shogun/compare/c2983fb04f83...cd9367c28de2
-shogungit:#shogun- shogun/master d245e1b Viktor Gal: Fix warning in libncbm
-shogungit:#shogun- shogun/master cd9367c Soeren Sonnenburg: Merge pull request #842 from vigsterkr/master...
-shogungit:#shogun- [shogun] sonney2k pushed 1 new commit to master: https://github.com/shogun-toolbox/shogun/commit/4774b68e4fb1f9ad981de8bf75f42dafc2ec8627
-shogungit:#shogun- shogun/master 4774b68 Soeren Sonnenburg: implement dummies for missing get and setters in hdf5 sparsematrix/stringlist
 shogun-buildbot	build #453 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/453  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	blackburn, would be great if you can fix the buildbot errors...
 blackburn	ok
@sonney2k	wiking, btw you can now load/save SGMatrices
 shogun-buildbot	build #454 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/454  blamelist: Viktor Gal <viktor.gal@maeth.com>
 wiking	sonney2k: ah awesome!
 wiking	now we only need to fix DynArray
 wiking	sonney2k: would u mind if i would start using libdispatch for parallel execution in case of some algos?
 shogun-buildbot	build #689 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/689  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	wiking, what is libdispatch?
 wiking	ok
 wiking	this
 wiking	http://libdispatch.macosforge.org/
@sonney2k	wiking, well I first put the load/save stuff into sparsevector/matrix, string/stringlist
 wiking	:)
 wiking	anyhow it's just a parallel framework on osx
 wiking	i.e. it's a highlevel api around pthreads
 wiking	s/pthreads/libkqueue/g
 shogun-buildbot	build #690 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/690  blamelist: Viktor Gal <viktor.gal@maeth.com>
@sonney2k	wiking, I am not too excited about it - it is osx/bsd only :/
 wiking	yeah but it is working :)
@sonney2k	I suspect it would be much more beneficial to have some general pthread way in shogun or use openmp directly
 wiking	mmm i dont have openmp :(
@sonney2k	wiking, pthread do too :)
@sonney2k	wiking, why not?
 wiking	clang...
 wiking	clang doesn't support openmp
 wiking	pthread is too low level
 wiking	openmp would be great
 wiking	but there's no openmp in clang... and that'll be like this for a while
@sonney2k	wiking, are you sure about it?
 wiking	unfortunately
 wiking	yes
@sonney2k	openmp is sooo old
 wiking	yep
 wiking	still
 wiking	llvm is a complete redesign
 wiking	hence it's now not supporting openmp
@sonney2k	http://www.phoronix.com/scan.php?page=news_item&px=MTIwNjE
@sonney2k	it will support it soon
 wiking	well some time in future
 wiking	as it says
 wiking	it maybe that it doesn't even make it in 3.2
@sonney2k	likely it won't be in 3.2
 shogun-buildbot	build #455 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/455  blamelist: Soeren Sonnenburg <sonne@debian.org>
 wiking	sonney2k: i wonder why is this
 wiking	http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/578/steps/test/logs/stdio
 wiking	evaluation_cross_validation_multiclass_mkl segfaults, but still "program finished with exit code 0"
-shogungit:#shogun- [shogun] sonney2k pushed 1 new commit to master: https://github.com/shogun-toolbox/shogun/commit/1a41f826a1b8a13f9e4aa86d7e11d9202dc851dd
-shogungit:#shogun- shogun/master 1a41f82 Soeren Sonnenburg: test for HDF5 in example
@sonney2k	wiking, IIRC it throws an exception
@sonney2k	no segfault
 wiking	sonney2k: on freebsd in dmesg it appears as segfault
 wiking	but none the less
 wiking	it fails
 wiking	but the whole task passes on buildbot
 wiking	while it should fail
@sonney2k	true it should fail
 shogun-buildbot	build #456 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/456  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #691 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/691  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 wiking	n4nd0: yo
 n4nd0	wiking: hi
 n4nd0	wiking: so coming back to my question before :)
 wiking	shoot
 n4nd0	I am doing a search in the so-svm literature
 n4nd0	I am interested in applications dealing with graphs
 wiking	graphical models?
 n4nd0	as general as possible
-shogungit:#shogun- [shogun] sonney2k pushed 1 new commit to master: https://github.com/shogun-toolbox/shogun/commit/e22e574f40b365d13d374bdb53ebf69eafbbe742
-shogungit:#shogun- shogun/master e22e574 Soeren Sonnenburg: add load/save functions to sparsematrix/vector/string/stringlist
 n4nd0	I am not sure if it is graphical models what I am looking for, I don't think so
 wiking	ok anyways
 wiking	shoot
 n4nd0	so let say, here in shogun we use the so-svm to solve the hm-svm problem
 wiking	yeah that as well ;)
 n4nd0	the labels or the output space in the hm-svm is represented with sequences
 n4nd0	so I am interested in applications where the output space is the space of graphs
 wiking	yeah sure
 n4nd0	it sounds quite general I think
 wiking	boost::graphs
 wiking	http://www.boost.org/doc/libs/1_52_0/libs/graph/doc/index.html
 wiking	;)
@sonney2k	n4nd0, you could predict the traffic of the world ;-)
@sonney2k	or molecules
@sonney2k	protein 3d structure whateve
@sonney2k	are
 n4nd0	sonney2k: that sounds challenging! hehe
 n4nd0	sonney2k, wiking: but I guess people have done something like this before with so-svm?
@sonney2k	as soon as it is about learning graphs everything is challenging
 n4nd0	wiking: boost::graphs? is that structured learning stuff?
 wiking	n4nd0: CRF
@sonney2k	n4nd0, for example gunnar alwasy wanted to predict splice graphs
 wiking	n4nd0: http://en.wikipedia.org/wiki/Conditional_random_field
 wiking	that's a good enough graphical model
 n4nd0	wiking: yeah, I have heard of CRFs
 wiking	and people do stuff with this and SO
 wiking	n4nd0: boost::graph is just a good library for representing graphs ;)
 wiking	but i mean your Y set can be anything
 wiking	in SO
 n4nd0	wiking: yeah, I thought so
 wiking	so it can be as well as graphs
 n4nd0	the boost::graph thing I meant
 n4nd0	exactly
 n4nd0	so I know that idea but rather theoretically
 wiking	there's only 2 things you have to define
 wiking	a delta (loss function) over it
 n4nd0	from the papers where they introduce SO learning
 wiking	and the PSI function
 n4nd0	but I have not seen yet an application where the output space is formed by actual graphs
 wiking	n4nd0: just a sec
 n4nd0	sonney2k: so there's definitely some work done in that
 wiking	n4nd0: https://github.com/amueller/pystruct
 n4nd0	I read a blog entry by this guy some time ago
 wiking	n4nd0: https://github.com/amueller/pystruct/blob/master/examples_grid_crf.py
 n4nd0	something about segmentation I think
 n4nd0	image segmentation
 wiking	he has a CRF
 wiking	and learns shit with sosvm
 wiking	n4nd0: http://en.wikipedia.org/wiki/Conditional_random_field
 wiking	as a short intro
 wiking	but yeah you can get the grip of the CRF example of that python code
 wiking	but of course there are other applications
 wiking	like the deformable part models
 wiking	it's as well a graphical model in some sence
 wiking	the structure of the deformable parts
 wiking	i mean with graphs you can model a lot of shit
 n4nd0	sure
 wiking	even things that you wouldn't think about
 wiking	(like breaking rsa code ;)
 n4nd0	so I am interested in seeing what people have done with so-svm+graphs
 wiking	i mean the problem of breaking rsa code can be transformed in a graph model ;)
 wiking	n4nd0: i would start with CRF + sosvm
 wiking	there's a lot of things about that already done
 n4nd0	wiking: that confuses me a bit though
 wiking	what's the problem with it?
 wiking	i mean it's a special type of graph
 n4nd0	I thought that CRF could be used instead of so-svm
 wiking	nono
 n4nd0	when you are dealing with sequences
 wiking	you can learn parameters of a crf
 wiking	with sosvm
 n4nd0	that sounds interesting
 wiking	so that you can train a crf
 wiking	with sosvm
 wiking	check that example i've sent you
 n4nd0	I will
 wiking	it's basically doing that
 wiking	crf is really a special kind of graph
 n4nd0	do you happen to know the paper for that?
 wiking	you could say with 2 colored nodes
 wiking	X and Y
 wiking	X are the nodes which is the input
 wiking	and Y are the outputs
 wiking	you are learning P(Y|X)
 n4nd0	and what is the training data for that so-svm?
 wiking	and basically markovian preoperties are obeyed in that graph  for the vertices
 wiking	well X is your input right?
 wiking	those are nodes
 wiking	and there are connections between the nodes
 shogun-buildbot	build #457 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/457  blamelist: Soeren Sonnenburg <sonne@debian.org>
 n4nd0	wiking: I think this is pretty cool, thank you very much for the pointer! :)
 wiking	n4nd0: btw
 n4nd0	I am checking the light explanation the guy gives here http://peekaboo-vision.blogspot.se/2012/06/structured-svm-and-structured.html
 wiking	have u thought about implementing
 wiking	kernelized sosvm?
 n4nd0	wiking: so we kind of thought of it
 n4nd0	I think there actually is something that should support it
 n4nd0	but no learning algorithm yet
 wiking	yeah
 wiking	i mean we need a solver for that
 n4nd0	KernelStructuredOutputMachine
 n4nd0	yes
 n4nd0	I remember Nico said that the PrimalMosekSOSVM could be used for that
 n4nd0	one should introduce some changes of course
 n4nd0	he said that it would be awfully slow though
 wiking	well depends of it yes
 n4nd0	but from the idea I got, I don't think it should entail too much development effort
 n4nd0	but who knows
 n4nd0	would you like to have that?
 n4nd0	something working with the PrimalMosekSOSVM with kernel
 shogun-buildbot	build #692 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/692  blamelist: Soeren Sonnenburg <sonne@debian.org>
 wiking	well why not
 wiking	although of course
 wiking	some kernels we can 'emulate'
 wiking	with preprocessor
 wiking	(homogeneous kernel mapping)
 wiking	so that should be fun to try as well :)
 n4nd0	yep
 n4nd0	I promise I will try not to forget about it :)
 n4nd0	brb
 wiking	that ok
 shogun-buildbot	build #693 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/693  blamelist: Soeren Sonnenburg <sonne@debian.org>
 n4nd0	wiking: I think this looks like the right paper for this http://www.cs.illinois.edu/homes/dhoiem/publications/eccv08GraphcutCRFs.pdf
 n4nd0	wiking: have you seen it before?
 wiking	nop
 n4nd0	I am going to have a look
 wiking	anybody has any clue why is this true: max_y (Psi(x_i, y, w) + delta(y_i, y)) ~ max (0, log \sum_{y != y_i} exp(Psi(x_i, y, w) + delta(y_i, y))
 n4nd0	have to write that down first
 n4nd0	is it soft margin thing?
 wiking	yes
 wiking	do u know why?
 n4nd0	not really
 n4nd0	but I checking a pdf that reminded me of that
 wiking	sonney2k: u r the dr. here, help :)
 n4nd0	it is the actual max value right? not the argmax whatsoever
 wiking	yes just simply the max value
 n4nd0	then I don't really know
 n4nd0	delta(y_i,y) is just like the indicator function [[y_i==y]] I understand
 wiking	it's a loss function
 n4nd0	ok, any loss function then
 n4nd0	and Psi can be any joint feature function too?
 wiking	yes
 wiking	ah fuck
 wiking	i'm sorry
 wiking	s/\Psi/F/g
 wiking	so basically it's not a joint feautre
 wiking	but a function of x_i, y and w
 wiking	so for example dot(\Psi(x_i,y),w)
 n4nd0	ok
 wiking	but of course any other function as well
 n4nd0	yeah
 n4nd0	it doesn't make things easier hehe
 wiking	yeah
 wiking	i really don't know why this approx works
 wiking	but apparently works
 n4nd0	and the use of ~ is a bit lousy I think :)
 n4nd0	I guess it may help to understand why that holds
 n4nd0	to know to what extent are they similar
 wiking	well i just used ~ as i dont have ~~
 wiking	i mean almost equal
 wiking	or wtf
 n4nd0	yeah I understood it as almost equal
 n4nd0	by I meant, "how much almost"?
 n4nd0	I think that if you want to see why that ~ holds, probably it helps to know that
 wiking	lol http://25.media.tumblr.com/tumblr_me7tkuzZ5H1qcf0mxo1_1280.jpg
 n4nd0	haha
 n4nd0	mother of god
 n4nd0	almost 9 hundred M visits
 n4nd0	that's pretty sad
 wiking	well yeah
 wiking	sonney2k: do u have visiting stats of shogun-toolbox.org?
--- Log closed Thu Nov 29 00:00:15 2012
