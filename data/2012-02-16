--- Log opened Thu Feb 16 00:00:19 2012
-!- n4nd0 [~n4nd0@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
 CIA-18	shogun: Soeren Sonnenburg master * r3649f3b / (31 files in 9 dirs):
 CIA-18	shogun: Merge pull request #367 from karlnapf/master
 CIA-18	shogun: A draft for training on fixed kernel matrices/data in general - http://git.io/qv89yQ
 CIA-18	shogun: Soeren Sonnenburg master * r3e3db13 / (33 files in 14 dirs):
 CIA-18	shogun: add linear least squares and ridge regression
 CIA-18	shogun: This add linear ridge regression and a convenience class
 CIA-18	shogun: CLeastSquaresRegression calling CLinearRidgeRegression with
 CIA-18	shogun: regularization parameter tau=0. To not cause confusion KRR is
 CIA-18	shogun: renamed to KernelRidgeRegression throughout examples/code. - http://git.io/pQJ0OA
 CIA-18	shogun: Soeren Sonnenburg master * r0338587 / examples/undocumented/python_modular/regression_linear_ridge_modular.py : remove unused gaussian kernel from example - http://git.io/Sf2o5w
 CIA-18	shogun: Soeren Sonnenburg master * rc612a4c / (26 files in 7 dirs):
 CIA-18	shogun: Merge pull request #373 from karlnapf/master
 CIA-18	shogun: a bunch of improvements (+27 more commits...) - http://git.io/0IzzXg
-!- shogun-buildbot_ [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
-!- nageshp [~nagesh@triband-mum-120.61.0.77.mtnl.net.in] has joined #shogun
-!- nageshp [~nagesh@triband-mum-120.61.0.77.mtnl.net.in] has left #shogun []
 shogun-buildbot	build #316 of ruby_modular is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/ruby_modular/builds/316
-!- dfrx [~f-x@inet-hqmc05-o.oracle.com] has joined #shogun
 shogun-buildbot	build #344 of octave_modular is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/octave_modular/builds/344  blamelist: viktor.gal@maeth.com, heiko.strathmann@gmail.com, fernando.iglesiasg@gmail.com, slianoglou@gmail.com, blackburn91@gmail.com, sonne@debian.org
-!- n4nd0 [82ed3d7d@gateway/web/freenode/ip.130.237.61.125] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 CIA-18	shogun: Soeren Sonnenburg master * r32bfe20 / examples/undocumented/octave_modular/regression_kernel_ridge_modular.m : fix missing rename KRR -> KernelRidgeRegression - http://git.io/rcpScw
-!- n4nd0 [82ed3d7d@gateway/web/freenode/ip.130.237.61.125] has quit [Quit: Page closed]
 shogun-buildbot	build #345 of octave_modular is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/octave_modular/builds/345
 wiking	doh, why SGVector does not have an iterator class around it... ;(
 sonne|work	wiking: SGVector used to be just a float ptr + length for storing data...
 wiking	well i just kind of like wish there'd be an iterator struct for it now :P
 sonne|work	I wish we introduced proper reference counts in SGVector & co
 sonne|work	need that now but at some point 'every byte counted'
-!- n4nd0 [~n4nd0@n145-p102.kthopen.kth.se] has joined #shogun
-!- dfrx [~f-x@inet-hqmc05-o.oracle.com] has quit [Quit: Leaving.]
 wiking	sonne|work: are there any rules of adding BSD licensed code to shogun?
 wiking	i mean most of the code is derived from a bsd licensed file that i'd like to commit soon, that's why i'm asking
 sonne|work	wiking: anything GPL compatible is fine
 wiking	cool
-!- stratis [9232285a@gateway/web/freenode/ip.146.50.40.90] has joined #shogun
 stratis	hi!!!
 stratis	to all of you
 stratis	i m a new user of shogun
 stratis	and I am working with the matlab version
 stratis	so, i cant seem to find the function for calculating the area and the precision-recall curve
 stratis	or at least how to get the return distances from the svm
 stratis	i have a trained a multi-class svm
 sonne|work	stratis: hi - the perf measures are only available in modular interfaces
 stratis	oh ok
 stratis	so
 stratis	i have a multi class svm
 stratis	can i at least some how get
 sonne|work	stratis: IIRC you can do get_classifier with an index
 stratis	the distances for the samples
 sonne|work	sg('get_classifier',0) or so
 stratis	ok i ll try that
 stratis	when i try
 stratis	sg('get_classifier',0)
 stratis	it says
 stratis	[bias, weights]=sg('get_classifier', [index in case of MultiClassSVM])
 stratis	the same when I don't use an index
 stratis	how can I see the variables stored in "sg" ?
 sonne|work	well you need to do
 sonne|work	 [bias, weights]=sg('get_classifier',0)
 sonne|work	:)
-!- stratis [9232285a@gateway/web/freenode/ip.146.50.40.90] has quit [Ping timeout: 245 seconds]
-!- n4nd0 [~n4nd0@n145-p102.kthopen.kth.se] has quit [Quit: Leaving]
 wiking	mmm why isn't it possible to define a class that has no default constructor?
 sonne|work	wiking: for serialization we need that
 wiking	mmm that'll require then some amount of error checking now :P
 wiking	sonne|work:  if i define an enum within a class would that be revealed to the modular API?
-!- dfrx [~f-x@inet-hqmc04-o.oracle.com] has joined #shogun
-!- n4nd0 [~n4nd0@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- dfrx [~f-x@inet-hqmc04-o.oracle.com] has left #shogun []
@sonney2k	wiking, no nested classes /enums etc won't work
 wiking	how can i have constants ?
 wiking	that one could use from modular as well
@sonney2k	use enums
@sonney2k	just not nested within a class
 wiking	mmmhm
 wiking	and how do i call it in python
 wiking	because i've tried to call for LibSVM LIBSVM_C_SVC
 wiking	but python was crying that it's not defined
 wiking	doh, what's this: TypeError: not a numpy vector of appropriate type
 wiking	:>
@sonney2k	wiking, not sure what you are trying to do
@sonney2k	just use the enum as usual - it is just an int also in python
 wiking	well just that i'm creating a new preprocessor
 wiking	and i need to use some enums
 wiking	and i was wondering if those enums are going to be defined in the modular part as well
 wiking	since now as far as i can see
 wiking	i can just use in python only the corresponding int value of the enum
 wiking	but not the macro for it
 wiking	so in case of LibSVM there's a 2 element enum
 wiking	and i was trying in python modular part whether i could use LIBSVM_C_SVC
 wiking	or how is it possible at all to use that enum
 shogun-buildbot	build #151 of nightly_none is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/151
@sonney2k	wiking, you should just see the enum in python_modular
@sonney2k	exaclty like in C++
 wiking	really
 wiking	and you would call it like LIBSVM_C_SVC
 wiking	because if you try print LIBSVM_C_SVC
 wiking	it'll say that no such thing exist... in python
 shogun-buildbot	build #150 of nightly_all is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/150
@sonney2k	wiking, yes really - look at some of the examples, e.g. classifier_liblinear_modular.py
@sonney2k	L2R_L2LOSS_SVC_DUAL is an enum
@sonney2k	alright n8
 shogun-buildbot	build #137 of nightly_default is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/137
-!- blackburn [~qdrgsm@188.168.5.29] has joined #shogun
 wiking	blackburn: maaan
 blackburn	yeah?
 wiking	i'm about to finish the homkermap
 blackburn	huh
 blackburn	you are fast
 wiking	just trying to test some shit with it
 wiking	because for sure i've fucked up some stuff
 wiking	but yeah i still need to clean the api
 wiking	because now the constructor is like this: CHomogeneousKernelMap (HomogeneousKernelType kernel, HomogeneousKernelMapWindowType wType, float64_t gamma, uint64_t order, float64_t period);
 wiking	btw what's the consensus
 wiking	for the parameters of a class
 blackburn	hmm
 wiking	there should be getter/setter function pairs... ? for each of them?
 blackburn	yeah would be nice
 wiking	aha
 wiking	btw
 wiking	m_parameters->add thingy
 wiking	is for?
 wiking	i didn't get that yet...
 blackburn	serialization stuff
 wiking	when does serialization happen?
 wiking	so when is a class written to file?
 blackburn	hmm when you call it in python
 blackburn	yes
 blackburn	or octave or etc
 wiking	aha so modular
 blackburn	sure, static sucks
 wiking	so each private variables should be serialized, right? :)
 blackburn	sure
 wiking	mmhm
 blackburn	well I don't think it is so necessary for onw
 blackburn	about your constructor
 wiking	well i'm trying to test the thing in python
 blackburn	because now the constructor is like this: CHomogeneousKernelMap (HomogeneousKernelType kernel, HomogeneousKernelMapWindowType wType, float64_t gamma, uint64_t order, float64_t period);
 wiking	so i'll have to do it
 blackburn	is HomogenousKernelType an enum?
 wiking	yep
 blackburn	same for window type?
 wiking	yep
 wiking	if i call m_parameters->add(&m_table, "", "");
 wiking	where SGVector<float64_t> m_table;
 wiking	will it know how to serialize it/
 wiking	?
 blackburn	yes
 blackburn	add_vector IIRC
 blackburn	or simply add if it works
 wiking	ok let's see
 wiking	recompiling ;)
 wiking	hahaha
 wiking	how do you serialize an enum? :)
 wiking	should i cast it into int?
 blackburn	ehmm
 wiking	SG_ADD((machine_int_t*) &liblinear_solver_type, "liblinear_solver_type",
 wiking	                        "Type of LibLinear solver.", MS_NOT_AVAILABLE);
 wiking	that's in liblinear
 blackburn	yeah
 blackburn	do the same
 wiking	doh
 wiking	add_vector is not working as i thought it would
 wiking	ok now...
 wiking	recompiling :P
 wiking	ok one more question
 wiking	so in an SGMatrix
 wiking	the number of rows are the number of examples? or that the number of columns?
 blackburn	re
 blackburn	wiking: ehmm what is the matrix you are talking about?
 wiking	implementing the apply_to_feature_matrix
 wiking	so there i'm returning a SGMatrix<float64_t>
 wiking	and now i have
 wiking	CSimpleFeatures<float64_t>* simple_features = (CSimpleFeatures<float64_t>*)features;
 wiking	int32_t num_vectors = simple_features->get_num_vectors ();
 wiking	int32_t num_features = simple_features->get_num_features ();
 wiking	SGMatrix<float64_t> result (num_vectors, num_features*(2*m_order+1));
 wiking	and i wonder if the arguments of result should be swapped or not
 blackburn	feature matrix contains feature vectors row-wise
 blackburn	so dim = rows count
 blackburn	and number of vectors = cols count
 wiking	ahaaa
 wiking	so it should b swapped in that case
 wiking	or wait
 blackburn	yes, should be
 wiking	yey recompile ;P
 wiking	fuckthisshiat
 blackburn	did you simply integrate their code?
 blackburn	btw I've read paper recently, now understand things much better
 wiking	yep basically it's a wrapping
 wiking	i just want to finish it up
 wiking	because then i can start adding new mappings
 wiking	or at least to test new mappings
 wiking	for other kernels..
 blackburn	yeah
 blackburn	wiking: btw thanks for your efforts
 blackburn	okay power off now :)
 blackburn	see you
-!- blackburn [~qdrgsm@188.168.5.29] has quit [Quit: Leaving.]
--- Log closed Fri Feb 17 00:00:19 2012
