--- Log opened Tue Jul 28 00:00:11 2015
-!- besser82 [~besser82@fedora/besser82] has quit [Ping timeout: 260 seconds]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- thoralf [~thoralf@ip5b4223a1.dynamic.kabel-deutschland.de] has joined #shogun
-!- mode/#shogun [+o thoralf] by ChanServ
-!- thoralf [~thoralf@ip5b4223a1.dynamic.kabel-deutschland.de] has left #shogun ["Konversation terminated!"]
 shogun-buildbot	build #1027 of nightly_default is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/1027
-!- shaochuan [~shaochuan@2601:647:4600:fac5:e97f:35a0:bfa0:fc28] has joined #shogun
-!- shaochuan [~shaochuan@2601:647:4600:fac5:e97f:35a0:bfa0:fc28] has quit [Ping timeout: 246 seconds]
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has joined #shogun
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has quit [Client Quit]
-!- HeikoS [~heiko@nat-178-102.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has joined #shogun
-!- HeikoS [~heiko@nat-178-102.internal.eduroam.ucl.ac.uk] has quit [Ping timeout: 244 seconds]
-!- HeikoS [~heiko@dab-ell1-h-1-8.dab.02.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@dab-ell1-h-1-8.dab.02.net] has quit [Remote host closed the connection]
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Ping timeout: 244 seconds]
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has quit [Quit: PirosB3]
-!- besser82 [~besser82@fedora/besser82] has quit [Ping timeout: 240 seconds]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- HeikoS [~heiko@nat-173-28.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- besser82 [~besser82@fedora/besser82] has quit [Quit: Freedom. Friends. Features. First.  [https://getfedora.org/]]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Ping timeout: 244 seconds]
-!- travis-ci [~travis-ci@ec2-54-163-92-178.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/73020122
-!- travis-ci [~travis-ci@ec2-54-163-92-178.compute-1.amazonaws.com] has left #shogun []
-!- yorkerlin [b8af2f1e@gateway/web/freenode/ip.184.175.47.30] has joined #shogun
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has joined #shogun
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has quit [Quit: PirosB3]
@HeikoS	lisitsyn: hey
 lisitsyn	HeikoS: hey
@HeikoS	lisitsyn: how are things?
@HeikoS	lisitsyn: hey just looking at the manual again
@HeikoS	One thing that would be cool is to automatically link any Shogun class name to the docs
@HeikoS	lisitsyn: did you ever look into that?
 lisitsyn	oh that should be possible
 lisitsyn	no not yet
@HeikoS	lisitsyn: new plugin?
 lisitsyn	hmmm
 lisitsyn	yes
 lisitsyn	probably
@HeikoS	ok
@HeikoS	want to have a go on that?
 lisitsyn	HeikoS: we just need a way to extract functions/classes
@HeikoS	I can try to embed the manual in the build process
@HeikoS	lisitsyn: what about :sgclass
 lisitsyn	oh that would be manual
 lisitsyn	I'd go for auto
@HeikoS	lisitsyn:?
@HeikoS	ah
@HeikoS	yes
@HeikoS	agreed
@HeikoS	anything with CPrefix you mean?
 lisitsyn	no just any word
@HeikoS	lisitsyn: look up in a hash-table if is a class and then create link?
 lisitsyn	yes
@HeikoS	lisitsyn: ok
@HeikoS	lisitsyn: should be a dictionary that is populated before
@HeikoS	in there, we can also add the name changes from SWIG interfaces
 lisitsyn	ctags
 lisitsyn	ah
 lisitsyn	swig is an issue
@HeikoS	lisitsyn: just start without and then see
 lisitsyn	okie
@HeikoS	I mean the SWIG name changes do not appear in the doxygen
 lisitsyn	I think I'll stop working now and switch
 lisitsyn	HeikoS: I'd make it the same in c++ and swig
 lisitsyn	dropping C is something I wanted to do
 lisitsyn	this naming thing is mostly useless
@HeikoS	lisitsyn: I agree
@HeikoS	lisitsyn: but there are also the template renamings
@HeikoS	RealFeatures
@HeikoS	lisitsyn: in terms of build process
@HeikoS	lisitsyn: would you have a seperate set of examples for the manual?
@HeikoS	or share them with other python examples?
 lisitsyn	I think these should be the same
 lisitsyn	otherwise we have 3 places of examples
@HeikoS	lisitsyn: yeah
 lisitsyn	ipython, manual, examples
 lisitsyn	2 is better than 3
@HeikoS	lisitsyn: well we need 3 for the period where we change:
@HeikoS	populate sg examples while discarding python examples
@HeikoS	(and integration tests)
 lisitsyn	yes
 lisitsyn	ok then they should be in separate dir
 lisitsyn	but we drop those thing
@HeikoS	ok
@HeikoS	so I create a new dir
@HeikoS	lisitsyn: examples/meta/
 lisitsyn	why meta?
 lisitsyn	ah
@HeikoS	where we collect examples in the meta language
 lisitsyn	yes meta
 lisitsyn	:)
 lisitsyn	cool
@HeikoS	and then all other dirs are simply: python, r, etc
@HeikoS	which get populated by the translation process
@HeikoS	lisitsyn: one thing
@HeikoS	lisitsyn: the manual examples will have these tags in them
 lisitsyn	what tags?
@HeikoS	lisitsyn: is that confusing for people who just want code?
@HeikoS	lisitsyn: the tags to extract the code for the manual from
 lisitsyn	not really get it sorry
 lisitsyn	you mean references to code doc?
@HeikoS	#![create_instance]
@HeikoS	KNN knn(3, distance, labels)
@HeikoS	#![create_instance]
 lisitsyn	ahh
 lisitsyn	this one
 lisitsyn	don't we drop them?
@HeikoS	this one polluates the code itself quite a bit
 lisitsyn	but meta language is for us right?
@HeikoS	lisitsyn: yes
@HeikoS	lisitsyn: but
@HeikoS	the manual sphinx plugin looks for them doesnt it?
 lisitsyn	ah true
@HeikoS	lisitsyn: ah not really
 lisitsyn	maybe we should make them compatible with target languages comments
@HeikoS	lisitsyn: just looking at your code
@HeikoS	lisitsyn: but they are not comments
@HeikoS	but tags
 lisitsyn	I completely forgot how it works there
@HeikoS	lisitsyn: maybe somehow hiding them would be cool
@HeikoS	lisitsyn: you wrote it :D
 lisitsyn	I write a lot of code :D
 yorkerlin	hi
 lisitsyn	oh hey
@HeikoS	yorkerlin: hi!
 lisitsyn	I have to leave for a few minutes
@HeikoS	lisitsyn: so, if we could hide the tags in the files
 lisitsyn	will get back soon
 yorkerlin	ok
@HeikoS	lisitsyn: but that doesnt work
@HeikoS	lisitsyn: ok see you soon
 yorkerlin	HeikoS, for incremental inference, we need to store mutable variables.
@HeikoS	yorkerlin: hey, can you explain?
 yorkerlin	for now, inference in GP are batch inference, right?
 yorkerlin	for now, given exising data, we do inference right?
@HeikoS	yes
@HeikoS	I see, what are the variables you want to store?
 yorkerlin	Ideally, some mutable variables used in an optimimizer should be store in the class of optimizer (not in the class of inference)
@HeikoS	okay, can you explain a bit what you think the problem is?
 yorkerlin	incremental inference will do the following things: first given existing data, we do stochastic update, then  we do serialization. at some point, we do deserialization and use new data to do stochastic update.
@HeikoS	yorkerlin: why serialise?
@HeikoS	yorkerlin: why not just load new data while keeping the state in memory?
@HeikoS	yorkerlin: but ok
@HeikoS	in that case, the mutable variable needs to be in a Shogun class
 yorkerlin	let say, we have 100 data points to do GP inference. we are happy with the current result. we dump our model to disk.
@HeikoS	I agree with you
 yorkerlin	in future, we may not be happy with our model and we want to do incremental update.
@HeikoS	yorkerlin: if we want to stop in between, and then continue later, we need to serilaise
 yorkerlin	based on the idea from lisitsyn, we can create a mutable class to store common variables for  an optimizer
@HeikoS	yorkerlin: yes that sounds good
 yorkerlin	I think the cost function, the minimizer or the mutable class should be a subclass of CSGObject
 yorkerlin	at least, the cost function and the mutable class should be subclasses of CSGObject
@HeikoS	I am not sure about the cost function still, since it needs to be called from the minimizer, which knows the mutable state like iteration anyways
@HeikoS	I agree on the others
@HeikoS	yorkerlin: but you can also go ahead if you think it is better
@HeikoS	yorkerlin: we should maybe then clean up the base class a bit to get rid of the massive overhead introduced by a new SG class
 yorkerlin	For now, the cost function is for developers unless the meta programming part is added
@HeikoS	yorkerlin: I agree, but it is an absolute overkill the way cost functions are currently defined. That is too complicated, even for developers. And this usually means that code is unmaintainable
@HeikoS	yorkerlin: think about what happens when you are not there anymore, then someone touching the code will have a hard time understanding the jungle of classes
 yorkerlin	for cost function, we only need to return the cost, its objective variable, and gradients.
 yorkerlin	in fact, the base class of the cost function is like the JAVA interface.
 yorkerlin	Maybe I need to write some documents or diagram
 lisitsyn	back
@HeikoS	yorkerlin: I think that would be a good idea
@HeikoS	yorkerlin: just to avoid confusion
@HeikoS	lisitsyn: hey
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Heiko Strathmann :feature/sphinxdoc * 8a56e84 / doc/sphinx/TODO: https://github.com/shogun-toolbox/shogun/commit/8a56e8400e453e8041fd8a94a6ec8baa6d487369
 shogun-notifier-	shogun: added some notes
@HeikoS	lisitsyn: hey
@HeikoS	I think I know how we can do it
@HeikoS	lisitsyn: so the sphinx plugin is parsing/translating the examples itself
 lisitsyn	yes
@HeikoS	lisitsyn: this means that we can do whatever we like in the build process
 lisitsyn	yeah probably
@HeikoS	lisitsyn: so we can just translate all examples there, and then remove all tags from the output
@HeikoS	using bash or whatever
 lisitsyn	yeah
 lisitsyn	true
@HeikoS	lisitsyn: I will create a folder in examples
@HeikoS	v2
@HeikoS	and set up the folder structure in there
@HeikoS	and make the sphinx plugin use that folder
 lisitsyn	v2?
@HeikoS	lisitsyn: like "new_version_of_code_examples"
@HeikoS	lisitsyn: have everything in seperate folder
 lisitsyn	ah ok
@HeikoS	and once the old stuff is migrated more or less
@HeikoS	we drop oit
@HeikoS	it
@HeikoS	and move the folder content back up
 lisitsyn	ok so how do we split?
@HeikoS	lisitsyn: actually
@HeikoS	no need for folder
@HeikoS	as the content of examples folder is:
@HeikoS	CMakeLists.txtdocumented    generate_documented.sh  missing.log  undocumented
@HeikoS	descriptionsexample-generation  meta_language    README
@HeikoS	haha
@HeikoS	documented/undocumented best joke ever
@HeikoS	lisitsyn: how about you go ahead with this automatic link to doxygen class list
 lisitsyn	documented/undocumented is something
 lisitsyn	I don't know
 lisitsyn	its funny to see people confused by that though
 lisitsyn	:D
@HeikoS	lisitsyn: haha
 lisitsyn	HeikoS: yes ok I'll go with tagging + catching these tags
@HeikoS	lisitsyn:  cool!
 lisitsyn	I'll use some ctags thing
 lisitsyn	clang
 lisitsyn	not ctags
@HeikoS	lisitsyn: do you think examples should all be in one folder?
@HeikoS	lisitsyn: or more structured?
@HeikoS	lisitsyn: ah we can structure in the manual
@HeikoS	so can all be in a single folder
 yorkerlin	ok. I leave now. I will send a sketch of the class design to you guys before I update the PR.
 lisitsyn	yes
@HeikoS	yorkerlin: great, thanks for that!
 lisitsyn	yorkerlin: ok see you
 lisitsyn	thanks
-!- yorkerlin [b8af2f1e@gateway/web/freenode/ip.184.175.47.30] has quit [Quit: Page closed]
 lisitsyn	wanted to shoot one idea
@HeikoS	lisitsyn: ok?
 lisitsyn	heh sorry back
 lisitsyn	HeikoS: so these optimizers and stuff
 lisitsyn	I think to support warm start
 lisitsyn	as yorkerlin wants
@HeikoS	lisitsyn: yeah its cool
@HeikoS	not quite what he wants
 lisitsyn	we need a way to construct state from problem
 lisitsyn	and vice versa
@HeikoS	lisitsyn: yeah, serialisation is not the way in my eyes
 lisitsyn	models should be serialized
 lisitsyn	but not state of optimizer
@HeikoS	lisitsyn: yeah rather somehow store all thats needed
@HeikoS	and ahve a method to continue from that
@HeikoS	but serialisation is an easy way I guess
@HeikoS	ah dont know
@HeikoS	lisitsyn: I feel thats way beyond of what we can do ;)
 lisitsyn	why?
@HeikoS	lisitsyn: because its complicated and a lot of work
 lisitsyn	so the workflow is
@HeikoS	and our serialisation doesnt even work properly
@HeikoS	I want to drop it in fact
 lisitsyn	I don't know
 lisitsyn	it sounds like a killer feature
 lisitsyn	that is somehow misused and missed
 lisitsyn	I mean things like sklearn don't support that
@HeikoS	lisitsyn: yeah
@HeikoS	pretty cool idea I agree
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has joined #shogun
@HeikoS	lisitsyn: sonney2k did these things back with SVM I think
 lisitsyn	yes
-!- travis-ci [~travis-ci@ec2-54-146-147-116.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/73056144
-!- travis-ci [~travis-ci@ec2-54-146-147-116.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	if he was in research still it would be pretty fancy nowadays
 lisitsyn	gosh is there anything online
 lisitsyn	to draw
 lisitsyn	log in register ahhh go figure
 lisitsyn	download free no sms
 lisitsyn	:D
 lisitsyn	HeikoS: ok what I wanted to explain
 lisitsyn	what yorkerlin wants should be done in the same way the regular training happens
 lisitsyn	you create model
 lisitsyn	it knows how to create optimization task
 lisitsyn	or state
 lisitsyn	it doesn't matter whether it is already initialized or not
 lisitsyn	initialization is up to the model (svm, gp, nn whatever)
 lisitsyn	it just creates 'problem' or 'state'
 lisitsyn	so current point to evaluate and stuff like that
 lisitsyn	then optimizer takes care of evaluate/adjust loop
 lisitsyn	and returns the same state
 lisitsyn	model knows how to obtain its parameters from that state
@HeikoS	lisitsyn: yeah I see
@HeikoS	lisitsyn: I mean it only holds for these online tasks
@HeikoS	where one can stop early
@HeikoS	lisitsyn: and also
@HeikoS	mostly people run things until convergence
 lisitsyn	why? it looks like any problem would run this way
@HeikoS	lisitsyn: but might be good for online stuff
@HeikoS	lisitsyn: many but not all
@HeikoS	lisitsyn: but yeah I like the idea
@HeikoS	lisitsyn: would be cool to build a framework for that
@HeikoS	lisitsyn: hey one more thing about the examples
 lisitsyn	a library
 lisitsyn	;)
@HeikoS	there should be a button that says: Show full source
 lisitsyn	you know, prefer libraries over frameworks :)
@HeikoS	lisitsyn: I know
 lisitsyn	ok show source is viable
@HeikoS	lisitsyn: small and slick
@HeikoS	lisitsyn: put it on your todo ;)
@HeikoS	lisitsyn: Shogun should be a collection of libraries
@HeikoS	that all share the same SWIG and serialisation base
@HeikoS	and linalg core
@HeikoS	shogun-core
@HeikoS	and your plugins for whatever
@HeikoS	Shogun should not contain any algorithms, just infrastructure for poeople to implement algorithms
@HeikoS	and then we could put in std things
@HeikoS	lisitsyn: but anyways
@HeikoS	lisitsyn: let me know when the links and the show source thing works
 lisitsyn	okie
 lisitsyn	yeah I'll spend some time right now
@HeikoS	Ill try to get the build integration going
 lisitsyn	and later
-!- HeikoS [~heiko@nat-173-28.internal.eduroam.ucl.ac.uk] has quit [Ping timeout: 256 seconds]
 shogun-notifier-	shogun: sanuj :develop * 0baa215 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/0baa215b84fe5e77da8d1973f4f60158ba45a6a9
 shogun-notifier-	shogun: Implement new initializations for conv neuralnet layer
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * 5bf0ea7 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/5bf0ea735ce8d51c1e6ec71704f69e7546bc14b4
 shogun-notifier-	shogun: Merge pull request #2797 from sanuj/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Implement new initializations for conv neuralnet layer
 shogun-buildbot	build #2711 of bsd1 - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/2711  blamelist: sanuj <sanuj.sharma.in@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- shaochuan [~shaochuan@2601:647:4600:fac5:e97f:35a0:bfa0:fc28] has joined #shogun
 shogun-buildbot	build #31 of FC22 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC22%20-%20libshogun/builds/31  blamelist: sanuj <sanuj.sharma.in@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #1046 of FCRH - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/1046  blamelist: sanuj <sanuj.sharma.in@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #1023 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/1023  blamelist: sanuj <sanuj.sharma.in@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- shaochuan [~shaochuan@2601:647:4600:fac5:e97f:35a0:bfa0:fc28] has quit [Ping timeout: 244 seconds]
 shogun-buildbot	build #2668 of deb3 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2668  blamelist: sanuj <sanuj.sharma.in@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #654 of deb4 - python3 is complete: Failure [failed test python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb4%20-%20python3/builds/654  blamelist: sanuj <sanuj.sharma.in@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- PirosB3 [~pirosb3@host116-44-dynamic.55-82-r.retail.telecomitalia.it] has quit [Quit: PirosB3]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
--- Log closed Wed Jul 29 00:00:13 2015
