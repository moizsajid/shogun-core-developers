--- Log opened Wed Apr 03 00:00:18 2013
-!- FSCV [~FSCV@187.210.54.166] has quit [Read error: No route to host]
-!- FSCV [~FSCV@187.210.54.166] has joined #shogun
-!- FSCV [~FSCV@187.210.54.166] has quit [Quit: Leaving]
-!- heiko [~heiko@027fc803.bb.sky.com] has quit [Quit: Leaving.]
-!- heiko [~heiko@027fc803.bb.sky.com] has joined #shogun
-!- heiko [~heiko@027fc803.bb.sky.com] has quit [Client Quit]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- hoijui [~hoijui@dslb-088-075-046-171.pools.arcor-ip.net] has joined #shogun
-!- hoijui [~hoijui@dslb-088-075-046-171.pools.arcor-ip.net] has quit [Client Quit]
 shogun-buildbot_	build #342 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/342
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 7d9539b / tests/integration/python_static/test_all.sh,tests/integration/blacklist: https://github.com/shogun-toolbox/shogun/commit/7d9539bb89c83ead12e7455601da71d74536876d
 shogun-notifier-	shogun: disable broken HMM in tests for now
 shogun-buildbot_	build #856 of deb2 - static_interfaces is complete: Failure [failed test python_static]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/856  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot_	build #982 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/982  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 2c1d6f0 / tests/integration/blacklist: https://github.com/shogun-toolbox/shogun/commit/2c1d6f022c8c1216bbb724df91ffa038e5073780
 shogun-notifier-	shogun: really blacklist HMM
 blackburn	sonney2k: I don't remember, I have a feeling it is broken since 1.0
 shogun-buildbot_	build #857 of deb2 - static_interfaces is complete: Failure [failed test octave_static]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/857  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	blackburn, I hardly recall but IMHO for 1.0 we fixed all old tests (like we do now?)
@sonney2k	blackburn, ^ hurray
@sonney2k	now we are at octave_static!
 blackburn	sonney2k: heh
@sonney2k	blackburn, actually it is only failing w/ svmsgd and other linear methods that use sparse features
@sonney2k	b'cause python static doesn't support sparse features!
@sonney2k	svmsgd & etc seem to be working but infact they just return
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 573b475 / tests/integration/ (4 files): https://github.com/shogun-toolbox/shogun/commit/573b475142a7e8a837eb36c34b9494ed8dc124b8
 shogun-notifier-	shogun: add blacklist support to all interfaces' integration tests
@sonney2k	blackburn, so only svmsgd stuff & svmlin stuff are broken
@sonney2k	and it seems we have a train time limit on this stuff
@sonney2k	of 0.5 secs...
@sonney2k	might all be crap...
@sonney2k	lets better compare directly with svmsgd
 shogun-buildbot_	build #858 of deb2 - static_interfaces is complete: Failure [failed test octave_static]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/858  blamelist: Soeren Sonnenburg <sonne@debian.org>
 sonne|work	blackburn: how about we blacklist all the failing stuff and add these as entry tasks?
 blackburn	sonne|work: like  HMM? :D
 sonne|work	I mean time is pressing a bit and it is not so difficult to compare the sgd executable directly with what shogun's sgd produces
 sonne|work	ok HMM is something I have to do
 sonne|work	but it is a matter of git bisect
 sonne|work	it worked including tests at some point
 sonne|work	so it not difficult to find out which commit broke things
 shogun-buildbot_	build #983 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/983  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Soeren Sonnenburg :master * e43606f / tests/integration/blacklist: https://github.com/shogun-toolbox/shogun/commit/e43606f9efc783cf4728d03ba4241f4224161a35
 shogun-notifier-	shogun: blacklist failing SGD/SVMLin tests
 shogun-buildbot_	build #984 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/984  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot_	build #859 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/859
 shogun-notifier-	shogun: Soeren Sonnenburg :master * a1a3884 / tests/integration/blacklist: https://github.com/shogun-toolbox/shogun/commit/a1a388408a0bff950856fa4d582448b79c23b4f3
 shogun-notifier-	shogun: blacklist Fisher/TOP kernels
 shogun-buildbot_	build #985 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/985  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 9b34a5a / tests/integration/ (2 files): https://github.com/shogun-toolbox/shogun/commit/9b34a5a16644ddd466d2e41e2d684bcdccbcbaec
 shogun-notifier-	shogun: blacklist support for octave/python_modular integration tests
 blackburn	sonne|work: http://tapkee-bootstrap.herokuapp.com/ bootstrap appears to be easy
 sonne|work	blackburn: bootstrap?
 sonne|work	what do you mean?
 sonne|work	the ML method?
 blackburn	sonne|work: http://twitter.github.com/bootstrap/
 sonne|work	ok
 sonne|work	it should be :D
-!- escorciav [ba574947@gateway/web/freenode/ip.186.87.73.71] has joined #shogun
-!- escorciav [ba574947@gateway/web/freenode/ip.186.87.73.71] has left #shogun []
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
-!- heiko [~heiko@027fc803.bb.sky.com] has joined #shogun
 shogun-buildbot_	build #986 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/986  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- blackburn [~blackburn@46.20.65.51] has quit [Quit: Leaving.]
-!- escorciav [ba574947@gateway/web/freenode/ip.186.87.73.71] has joined #shogun
 escorciav	Hi, could someone help me with some doubts about latent svm code?
 sonne|work	escorciav: wiking is your man - he wrote that stuff!
 escorciav	Thanks, I'm new with IRC. How can I contact to wiking?
 escorciav	or wiking means that I need to read a Wiki
 escorciav	???
 escorciav	I click "query" on wiking user in the right tab, please let me know If I'm using bad the IRC chat
 escorciav	Thanks for your reply @sonne|work
 sonne|work	escorciav: no he would respond if he was available...
 escorciav	I have 3-5 questions, you recommend me to post all my question or wait for wiking request. I'm Sorry, if I'm bother you with my silly complains.
-!- n4nd0 [~nando@n186-p150.kthopen.kth.se] has joined #shogun
 sonne|work	escorciav: well post them - if we see wiking around we will make him talk to you or you write him an email (CC'ing the mailinglist)
 sonne|work	n4nd0: gooood morning !
 n4nd0	sonne|work: hey! good morning :)
 n4nd0	I am finally back again!
 sonne|work	no plane crashes or other incidents
 n4nd0	sonne|work: no, not really
 sonne|work	(except that we still have snow in berlin)
 n4nd0	haha lot of snow here in Sweden too
 n4nd0	I found none in Italy though :D
 escorciav	Thanks @sonne|work, I can wait 2-3 hour in IRC.
 n4nd0	I have seen some commits with fixes for the kernels, the tests are fine now?
 sonne|work	n4nd0: the kernels were actually more or less fine
 sonne|work	n4nd0: what didn't work with oligokernel is that you wrote sth like OligoStringKernel(k=3, width=50)
 sonne|work	and keyword arguments are not supported by seig
 sonne|work	swig
 sonne|work	but somehow it silently ignored this!
 sonne|work	and just used the default constructor
 n4nd0	ouch, my bad. Sorry about that
 sonne|work	no IMHO this is a bug...
 n4nd0	I see there is only one HMM test failing now
 n4nd0	but it seems it is already blacklisted
 shogun-buildbot_	build #987 of deb3 - modular_interfaces is complete: Failure [failed test octave_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/987  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- heiko [~heiko@027fc803.bb.sky.com] has left #shogun []
-!- tom__ [2eda6d58@gateway/web/freenode/ip.46.218.109.88] has joined #shogun
 tom__	hi all!
 n4nd0	hey tom__
 tom__	I have a question about CAlphabet::translate_from_single_order method. who'is interested ? :p
 sonne|work	n4nd0: we now only have to fix the octave_modular stuff
 sonne|work	that should be rather easy
 sonne|work	tom__: shoot!
 sonne|work	tom__: I wrote that stuff but a decade back
-!- tom__ [2eda6d58@gateway/web/freenode/ip.46.218.109.88] has quit [Ping timeout: 245 seconds]
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
 n4nd0	sonne|work: why do this cannot create instance errors appear in octave_modular?
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
 n4nd0	Some names that have changed in the code and not updated in the tests?
 sonne|work	n4nd0: one needs to check the scripts
 sonne|work	n4nd0: we have an obsolete test suite
 n4nd0	sonne|work: I am going to build for octave modular and see
 sonne|work	which however is the only way to still do tests for static interfaces
 sonne|work	and interfaces != python_modular
 sonne|work	so when you go to shogun/tests/integration/octave_modular
 sonne|work	you will see some handcrafted .m scripts that run the tests
 sonne|work	these might need an update for all the changes we had with e.g. labels
 sonne|work	$ grep Label *.m
 sonne|work	classifier.m:lab=Labels(classifier_labels);
 sonne|work	regression.m:lab=Labels(regression_labels);
 sonne|work	no wonder...
 n4nd0	ok
 sonne|work	n4nd0: would be cool if you have time to fix this
 sonne|work	the tests should work then
 n4nd0	sonne|work: yes, let me take a look. I am building atm.
 sonne|work	ok
 sonne|work	good thing is that you don't have to recompile you only need to change these scripts
 sonne|work	recompile again I mean
 n4nd0	it will be faster then
 blackburn	escorciav: may be n4nd0 and I can help you somehow?
 blackburn	sonne|work: n4nd0: have any of you tried -Og in gcc 4.8.0?
 n4nd0	blackburn: mm no, let me check. Another level of optimization?
 blackburn	n4nd0: yes debug - no optimization at all
 blackburn	should be fast
 blackburn	but probably just as fast as clang :D
 blackburn	monster gcc is damn slow
 blackburn	sonney2k: I was thinking about swig problems and etc
 n4nd0	hehe, the idea sounds nice in any case
 blackburn	I consider one anti-pattern as a solution actually
 blackburn	it is called 'string typization' you know
-!- escorciav [ba574947@gateway/web/freenode/ip.186.87.73.71] has left #shogun []
 blackburn	get("width")
 sonne|work	haha
 sonne|work	you are arriving at the static interfaces :)
 blackburn	sonne|work: no
 blackburn	sonne|work: let me explain
 blackburn	remember that idea I hade
 blackburn	had*
 blackburn	svm.parameter("width")
 blackburn	etc
 blackburn	and actually we *already* use it in modelselection
 blackburn	the only problem is that it won't work as I just realized :D
 blackburn	setters could work but not the getters
-!- escorciav [ba574947@gateway/web/freenode/ip.186.87.73.71] has joined #shogun
-!- escorciav [ba574947@gateway/web/freenode/ip.186.87.73.71] has left #shogun []
 sonne|work	blackburn: they could too if you pass stuff by reference
 blackburn	what is declaration of such get?
 blackburn	???& get(string name)
 sonne|work	void getFoo(string name, type& value)
 blackburn	how would it look like in python?
 sonne|work	getFoo("width")
 blackburn	and it would return type?
 sonne|work	type
 sonne|work	yes
 blackburn	how does it dispatch the type?
 blackburn	but it won't work for java
 sonne|work	actually it doesn't help at all
 blackburn	sonne|work: I hate writing getters
 blackburn	:D
 sonne|work	for getFoo(string name, type& value) to be wrapped the function with the type needs to be declared
-!- lambday [0e8b614f@gateway/web/freenode/ip.14.139.97.79] has joined #shogun
 blackburn	sonne|work: I have an idea how would it look like in C++ but not in other interfaces
 blackburn	sonne|work: I'd like to review the API for shogun 3.0
 blackburn	some ideas haunt me and I just have to realize them
 blackburn	sonne|work: just like any other software initial API can appear bad but later you realize how to do that properly - I think that's time
 sonne|work	I don't mind - git has branches you know :D
 blackburn	sonne|work: reviewing API means discussion of API
 sonne|work	so think of sth and then we can discuss
 sonne|work	I don't currently know how to do it 'better'
 blackburn	sonne|work: first is modelselection
 sonne|work	agreed
 sonne|work	but I think we were all happy with what you proposed
 blackburn	sonne|work: then we have to think about preprocessor chains
 blackburn	all that append_preprocessor etc should be reviewed
 blackburn	it should look easier
 blackburn	next is unite label+features
 sonne|work	blackburn: but label & features -> unsupervised doesn't make sense
 sonne|work	blackburn: better do the same with combined kernels/ features we do for preprocessors
 blackburn	sonne|work: labels are optional
-!- heiko [~heiko@nat-180-85.internal.eduroam.ucl.ac.uk] has joined #shogun
 blackburn	sonne|work: http://divshot.github.com/geo-bootstrap/#forms
 n4nd0	no idea what is going on with my compiler, I have tried three times to build shogun with octave-modular
 n4nd0	c++: internal compiler error: Killed (program cc1plus)
 n4nd0	Please submit a full bug report,
 n4nd0	with preprocessed source if appropriate.
 blackburn	n4nd0: you met out of memory probably
 n4nd0	but the memory tracer didn't show that
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 n4nd0	I cannot believe it, I just can't build with octave_modular it seems
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- heiko [~heiko@nat-180-85.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
-!- heiko [~heiko@nat-180-85.internal.eduroam.ucl.ac.uk] has joined #shogun
 sonne|work	n4nd0: try to compile with --disable-optimization
 heiko	sonne|work, blackburn any comments on the nu-svr extension in the PR?
 sonne|work	nu svr is kind of useless IMHO
 sonne|work	IIRC it was much slower doing the optimization
 sonne|work	because it started with non-zero alphas
 sonne|work	but I might err...
 heiko	sonne|work: it is slower
 heiko	noticed that
 heiko	but people may want to have it anyway, like the guy on the mailing list?
 heiko	so why not offer both? we do that for SVC also
 sonne|work	heiko: if it doesn't break any of our tests why not
 sonne|work	btw, why do you have C end nu in your example?
 n4nd0	sonne|work: I was compiling with disable-optimization already. It seems my system is not using swap memory although I think I did a partition for that. I have to check how to fix this.
 heiko	sonne|work: it doesnt, is there anything else I need to do except for passing this through to the LibSVR
 sonne|work	n4nd0: how much memory do you have? for octave modular you will need 3-4GB
 n4nd0	4GB
 sonne|work	n4nd0: then close all applications!
 sonne|work	and compile again
 n4nd0	I had just this terminal running irssi and a couple of tabs in the browser
 n4nd0	I think I should better take a look and make use of the swap
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
 sonne|work	heiko: I don't understand? why should libsvm need a C if you have a nu?
 sonne|work	IIRC you need some size of the epsilon tube and the nu
 sonne|work	err no the tube got estimated too
 sonne|work	so just nu right?
 sonne|work	n4nd0: btw please twitter that we applied at GSoC
 sonne|work	n4nd0: octave modular compiles on our buildbot (also only 4GB memory)
 sonne|work	so it should work just fine
 n4nd0	I guess the OS needs also some memory
 n4nd0	the buildbot probably doesn't have a graphical OS while I am running one
 n4nd0	it could make sense
-!- sumit_ [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
 heiko	sonne|work: nu replaces the epsilon in svr
 heiko	but there remains a C in the opt. problem
 heiko	if I remember correctly
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
 sonne|work	no it replaces C & epsilon
 heiko	sonne|work: oh, I better do some reading then :)
 sonne|work	I am not sure either
 sonne|work	for sure nu-svm no C
 heiko	sonne|work: I thinnk the C remais
 heiko	svr is different
 heiko	in svc I agree
 sonne|work	ahh ok so the nu just controls percentage of errors then
 heiko	sonne|work, yes
 heiko	Training ?-Support Vector Regression: Theory and Algorithms
 heiko	contains a comparison
 blackburn	heiko: I am not sure what to comment :)
 sonne|work	so it has some mapping to epsilon
 heiko	blackburn: I did not build the libsvm wrapper so I wasnt sure whether its just enough to pass the different solver type to libsvm
 heiko	sonne|work, blackburn, ok will merge then ...
 sonne|work	ok then
 sonne|work	heiko: well if you compare with libsvm's nu-svr and results are the same then why not
 n4nd0	sonne|work, heiko, blackburn : retweet guys
 heiko	sonne|work, compare? I am using libsvr
 heiko	you mean calling it directly?
-!- ZeThomas [~thomaspr@2a02:2c40:100:a000:1c78:deb5:6522:b5ca] has joined #shogun
 heiko	yes, I planned to do this, also for libsvr itself, so that we have a unit test that checks the output for a simple case
 blackburn	n4nd0: may be tweet it from ShogunToolbox?
 n4nd0	mm, that would require me to remember the pass :D
 n4nd0	found it
 ZeThomas	hey blackburn, I'm still struggling with the implementation of my own kernel
 blackburn	ZeThomas: hey
 blackburn	ask me
 sonne|work	ZeThomas: or read the excellent tutorial ;)
 ZeThomas	I recompiled with the appropriate flags set, and I think I kind of got it figured out
 ZeThomas	sonne|work, where's this tutorial?
 sonne|work	http://www.shogun-toolbox.org/doc/en/current/developer_tutorial.html
 sonne|work	how to implement your own kernel
 blackburn	sonne|work: no, directors
 sonne|work	ReverseLinearKernel
 blackburn	ZeThomas: that's for shogun internal C++ stuff
 n4nd0	tweet done
 sonne|work	directors ahh
 ZeThomas	ah ok, I got already scared by the amount of C on that page :)
 blackburn	ZeThomas: yeah that was the naming in 1976
 blackburn	ZeThomas: ah btw I forgot to ask you - is your dataset big?
 ZeThomas	not yet, but I can be
 blackburn	if your kernel takes significant time and kernel matrix can fit into the memory it is better to use CustomKernel still
 blackburn	but if you have >10000 training vectors directors is the only way I see
 ZeThomas	blackburn: oh, so for small datasets CustomKernel is better?
 blackburn	ZeThomas: yeah sorry I didn't mention that
 ZeThomas	blackburn: np, but I can still implement it through DirectorKernel right, for scaleability
 blackburn	ZeThomas: yes
 blackburn	ZeThomas: so have you got any problems with implementing it?
 ZeThomas	ok, so this is my basic set-up, don't know if it's any good: http://pastebin.com/P4771fNP
 blackburn	ZeThomas: looks legit
 ZeThomas	so I then do kernel.init(trainset, trainset); svm = SVMLight(C, kernel, labels); svm.train()
 ZeThomas	this works
 ZeThomas	but if after, I do kernel.set_rhs(testset); rhs = kernel.get_rhs(); svm.apply(rhs)
 blackburn	ohh
 blackburn	no need to do apply(rhs)
 blackburn	I think that's enough to just svm.apply()
 ZeThomas	ok, because this throws an error: terminate called after throwing an instance of 'Swig::DirectorMethodException'
 lambday	heiko: hi
 heiko	lambday: hi!
 blackburn	ZeThomas: yeah that should not happen but directors are so experimental
 ZeThomas	oh ok, it works with apply()
 lambday	heiko: I modified the code as blackburn suggested and committed.. could you please have a look?
 lambday	it works both for new and older eigen
 ZeThomas	blackburn: cool, thanks a lot for the help!
 heiko	lambday: sure
 blackburn	ZeThomas: you are welcome
 ZeThomas	blackburn: btw is there a huge performance increase when using CustomKernel for smaller datasets?
 lambday	heiko: for older eigen, I used SparseLLT, which does not use permutation and is a lot slower..
 heiko	lambday: okay, mmh
 blackburn	ZeThomas: yeah it may be significant if your kernel is slow
 heiko	so can one do the permutation by hand in this case?
 lambday	but if its >= 3.1.0, it uses simplicialLLT which performs amd
 lambday	and a lot faster
 lambday	heiko: that I haven't tried
 heiko	lambday: thats good!
 ZeThomas	blackburn: so I should consider implementing it through that right now? train data is at a measly 1000 max
 heiko	lambday:  the whole point is to do the permutation, if this is not done, there is no way of computing the logdet for large matrices
 blackburn	ZeThomas: oh then I'd rather precompute everything
 lambday	heiko: for the unit test, I used a 1000x1000 sparse matrix, using simplicialLLT, it takes 112 ms in my machine, but using SparseLLT it takes around 7400 ms
 heiko	lambday: is it hard to compute the permutation and apply it by hand?
 heiko	lambday: that sounds reasonable
 heiko	problem is more the memory
 ZeThomas	blackburn: so you mean compute the upper triangular, and populate that in my CustomKernel object?
 lambday	heiko: yes..
-!- sumit_ [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
 blackburn	ZeThomas: yes
 lambday	heiko: I need to check the older eigen sparse module..
 ZeThomas	blackburn: and then the whole matrix of k(x,y) for x \in train and y \in test?
 heiko	lambday: the gsoc projects will probably need those permutations at some point anyway ...
 blackburn	heiko: lambday: I use SimplicialLDLT in eigen >3.1.0 and SimplicialCholesky in eigen <3.1.0
 heiko	lambday: there is a class for the permutation
 blackburn	ZeThomas: yes exactly
 blackburn	ZeThomas: two matrices
 lambday	heiko: yes... ordering
 ZeThomas	blackburn: ok, I see... final question: it's ok though to overwrite the initial gram matrix by this second one, in the same object? or would you advise against that?
 heiko	lambday:  http://eigen.tuxfamily.org/dox-devel/classEigen_1_1AMDOrdering.html
 heiko	doenst sound too hard, does it? :)
 blackburn	ZeThomas: I don't think you will be able to overwrite it
 heiko	lambday: I think it should be fine if you just put that in front of the sparse LLT cholesky
 ZeThomas	blackburn: how do I set it then, in my kernel?
 lambday	heiko: yes.. simplicialLLT uses this class before computing.. but I am not sure if it was there in eigen <3.1.0..
 lambday	heiko: let me check
 heiko	lambday: ah now I see
 heiko	this class might not have existed
 lambday	heiko: yes that's the problem
 heiko	blackburn: can't we ask users for eigen3.1? :D
 lambday	heiko: eigen >= 3.1.0 uses ordering by default
 lambday	I checked the source
 blackburn	ZeThomas: you create CustomKernel from your matrix
 lambday	heiko: that would save a lot of pain :D
 heiko	lambday: ok good, so lets find out where the ordering came in
 blackburn	ZeThomas: you can just svm.set_kernel(CustomKernel(train_matrix))
 blackburn	then train and svm.set_kernel(CustomKernel(test_matrix))
 blackburn	and then apply()
 ZeThomas	blackburn: so a new kernel object then, and replace the kernel in the svm
 blackburn	yes that would be simplest I think
 heiko	lambday, blackburn we could just output a runtime warning if this method is called without the permutation
 ZeThomas	blackburn: ah, okay, i see
 lambday	heiko: umm... yes
 blackburn	heiko: I don't know - it is still in 12.04 LTS
 heiko	blackburn: so maybe just make it madatory?
 blackburn	3.0.?
 blackburn	3.0.x
 heiko	ah
 heiko	so better not
 blackburn	heiko: that's pretty hard requirement
 heiko	blackburn: agree
 heiko	lambday: so pls have a look whether the ordering class is in 3.0.x
 blackburn	heiko: what is the issue with ordering?
 lambday	heiko: okay let me check
 heiko	if yes, include it in the code, if not, just put a warning "sparse Cholesky is computed without reordering - might take long or run out of memory. Install Eigen >3.1 in order to use reordering ..."
 heiko	something like that
 heiko	lambday: SG_SWARNING("CStatistics::log_det(): Blablablla")
 lambday	heiko: alright....
 heiko	lambday: code is great work btw!
 lambday	heiko: thanks man... you and blackburn are so helpful...
 heiko	blackburn: just knows everything :D
 lambday	heiko: hey good news seems there is a Amd.h in my older eigen... not sure it its 3.0.x... let me check
 lambday	heiko: yes its there in 3.0.6.. I'm trying to use it then
 heiko	lambday: great! make sure that you also somehow test it to produce the same results as your other test
 lambday	heiko: alright... :)
 lambday	heiko: as blackburn said, we could have used SimplicialCholesky for eigen < 3.1.0 instead but we need the the access the diagonal.. in SimplicialCholesky I am not sure if we can do that... m_diag is protected and there is no get method
 heiko	lambday: what about the ordering class then?
 lambday	heiko: I just checked, the older version uses amd in simplicialCholesky class...
 heiko	ok good
 lambday	with permutation and all...
 heiko	so if there is a way to access the diagonal we can use this one
 heiko	should be possible
 lambday	heiko: but SimplicialCholesky doesn't profide a matrixL sort of method that SimplicialLLT does...
 lambday	heiko: yes
 heiko	lambday: if it doesnt give its diagonal, maybe just steal the code
 heiko	to permute etc
 lambday	heiko: ummm... steal the code? as in?
 heiko	lambday: just do the permutation by hand as they do it in eigen
 lambday	there is another way..
 heiko	that is?
 lambday	heiko: yes yes... that is the another way that I was saying :D
 heiko	ok
 lambday	heiko: let me try...
 heiko	lambday: have a try
 heiko	if it turns out to be too annoying, well go with the warning
 lambday	heiko: hmm...
 n4nd0	sonne|work: it finally compiled
 sonne|work	n4nd0: hurray
 sonne|work	what did you do?
 n4nd0	sonne|work: my OS with a couple of terminals and chromium with a few tabs runs with 0.7GB. During compilation the peak has been 3.7GB RAM and 1.3GB swap
 sonne|work	yeah
 n4nd0	isn't a bit too much?? :)
-!- ZeThomas [~thomaspr@2a02:2c40:100:a000:1c78:deb5:6522:b5ca] has quit [Quit: Leaving]
 sonne|work	n4nd0: yes it is
 sonne|work	this is due to swig & massive use of templates (in shogun & octave)
 n4nd0	sonne|work: so no real way to cut it down if we want to keep templates?
 sonne|work	n4nd0: well yes - if we could implement a splitcpp program
 sonne|work	or enhance swig such that it splits this huge file into say 10 files
 sonne|work	then compile time would go down and so would memory usage
 n4nd0	no idea what splitcpp is
 sonne|work	n4nd0: a program that would split up any .cpp file into multiple small ones
 sonne|work	sacrificing static functions
 n4nd0	aham
 sonne|work	something to be written
 n4nd0	static functions or inline?
 n4nd0	why would split in several files sacrifice static?
 n4nd0	gtg now, see you later
-!- n4nd0 [~nando@n186-p150.kthopen.kth.se] has quit [Quit: leaving]
 sonne|work	http://www.lazycplusplus.com/download.html
 sonne|work	maybe that thing can help us...
 blackburn	sonne|work: how?
 sonne|work	http://www.hwaci.com/sw/mkhdr/
 blackburn	sonne|work: I can't get what ist the help of generating header
 sonne|work	blackburn: we need to split up the wrapper file to multiple files
 sonne|work	so we need .h's for function / class definitions
 sonne|work	and functions in different file
 sonne|work	s
 blackburn	so divide .cpp
 blackburn	and generate headers?
 sonne|work	blackburn: if you look at the *wrap.cxx you will see that it contains a huge jump table at the end
 sonne|work	all these entries are function pointers to some static (local) functions
 sonne|work	so if we would make these functions non-static
 sonne|work	split up the file somehow
 blackburn	I see
 sonne|work	and have one .cpp with that jump table
 sonne|work	that would include all the function *definitions*
 sonne|work	we would be fine
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 2e9367e / tests/integration/octave_modular/ (2 files): https://github.com/shogun-toolbox/shogun/commit/2e9367e561366376486135abf464f8d6a2155c8c
 shogun-notifier-	shogun: use binary/regression labels in octave integration tests
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- lambday [0e8b614f@gateway/web/freenode/ip.14.139.97.79] has quit [Ping timeout: 245 seconds]
-!- ahcorde [5813e5d6@gateway/web/freenode/ip.88.19.229.214] has joined #shogun
 shogun-buildbot_	build #988 of deb3 - modular_interfaces is complete: Failure [failed test octave_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/988  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 256 seconds]
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Quit: Page closed]
-!- travis-ci [~travis-ci@ec2-50-19-59-96.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/6017082
-!- travis-ci [~travis-ci@ec2-50-19-59-96.compute-1.amazonaws.com] has left #shogun []
-!- ZeThomas [~thomaspr@2a02:2c40:100:a000:1c78:deb5:6522:b5ca] has joined #shogun
 ZeThomas	I'm getting this weird behaviour from shogun lately (2.1.0 - python-modular --enable-swig-directors)
 ZeThomas	Most of the time it stops after a random number of iterations when I run my tests, without output, just "exit code 139"
 ZeThomas	and this one time I then get this: http://pastebin.com/JsLAFTFY
@sonney2k	ZeThomas, looks like you are getting random memory corruptions
 ZeThomas	sonney2k, how is this caused?
@sonney2k	no idea
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 8587385 / tests/integration/octave_modular/ (3 files): https://github.com/shogun-toolbox/shogun/commit/858738543784ee7e269f4cff00bf50df6a20800c
 shogun-notifier-	shogun: a couple of fixes for the tests
@sonney2k	hard to debug
 ZeThomas	so there's nothing I can do about this?
@sonney2k	ZeThomas, show us the code / a minimal example to reproduce this
 ZeThomas	ok, on it
-!- ahcorde [5813e5d6@gateway/web/freenode/ip.88.19.229.214] has quit [Ping timeout: 245 seconds]
 ZeThomas	here you go: http://pastebin.com/1GwtYEC7
 ZeThomas	oh, and test_learner_fraction basically calls learner.test([...]) with random shuffles of the data
 ZeThomas	I'm running it now with a different learner, that uses features and the LinearKernel, and that seems to work fine
 ZeThomas	so it's because of my CustomKernel?
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 395b4dc / tests/integration/octave_modular/ (5 files): https://github.com/shogun-toolbox/shogun/commit/395b4dce2b1dd6208e0c8c2a37f9ad29e0522486
 shogun-notifier-	shogun: fix further octave modular tests
@sonney2k	ZeThomas, wait you cannot derive from CustomKernel
@sonney2k	only from DirectorKernels
@sonney2k	there is no way of overloading shogun's custom kernel
 ZeThomas	oh
@sonney2k	I wonder why swig didn't complain
@sonney2k	ZeThomas, all of the core of shogun is in C++
@sonney2k	for speed
@sonney2k	so we only allow very few classes named Director* to be overloaded from python
 ZeThomas	ok, I see
@sonney2k	sry, gtg
 ZeThomas	so what is the best strategy then to do?
-!- travis-ci [~travis-ci@ec2-50-19-59-96.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/6019432
-!- travis-ci [~travis-ci@ec2-50-19-59-96.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-107-22-45-48.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/6019800
-!- travis-ci [~travis-ci@ec2-107-22-45-48.compute-1.amazonaws.com] has left #shogun []
-!- ZeThomas [~thomaspr@2a02:2c40:100:a000:1c78:deb5:6522:b5ca] has quit [Quit: Leaving]
 shogun-buildbot_	build #989 of deb3 - modular_interfaces is complete: Failure [failed test octave_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/989  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot_	build #990 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/990  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
-!- blackburn [~blackburn@83.234.54.216] has joined #shogun
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 680c8c6 / / (5 files): https://github.com/shogun-toolbox/shogun/commit/680c8c6455b0832a03ec5d73db96b669feb21976
 shogun-notifier-	shogun: fix remaining octave_modular tests and use same default values in
 shogun-notifier-	shogun: LAKernel no matter what constructor is used
@sonney2k	n4nd0, cross you fingers
 n4nd0	sonney2k: crossed, together with toes
@sonney2k	n4nd0, if that all works all that is left to do is switch to the new development model and put the workshop on the website front page and announce it properly
@sonney2k	then finger & toes crossed if GSoC happens w/ us we can fully concentrate on that
@sonney2k	n4nd0, if you have time please try to get versioning into the shogun website...
 n4nd0	sonney2k: versioning for the articles I understand
 n4nd0	the thing of storing a history of the changes
 shogun-buildbot_	build #696 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/696  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Heiko Strathmann :master * 40cf905 / tests/unit/features/DataGenerators_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/40cf905896f0df62fc8f20234fef0494b17d8f40
 shogun-notifier-	shogun: lowered accuracy a bit since test failed locally
 shogun-notifier-	shogun: Heiko Strathmann :master * 6cbec42 / src/shogun/classifier/svm/LibSVM.cpp,src/shogun/classifier/svm/LibSVM.h: https://github.com/shogun-toolbox/shogun/commit/6cbec422f3ec8876d746e6bb4ed71d7afca50be9
 shogun-notifier-	shogun: cleaner handling of solver type
 shogun-notifier-	shogun: Heiko Strathmann :master * b5ca129 / src/shogun/regression/svr/LibSVR.cpp,src/shogun/regression/svr/LibSVR.h: https://github.com/shogun-toolbox/shogun/commit/b5ca129990ecc05f55795ef404a74911b6914dbb
 shogun-notifier-	shogun: added the possibility to use nu-svr
 shogun-notifier-	shogun: Heiko Strathmann :master * f5c2be0 / examples/undocumented/libshogun/ (2 files): https://github.com/shogun-toolbox/shogun/commit/f5c2be04631be209c7430acbb1454862bf556723
 shogun-notifier-	shogun: added simple example for libsvr
 shogun-notifier-	shogun: Heiko Strathmann :master * e422c66 / examples/undocumented/libshogun/regression_libsvr.cpp: https://github.com/shogun-toolbox/shogun/commit/e422c6660128c577cf0ad548c7e4d570040620a2
 shogun-notifier-	shogun: slightly midified example to usee NU-SVR
 shogun-notifier-	shogun: Heiko Strathmann :master * 630d41e / src/shogun/regression/svr/LibSVR.h: https://github.com/shogun-toolbox/shogun/commit/630d41ec2c89ec80b0f716908e3dd6b94b001dca
 shogun-notifier-	shogun: updated class documentation for libsvr
 shogun-notifier-	shogun: Heiko Strathmann :master * c71a337 / src/shogun/regression/svr/LibSVR.cpp,src/shogun/regression/svr/LibSVR.h: https://github.com/shogun-toolbox/shogun/commit/c71a337d6d985d74110f0a6577fd81f53dbac7a2
 shogun-notifier-	shogun: minor documentation/copyright update
 shogun-notifier-	shogun: Heiko Strathmann :master * c14e37a / src/NEWS: https://github.com/shogun-toolbox/shogun/commit/c14e37a3e273b43b491a64de5008f610c992a4c8
 shogun-notifier-	shogun: mention nu-svr in the news
 shogun-notifier-	shogun: Heiko Strathmann :master * da3bb9c / src/shogun/regression/svr/LibSVR.cpp: https://github.com/shogun-toolbox/shogun/commit/da3bb9c0ef2b0eff637c8abb6875eeabd59fc4e7
 shogun-notifier-	shogun: fixed a copy/paste bug
-!- heiko [~heiko@nat-180-85.internal.eduroam.ucl.ac.uk] has left #shogun []
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 255 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 shogun-buildbot_	build #991 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/991
 shogun-buildbot_	build #697 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/697
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- heiko [~heiko@027fc813.bb.sky.com] has joined #shogun
 shogun-notifier-	shogun: Heiko Strathmann :master * ad6f2b6 / src/shogun/statistics/ (2 files): https://github.com/shogun-toolbox/shogun/commit/ad6f2b6946551183f22693e31eaeb9864da9338b
 shogun-notifier-	shogun: removed python_modular compile warning
 shogun-notifier-	shogun: Heiko Strathmann :master * 43e954f / src/shogun/statistics/ (2 files): https://github.com/shogun-toolbox/shogun/commit/43e954fca0cb15a2cc8858d756db0522c5da87b9
 shogun-notifier-	shogun: Merge pull request #963 from karlnapf/master
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fix a warning
--- Log closed Thu Apr 04 00:00:19 2013
