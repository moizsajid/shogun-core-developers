--- Log opened Mon Jun 17 00:00:48 2013
@sonney2k	HeikoS, I found this - which should help us a lot :D
@sonney2k	http://www.berlin.de/imperia/md/content/senatsverwaltungen/justiz/formularserver/vereinsregister/merkblatt_zur_eintragung_eines_vereins.pdf?start&ts=1256891879&file=merkblatt_zur_eintragung_eines_vereins.pdf
@HeikoS	sonney2k: nice :)
@HeikoS	just need a protocol for berlin then :)
@HeikoS	and somebody has to bring this stuff to the notar
@HeikoS	I will go to bed now, good night everyone, see you tomorrow
@HeikoS	tomorrow GSoC starts yeaaaah ;)
-!- HeikoS [~heiko@176.248.212.166] has quit [Quit: Leaving.]
-!- FSCV [~FSCV@189.139.252.135] has quit [Ping timeout: 248 seconds]
-!- lisitsyn1 [~lisitsyn@37.61.181.59] has joined #shogun
-!- gsomix [~Miranda@188.168.3.10] has quit [Ping timeout: 245 seconds]
-!- lisitsyn [~lisitsyn@188.168.3.10] has quit [Ping timeout: 268 seconds]
-!- pickle27 [~Kevin@S0106002191dec7e8.cg.shawcable.net] has joined #shogun
-!- nube [~rho@116.90.239.13] has joined #shogun
-!- lambday [67157d37@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.55] has joined #shogun
 lambday	sonney2k: moin moin :)
 lambday	sonney2k: with the pretty function thing, all we gotta write in the error msg is the msg itself, right?
-!- lambday [67157d37@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.55] has quit [Quit: http://www.kiwiirc.com/ - A hand crafted IRC client]
-!- lambday [67157d37@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.55] has joined #shogun
@sonney2k	lambday, hey there!
@sonney2k	lambday, yes exactly!
 lambday	sonney2k: okay
@sonney2k	lambday, it should be a config in shogun/io/SGIO* to select how detailed you want to know where the error occurs
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
@sonney2k	moin votjakovr!
 lambday	sonney2k: okay..so once HeikoS's patch is merged, it will be enabled by default? or should we configure shogun with something?
 votjakovr	sonney2k: good morning!
-!- gsomix [~Miranda@r206-10.smr.ru] has joined #shogun
 gsomix	good morning
@sonney2k	lambday, I just hacked sth up that should do it
@sonney2k	compiling...
 lambday	sonney2k: :) :) okay
 lambday	good morning everyone :)
@sonney2k	lambday, if I commit this - can you test this please?
 lambday	sonney2k: sure
 lambday	:)
@sonney2k	patch is really small...
* sonney2k compiles
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 8181acb / src/shogun/io/SGIO.cpp,src/shogun/io/SGIO.h: https://github.com/shogun-toolbox/shogun/commit/8181acb60da0d7182497d30594223a9297944541
 shogun-notifier-	shogun: enable location info (as in object / function name printing before SGIO
 shogun-notifier-	shogun: prints) with config option to disable / show line and file
@sonney2k	lambday, oki committed
 lambday	pulling
@sonney2k	okidoki
@sonney2k	gtg brb
 lambday	sonney2k: ciao :)
 lambday	I'll test it
-!- pickle27 [~Kevin@S0106002191dec7e8.cg.shawcable.net] has quit [Quit: Leaving]
-!- lisitsyn1 [~lisitsyn@37.61.181.59] has quit [Quit: Leaving.]
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has joined #shogun
 sonne|work	lambday: okidoki back!
-!- lambday_ [67157f37@gateway/web/freenode/ip.103.21.127.55] has joined #shogun
 lambday_	sonne|work: okie dokie tested
 lambday_	sorry I got dc
 lambday_	:(
 lambday_	sonne|work: one problem though
 sonne|work	yes?
-!- lambday [67157d37@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.55] has quit [Quit: http://www.kiwiirc.com/ - A hand crafted IRC client]
 lambday_	sonne|work: it always shows that it originates from void shogun::SGIO::message
 sonne|work	hah yes
 sonne|work	it has to be in the #define then
* lambday_ is confused
 lambday_	sonne|work: how far your workplace is from where you live? :P
 sonne|work	I don't recall exactly but lets say ~20KMs
 lambday_	sonne|work: you sure drive fast :P
 sonne|work	lambday_: I go by train and whenever I have to leave it and walk I say brb :D
 sonne|work	but yes we are all michael schumacher here ;)
 lambday_	sonne|work: hahahahaha :D
 shogun-buildbot	build #942 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/942  blamelist: Soeren Sonnenburg <sonne@debian.org>
 sonne|work	lambday_: ok I know now how to do it properly. I don't have time to test this though
 lambday_	sonne|work: I'll test it
 lambday_	just a small test() with a REQUIRE will do, right?
 lambday_	tested with a few classes that uses REQUIRE as well
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * e2142df / src/shogun/io/SGIO.cpp,src/shogun/io/SGIO.h: https://github.com/shogun-toolbox/shogun/commit/e2142df4a17e39d4ec94023be6198c59d370a963
 shogun-notifier-	shogun: add pretty function macro in defines
 sonne|work	lambday_: no idea how to really test it in a test
 sonne|work	looking at it should be enough
 lambday_	sonne|work: I'm checking
 lambday_	sonne|work: works like a charm! :)
 shogun-buildbot	build #943 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/943  blamelist: Soeren Sonnenburg <sonne@debian.org>
 sonne|work	lambday_: what is the output of such message now?
 shogun-notifier-	shogun: lambday :develop * d8dc5b5 / tests/unit/base/SGObject_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/d8dc5b55611729a83213b460e4984ca959a7ffd5
 shogun-notifier-	shogun: minor fix for eigen3 check in SGObject_unittest
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * cc2f703 / tests/unit/base/SGObject_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/cc2f703ebeb36d059b632e1881b757d75fcc88ab
 shogun-notifier-	shogun: Merge pull request #1171 from lambday/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: minor fix for eigen3 check in SGObject_unittest
-!- nube1 [~rho@116.90.239.3] has joined #shogun
-!- nube [~rho@116.90.239.13] has quit [Ping timeout: 256 seconds]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
 shogun-buildbot	build #944 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/944  blamelist: lambday <heavensdevil6909@gmail.com>, Soeren Sonnenburg <sonne@debian.org>
-!- nube1 [~rho@116.90.239.3] has quit [Remote host closed the connection]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@wiking	lisitsyn: ping
 lisitsyn	wiking: pong
@wiking	lisitsyn: cmake? :)
 lisitsyn	wiking: cmdline is ready will continue
@wiking	coool!
 lisitsyn	wiking: not today though going to have exam tomorrow :D
@wiking	lisitsyn: other question: any ideas how to do a check in general for CFeatures to find out whether all the vectors in it are equal or not?
@wiking	i see that with DotFeatures it's possible to do this... but with CFeatures in general i see no way with the current api
 lisitsyn	wiking: like vectors of CFeatures f1 == vectors of CFeatures f2?
 lisitsyn	wiking: yeah CFeatures are quite general
 lisitsyn	why do you need it?
@wiking	lisitsyn: like: all f_i in F, where F is CFeatures
@wiking	i mean for all i,j f_i = f_j in F
 lisitsyn	so all vectors are the same?
@wiking	yeps
@wiking	dotfeatures supports an iteration i see that
 lisitsyn	strange you need that!
 lisitsyn	why/
 lisitsyn	?
@wiking	lisitsyn: decision tree
 lisitsyn	I mean it is quite singular case or?
@wiking	yeah well i dont know any other algo that would require this api :)
 lisitsyn	wiking: however can you build a decision tree on features only?
 lisitsyn	w/o at least dotfeatures
@wiking	lisitsyn: indeed
@wiking	lisitsyn: it's just branching based on the features
@wiking	you need to calculate an information gain value based on given amount of features
@wiking	and that's it
@wiking	you take the highest valued feature and branch there the tree...
@wiking	mmm we don't have a factory class for CFeatures as in case for Clabels rith?
@wiking	*right?
-!- lambday_ [67157f37@gateway/web/freenode/ip.103.21.127.55] has quit [Ping timeout: 250 seconds]
 lisitsyn	wiking: yes
 lisitsyn	we don't have it iirc
@wiking	mmmm this is going to be funny with some dynamic_cast stuff ;)
 lisitsyn	wiking: which means we have wrong design somewhere :)
-!- gsomix [~Miranda@r206-10.smr.ru] has quit [Quit: Miranda IM! Smaller, Faster, Easier. http://miranda-im.org]
 lisitsyn	wiking: I developed a thing that does format("{} fdfsd {} dfs {}",2.0,'c', 1); => "2.0 fdfsd c dfs 1"
 lisitsyn	may be we should replace our old-style %d %s etc with it
-!- lambday [67157e36@gateway/web/freenode/ip.103.21.126.54] has joined #shogun
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has quit [Ping timeout: 264 seconds]
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has joined #shogun
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has left #shogun ["QUIT :Leaving."]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun ["ERC Version 5.3 (IRC client for Emacs)"]
-!- nube [~rho@49.244.32.220] has joined #shogun
-!- nube [~rho@49.244.32.220] has quit [Ping timeout: 245 seconds]
-!- nube [~rho@36.253.226.40] has joined #shogun
-!- nube1 [~rho@49.244.61.96] has joined #shogun
-!- nube [~rho@36.253.226.40] has quit [Ping timeout: 252 seconds]
-!- nube1 [~rho@49.244.61.96] has quit [Ping timeout: 240 seconds]
-!- nube [~rho@49.126.230.83] has joined #shogun
-!- nube1 [~rho@49.244.29.250] has joined #shogun
-!- nube [~rho@49.126.230.83] has quit [Ping timeout: 256 seconds]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- nube1 [~rho@49.244.29.250] has quit [Ping timeout: 245 seconds]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- nube [~rho@49.244.72.191] has joined #shogun
-!- nube [~rho@49.244.72.191] has quit [Ping timeout: 264 seconds]
-!- lisitsyn [~lisitsyn@83.234.169.173] has joined #shogun
-!- mode/#shogun [+o lisitsyn] by ChanServ
-!- nube [~rho@49.244.37.190] has joined #shogun
-!- nube [~rho@49.244.37.190] has quit [Ping timeout: 246 seconds]
-!- HeikoS [~heiko@nat-179-180.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	sonney2k, sonne|work, lisitsyn turns out I *will* be able to make it this evening
-!- gsomix [~Miranda@83.234.169.173] has joined #shogun
 gsomix	hello
-!- nube [~rho@49.126.230.83] has joined #shogun
 lambday	HeikoS: there?
@HeikoS	lambday: yes, hi
@HeikoS	I just talked to Daniel a bit
 lambday	HeikoS: how's your work going? :)
 lambday	okay..
@HeikoS	done
@HeikoS	submitting today! :)
 lambday	HeikoS: awesome!
@HeikoS	its the paper for the website you have seen
@HeikoS	lambday: I talked to Daniel about the colours
@HeikoS	we have to take one sample from each color
@HeikoS	otherwise, there might be problems
 lambday	HeikoS: yes
 lambday	HeikoS: so, not going to a problem I guess
@HeikoS	but I think we can do this via having an index variable for the probing sampler which color to use
 lambday	HeikoS: yes
@HeikoS	and then just have one instance per color
@HeikoS	and pass this on...
@HeikoS	so no problems
@HeikoS	phew! :)
 lambday	yeah! phew! :D
@HeikoS	looking at your diagram ...
@HeikoS	what di you change?
@lisitsyn	re
 lambday	by the way please check the pseudo code (whis is not so pseudo but looks more like c++) :(
 lambday	umm..
 lambday	wait
 lambday	mainly, added the finalize method
 lambday	moved shifts weights etc to the rational approximation class
@HeikoS	so for the aggregation methods
@HeikoS	I would add two: one which adds numbers, and one which adds up scalars
@HeikoS	where finalize might divide by the number of added terms
@HeikoS	rest is looking good
@HeikoS	we will see whether it will work
@HeikoS	so checking pseudoicode now
 lambday	HeikoS: I didn't get..
@HeikoS	I would not store vectors and scalars, but rather accumulate them
@HeikoS	could you change the language to c++ in the gist?
 lambday	hehe okay
@sonney2k	HeikoS, happy with the logging?
@HeikoS	sonney2k: I saw the patch, not used it yet though, I guess its fine as its printing the context? :)
@sonney2k	HeikoS, and regarding this evening. you have to
@HeikoS	Now I have to undo all my log messages . noooooo
@HeikoS	sonney2k:  what?
 lambday	HeikoS: changed
@HeikoS	lambday:  did not really change that much ;)
@HeikoS	lambday:  for pseudo code, dont use pointers
@HeikoS	but dont worry now
 lambday	HeikoS: oh and another thing... I was thinking of sending the classes one by one... so, should I sent PR for CLinearOperator, CDenseMatrixOperator and one unittest?
@HeikoS	yeah for the basic building block at least
 lambday	HeikoS: alright, sending
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 264 seconds]
 lambday	argh stupid mistake in the cpp
 lambday	oops
 lambday	pseudocode
 lambday	HeikoS: in https://gist.github.com/lambday/5795796#file-logdet-cpp-L105, read it as "float64_t result=s.dot(get_imag(m_aggretation))
 lambday	m_aggregate**
@HeikoS	lambday: note I will be able to merge/review a bit
@HeikoS	just not all day around
@HeikoS	 but in the evening
@HeikoS	ah, lambday one more thing
@HeikoS	so every GSoC student was asked to think about a real life example to present in the next meeting
@HeikoS	for you, this can be computing the likelihood of the ozone model that we describe in that paper
@HeikoS	so if you take a look at that ozone page on the website I sent you
@HeikoS	there is the model (its just a big big Gaussian)
@HeikoS	I have the data for that etc. So the first cool thing would be to be able to evaluate the likelihood of that model using our methods
@HeikoS	thats proper real-life data
@HeikoS	next steps can be maximum likelihood solutions, and then Bayesian inference over that
@HeikoS	so you can think about how to present this to the others (just a few scenences)
@HeikoS	sentences
 lambday	HeikoS: alright
 lambday	thanks a lot :)
@HeikoS	lambday: NIPS was about adaptive MCMC, will share as soon as we make it public
 lambday	I was going to ask you about this :)
 lambday	okay :) cool!
 lambday	by the way, while sending PR, it says base branch "develop" - how can I send the PR against this feature branch?
 lambday	HeikoS: in my repo its feature/log_determinant already
@HeikoS	you have to commit the stuff inside a feature branch locally
@HeikoS	then push that feature branch to your fork
@HeikoS	then send a PR from that feature branch against the same branch in shogun
 lambday	HeikoS: I already pushed local feature branch to my fork
@HeikoS	so send the pr, when doing this you can select the branch
 lambday	shogun's base branch doesn't have the feature/log_determinant, it shows develop, and the head branch (my fork) shows feature..
 lambday	would it create it once I send the PR? :-/ sorry I am still fighting with git :(
@HeikoS	ah I see
@HeikoS	hmm
@HeikoS	lisitsyn:  how to create feature branchs in shogun's repository?
@HeikoS	can this be done via PRs?
@lisitsyn	HeikoS: just create it locally and push
@HeikoS	lisitsyn:  do I have to do it or can a PR create one?
@lisitsyn	HeikoS: I don't think it is possible to modify that by PR
@HeikoS	lisitsyn:  thanks :) one more question, how to reset to upstream current?
@HeikoS	lambday: I will create the feature branch once I figured out how to reset my stuff :)
 lambday	HeikoS:  okay :)
@lisitsyn	HeikoS: like that iirc git reset origin/develop
 lambday	HeikoS: I'll be back after dinner
@HeikoS	lambday: enjoy!
@HeikoS	lambday: created a feature branch lambday-log-det for you
-!- nube [~rho@49.126.230.83] has quit [Ping timeout: 276 seconds]
-!- nube [~rho@49.126.230.83] has joined #shogun
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
 votjakovr	HeikoS: hi! I've recieved your mail
@HeikoS	votjakovr: hi there :)
@HeikoS	should we talk abot things now or tomorrow?
 votjakovr	HeikoS: i'd like to hear your ideas about real world GP application... I think it should show us an advantages of using GPC wrt other classifiers
@HeikoS	votjakovr: thats a good idea
@HeikoS	so in contrast to SVM, we have proper binary probabilities
@HeikoS	however, with Laplace approximation on binary problems, we will not massively beat SVMs
 votjakovr	HeikoS: yep i agree
@HeikoS	since we cannot yet integrate out the hyperparameters (which would give better results)
@HeikoS	It is still nice to have good example though
@HeikoS	even if we reach same performance as SVM
@HeikoS	an example where the probabilities count would be good
@HeikoS	then we can make a point on that
@HeikoS	votjakovr: I think I would go for reproducing an example that is used in papers
@HeikoS	votjakovr: both a 2-dimensional (we can do nice plots of the predictive distribution then) and a higher dimensional
@HeikoS	also, a graphical toy example (click point together) would be nice
 votjakovr	HeikoS: btw maybe take an example from Girolami's paper for multiclass. What do you think?
@HeikoS	votjakovr: yes as a toy
@HeikoS	the ring one is nice
@HeikoS	but they also have proper data
@HeikoS	votjakovr:  I think we should go for multiple examples
@HeikoS	toy/real for binary, both in low and higher dimensions
@HeikoS	same for multiclass
@HeikoS	for multiclass, we might beat SVMs with the probabilities since they only can use heuristics
@HeikoS	and then a nice description and a screenshot for every example
@HeikoS	that would be really cool
@HeikoS	a little classification study using GPs
@HeikoS	votjakovr: that will help people a lot
@HeikoS	votjakovr: ok, since I am not there at the GSoC meeting, you will have to present these ideas (just a few sentences)
 votjakovr	HeikoS: Ok :) Also I'll try to find a good datasets for examples
@HeikoS	votjakovr: nice :)
@HeikoS	votjakovr: since we are covering quite a few cases , individual example do not have to be extremely complicated. Just some nice real/toy data should be fine.
 votjakovr	HeikoS: oh yeah
@HeikoS	votjakovr: ok, nice, so how are the other things going?
-!- zxtx [~zv@rrcs-74-62-200-195.west.biz.rr.com] has joined #shogun
 lambday	HeikoS: back
 lambday	HeikoS: thanks :) I'm sending the PR
 lambday	HeikoS: something is wrong :( it shows 16 commits, I had only one :(
 votjakovr	HeikoS: today i was drawing diagrams, but i have not finished yet. Also i was reading about some related GPC stuff
@HeikoS	lambday: what did you try to do?
@HeikoS	votjakovr: do you think you will finish the GP-refactoring (diagrams and code) until tomorrow?
@HeikoS	also lets do the logit binary case first
 lambday	HeikoS: I tried to sent the PR against lambday-log-det from feature/log_determinant (a branch in my fork)
@HeikoS	this is in the rasmussen GP book under chapter classification, its the first case (Laplace approximation)
@HeikoS	but laplace approximation is already there
@HeikoS	lambday: let me check the feature branch
@HeikoS	I think I forgot to rebase against develop head
 votjakovr	HeikoS: i agree, that laplace+logit likelihood will be the first
@HeikoS	votjakovr: but really first, the classification/regression distinction needs to be made, so focus on that for now
@HeikoS	I just want to make sure that you are ready to work on this stuff while I am not around. would be annoying for you if you get stuck with questions and nobody can answer them
@HeikoS	lambday: yeah I have local git issues :(
@HeikoS	give me a minute
 lambday	HeikoS:  no problem
 votjakovr	HeikoS: Ah, ok, i'll try to finish classification/regression distinction tomorrow.
@HeikoS	votjakovr: cool
@HeikoS	and then afterwards, we can start worrying about the GP internals, so lets meet tomorrow and discuss if you are fine with that?
 votjakovr	HeikoS: ok
@HeikoS	lambday: did you rebase while doing pull?
@HeikoS	looks like not ...
@HeikoS	argh
@HeikoS	I dont know why this is, maybe just send the PR against develop
@HeikoS	is also fine
@HeikoS	I am annoyed by the git stuff ;)
 lambday	HeikoS:  oops!
 lambday	HeikoS: I rebased against develop
 lambday	sorry, changing!
 lambday	:(
@HeikoS	lambday: no that should be fine
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Heiko Strathmann :lambday-log-det * 512d94f / src/shogun/lib/DataType.cpp,src/shogun/lib/DataType.h: https://github.com/shogun-toolbox/shogun/commit/512d94f6a6abb1a1fe43eb22d4dbe65e2347c855
 shogun-notifier-	shogun: refactored sizeof_ptype, sizeof_stype to make them available from static context
 shogun-notifier-	shogun: Heiko Strathmann :lambday-log-det * a5435a5 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/a5435a543f2265fc4409ac487f33fc72d7e7b663
 shogun-notifier-	shogun: first parts of copy_ptype with unit tests
 shogun-notifier-	shogun: Heiko Strathmann :lambday-log-det * 883ac63 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/883ac6316c1401812621067b8890205715c6b684
 shogun-notifier-	shogun: -refactored compare_stype a bit
 shogun-notifier-	shogun: -added copy_stype method with first bits
 shogun-notifier-	shogun: -added first unit test for copy_stype
 shogun-notifier-	shogun: Heiko Strathmann :lambday-log-det * caef78d / / (8 files): https://github.com/shogun-toolbox/shogun/commit/caef78dbe9682e5b6aa77ad8feb25dd70e8be497
 shogun-notifier-	shogun: initial (working) attempt for a general purpose clone method of CSGObject. Comes with first basic unit tests. More to come
 shogun-notifier-	shogun: Heiko Strathmann :lambday-log-det * 855b1be / / (8 files): https://github.com/shogun-toolbox/shogun/commit/855b1be43183afdde4b7e2edea0e42d867be04ca
 shogun-notifier-	shogun: Merge pull request #1167 from karlnapf/develop
@HeikoS	here we go
 shogun-notifier-	shogun: enable location info (as in object / function name printing before SGIO
 shogun-notifier-	shogun: prints) with config option to disable / show line and file
 shogun-notifier-	shogun: Soeren Sonnenburg :lambday-log-det * e2142df / src/shogun/io/SGIO.cpp,src/shogun/io/SGIO.h: https://github.com/shogun-toolbox/shogun/commit/e2142df4a17e39d4ec94023be6198c59d370a963
 shogun-notifier-	shogun: add pretty function macro in defines
 shogun-notifier-	shogun: Soeren Sonnenburg :lambday-log-det * cc2f703 / tests/unit/base/SGObject_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/cc2f703ebeb36d059b632e1881b757d75fcc88ab
 shogun-notifier-	shogun: Merge pull request #1171 from lambday/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: minor fix for eigen3 check in SGObject_unittest
 lambday	so many commits :'(
@HeikoS	ah man
@HeikoS	git kills me
@HeikoS	there should be your branch now
@HeikoS	rebased against latest develop
@HeikoS	but since I regulary fail dealing with this, lets do things in develop
@HeikoS	or try another PR against lambday-log-det
@HeikoS	https://github.com/shogun-toolbox/shogun/branches
@HeikoS	its now under merged branches
 lambday	:''(
@sonney2k	HeikoS, you cannot rebase on published branches
@HeikoS	sonney2k: I just wanted to create a new feature branch for lambday
@HeikoS	to push his stuff into
@HeikoS	so I created it locally
@HeikoS	from latest develop
@HeikoS	and then pushed to origin
@sonney2k	HeikoS, you mean git flow publish feature?
@HeikoS	sonney2k:  no just a new branch for lambday to develop stuff in
@HeikoS	sonney2k: I though this way easy, but since it is not, I think sending PRs against develop is fine
@HeikoS	we are just adding stuff anyway
@sonney2k	HeikoS, well git flow feature start 'feature'
@sonney2k	git flow feature publish 'feature'
@HeikoS	ok lets try that
@sonney2k	HeikoS, but you cannot rebase in this branch
@sonney2k	you have to work until the very end in this
@sonney2k	and then once done do the merge to develop!
@HeikoS	my whole git is now broken :(
 lambday	:(
@HeikoS	anyway
@HeikoS	lets work in develop
@sonney2k	yeah don't rebase on anything you give out!
@sonney2k	you can only do that locally
@HeikoS	sonney2k: well that was my plan
@sonney2k	van51, how is it going?
@sonney2k	progressing?
@sonney2k	and hey gsomix? tests finished?
@HeikoS	sonney2k: can I safely remove the lambday-log-det branch in master repository?
 lambday	HeikoS: I am cancelling the PR then?
@HeikoS	lambday:  yeah please do it in develop
@HeikoS	we will get into git hell otherwise ;)
@HeikoS	and I am not the guy who knows the way out of there
@sonney2k	HeikoS, locally and remotely - just remove it
@HeikoS	sonney2k, so the one the I see under https://github.com/shogun-toolbox/shogun/branches  in merged branches, right?
 votjakovr	HeikoS: are we agreed to use CMachine as a base class for GP?
 gsomix	sonney2k: hey, nope. still preparing for exam. I'll do it little later, at night.
@HeikoS	votjakovr: it is already
@HeikoS	its the base class of the current GP class
@HeikoS	so yes
@HeikoS	votjakovr: we just need to add an extra abstraction layer
 votjakovr	HeikoS: yep, i understand
@sonney2k	gsomix, when is your exam again?
 gsomix	sonney2k: 19 June.
-!- pickle27 [~Kevin@S0106002191dec7e8.cg.shawcable.net] has joined #shogun
 lambday	crap I just subscribed to this new git thing they were showing and now I can't find the PRs, argh!!
@sonney2k	gsomix, ok then good luck and lets talk afterwards
 gsomix	sonney2k: ok, thanks.
 lambday	ah found it
 votjakovr	HeikoS: btw why don't we use train() method for inference for example?
@HeikoS	votjakovr: we do
@HeikoS	train calls some other methods internally, check CMachine
@HeikoS	its not overloaded
@HeikoS	but the submethods are
@lisitsyn	pickle27: hey
 pickle27	hey!
 pickle27	GSoC has begun!
@lisitsyn	pickle27: yeah
 van51	sonney2k: it's going ok
@lisitsyn	pickle27: remember we have to think about some application as a result of your work?
 van51	sonney2k: i'm fighting a bit with the compiler atm :p
 votjakovr	HeikoS: but why does train_machine() method just return false?
 pickle27	lisitsyn, yes of course - by application are you meaning something more involved than a really good example right?
 van51	I've been meaning to ask though, the IO operations should be based on shogun classes and not iostream, right?
@lisitsyn	pickle27: yes like not just an example but really fancy example
 van51	because that's what I'm going to start next
 pickle27	yeah!
@HeikoS	votjakovr: checking
 pickle27	lisitsyn, I still like the audio idea and the ekg idea Andreas mentioned but I'll have to see how to make them fancy above just a regular example
@lisitsyn	pickle27: ECG is really cool
 lambday	HeikoS: sent the PR against develop'
@lisitsyn	pickle27: well lets just make them audial
 pickle27	lisitsyn, yeah I think so too
 pickle27	lisitsyn, I wonder if we could separate a song into its components - that would be cool too
@lisitsyn	pickle27: yeah once algos are ready we can play a bit I think
 lambday	HeikoS: things would have been better if we could have kept it in a separate branch.. I'll remove these debug msgs once everything is tested... :(
@HeikoS	lambday: that is alright, as said, we are only adding things
 pickle27	lisitsyn, do you have a pref for the language the final example is done in?
 pickle27	I'm going to write my basic examples in c++ obviously but I was thinking python for the finale
@HeikoS	lambday: sorry for being unable to deal with this git stuff . it just always causes me a headache, debug messages are fine though
@lisitsyn	pickle27: I think we should go for something web
 pickle27	okay so probs python or ruby then
@HeikoS	votjakovr: I am sorry, I was wrong
@lisitsyn	pickle27: well python is totally ok but there is a need to employ something to play audio etc
@lisitsyn	pickle27: I think that's crucial to have a web demo everbody can check
@HeikoS	votjakovr: so training in the GP case means just to compute cholesky stuff
 lambday	HeikoS: no problem :( I suck at git stuffs every time, always checking stackoverflow solns :(
@HeikoS	votjakovr: currently, train is empty
@HeikoS	votjakovr: and only apply is called,
 pickle27	lisitsyn, yeah I like that idea too
@lisitsyn	lambday: git gets easier once you get the basic idea that branches are homeomorphic endofunctors mapping submanifolds of a Hilbert space
@HeikoS	votjakovr:  so the question is whether we should split training and testing
 votjakovr	HeikoS: exactly!
@HeikoS	votjakovr: I would say yes
 votjakovr	HeikoS: i agree
@HeikoS	so train should precompute everything that only needs the training features
@HeikoS	votjakovr: currently this is all done in a lazy way right?
 lambday	lisitsyn: kill me! kill me now :D
 votjakovr	HeikoS: yep
@lisitsyn	lambday: that's a famous joke about git
 lambday	lisitsyn: *dies*
@HeikoS	votjakovr: so which parts do only depend on training data?
* lambday dies
 votjakovr	HeikoS: we perform inference on training data
@HeikoS	votjakovr: no, we also have testing data
 pickle27	lisitsyn, python and ruby both have nice web frameworks, is that what you had in mind?
@lisitsyn	pickle27: oh well all we need is to pass some data to javascript actually
@lisitsyn	can be done in any language you'd like to use
 pickle27	lisitsyn, oh okay right
@HeikoS	votjakovr:  so for exact inference in regression, training is to compute the cholesky of K+\sigma^2 * I
 votjakovr	HeikoS: for testing data we compute mean and variance using posterior
@HeikoS	votjakovr: exactly, and for that we need the cholesky
@HeikoS	votjakovr: so I would say then we should have an abstract method on inference method
@HeikoS	which corresponds to train
 votjakovr	HeikoS: yep, so train() method should perform inference on training data
@HeikoS	votjakovr: for the exact inference, this then updates the cholesky and the training kernel matrix
@HeikoS	votjakovr: thats not really called inference, but yes, do all the stuff on training data
@HeikoS	votjakovr: and then we can use the CMachine interface for train/apply
@HeikoS	where apply calls submethods apply_regression etc
 votjakovr	HeikoS: yep, something like compute_posterior() in inference method class ?
@HeikoS	and the GP-subclasses implement this
@HeikoS	votjakovr: that sounds good
@HeikoS	and GP::train_machine then calls this method
@HeikoS	votjakovr:  dont call it compute_posterior, since in classification its different
@HeikoS	votjakovr: maybe call it just train :)
@HeikoS	votjakovr: btw we should also refactor the Laplace approximation class, we cannot use the regression one for classification but it shares a lot of code
 votjakovr	HeikoS: but what if i just make an update_all() method public?
@HeikoS	votjakovr: yeah maybe, we will see about this later I guess
@HeikoS	votjakovr: first goal is to have GP base class which inherits from CMachine and two subclasses for regression and classification
 votjakovr	HeikoS: Ok!
 pickle27	lisitsyn, also
@lisitsyn	pickle27: yes?
 pickle27	lisitsyn, I was planning on using the shogun PCA class as a sort of template for the various ADJ techniques
 pickle27	lisitsyn, Im just looking at the PCA class now to see if that makes any sense to do at all lol
@lisitsyn	pickle27: oh well
@lisitsyn	PCA is so easy to implement
@lisitsyn	:)
 pickle27	lisitsyn, yeah it is lol
 pickle27	lisitsyn, just seemed like the structure of the class might be a bit similar
@lisitsyn	pickle27: you are welcome to patch that part of shogun for sure
 pickle27	but maybe not
@lisitsyn	pickle27: PCA is also implemented in tapkee of course
 pickle27	yeah I would happily do some work on the PCA module
 pickle27	yes I know!
 pickle27	hmm PCA is still LAPACK in shogun
@lisitsyn	pickle27: actually if you find it easier you may first implement something apart
@lisitsyn	pickle27: yes
 pickle27	that could be another great entrance commit PCA in Eigen3
 pickle27	yeah I am planning to implement separate for a while but I still want to use a shogun class
@lisitsyn	pickle27: I don't know if we should change shogun's PCA to use tapkee
@lisitsyn	actually I support three possible methods
@lisitsyn	dense from eigen3, randomized like in redsvd
@lisitsyn	and arpack
 pickle27	right well for the time being Im going to focus on ADJ anyways
@lisitsyn	so may be it makes sense to do a few steps to make it compatible
@lisitsyn	I'll be back a bit later
 pickle27	okay!
-!- lambday [67157e36@gateway/web/freenode/ip.103.21.126.54] has quit [Ping timeout: 250 seconds]
 shogun-notifier-	shogun: lambday :develop * a536834 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/a536834a2c2e1c80a997cc62bb651c25bb9cd43e
 shogun-notifier-	shogun: class CLinearOperator and DenseMatrixOperator added
 shogun-notifier-	shogun: Heiko Strathmann :develop * 6642f28 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/6642f286d42a6b7c175d7c3a2cd1cba4f5122a76
 shogun-notifier-	shogun: Merge pull request #1173 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: class CLinearOperator and DenseMatrixOperator added
-!- nube [~rho@49.126.230.83] has quit [Ping timeout: 276 seconds]
-!- nube [~rho@49.244.53.255] has joined #shogun
 shogun-buildbot	build #945 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/945  blamelist: lambday <heavensdevil6909@gmail.com>
 gsomix	operators, operators everywhere
@HeikoS	gsomix: smooth operators! :)
@HeikoS	https://www.google.co.uk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&ved=0CDcQtwIwAA&url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D3L3T4tFNxOo&ei=4V6_UaXnHMGqO7K9gPAB&usg=AFQjCNFm45xhogGxX82-g9mygCmsxq7hyA&sig2=cZj210ZL6TC7GQ4Tb-AfXg&bvm=bv.47883778,d.ZWU
-!- nube [~rho@49.244.53.255] has quit [Ping timeout: 248 seconds]
 gsomix	HeikoS: cool!
 gsomix	now I know what to tell the teacher about operators on the exam :)
@HeikoS	gsomix: is your exam also about operators? :)
 gsomix	HeikoS: methods of mathematical physics. there is some operators and eigenproblems related to quantum mechanics examples.
 gsomix	*there are
@HeikoS	gsomix: nice!
@HeikoS	good stuff, physicists always have the best ideas, statisticians always steal them ;)
 shogun-buildbot	build #946 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/946  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has quit [Ping timeout: 256 seconds]
 gsomix	HeikoS: huh. btw, there is no strong course about statistics on my major. only in the form of the statistical physics. it's sad.
@HeikoS	gsomix: seems to happen anyways
@HeikoS	We just stole another method from statistical physikcs literatur here :)
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- nube [~rho@49.244.119.220] has joined #shogun
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has joined #shogun
-!- nube [~rho@49.244.119.220] has quit [Ping timeout: 264 seconds]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Remote host closed the connection]
-!- HeikoS [~heiko@nat-179-180.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun ["Fallen asleep!"]
-!- gsomix [~Miranda@83.234.169.173] has quit [Ping timeout: 245 seconds]
-!- lisitsyn [~lisitsyn@83.234.169.173] has quit [Ping timeout: 248 seconds]
-!- nube [~rho@49.244.113.132] has joined #shogun
-!- lambday [67157c36@gateway/web/freenode/ip.103.21.124.54] has quit []
-!- sonney2k [~shogun@7nn.de] has left #shogun ["Ex-Chat"]
-!- lisitsyn [~lisitsyn@83.234.169.173] has joined #shogun
 lisitsyn	oh HeikoS mentioned sade
-!- nube [~rho@49.244.113.132] has quit [Ping timeout: 240 seconds]
-!- gsomix [~Miranda@83.234.169.173] has joined #shogun
-!- nube [~rho@49.244.88.103] has joined #shogun
-!- iglesiasg [d58f3226@gateway/web/freenode/ip.213.143.50.38] has joined #shogun
-!- nube [~rho@49.244.88.103] has quit [Ping timeout: 246 seconds]
-!- nube [~rho@49.244.13.21] has joined #shogun
 iglesiasg	thanks for the patch hushell, I will check
-!- nube [~rho@49.244.13.21] has quit [Ping timeout: 252 seconds]
--- Log closed Tue Jun 18 00:00:50 2013
