--- Log opened Sat Oct 25 00:00:39 2014
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	wiking: ping?
-!- iglesiasg [~iglesias@50-76-45-78-ip-static.hfc.comcastbusiness.net] has joined #shogun
@HeikoS	iglesiasg: hello :)
-!- jiaolong [5c15c2a6@gateway/web/freenode/ip.92.21.194.166] has joined #shogun
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has quit [Quit: Leaving.]
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- jiaolong [5c15c2a6@gateway/web/freenode/ip.92.21.194.166] has quit [Quit: Page closed]
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has quit [Ping timeout: 265 seconds]
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has quit [Ping timeout: 265 seconds]
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- iglesiasg [~iglesias@50-76-45-78-ip-static.hfc.comcastbusiness.net] has quit [Quit: leaving]
-!- HeikoS [~heiko@50-76-45-78-ip-static.hfc.comcastbusiness.net] has quit [Ping timeout: 255 seconds]
 shogun-buildbot	build #907 of nightly_default is complete: Failure [failed notebooks]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/907  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Fernando Iglesias <fernando.iglesiasg@gmail.com>, Wu Lin <yorker.lin@gmail.com>, tklein23 <tklein23@users.noreply.github.com>, Thoralf Klein
 shogun-buildbot	<thoralf@fischlustig.de>
-!- HeikoS [~heiko@107.17.164.143] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- iglesiasg [~iglesias@12.104.145.5] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	Gentlemen
@HeikoS	iglesiasg: good evening
@wiking	:)
@HeikoS	wiking: heya
@wiking	where r u guys? :)
@HeikoS	wiking: san jose
@HeikoS	iglesiasg, https://github.com/shogun-toolbox/shogun/wiki/SWIG-issues
@wiking	ah ok thatswhy it's good evening
@wiking	it's 3pm here
@wiking	HeikoS: for swig issues we shoulg go with d-poiinters
@HeikoS	wiking: 3pm nice
@HeikoS	wiking: yeah we thought about that too
@HeikoS	wiking: what about writing some things down
@HeikoS	wiking: so that its not just all in our heads
@HeikoS	and maybe we can make some entrance tasks from this
@HeikoS	wiking: could you explain the d-pointer stuff a bit?
@wiking	mmm not now
@wiking	still working here :)
@wiking	but here's a good article about it
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: jiaolong :develop * 05ce392 / src/shogun/structure/GraphCut.h: https://github.com/shogun-toolbox/shogun/commit/05ce392abb1871c8c73c217914812ee88562675d
 shogun-notifier-	shogun: removed buildbot warnings from GraphCut.h
 shogun-notifier-	shogun: Heiko Strathmann :develop * ef2a460 / src/shogun/structure/GraphCut.h: https://github.com/shogun-toolbox/shogun/commit/ef2a460b6121ce358266f2cca71ce4d443592c6b
 shogun-notifier-	shogun: Merge pull request #2554 from Jiaolong/rm_warnings
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: removed buildbot warnings from GraphCut.h
@wiking	http://qt-project.org/wiki/Dpointer
@wiking	http://zchydem.enume.net/2010/01/19/qt-howto-private-classes-and-d-pointers/
@HeikoS	wiking: thanks
 shogun-buildbot	build #81 of trusty - libshogun - viennacl is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun%20-%20viennacl/builds/81
 shogun-buildbot	build #845 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/845  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, jiaolong <jiaolongxu@gmail.com>
-!- travis-ci [~travis-ci@ec2-23-22-26-147.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/38997367
-!- travis-ci [~travis-ci@ec2-23-22-26-147.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #873 of FCRH - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/873  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, jiaolong <jiaolongxu@gmail.com>
 shogun-notifier-	shogun: Heiko Strathmann :develop * 096de32 / src/shogun/preprocessor/PCA.h: https://github.com/shogun-toolbox/shogun/commit/096de322b6f23d231a9db5408698cf78c44bda81
 shogun-notifier-	shogun: little doc correction
 shogun-notifier-	shogun: Heiko Strathmann :develop * 3f26225 / src/shogun/mathematics/linalg/dotproduct/VectorDotProduct.h: https://github.com/shogun-toolbox/shogun/commit/3f262258baf70ecb03f241685c9c5dc23124544b
 shogun-notifier-	shogun: fixed doxygen math
 shogun-notifier-	shogun: Heiko Strathmann :develop * cd805c7 / src/shogun/clustering/ (2 files): https://github.com/shogun-toolbox/shogun/commit/cd805c75f0b6266dde13d19df4995026a62ab0ab
 shogun-notifier-	shogun: removed stdio from header and add documentation string
 shogun-notifier-	shogun: Heiko Strathmann :develop * cb4672f / src/shogun/clustering/KMeans.h: https://github.com/shogun-toolbox/shogun/commit/cb4672f442556425d20edcd99f385ec11e019a7a
 shogun-notifier-	shogun: added some mini updates to doc
 shogun-notifier-	shogun: Heiko Strathmann :develop * 907b8da / src/shogun/distributions/KernelDensity.h: https://github.com/shogun-toolbox/shogun/commit/907b8da70ad2267d0b35906214cec0c9d93b295f
 shogun-notifier-	shogun: doc string
 shogun-notifier-	shogun: Heiko Strathmann :develop * d1384f9 / src/shogun/structure/libbmrm.h: https://github.com/shogun-toolbox/shogun/commit/d1384f9b7e19fb106480bb96cbfadc91e60b842e
 shogun-notifier-	shogun: doc string
 shogun-notifier-	shogun: Heiko Strathmann :develop * 24bbcc5 / src/shogun/distributions/EMBase.h: https://github.com/shogun-toolbox/shogun/commit/24bbcc52b7ff73c7b2a5d6e1bd4d146f38da6e85
 shogun-notifier-	shogun: doc strings
 shogun-notifier-	shogun: Heiko Strathmann :develop * 104a258 / src/shogun/distributions/EMBase.h,src/shogun/distributions/EMMixtureModel.h: https://github.com/shogun-toolbox/shogun/commit/104a25851abc69bbf2be457c0bfc9847a0851078
 shogun-notifier-	shogun: docstrings
 shogun-notifier-	shogun: Heiko Strathmann :develop * 90d1a6f / src/shogun/labels/MultilabelLabels.h: https://github.com/shogun-toolbox/shogun/commit/90d1a6f5cb5a0523beda10bd21cf774b47d75ee4
 shogun-notifier-	shogun: docstrings
-!- witness___ [uid10044@gateway/web/irccloud.com/x-rbwdfoufhxjylbfe] has quit [Quit: Connection closed for inactivity]
 shogun-buildbot	build #78 of osx2 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20modular_interfaces/builds/78  blamelist: jiaolong <jiaolongxu@gmail.com>
-!- Phawx [~Phawx@178.19.210.162] has joined #shogun
 shogun-buildbot	build #79 of osx2 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20modular_interfaces/builds/79  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- HeikoS [~heiko@107.17.164.143] has quit [Quit: Leaving.]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
-!- Phawx [~Phawx@178.19.210.162] has quit [Quit: Leaving]
@lisitsyn	iglesiasg: you and heiko should answer my super question ;)
@lisitsyn	think about it!
@lisitsyn	what's next after deep learning and how can we jump on this train
@wiking	hahaha
-!- travis-ci [~travis-ci@ec2-23-22-26-147.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/38999536
-!- travis-ci [~travis-ci@ec2-23-22-26-147.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #443 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/443  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, jiaolong <jiaolongxu@gmail.com>
 shogun-buildbot	build #846 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/846  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #847 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/847  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #874 of FCRH - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/874  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@iglesiasg	shit, I fell asleep while compiling
@wiking	lol
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 shogun-buildbot	build #80 of osx2 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20modular_interfaces/builds/80  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #81 of osx2 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20modular_interfaces/builds/81  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@iglesiasg	when we build PythonModular with Eigen support we get some Eigen__MatrixXt stuff in modshogunPYTHON_wrap.cxx
@iglesiasg	this is not there when building w/o Eigen
@wiking	iglesiasg: mmm then that means that eigen is being imported in a header
@wiking	somewhere...
@iglesiasg	wiking: I checked that with grep and didn't find it, so at least no direct include
@iglesiasg	grep -R eigen */*.h -- that's how I checked it
@wiking	git grep eigen -- '*.h'
@iglesiasg	-Ri actually, anyway
@wiking	in src/shogun
@wiking	and you'll see quite some
@wiking	git grep eigen3.h -- '*.h
@wiking	machine/gp/SingleLaplacianInferenceMethodWithLBFGS.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/dotproduct/DenseEigen3DotProduct.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/Add.h:#include <shogun/mathematics/eigen3.h>
@iglesiasg	yep
@wiking	mathematics/linalg/internal/implementation/Dot.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/ElementwiseProduct.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/ElementwiseSquare.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/MatrixProduct.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/Max.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/Scale.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/SetRowsConst.h:#include <shogun/mathematics/eigen3.h>
@wiking	mathematics/linalg/internal/implementation/SpecialPurpose.h:#include <shogun/mathemat
@wiking	the linalg shouldn't matter
@wiking	at least not the internal one
@wiking	i reckon you can throw it out from machine/gp/SingleLaplacianInferenceMethodWithLBFGS.h
@iglesiasg	let me try that
@wiking	it's a common mistake done by Wu Lin
@wiking	he always did this regardless how many times i told not to do this
@wiking	ah now
@wiking	*no
@wiking	he fucked it up
@wiking	/* compute the gradient given the current alpha*/
@wiking	void get_gradient_wrt_alpha(Eigen::Map<Eigen::VectorXd>* alpha,
@wiking	Eigen::Map<Eigen::VectorXd>* gradient);
@wiking	/* compute the function value given the current alpha*/
@wiking	void get_psi_wrt_alpha(Eigen::Map<Eigen::VectorXd>* alpha,
@wiking	float64_t* psi);
@iglesiasg	arrrrgh
@wiking	this is a private function in the header
@iglesiasg	that is not nice in the header
@wiking	but i reckon you can hide this
@wiking	mmm
@wiking	well i worst case what can be done
@wiking	is to make this into a static function
@wiking	where u pass all the variables of the class
@wiking	get_psi_wrt_alpha uses some of the object variables
@wiking	same goes for get_gradient_wrt_alpha
@wiking	ok now
@wiking	this should be fairly easy to fix
@wiking	Eigen::Map<Eigen::VectorXd> eigen_alpha(alpha_cast, dim);
@wiking	float64_t psi = 0.0;
@wiking	obj_prt->get_psi_wrt_alpha(&eigen_alpha, &psi);
@wiking	Eigen::Map<Eigen::VectorXd> eigen_gradient(gradient, dim);
@wiking	obj_prt->get_gradient_wrt_alpha(&eigen_alpha, &eigen_gradient);
@wiking	as these are all maps of some very standard arrays
@wiking	so just do the mapping within those functions :P
 lambday	wiking: iglesiasg: I just removed this one - mathematics/linalg/dotproduct/DenseEigen3DotProduct.h
 lambday	this one is deprecated and is no longer needed
@wiking	lambday: commited?
@wiking	if so then just push it
 lambday	wiking: didn't push yet - still fixing some doxygen bugs
 lambday	alright
 lambday	pushing whatever I have till now
@wiking	and once iglesiasg fixes that then swig wont generate eigen mappings :P
@iglesiasg	wiking: why the linalg ones shouldn't matter though? They're just skipped by swig, I am guessing
@wiking	iglesiasg: because those headers are used internally in the linalg part of shgun
@wiking	i.e. we don't do mappings over that
@wiking	iglesiasg: so it's almost like d-pointers
@iglesiasg	allright
@wiking	lambday: how about mathematics/linalg/linsolver/IterativeSolverIterator.h
@wiking	?
 lambday	wiking: that one includes eigen3 in the header?
@wiking	but i reckon we don't do mappings of that either or?
 lambday	wiking: let me check
@wiking	mathematics/linalg/linsolver/IterativeSolverIterator.h:#include <shogun/mathematics/eigen3.h>
@wiking	no we are good
 lambday	wiking: should be avoided... when i did that I didn't know much
 lambday	will fix
@wiking	cool
@wiking	iglesiasg: although i wonder about SingleLaplacianInferenceMethodWithLBFGS as well....
 lambday	wiking: but iirc then iterative solver iterator is used internally
 lambday	I mean, its not exposed
@wiking	oh nothing...
@wiking	iglesiasg:
@wiking	interfaces/modular/GaussianProcess.i:%rename(SingleLaplacianInferenceMethodWithLBFGS) CSingleLaplacianInferenceMethodWithLBFGS;
@wiking	interfaces/modular/GaussianProcess.i:%include <shogun/machine/gp/SingleLaplacianInferenceMethodWithLBFGS.h>
@wiking	interfaces/modular/GaussianProcess_includes.i: #include <shogun/machine/gp/SingleLaplacianInferenceMethodWithLBFGS.h>
@wiking	this is why eigen is actually in the modshogun_PYTHON.cxx
@wiking	git grep IterativeSolverIterator -- '*.i'
@wiking	is an empty set
 lambday	wiking: yeah that's what I thought - shouldn't matter
@wiking	indeed
@wiking	so maybe once iglesiasg fixes that shit in SingleLaplacianInferenceMethodWithLBFGS we'll have travis working again :)
@wiking	\o/
 lambday	wiking: btw about khaled's random matrix/vector patch
 lambday	wiking: as of now I think its better to keep it within linalg
 lambday	wiking: Heiko suggested something - that we maybe want to put it alongside Random.h
 lambday	but this thing heavily uses viennacl and then we'll have viennacl code in many places apart from linalg
 lambday	wiking: btw I just noticed in some of the linalg functions khaled has kept generic implementation as Eigen3 specialization... maybe I'll change those
 lambday	SpecialPurpose.h.. Core.h etc
 lambday	iglesiasg: wiking: for eigen mapping stuff, we can use SGMatrix's map operator and Eigen constructor.. its neater
@iglesiasg	lambday: I am following the style how Wu did it in other parts of that file and just pass the float* and the dimension around
@iglesiasg	lambday: but I agree with you, it's better that other way
 lambday	iglesiasg: yeah maybe for next tasks we can.
@iglesiasg	in any case, this code has really weird things...
@iglesiasg	I don't really see the point of passing around Eigen::VectorXd* alpha and do the math operations as *alpha
 lambday	iglesiasg: I guess eigen3 does deep copy.. maybe use reference?
@iglesiasg	lambday: I'd guess that it doesn't do deep copy, but I am not sure
 lambday	iglesiasg: let me check
@wiking	map is not a deep copy
@wiking	just a wrapping
@iglesiasg	lambday: anyhow, since I am passing the float* together with the dimension, I don't need to be aware of that just yet
 lambday	iglesiasg: I remember khaled saying this once
 lambday	nah map is not
@iglesiasg	is not deep copy?
 lambday	map is not deep copy..
@wiking	Eigen::Map<Eigen::VectorXd>
@iglesiasg	right
@wiking	it's a simple wrapping
@wiking	nothing else
 lambday	but VectorXd vec1 = vec2 does deep copy
@iglesiasg	I hope this SingleLaplacianInferenceMethodWithLBFGS is unit tested
@iglesiasg	otherwise this refactoring might end up biting me
@iglesiasg	yeah, it seems to have proper tests, awesome
 lambday	iglesiasg: it does deep copy when you pass Eigen::Matrix as param.. just checked
@iglesiasg	lambday: will try to keep that in mind from now on, thanks!
 lambday	iglesiasg: I don't understand why should one pass *float with the dimension? :(
@iglesiasg	btw, they brought Linus and Peter Norvig yesterday
@iglesiasg	lambday: yeah.. I agree with you. It's not the proper way of doing it
@iglesiasg	lambday: what does rows() return for an Eigen::Map<Eigen::VectorXd>?
@iglesiasg	lambday: just the vector dimension, right?
 lambday	iglesiasg: yes
@iglesiasg	cool, thanks
 lambday	iglesiasg: I guess the easiest way would be to change the function params to SG.. even if you pass Eigen matrix due to the eigen constructor in SG it should do the conversion automatically... then inside the function we can use map from SG
 lambday	oh but it uses eigen map instead.. that won't work then
 lambday	sorry about the confusion
@wiking	i'm totally puzzled by this issues
@wiking	https://github.com/shogun-toolbox/shogun/issues/2538
@wiking	iglesiasg: still here?
@iglesiasg	yep
@iglesiasg	the Eigen__MatrixXt thingies still appear in the modshogunPYTHON*
@iglesiasg	I am double checking it though..
@wiking	iglesiasg: do you know why SGString doesn't have a destructor?
@iglesiasg	amazing
@iglesiasg	wiking: destroy_string() xD
@wiking	iglesiasg: ok yeah but like a real dtor
@wiking	~SGString()
@wiking	ok i'll make one :)
@iglesiasg	wiking: yeah, I got you. I found it funny that there's this destroy_string that is called from nowhere haha
@wiking	iglesiasg: mmm maybe i should just drop then destroy_string and free_string
@wiking	mmm ok no
@wiking	i'll just remove destroy_string
@wiking	lambday: how do i force to turn off viennacl?
@wiking	-DVIENNACL_FOUND=OFF doesn't work
 lambday	wiking: checking
 lambday	wiking: HAVE_VIENNACL is the macro...
 lambday	wiking: I'm afraid current it's not done
 lambday	wiking: if the package is not found only then it will say viennacl missing
 lambday	CMakeLists.txt:651
 lambday	wiking: maybe define another variable for this? if that's turned off then we'll find the viennacl pkg
@iglesiasg	wiking: so it was not only this thing in SingleLaplacianInferenceMethodWithLBFGS
@iglesiasg	eigen is leaking into swig somewhere else too
@wiking	:<
@wiking	fuck
@wiking	iglesiasg: have u compiled the thing from scratch
@wiking	rm -rf build
@iglesiasg	rm -rf build
@iglesiasg	yes
@iglesiasg	but it is so nuts this thing of the memory comsumption w/ and w/o eigen
@iglesiasg	2GB and ~0.5GB
@wiking	fuck
@wiking	mmm is it really 0.5GB
@wiking	i never seen swig requiring oonly 0.5 :P
@iglesiasg	wiking: compile PythonModular w/o Eigen :-)
@lisitsyn	hah
@lisitsyn	really?
@iglesiasg	I wanted to double check this though in case I missed something yesterday
@lisitsyn	swig + eigen = 2gb of ram?
@iglesiasg	let me do it now
@lisitsyn	and w/o just 0.5?
@iglesiasg	lisitsyn: let me double check, I might be saying just bullshit
@lisitsyn	iglesiasg: I wish it is true as it sounds awesome
@lisitsyn	iglesiasg: what if we remove std? :D
@lisitsyn	0.1gb? ;)
@wiking	i mean the thing is that afaik modular interface packages are not being generated for ubuntu
@wiking	because it uses 4G+ ram
 shogun-buildbot	build #444 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/444  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@iglesiasg	wiking: lisitsyn: mistery solved
@iglesiasg	it was ccache..
@wiking	iglesiasg: lol
@wiking	iglesiasg: ok push the fix then
@wiking	let's see how travis reacts
@iglesiasg	wiking: all right
@wiking	as usually the modular jobs were dying because of insufficient mem
@iglesiasg	wiking: not very strict measure probably, but it reduced it about 100mb
@iglesiasg	I mean the refactoring
@iglesiasg	wiking: but I think it is worth to investigate this thing of Eigen__MatrixXt in modshogunPYTHON_wrap.cxx. I don't see any reason why there should any Eigen related thing in there
@iglesiasg	wiking: what do you think?
@wiking	mmm
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: lambday :develop * f918c77 / src/shogun/mathematics/linalg/dotproduct/ (4 files): https://github.com/shogun-toolbox/shogun/commit/f918c774359cde3fa811ba3f31ef83d68de6b1ac
 shogun-notifier-	shogun: Removed deprecated dot-product from linalg
 shogun-notifier-	shogun: lambday :develop * e223ec7 / src/shogun/lib/ (4 files): https://github.com/shogun-toolbox/shogun/commit/e223ec7e374e2f8468d334c339d2eeb732cac61e
 shogun-notifier-	shogun: minor documentation fix in SG/GPU-Matrix/Vector classes
 shogun-notifier-	shogun: lambday :develop * b73e2f0 / src/shogun/machine/BaggingMachine.h: https://github.com/shogun-toolbox/shogun/commit/b73e2f093fd3df2dbb66537e7320c012c4abde5b
 shogun-notifier-	shogun: removed doxygen warnings
 shogun-notifier-	shogun: lambday :develop * f56294f / src/shogun/mathematics/linalg/ratapprox/logdet/LogDetEstimator.h: https://github.com/shogun-toolbox/shogun/commit/f56294f88af504f48b147d4c0105ccf518d952ee
 shogun-notifier-	shogun: removed doxygen warnings from log-det estimator
 shogun-notifier-	shogun: Soumyajit De :develop * d82150a / src/shogun/ (10 files): https://github.com/shogun-toolbox/shogun/commit/d82150a9d69f5dd04f415d9064d273012cf19118
 shogun-notifier-	shogun: Merge pull request #2561 from lambday/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Minor doxy fixes+removed deprecated DotProduct impl from linalg
 lambday	iglesiasg: what did you configure shogun with? I cannot see Eigen__MatrixXt in my modshogunPYTHON_wrap.cxx
@iglesiasg	lambday: cmake -DPythonModular=ON -DCMAKE_BUILD_TYPE=Debug -DBUNDLE_EIGEN=ON -DENABLE_TESTING=OFF -DBUILD_EXAMPLES=OFF ..
@iglesiasg	lambday: there was a type, sorry
@iglesiasg	lambday: Eigen__MatrixT
@iglesiasg	typo*
@iglesiasg	saying there's a typo with a typo \o/
 lambday	iglesiasg: haha :D
-!- travis-ci [~travis-ci@ec2-54-80-122-236.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Soumyajit De's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/39014672
-!- travis-ci [~travis-ci@ec2-54-80-122-236.compute-1.amazonaws.com] has left #shogun []
@iglesiasg	lambday: you got that one in modshogunPYTHON_wrap, right?
 lambday	iglesiasg: yep...
@iglesiasg	btw, it is king of annoying that enable_testing=on build c++ examples even if build_examples=off
@iglesiasg	lol king of annoying, I am pushing my boundaries today
 lambday	haha.. you're right actually... its the king of all annoying things out there :D
@iglesiasg	wiking: do you think we can get a quick fix for that? pleaseee :)
 shogun-buildbot	build #848 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/848  blamelist: lambday <heavensdevil6909@gmail.com>
 shogun-buildbot	build #849 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/849  blamelist: lambday <heavensdevil6909@gmail.com>, Soumyajit De <heavensdevil6909@gmail.com>
 lambday	iglesiasg: https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/lib/GPUMatrix.h#L115
 lambday	iglesiasg: this is not SWIG guarded
 lambday	iglesiasg: and here https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/lib/GPUVector.h#L110
 lambday	iglesiasg: could you please try ifndefing it once?
@iglesiasg	lambday: yes, I can do that
 lambday	iglesiasg: these might be the culprit here..
@iglesiasg	lambday: we were discussing about this kind of thing yesterday, this is not really the best way of handling this issue, right?
@iglesiasg	lambday: I mean, these classes that need eigen or other dependencies should just not be part of an interface
@iglesiasg	no matter whether this interface is going to be visible for swig or for users
@iglesiasg	lambday: what do you think?
 lambday	iglesiasg: well, this stuff should really not be exposed to swig - its used internally in linalg and which makes it actually possible to work with different types of matrices in Eigen and ViennaCL
@iglesiasg	lambday: exactly
@iglesiasg	lambday: dumb question coming.. why is it exposed to swig, then? :)
 shogun-buildbot	build #62 of CentOS7 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/CentOS7%20-%20libshogun/builds/62  blamelist: lambday <heavensdevil6909@gmail.com>
 shogun-buildbot	build #875 of FCRH - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/875  blamelist: lambday <heavensdevil6909@gmail.com>
 lambday	iglesiasg: my bad... when khaled sent this PR I didn't notice this..
 lambday	iglesiasg: he handled it correctly for SGMatrix and SGVector
 lambday	which has similar things
 lambday	via #ifndef SWIG
 lambday	iglesiasg: gotta go for now.. brb after dinner
 shogun-buildbot	build #63 of CentOS7 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/CentOS7%20-%20libshogun/builds/63
 shogun-buildbot	build #876 of FCRH - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/876  blamelist: lambday <heavensdevil6909@gmail.com>, Soumyajit De <heavensdevil6909@gmail.com>
 shogun-notifier-	shogun: Fernando Iglesias :develop * 82202b7 / src/shogun/machine/gp/ (2 files): https://github.com/shogun-toolbox/shogun/commit/82202b75c5cda105eec83a9f518bcf1d892227a0
 shogun-notifier-	shogun: Refactor part of Laplacian LBFGS to remove eigen3 include in header.
@iglesiasg	lambday: enjoy your meal
@iglesiasg	lambday: but then we can just remove these classes from the .i files if they shouldn't be exposed in interfaces
@iglesiasg	wiking: patch is in, let's see what travis thinks
@iglesiasg	lambday: they are indeed not in the .i files. Still, it might be the cause of Eigen__MatrixT in swig if they are included in another header that swig has to look at. I will test it and get back later
-!- travis-ci [~travis-ci@ec2-54-162-62-69.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Fernando Iglesias's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/39016941
-!- travis-ci [~travis-ci@ec2-54-162-62-69.compute-1.amazonaws.com] has left #shogun []
@iglesiasg	wiking: no luck yet
 shogun-buildbot	build #82 of osx2 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20modular_interfaces/builds/82  blamelist: lambday <heavensdevil6909@gmail.com>
-!- iglesiasg [~iglesias@12.104.145.5] has quit [Ping timeout: 240 seconds]
 shogun-buildbot	build #83 of osx2 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20modular_interfaces/builds/83  blamelist: lambday <heavensdevil6909@gmail.com>, Soumyajit De <heavensdevil6909@gmail.com>
 shogun-buildbot	build #850 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/850  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
 shogun-buildbot	build #877 of FCRH - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FCRH%20-%20libshogun/builds/877  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
-!- iglesiasg [~iglesias@12.104.145.5] has joined #shogun
 shogun-buildbot	build #84 of osx2 - modular_interfaces is complete: Failure [failed csharp modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20modular_interfaces/builds/84  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
-!- HeikoS [~heiko@12.104.145.5] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@lisitsyn	HeikoS: iglesiasg: https://github.com/shogun-toolbox/shogun/issues/2564
 iglesiasg	lisitsyn: why would it compile swig faster?
 shogun-buildbot	build #445 of debian wheezy - memcheck is complete: Failure [failed memory check]  Build details are at http://buildbot.shogun-toolbox.org/builders/debian%20wheezy%20-%20memcheck/builds/445  blamelist: lambday <heavensdevil6909@gmail.com>, Soumyajit De <heavensdevil6909@gmail.com>
@lisitsyn	iglesiasg: less visible member variables I think
 iglesiasg	lisitsyn: what I am wondering is if it has some impact on swig the attributes
 iglesiasg	the public members definitely do
@lisitsyn	iglesiasg: I think it handles whatever he sees
 iglesiasg	but the attributes are "always" private
@lisitsyn	iglesiasg: plus
@lisitsyn	we can't have any method implementations in headers this way
@lisitsyn	I mean for getters
@lisitsyn	you just don't see the class outside of .cpp
-!- HeikoS [~heiko@12.104.145.5] has quit [Quit: Leaving.]
 iglesiasg	lisitsyn: so I think the problem with swig is the length of this modshogunPYTHON_wrap.cxx
@lisitsyn	iglesiasg: yeah sure
 iglesiasg	when we have to compile that file we need a few gb of ram
 iglesiasg	does that file include info about the private members?
 iglesiasg	even if they appear in the header
 iglesiasg	I think it doesn't
@lisitsyn	iglesiasg: no
@lisitsyn	iglesiasg: I am curious whether we can use C but not C++ for wrapper as well
@lisitsyn	probably no
 iglesiasg	lunch time :)
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Client Quit]
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- iglesiasg [~iglesias@12.104.145.5] has quit [Ping timeout: 255 seconds]
-!- iglesiasg [~iglesias@12.104.145.5] has joined #shogun
-!- HeikoS [~heiko@12.104.145.5] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- wiking_ [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Read error: Connection reset by peer]
-!- wiking_ [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
@HeikoS	lisitsyn: https://github.com/shogun-toolbox/shogun/wiki/SWIG-issues
@HeikoS	lisitsyn: d-pointers will not solve the swig issues
 iglesiasg	HeikoS: awesome documentation
@HeikoS	iglesiasg: thanks, feel free to clarify things
@HeikoS	iglesiasg: currently producing an example
@HeikoS	iglesiasg: found a relatively nice way
@HeikoS	iglesiasg: i tried it forlibsvmfil
@HeikoS	iglesiasg: and it saves 20k lines of code in the swig output
@HeikoS	!!!
 iglesiasg	fuck, that sounds great
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Thoralf Klein :develop * 15209a2 / src/shogun/base/SGObject.cpp: https://github.com/shogun-toolbox/shogun/commit/15209a2c5e584a2044238f11a664c8cf1a8bfcc1
 shogun-notifier-	shogun: Don't include "class_list" from same directory.
 shogun-notifier-	shogun: Thoralf Klein :develop * 7e15762 / examples/undocumented/libshogun/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/7e15762c72828fbcb89cf7d4c18beaf057fff237
 shogun-notifier-	shogun: Don't hardcode list of libshogun examples (instead use file glob feature of cmake).
-!- wiking [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
 shogun-notifier-	shogun: Thoralf Klein :develop * a62e924 / examples/undocumented/libshogun/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/a62e92456bc4f6852d49f85f025d8edb61403b2e
 shogun-notifier-	shogun: Revert "Don't hardcode list of libshogun examples (instead use file glob feature of cmake)."
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: This reverts commit 7e15762c72828fbcb89cf7d4c18beaf057fff237.
 shogun-notifier-	shogun: Thoralf Klein :develop * d13b386 / src/shogun/base/SGObject.cpp: https://github.com/shogun-toolbox/shogun/commit/d13b386b9594d371b4a710fe61b46e06641211e1
 shogun-notifier-	shogun: Revert "Don't include "class_list" from same directory."
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: This reverts commit 15209a2c5e584a2044238f11a664c8cf1a8bfcc1.
@HeikoS	iglesiasg: check again
@HeikoS	https://github.com/shogun-toolbox/shogun/wiki/SWIG-issues
-!- travis-ci [~travis-ci@ec2-54-80-122-236.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Thoralf Klein's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/39038117
-!- travis-ci [~travis-ci@ec2-54-80-122-236.compute-1.amazonaws.com] has left #shogun []
-!- wiking [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
 iglesiasg	HeikoS: just added to that wiki page the RealFeatures(CSVFile) example to clarify the idea
@HeikoS	iglesiasg: go for it
@HeikoS	iglesiasg: yeah why extra interface classes wont help
 iglesiasg	HeikoS: I think I got the idea why it won't work
 iglesiasg	check it if you have a second and delete if I got it wrong ;D
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has quit [Remote host closed the connection]
-!- shaochuan [~shaochuan@c-50-184-81-180.hsd1.ca.comcast.net] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has joined #shogun
@lisitsyn	HeikoS: ok :)
@HeikoS	iglesiasg: I am now checking SGVector
-!- wiking_ [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
@HeikoS	iglesiasg, lisitsyn. soon pushing these single example for everyone to look/discuss
@HeikoS	and then if this is good, we should go through thoralfs hit list
-!- wiking_ [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
@lisitsyn	HeikoS: well what d-pointers help is hiding more methods
@HeikoS	lisitsyn: yeah
@HeikoS	lisitsyn: and I love it
@HeikoS	lisitsyn: but not helping for swig, at least we think
@lisitsyn	HeikoS: yeah sure I don't say it is for swig
@HeikoS	lisitsyn: but I would love to have this
@HeikoS	lisitsyn: then we can get more flexible with methods having non shogun parmaeters etc
@HeikoS	lisitsyn: but for now want to fix travis, which fails most times
@HeikoS	lisitsyn: could you fix some warnings?
@HeikoS	lisitsyn: for release?
@lisitsyn	HeikoS: yes I'll try tomorrow
@HeikoS	lisitsyn: btw
@HeikoS	lisitsyn: we talked a lot about refactoring shoguns internals and do proper software engineering
@HeikoS	lisitsyn: separate algorihtms and core framework
@HeikoS	lisitsyn: maybe dropping parameter interface
@HeikoS	lisitsyn: etc
@HeikoS	lisitsyn: well write it down soon
@HeikoS	lisitsyn: aer is also cool
@lisitsyn	HeikoS: ok cool
@HeikoS	lisitsyn: but thoralf suggested to drop parameters maybe completely, we should definitely talk about this
@HeikoS	lisitsyn: I am sure we can get shogun pretty light weight using this
@lisitsyn	HeikoS: if we can drop parameters at all it could be cool
@lisitsyn	but how?
@HeikoS	lisitsyn: thoralf also currently builds a script that allow to only compile a certain number of classes
@HeikoS	lisitsyn: we loose serialisation, model-selection (might drop anyway), clone and equals
@HeikoS	lisitsyn: alternative: do it properly without all this overhead in the base classes
@HeikoS	lisitsyn: it really blows up compile time I think, but we would have to  investigate that
@lisitsyn	HeikoS: ehmm we have say svm's C
-!- wiking [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
@lisitsyn	where to put that?
@HeikoS	lisitsyn: keep x-validation
@HeikoS	then users have to write a loop
@lisitsyn	no I mean
@lisitsyn	you have some parameters anyway
@lisitsyn	ahh you mean SG_ADD thing
@lisitsyn	not state at all
@HeikoS	for c in Cs:
@HeikoS	   svm.set_c(c)
@HeikoS	    xval.eval(svm)
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 246 seconds]
@HeikoS	lisitsyn: yeah drop that maybe
@lisitsyn	HeikoS: haha what if we drop state at all :D
@HeikoS	lisitsyn: rather support fast data IO
@HeikoS	so that people can store output
@HeikoS	but dont know yet
@HeikoS	also drop integration tests
@HeikoS	and all un-tested classes (or write unit tests)
@lisitsyn	why?
@HeikoS	lisitsyn: just overhead
@HeikoS	lisitsyn: not a lot of use,
@HeikoS	lisitsyn: but thats for later
@lisitsyn	well
@HeikoS	lisitsyn: for now: release and swig
@lisitsyn	they are helpful sometimes
@HeikoS	lisitsyn: cant remember a single case where they helped anyone actually
@HeikoS	lisitsyn: but later
@lisitsyn	yeah ok
-!- wiking [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
-!- wiking [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
-!- wiking [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
-!- wiking [~wiking@info2k1.hu] has joined #shogun
-!- wiking [~wiking@info2k1.hu] has quit [Read error: Connection reset by peer]
--- Log closed Sun Oct 26 00:00:40 2014
