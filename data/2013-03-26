--- Log opened Tue Mar 26 00:00:16 2013
-!- FSCV_ [~FSCV@187.210.54.166] has joined #shogun
-!- FSCV [~FSCV@187.210.54.166] has quit [Read error: No route to host]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- FSCV_ [~FSCV@187.210.54.166] has quit [Quit: Leaving]
 shogun-buildbot	build #333 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/333
-!- hoijui [~hoijui@dslb-088-075-046-171.pools.arcor-ip.net] has joined #shogun
-!- fendow [deb20af4@gateway/web/freenode/ip.222.178.10.244] has joined #shogun
 fendow	In the chi-2,what's the meaning of the cache size?
-!- fendow [deb20af4@gateway/web/freenode/ip.222.178.10.244] has quit [Quit: Page closed]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- fendow [deb20af4@gateway/web/freenode/ip.222.178.10.244] has joined #shogun
 fendow	Is there any body?
 n4nd0	fendow: Sure
 fendow	I have a question when using kernel_chi2, what's the meaning of the cache size?
 n4nd0	fendow: I have not used that kernel in particular, I will take a look now in a moment. But let me do a wild guess
 n4nd0	It should be the number of computed values that are stored in memory in case they need to be computed again, they are just looked up in memory instead of re-computed
 fendow	0_0
 n4nd0	fendow: ?
 n4nd0	fendow: it is not really the number of values, according to the doc in Kernel.h the cache size is measure in MB
 fendow	ok,I know~~
 fendow	thanks.
 n4nd0	you are welcome
-!- kakashi_ [~kakashi_@nltk/kakashi] has quit [Read error: Operation timed out]
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- hoijui [~hoijui@dslb-088-075-046-171.pools.arcor-ip.net] has quit [Ping timeout: 245 seconds]
 fendow	Is there any matlab interfaces for a series of modelselection_grid_search functions?
 n4nd0	fendow: Shogun's interface for matlab is an static interface and unfortunately most of the features in Shogun cannot be accesssed from static interfaces
 sonne|work	fendow: no, but you could use octave_modular for that
-!- heiko [~heiko@nat-172-192.internal.eduroam.ucl.ac.uk] has joined #shogun
 sonne|work	heiko: I've converted the mc examples to just use SGVector/SGMatrix's load functions
 sonne|work	(not yet committed everything)
 sonne|work	n4nd0: about SO learning
 sonne|work	n4nd0: kernels are a no go speed wise
 sonne|work	it is just too slow that is why the coffin trick 'aka' emulating the kernel as he calls it, is the only reasonable way
-!- fendow [deb20af4@gateway/web/freenode/ip.222.178.10.244] has quit [Quit: Page closed]
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
 heiko	sonne|work: I saw one PR, good!
 heiko	sonne|work: do we have our git process documented somewhere? people on ithub are asking how to commit, and I answered quite vaguely :)
-!- lambday [b613104d@gateway/web/freenode/ip.182.19.16.77] has joined #shogun
 sonne|work	heiko: I am not there yet - IMHO we need to first get tests running
 sonne|work	then we switch
 heiko	sonne|work agreed!
 sonne|work	(tests running or blacklisted that is)
 heiko	yeah
 heiko	sonne|work I asked Oli stegle to co-supervise the GPC gsoc project
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
 sonne|work	heiko: what did he say?
 heiko	yes
 heiko	sonne|work, but only for consulting
 sonne|work	that is what mentoring is about :)
 heiko	so I wanted to ask you, what do you think, is it too much if I am involved in two projects where each of them has a co-mentor?
 heiko	sonne|work, well he has not too much time thats the point :) but I thought it might increase chances to make the project work if he is involved a bit
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 252 seconds]
 heiko	sonne|work, whats the state of the application, can I help there somewhere? last time I asked blackburn told me to wait a bit since you were editing
 blackburn	heiko: hey
 sonne|work	heiko: knowing you, that certainly is not enough - you need to write your PhD thesis while doing all that and write a NIPS paper!
 heiko	blackburn: hi :)
 blackburn	yes that should be dicussed
 blackburn	sonne|work: do you mind updating it on gdocs and synchronizing?
 sonne|work	blackburn: I didn't do anything
 sonne|work	(on the proposal)
 blackburn	sonne|work: I know you put a dummy - I updated it with shared doc content
 sonne|work	I would start with what we had last year
 heiko	sonne|work:  haha ! well no, should be better this summer, probably submit stuff to nips and have a job but these are the same thing
 blackburn	sonne|work: are you unhappy with current stuff?
 sonne|work	blackburn: haven't had a look but why reinvent the wheel?
 blackburn	sonne|work: well things are changing
 blackburn	heiko: do you have last year thing?
 sonne|work	some minor adjustments
 heiko	blackburn: you sent it on google I think
 blackburn	heiko: anyway lets work on gdocs thing
 blackburn	may be I should put last year stuff there to merge it too
 heiko	blackburn: ok, I will do some this evening
 heiko	oh btw guys, I got accepted for my phd position/funding this week :) will start in Sept
 blackburn	heiko: congrats!
 heiko	thanks :) very happy about that!
 blackburn	heiko: what will you do?
 heiko	blackburn: kernels! :D
 blackburn	heiko: oh btw do you remember gsoc ends on 27, sept?
 heiko	blackburn: the only constraint is major: machine learning, minor: computational neuroscience
 heiko	blackburn: I know thats when my program starts
 blackburn	heiko: what a coincidence :)
 heiko	yeah
 blackburn	heiko: so do I understand right you are free to do what you want?
 blackburn	heiko: this colouring guy is insane :)
 heiko	blackburn: well there is no mandatory list or something - however, supervisor is arthur gretton so thats why I said kernels
 heiko	blackburn:  why?
 blackburn	heiko: 'I can't wait' :D
 blackburn	2 hours
 blackburn	:D
 heiko	oh yeah
 heiko	well, thats good :)
 heiko	blackburn: chinese and indian people work harder :)
 blackburn	heiko: yeah we are totally lazy here
 blackburn	comparing to
 sonne|work	no one works harder than heiko and blackburn
 heiko	blackburn:  check this
 heiko	http://yuzhuoran.wordpress.com/learning-list-for-2012-fall/
 blackburn	heiko: 86-101 hours/week?
 blackburn	:D
 blackburn	I'd rather die
 heiko	haha :)
 blackburn	heiko: I used to follow a schedule when I was young and grass was green
 heiko	blackburn, "when I was young" tztztz
 blackburn	heiko: oh yeah when I was 17
 blackburn	:D
 heiko	oh wow :) I wasnt organised at all when I was 17
 blackburn	heiko: I had something
 blackburn	like
 blackburn	2 hours of calculus
 blackburn	1.5 hours of linear algebra
 heiko	wow
 blackburn	may be it helped me later I don't know
 blackburn	but I had got more relaxed after an year may be :)
 heiko	wow thats early
 heiko	probably good
 blackburn	heiko: but you were at school when you was 17 right?
 heiko	yes, more or less
 blackburn	it was university for me
 heiko	started computer-science when I was 23 ;)
 blackburn	what have you studied before?
 heiko	music, but only 1.5 yrs, and thats not really studying
 blackburn	I am with computer stuff from the very beginning :D
 heiko	blackburn:  now you know the reason why I sometimes fail so badly when trying to do these technical things with computers - aka git problems ;)
 blackburn	heiko: git can be troublesome for anyone..
 heiko	or calling lapack functions
 blackburn	heiko: if you spent some time on lapack you could get used to that too (I did)
 heiko	 I just cannot control my anger and then always ask you
 heiko	joking :)
 blackburn	but lapack is not the thing one should write in 2013
 heiko	blackburn: indeed, eigen3 is the cool stuff!
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 blackburn	heiko: eigen slow downs compilation though
 blackburn	sonne|work wouldn't like it :)
 n4nd0	sonne|work: aham, ok I understand
 heiko	blackburn:  I dont care  :)
 blackburn	heiko: tapkee compiles in a few minutes because of heavy eigen3 usage
 heiko	blackburn: development time also counts
 blackburn	heiko: yeah true
 heiko	blackburn: and bugs
 blackburn	heiko: yeah it allowed me and n4nd0 to create fastest dim reduction stuff
 blackburn	:)
 blackburn	heiko: btw have you heard about t-sne?
 heiko	blackburn:  no what is it?
 blackburn	cool DR method
 blackburn	heiko: minimizes KL or so
 n4nd0	blackburn: speaking of which, could you generate html doc from the md file?
 heiko	cool
 blackburn	n4nd0: ahh yeah will do this evening
 n4nd0	blackburn: good :)
 heiko	oh blackburn, we have a cool idea here: find a projection of data that maximises the MMD/HSIC between data
 blackburn	heiko: the author, laurens van der maaten, released it under BSD 4 clause
 heiko	which means you map to a space where data is statistically farest apart/ most independent
 blackburn	so it is available in tapkee
 heiko	blackburn: cool!
 heiko	well done  :)
 blackburn	heiko: is that a method?
 blackburn	or idea?
 heiko	blackburn: idea
 blackburn	lets work it out and write a paper then :D
 heiko	yes! :)
 blackburn	heiko: sometimes I think my destiny is to do dimension reduction stuff :D
 heiko	blackburn: it probably is :D
 blackburn	I have been into it for a few years already probably
 blackburn	heiko: about spectral stuff
 blackburn	heiko: are you sure eig() calls arpack?
 heiko	it doesnt
 heiko	but "eigs" does
 blackburn	heiko: is there partial eigendecomposition in matlab?
 blackburn	ahh
 heiko	blackburn: I had some problems with that
 blackburn	heiko: a few algorithms from 2000s are based on smallest eigenvectors
 heiko	memory excesses on generalised eigenproblems
 blackburn	not only LLE but laplacian eigenmaps and etc
 heiko	blackburn: very good that you told me
 heiko	I didnt know you knew about that stuff
 heiko	will probably ask you
 heiko	and also I think I will go for ARPACK for now
 blackburn	heiko: yes I am messing with arpack all the time
 blackburn	heiko: I am watching FEAST solver too
 blackburn	heiko: planning to integrate it during gsoc with help of student
 heiko	cool!
 heiko	good
 heiko	we will use that
 heiko	for the big-gaussian thing
 blackburn	heiko: the best thing about ARPACK and FEAST is reverse communication interface (RCI)
 n4nd0	blackburn: what does the feast solver have special?
 blackburn	n4nd0: it should be faster than arpack (I think)
 blackburn	it uses some complex magic
 blackburn	:D
 n4nd0	haha dark powers
 blackburn	heiko: btw check this out
 blackburn	heiko: STL, RCI, sonne|work's COFFIN
 blackburn	it is all the same
 blackburn	decoupling data and algorithms
 heiko	?
 blackburn	heiko: in stl algorithms are somewhat decoupled from data storage
 blackburn	in RCI solvers only matrix-vector product is needed - that doesn't require to provide full matrix to solver
 lambday	hello.. this is soumyajit... I have configured shogun with eigen3... if I want to write a sample code with eigen specific task, e.g. calculating log-determinant of a dense matrix, wouldn't including <shogun/mathematics/eigen3.h> suffice?
 blackburn	in COFFIN you separate data storage and svm training
 heiko	blackburn: yes, thats the whole point of all sparse methods right?
 blackburn	heiko: not really sparse - it is generic
 heiko	hi lambday
 blackburn	arpack works as well for dense and sparse
 lambday	hello heiko
 blackburn	as well as coffin
 heiko	blackburn: how do you include eigen?
 heiko	I just do #include <Eigen/Dense> for example
 blackburn	heiko: better do shogun/mathematics/eigen3.h
 heiko	lambday: then yes!
 blackburn	there is a good reason to do that
 lambday	heiko: hmm that works.. but I am wondering why just including eigen3.h doesn't work :-/
 n4nd0	lambday: why it doesn't work? what error do you get??
 blackburn	heiko: do you include eigen directly?
 heiko	blackburn: I did for the GP, yes, should I change? what is the good reason?
 blackburn	heiko: https://github.com/shogun-toolbox/shogun/blob/master/src/shogun/mathematics/eigen3.h
 blackburn	heiko: check defines
 blackburn	we could put there more defines like EIGEN_NO_DEBUG (IIRC)
 blackburn	we would need to reproduce them again and again
 heiko	blackburn: ok, agreed!
 lambday	n4nd0: do I have to give the include directory while compiling for eigen3 when I am just using shogun's eigen3.h?
 heiko	will change
 blackburn	heiko: alright thanks
 blackburn	lambday: if it is detected you don't have to add anything
 lambday	I am getting errors for both "g++ eigen_test1.cpp -lshogun" and "g++ -I /usr/local/include/eigen3 eigen_test1.cpp -lshogun"
 blackburn	ahh
 blackburn	yes then you would have to include it
 lambday	blackburn: that's what I thought... its detected since i configured it using --enable-eigen3 with --include=/path/to/eigen/headers
 blackburn	lambday: paths are provided only for shogun sources - why do you develop a separate file?
 lambday	blackburn: umm.. I didn't understand.. which file? eigen_test1.cpp is just a test file
 lambday	when I put <Eigen/Dense> and compile it with "g++ -I /usr/local/include/eigen3 eigen_test1.cpp -lshogun" it works
 blackburn	lambday: sure that should work this way
 blackburn	I mean you'd have to put all the includes shogun uses if you use it this way
 blackburn	if you needed something else you'd need to put it too
 n4nd0	I am guessing your HAVE_EIGEN3 variable is not defined
 n4nd0	aaah ok sure if you use g++ then those variables are not defined
 heiko	lambday: when you are doing this log-det method, add it to the CStatistics class and use that code from you example program -this way you dont have these problems
 lambday	n4nd0: isn't that done automatically? or I have to define it somewhere?
 n4nd0	lambday: well if you use g++ how is that going to be done automatically? :)
 lambday	heiko: okay :)
 blackburn	shogun uses its own structure of makefiles which put all paths and etc
 lambday	n4nd0: hmmm
 heiko	lambday: you then have to re-compile shogun when you change something, but if you install a compiler cache, that is very fast
 n4nd0	it is not like installing shogun is going to change the default behaviour of the C++ compiler
 n4nd0	that would be inconvenient I think hehe
 lambday	heiko: log-det for dense matrix is working as per my code.. checked with a small pd symm matrix and log-det(A) and log(det(A)) are giving same results
 heiko	lambday: that is good
 heiko	lambday: this is more of a warming up, the symamd stuff for sparse matrices is a little more complicated, but not vastly
 heiko	lambday: integrate into shogun, write example and a few tests, document, and send pull request then we will merge it
 lambday	heiko: alright.. will keep you updated..
 heiko	lambday: nice! thanks
 lambday	heiko: I have never used compiler cache :(
 heiko	lambday: its very easy to install if you are under linux
 lambday	okay.. yes I am using linux only.. I'm trying it.
 heiko	ccache is the debian(/ubuntu package and the man-page contains a little guide how to install
 heiko	which is done via creating 3 symbolic links, and done
 blackburn	hint: add CXX="ccache g++" to your .bashrc
 lambday	and one more thing, where exactly do we have to define the HAVE_EIGEN3 variable to make <shogun/mathematics/eigen3.h> work?
 blackburn	lambday: shogun defines it on ./configure
 blackburn	and put it to shogun/base/config.h
 n4nd0	lambday: you should get it defined automatically running configure
 n4nd0	if shogun detects your eigen3 of course
 lambday	heiko: I am using fedora linux, ccache should be usable on this also I guess
 heiko	i guess so
 n4nd0	but this HAVE_EIGEN3 variable will work using the Makefiles
 lambday	blackburn: so we have to do that manually? because I configured shogun as "./configure --interfaces=cmdline_static --enable-eigen3 --includes=/usr/local/include/eigen3" and it showed that it found eigen3 in the config msg
 lambday	n4nd0: hmmm... let me configure it once more... something must have went wrong :-/
 n4nd0	lambday: I don't think something went wrong
 n4nd0	the thing is you give variables to the c compiler using something like
 n4nd0	g++ -DHAVE_EIGEN3 blah blah blah
 n4nd0	but of course you don't want to write that manually (there are lot of those variables around)
 lambday	n4nd0: then I should already have HAVE_EIGEN3 defined, and hence the includes in eigen3.h (which includes Eigen/Dense) should work, no?
 n4nd0	so you should use the Makefiles, as blackburn suggested, not compile on your own I think
 lambday	n4nd0: ohkay... got it
 lambday	heiko, n4nd0, blackburn thanks a lot :)
 n4nd0	;)
 n4nd0	sonne|work: so what do you think about Patrick's project, does it look enough for you? I think it is.
-!- kakashi_ [~kakashi_@nltk/kakashi] has joined #shogun
-!- FSCV [~FSCV@204.45.132.11] has joined #shogun
 sonne|work	n4nd0: yes looks good!
-!- FSCV_ [~FSCV@vpnreactor-static44.den.icastcenter.com] has joined #shogun
-!- SCV__ [~FSCV@76.73.18.131] has joined #shogun
-!- FSCV [~FSCV@204.45.132.11] has quit [Ping timeout: 264 seconds]
-!- FSCV_ [~FSCV@vpnreactor-static44.den.icastcenter.com] has quit [Ping timeout: 245 seconds]
-!- FSCV_ [~FSCV@65.19.131.247] has joined #shogun
-!- SCV__ [~FSCV@76.73.18.131] has quit [Ping timeout: 240 seconds]
 heiko	blackburn
 heiko	how to sum the elements in a matrix row-wise in eigen?
 heiko	ah
 heiko	found it
-!- SCV__ [~FSCV@216-230-229-167-colo.oplink.net] has joined #shogun
 heiko	A.colwise().sum()
 heiko	nice!
 n4nd0	heiko: eigen is awesome :)
 n4nd0	It is like coding matlab/python in C++
 heiko	n4nd0: indeed :)
-!- FSCV_ [~FSCV@65.19.131.247] has quit [Ping timeout: 246 seconds]
 heiko	yes, I like that a lot
 n4nd0	and it has soooo much stuff
 heiko	we could actually remove half of the shogun math code :D
 n4nd0	I am not even aware of the 10% probably
 n4nd0	hehe
 heiko	n4nd0: This col/row-wise mean in CStatistics for example
 heiko	n4nd0: same here!
 heiko	just discovering ...
 heiko	n4nd0: we have to be careful though, we are hyping it currently :D
 n4nd0	hehe yeah, maybe :D
 blackburn	heiko: sorry didn't notice
 heiko	blackburn: no worries
 heiko	the tutorial is very nice, answers many questions
 blackburn	I am thinking about helping them somehow
 heiko	blackburn: I am pushing this GPU cholesky guy to implement it in eigen :)
 blackburn	heiko: quite fair hype though
 lambday	heiko: I added a log_det method in the CStatistics class... pasting the code ... Statistics.h [http://pastebin.com/H24CAPec] (see line#456-463) and Statistics.cpp [http://pastebin.com/taWLjYFR] (See line#25-28, 1962,1978)
 lambday	did a make and it compiles
 blackburn	lambday: you should rather use github stuff for that :)
 lambday	blackburn: as in commit?
 blackburn	lambday: as pull request
 heiko	lambday: blackburn is right, commit it to your local repo, push, and send a pull request
 heiko	much easier
 heiko	lambday: but the code looks good!
 lambday	heiko: thanks.. but haven't done testing yet... just did the coding
 heiko	lambday: write a unit test which covers a few cases (small and large)
 heiko	lambday: you can find inspiration in the tests/unit folder, probably have to add a new file (cannot recall if there already is one for CStatistics)
 heiko	lambday: then send the PR and I will comment more, will be back later today
 lambday	heiko: okay.. thanks man :)... I am checking the tests/unit dir
 heiko	lambday: nice! :)
 lambday	heiko: I know I am sound like a total idiot but could you please tell me how do I send the pull request? I am new to git :(
 lambday	I already committed using this ---- git commit -a -m "Added log_det method in CStatistics class"
 n4nd0	hey lambday, you are not an idiot, it is normal to struggle with git a bit at the beginning
 lambday	n4nd0: :(
 n4nd0	so when you do a commit your changes have only been stored in your computer, locally
 lambday	n4nd0: how do I do it?
 lambday	n4nd0: hmmm...
 n4nd0	then you need to publish your changes into your repository. This is call push in git
 n4nd0	something like git push origin master should do it
 n4nd0	although it is not the best way to develop directly in your master branch...
 lambday	okie
 n4nd0	but let's better learn git step by step, so for the moment it can be ok
 lambday	so while developing something, one usually work on a forked branch or something?
 lambday	n4nd0: okay..
 n4nd0	I normally use the term fork to refer to whole repositories, not only a branch
 n4nd0	for example, now you are working in a fork of shogun
 n4nd0	but your fork has several branches (master, among others)
 n4nd0	once you have push your changes to your repository
 n4nd0	you can issue a pull request (PR) using the github web interface
 n4nd0	the PR means that you want to introduce the changes you have made in your shogun fork into the main shogun repository
 n4nd0	but please update your branch before doing the PR, you should actually do this after committing and before pushing
 lambday	n4nd0: update branch?
 n4nd0	introduce in you fork the changes that have taken place in the main shogun repo
 n4nd0	you can do this with git pull upstream master or, even better, git pull --rebase upstream master
 n4nd0	upstream is a remote pointing to the main shogun repo that I think you will need to define
 lambday	n4nd0: okay...
-!- FSCV_ [~FSCV@206.225.135.24] has joined #shogun
-!- SCV__ [~FSCV@216-230-229-167-colo.oplink.net] has quit [Ping timeout: 245 seconds]
 lambday	n4nd0: I need to define upstream.. as in "origin" points to "https://github.com/shogun-toolbox/shogun.git" in github, something like that?
 n4nd0	lambday: mmm origin should point to your fork
 lambday	ohkay..
 heiko	lambday: upstream for the shogun repo
 lambday	should "git push" ask for github username and password? in my system its asking when I try to do git push origin master...
 n4nd0	lambday: yeah, you can avoid that though introducing your ssh public key in your github account
 lambday	n4nd0: hmm... I cannot do git push origin master, when I try it shows "403 while accessing https://github.com/shogun-toolbox/shogun.git/info/refs"... I am not getting if origin points to my forked repo, why would it try to access remote shogun repo?
 n4nd0	lambday: is it possible that you cloned shogun-toolbox/shogun.git instead of lambday/shogun.git?
 n4nd0	i.e. the shogun repo instead of your fork
 lambday	oh shit!
 lambday	that is why!
 lambday	n4nd0: thanks :(
 n4nd0	lambday: no problem
 n4nd0	don't be sad, it is not a big deal ;)
 n4nd0	just clone your fork
 n4nd0	copy the changes you made there (the ones in CStatistics.[h|cpp] I believe)
 n4nd0	commit and push, and then PR from github.com
 lambday	n4nd0: okay... my fork [https://github.com/lambday/shogun.git] also contains two more files that are not in shogun, which I added durng an assignment few weeks back.. would it create problem?
 n4nd0	if they are new files just copy them
 n4nd0	if they are files that were already in shogun that you modified
 n4nd0	then make a diff and introduce your changes
-!- sumit [ca4eaca2@gateway/web/freenode/ip.202.78.172.162] has joined #shogun
 lambday	n4nd0: okay... those were new files..
 n4nd0	copying them directly in this second scenario could be a bit bad in case those files tracked in the repo had been modified by someone else, and those changes would be overwritten when you copy the files
 lambday	n4nd0: hmmm...
 n4nd0	but nvm, just copy or move them if they were new
 lambday	n4nd0: alright
 n4nd0	ok I am off now for a while
 n4nd0	see you later
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 lambday	n4nd0: thanks man.. see you :)
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has quit [Ping timeout: 240 seconds]
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- hoijui [~hoijui@141.23.67.236] has joined #shogun
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has joined #shogun
-!- hoijui [~hoijui@141.23.67.236] has quit [Ping timeout: 264 seconds]
-!- hoijui [~hoijui@141.23.67.236] has joined #shogun
 lambday	heiko, n4nd0 I have submitted the pull request. Will see about the test cases.
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 0574d56 / / (9 files): https://github.com/shogun-toolbox/shogun/commit/0574d5669bd561e4f4b65256f56b53a7c7c4ff75
 shogun-notifier-	shogun: Don't use streaming features for simple SGMatrix/SGVector i/o
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Instead use their load routines. Require splitted up 7 class data
 shogun-notifier-	shogun: example (into data and labels) and adjust news accordingly. Drop
 shogun-notifier-	shogun: unnecessary includes in examples (don't!)
-!- hoijui [~hoijui@141.23.67.236] has quit [Read error: Operation timed out]
-!- blackburn [~blackburn@188.168.14.165] has joined #shogun
@sonney2k	blackburn, have you seen? a first PR...
@sonney2k	already now
 blackburn	sonney2k: yeah
 blackburn	sonney2k: quite fast yeah
@sonney2k	shogun-buildbot, force build "deb3 - modular_interfaces"
 shogun-buildbot	build forced [ETA 47m08s]
 shogun-buildbot	I'll give a shout when the build finishes
@sonney2k	shogun-buildbot, force build "rpm1 - libshogun"
-!- sumit [ca4eaca2@gateway/web/freenode/ip.202.78.172.162] has quit [Ping timeout: 245 seconds]
 shogun-buildbot	build forced [ETA 4m50s]
 shogun-buildbot	I'll give a shout when the build finishes
 shogun-buildbot	build #378 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/378
 shogun-buildbot	build #961 of deb3 - modular_interfaces is complete: Failure [failed test libshogun]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/961
 heiko	sonney2k, blackburn I will take care of the PR
 heiko	lambday: nice, will look at it later, currently busy
 heiko	sonney2k: can I trust travis?
 heiko	if it sais build failed?
 heiko	blackburn, sonney2k: are these kind of calls still needed? ((CStringFeatures<char>*) lhs)->free_feature_vector(avec, idx_a, free_avec);
 blackburn	heiko: uglyy
 heiko	right, I thought so, rather use SGVector nowadays right?
 blackburn	heiko: I don't know exactly
 blackburn	heiko: what I actually would like to see is
 blackburn	each kernel should implement some kernel(SGVector, SGVector) or so
 blackburn	other parts like get/free should be generic
 blackburn	heiko: when did you contact sonney2k for the very first time?
 heiko	blackburn: 15 months before the gsoc 2011
 blackburn	heiko: whoop
 heiko	2010 shogun got rejected, was before that
 blackburn	heiko: ohh so you were around before dinosaurs
 heiko	no that was 2011 , even before :)
 blackburn	heiko: 27 march, 2011 is the day I joined #shogun :D
 blackburn	celebrating! :D
 heiko	ha
 heiko	tmorow! :)
 blackburn	heiko: did you want to participate in 2010?
 heiko	blackburn: yes
 blackburn	ohh I see
 heiko	found the modelselection idea
 heiko	was the time when I wrote my Bsc
 heiko	which was on modelselection among other things
-!- hoijui [~hoijui@dslb-088-075-046-171.pools.arcor-ip.net] has joined #shogun
-!- lambday [b613104d@gateway/web/freenode/ip.182.19.16.77] has quit [Ping timeout: 245 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- lambday [3ba2174d@gateway/web/freenode/ip.59.162.23.77] has joined #shogun
 lambday	heiko: hi... got your messages, will be updating a description of the dense matrix log_det computation soon..
 lambday	the ssk string kernel part was done a few weeks back by me for one of our class assignments... will make the necessary changes as you suggested..
 heiko	lambday: cool!
 heiko	lambday: remove the string kernel for now
 heiko	lets merge it after the chol stuff
 lambday	heiko: that was already a part of my forked repo... so got committed during the pull req... but if its possible, for now I'd only like to work on the large scale gaussian project
 heiko	otherwise things will be messy
 lambday	heiko: alright... removing the ssk kernel
 heiko	lambday: just temprarily remove and store somewhere
 heiko	lambday: we can add this later, but needs to be cleaned up a bit, since based on very old shogun code :)
 lambday	heiko: okay... :) I'm updating
 heiko	lambday:  the large scale Gaussian is the cool stuff ;)
 heiko	lambday: I will head home now, might not be online today, but tomorrow for sure, see you!
 lambday	heiko: yeah it is... I was reading the pdf that you posted on the gsoc ideas page... really cool stuff... although I feel I need to understand the maths a bit more deeper :-/
 lambday	heiko: alright man... its almost 1 am here in india.. I'll also get some sleep... see you tomorrow :)
 heiko	lambday: good night!
 lambday	heiko: good night :)
-!- heiko [~heiko@nat-172-192.internal.eduroam.ucl.ac.uk] has left #shogun []
-!- lambday [3ba2174d@gateway/web/freenode/ip.59.162.23.77] has quit [Quit: Page closed]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
@sonney2k	blackburn, does classifier_svmlight_string_features_precomputed_kernel work on your machine?
 blackburn	sonney2k: let me check
@sonney2k	(it is here plus it is valgrind clean)
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :master * c24c395 / examples/undocumented/libshogun/classifier_svmlight_string_features_precomputed_kernel.cpp: https://github.com/shogun-toolbox/shogun/commit/c24c3954550f6cf489107d2310c9ef1ad442cf6e
 shogun-notifier-	shogun: seed random number generator
@sonney2k	blackburn, could you please make your examples not fail when eigen3 is not available?
@sonney2k	http://shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/378/steps/test/logs/stdio
 blackburn	sonney2k: ohh
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Remote host closed the connection]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
 shogun-buildbot	build #379 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/379  blamelist: Soeren Sonnenburg <sonne@debian.org>
 blackburn	sonney2k: will fix that tom morning
 shogun-buildbot	build #380 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/380  blamelist: Soeren Sonnenburg <sonne@debian.org>
 blackburn	sonney2k: yes that example works smooth
 shogun-buildbot	build #963 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/963  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #962 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/962
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- hoijui [~hoijui@dslb-088-075-046-171.pools.arcor-ip.net] has quit [Ping timeout: 264 seconds]
--- Log closed Wed Mar 27 00:00:16 2013
