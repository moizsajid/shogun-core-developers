--- Log opened Sat Jul 23 00:00:34 2016
-!- c4goldsw [5681dfef@gateway/web/cgi-irc/kiwiirc.com/ip.86.129.223.239] has joined #shogun
-!- c4goldsw [5681dfef@gateway/web/cgi-irc/kiwiirc.com/ip.86.129.223.239] has quit [Quit: http://www.kiwiirc.com/ - A hand crafted IRC client]
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
 shogun-buildbot	build #84 of xenial - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/xenial%20-%20libshogun/builds/84  blamelist: Wu Lin <yorkerlin@users.noreply.github.com>, Wu Lin <yorker.lin@gmail.com>
 shogun-buildbot	build #34 of clang - thread analysis is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang%20-%20thread%20analysis/builds/34  blamelist: Wu Lin <yorkerlin@users.noreply.github.com>, Wu Lin <yorker.lin@gmail.com>
 shogun-buildbot	build #32 of clang - undefined behaviour analysis is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang%20-%20undefined%20behaviour%20analysis/builds/32  blamelist: Wu Lin <yorkerlin@users.noreply.github.com>, Wu Lin <yorker.lin@gmail.com>
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
-!- sanuj [~sanuj@117.203.13.161] has joined #shogun
-!- sanuj [~sanuj@117.203.13.161] has quit [Ping timeout: 276 seconds]
-!- HeikoS [~heiko@AMarseille-651-1-134-128.w2-4.abo.wanadoo.fr] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@AMarseille-651-1-134-128.w2-4.abo.wanadoo.fr] has quit [Ping timeout: 244 seconds]
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	jojooj
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: OXPHOS :feature/linalg_refactor * d9a5915 / src/shogun/mathematics/linalg/ (2 files): https://github.com/shogun-toolbox/shogun/commit/d9a5915331a752f8af8eede3d6752c3c9ae28951
 shogun-notifier-	shogun: rename gnu memory data method
 shogun-notifier-	shogun: Heiko Strathmann :feature/linalg_refactor * 960492e / src/shogun/mathematics/linalg/ (2 files): https://github.com/shogun-toolbox/shogun/commit/960492edf8d7a96ecff3dcdab57e139ce0b88f41
 shogun-notifier-	shogun: Merge pull request #3383 from OXPHOS/linalg_refactor_2
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: LinalgRefactor - rename gpumemory data method
 shogun-notifier-	shogun: christopher :develop * 81ce1a5 / / (5 files): https://github.com/shogun-toolbox/shogun/commit/81ce1a52c7d2c681e7b66502e43225de2129bd81
 shogun-notifier-	shogun: History fixing
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Update to LARs based Shogun Maintainers responses
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Fix for interfaces
 shogun-notifier-	shogun: Heiko Strathmann :develop * e72454d / / (5 files): https://github.com/shogun-toolbox/shogun/commit/e72454dee6024b91460efc86702d9688386d36bd
 shogun-notifier-	shogun: Merge pull request #3313 from c4goldsw/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Updated LARS so that it can support multiple floating point word sizes
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has quit [Remote host closed the connection]
 shogun-buildbot	build #1306 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/1306  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, christopher <christopher.goldsworthy@outlook.com>
 shogun-buildbot	build #2948 of bsd1 - libshogun is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/2948  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, christopher <christopher.goldsworthy@outlook.com>
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 shogun-buildbot	build #85 of xenial - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/xenial%20-%20libshogun/builds/85  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, christopher <christopher.goldsworthy@outlook.com>
@wiking	HeikoS: so yeah inplace stuff are a bit tricky
@HeikoS	wiking: jo!
@HeikoS	I think everything that can be inplace should be in place
@HeikoS	add, scale, etc
@HeikoS	element-wise
@wiking	yeap try those examples
@wiking	that i wrte
@wiking	*wrote
@HeikoS	checking
@wiking	you'll realise how much is the performance diff
@wiking	(you can clearly see the reason of it with running perf stat -d
@HeikoS	ah yeah
@wiking	but yeah i do agree that inplace is cleaner
@wiking	because it conserves memory
@HeikoS	Yeah I get it
@wiking	but we should have option for both
@HeikoS	what about this:
@wiking	and then let the developer decide what he wants
@HeikoS	user passes result memory?
@wiking	a) speed b) waste memory
@HeikoS	and by default it is NULL
@wiking	why's that better than
@HeikoS	which means the method allocates
@wiking	allocating for the user
@HeikoS	its the same
@HeikoS	just a bit more genereal
@HeikoS	as I can pass already allocated memory
@wiking	and how do you imagine in place?
@HeikoS	you pass the thing itself as result storage
@wiking	you have to be very careful now:)
@wiking	hehe yeah
@wiking	think where that can go fuck
@wiking	:P
@wiking	it's not that straightforward
@HeikoS	isnt it the same as in place?
@HeikoS	I mean for add, etc
@wiking	not really
@HeikoS	for multiply of course not
@HeikoS	mmh
@wiking	so are we sure that we gonna have operations
@wiking	where always
@HeikoS	I would only offer this for operations where it is safe
@wiking	*always* everything is over one consequtive memory chunk?
@HeikoS	otherwise allocate
@wiking	this will make the interface a bit shitty no?
@wiking	i mean
@HeikoS	yeah maybe
@HeikoS	I mean we have two things
@wiking	Vector scale(const Vector& a, scale)
@wiking	or
@wiking	void scale(Vector& a, scale)
@wiking	those are like 2 examples right?
@HeikoS	1) inplace/newly allocated 2) I want to use some buffer memory for result
@wiking	first one is simple allocates
@wiking	second one clearly does it inplace
@wiking	this way you save some stuff as well right
@wiking	because of const Vector& vs Vector&
@HeikoS	ah yeah I like the const
@wiking	in your unified api
@wiking	that would be always
@HeikoS	how to provide a result storage pointer?
@HeikoS	the second one would have that
@HeikoS	ehm
@HeikoS	first
@wiking	void scale(Vector& a, scale, Vector& output = nullptr);
@wiking	mmm
@HeikoS	no that one not
@HeikoS	since it is inplace
@HeikoS	the const one
@wiking	or maybe you could still do th
@wiking	void scale(const Vector& a, scale, Vector& output = nullptr);
@wiking	because the input is always const
@HeikoS	Vector scale(const Vector& a, scale, Vector& output = nullptr)
@wiking	wonder how's the performance
@HeikoS	returns the output ptr if used
@wiking	yeah but why do you need return value?
@wiking	:D
@wiking	i mean in that caseu
@HeikoS	if output=null
@wiking	output will have the value :P
@HeikoS	true
@wiking	but you can change the reference rigT?: )
@HeikoS	just for being able to use it in the same way
@HeikoS	a=scale( ... )
@wiking	eh it's then ugly
@wiking	becuase if you do it inplace
@HeikoS	yeah
@HeikoS	mmh
@wiking	then you return
@wiking	output
@HeikoS	ok then
@wiking	whereas you already have output
@wiking	or?
@HeikoS	yeah
@HeikoS	what do we converge on?
@wiking	mmm
@wiking	good question
@HeikoS	there should be some global mechanism
@HeikoS	like a method that is called from every linalg method that does things
@HeikoS	and then the linalg methods dont do case distinction anymore
@HeikoS	but we definitely want the fexibility
@HeikoS	to manually allocate, automatically allocate, inplace
@HeikoS	didnt think about the L1 cache thing, very good point
@HeikoS	especially with 2048 elements haha
@HeikoS	nerdy number
@HeikoS	wiking: so we should have two options
@wiking	just a sec
@HeikoS	void scale(const Vector& a, scale, Vector& output = nullptr);
@HeikoS	which handles manual allocation and inplace
@HeikoS	and
@HeikoS	Vector scale(const Vector& a, scale)
@HeikoS	which does automatic allocation
@HeikoS	wiking: goos?
@HeikoS	good
@HeikoS	not goose
@HeikoS	goose are for xmas
@wiking	mmm
@wiking	i mean in that case i thinkg
@wiking	void scale(const Vector& a, scale, Vector& output = nullptr); should be enough
@wiking	for everything
@wiking	but then
@wiking	rather
@wiking	void scale(const Vector& a, scale, Vector& output);
@wiking	so you always have to pass output
@wiking	it's shitty :(
@wiking	i mean
@wiking	void scale(const Vector& a, scale, Vector& output)
@wiking	output should be always != NULL
@HeikoS	you mean one can just ass empty ouput
@HeikoS	dont like this passing result structures as parameters really
@HeikoS	most of the time its not necessary, just if I want to give pre-allocated buffer
@HeikoS	this is why I like returning it
@HeikoS	for easy syntax in default case (without buffer=)
@HeikoS	but I agree it appearing twice it shiatz
@HeikoS	so what to do?
@HeikoS	wiking: I also dont want to re-invent all these APIs
@HeikoS	wiking: question also is whether we really need those super sophisticated things
@HeikoS	I mean, lets be realistic
@HeikoS	WHAT is needed in 80% of the cases?
@HeikoS	do we need pre-allocated buffers?
@HeikoS	do we need inplace? or do we want to be fast
@HeikoS	so in that sense, we could default to automatic new allocation and then directly use that ore copy
@HeikoS	OR, if that happens to be a problem in the particular situation, we can add a method just for that case
@HeikoS	so we dont get lost in these discussions now
@HeikoS	wiking: thoughts?
@wiking	mmm
@wiking	a) we need inplace + allocated buffer
@wiking	so this is a must
@wiking	(having both)
@HeikoS	we will need it sometimes, but why dont we add it if we need it?
@HeikoS	thats my point
@HeikoS	because allocating output vectors for things doesnt take long anyways
@HeikoS	only critical if we add say matrices that are really big
@wiking	but what are yo usaying ?)
@wiking	i mean can we have 2 simple api?
@wiking	1 for inplace and 1 for not inplace?
@HeikoS	yeah we can
@wiking	and for the none inplace i dont care how it is
@wiking	preallocated or not :)
@HeikoS	yeah ok
@wiking	i mean if you care about how the memory is handled
@HeikoS	one just wraps the other
@wiking	that's why we have SG_MALLOC
@HeikoS	yeah sure sure
@wiking	that you can add your own memory management library
@wiking	that does whatever you want
@HeikoS	ok then
@HeikoS	Ill tell OXPHOS to implement the pre-allocated method
@HeikoS	and then wrap it with an automatic allocation one
@HeikoS	good?
@wiking	can you paste it here plz
@HeikoS	void scale(const Vector& a, scale, Vector& output)
@HeikoS	implements the operation
@HeikoS	assumes that output is allocated
@HeikoS	ah
@HeikoS	I am getting lost
@HeikoS	a second
@wiking	k
@HeikoS	wiking: so
@HeikoS	https://gist.github.com/karlnapf/28e1ea447d3d625f2205d303599fa4ff
@HeikoS	inplace ... mmh
@wiking	https://gist.github.com/karlnapf/28e1ea447d3d625f2205d303599fa4ff#file-gistfile1-txt-L8
@wiking	you mean
@wiking	Vector& scale(Vector& a, float scale)
@wiking	right?
@wiking	or rather
@wiking	Vector& scale(const Vector& a, float scale)
@HeikoS	yes
@HeikoS	lemme update
@HeikoS	not sure about reference
@wiking	yeah of course reference
@wiking	what else? :)
@HeikoS	updated again
@HeikoS	and again
@HeikoS	;)
@HeikoS	ok now
@HeikoS	and we put a warning sticker in the docs for the inplace case
@HeikoS	man I am in france for multipitching but it is fucking raining!!!
@HeikoS	so all that is left to do is eating jam and cheese ;)
@HeikoS	and shogun of course haha
@HeikoS	wiking: Ill send this to OXPHOS then
@HeikoS	actually, would like to automate the second method somehow, think we can do that?
@HeikoS	so that every method we implement automatically gets that
@wiking	https://gist.github.com/karlnapf/28e1ea447d3d625f2205d303599fa4ff#file-gistfile1-txt-L11
@wiking	missing a return
@wiking	but yeah
@HeikoS	yep will add
@HeikoS	and automatic?
@wiking	hehe like a template?
@wiking	:)
@HeikoS	yeah
@HeikoS	I dont want all this double code and doc
@wiking	yep sure
@HeikoS	it should just be auto generated
@wiking	with c++11 templating
@wiking	a lot of nice stuff can be done
@HeikoS	know how to do that?
@HeikoS	wanna modify the gist?
@wiking	mmm our guests just arrived
@wiking	:))))
@HeikoS	okok
@wiking	so i think lea is already pisee :)
@wiking	that i'm writing here :P
@HeikoS	is your wife called lea?
@HeikoS	haha
@HeikoS	lea here is sitting next to me
@wiking	now the whole internet willl know :))))
@wiking	who? :)
@wiking	where ?:)
@wiking	what? :D
@wiking	-gs
@HeikoS	apparently we are sharing ;)
@HeikoS	now the internet knows
@wiking	hehe yeah but so who's next to you where? :)
@HeikoS	nevermind ;)
@wiking	that's why i said
@wiking	gs
@wiking	just to clarify
@wiking	becuaase i' not sure if i got alll  of it
@wiking	or i imagine too much into it
@wiking	:P
@HeikoS	gs?
@HeikoS	I am not up to date with internet slang
@wiking	the gs channel
@wiking	:)
@HeikoS	ah
@HeikoS	haha
@HeikoS	ah man
@wiking	it's shogun slang
@wiking	:)
@HeikoS	too much cheese
@wiking	hahahahahahahha
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * 33167c8 / examples/meta/generator/targets/cpp.json: https://github.com/shogun-toolbox/shogun/commit/33167c809b2cd775b86893ab5916e3918b15d6a5
 shogun-notifier-	shogun: add matrix and vector types for cpp
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * 118c6da / examples/meta/generator/targets/cpp.json: https://github.com/shogun-toolbox/shogun/commit/118c6da3673105ec19ad8542f2bd3c4be798d05e
 shogun-notifier-	shogun: added long real vector and matrix
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * b0c8f34 / examples/meta/src/tests/matrix_types.sg,examples/meta/src/tests/vector_types.sg: https://github.com/shogun-toolbox/shogun/commit/b0c8f349b7061e671f0c85e6487a22edfe2a4bda
 shogun-notifier-	shogun: meta example tests for vector and matrix types
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * 2d48578 / examples/meta/src/tests/matrix_types.sg,examples/meta/src/tests/vector_types.sg: https://github.com/shogun-toolbox/shogun/commit/2d48578972b110212de81b612e11bc8b4dfa5428
 shogun-notifier-	shogun: not test long real vector for now, travis doesn't like it
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * e1d86ba / examples/meta/src/tests/matrix_types.sg,examples/meta/src/tests/vector_types.sg: https://github.com/shogun-toolbox/shogun/commit/e1d86bac4a52bebd64d9ac55d7c86023772c36ac
 shogun-notifier-	shogun: use correct syntax for booleans
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * 15850fb / examples/meta/generator/targets/ruby.json: https://github.com/shogun-toolbox/shogun/commit/15850fbb1a6374a5d6171c0d1a76119d0b3ced9d
 shogun-notifier-	shogun: add matrix and vector instantiations
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * a56a9c4 / examples/meta/generator/targets/ruby.json: https://github.com/shogun-toolbox/shogun/commit/a56a9c4c08770903d5b24abc3b05071e985be916
 shogun-notifier-	shogun: fix typos
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * 41419c0 / examples/meta/generator/targets/ruby.json: https://github.com/shogun-toolbox/shogun/commit/41419c06c14ad5bb7b4bd3de9ae6cf7c0117e234
 shogun-notifier-	shogun: working ruby meta example tests for vector and matrix
 shogun-notifier-	shogun: Heiko Strathmann :feature/meta_vector_matrix * 51520ed / examples/meta/generator/targets/java.json: https://github.com/shogun-toolbox/shogun/commit/51520ed462fdd02624141a15842977409e49bcfa
 shogun-notifier-	shogun: (non-working) draft for java matrix and vector types
 shogun-notifier-	shogun: Heiko Strathmann :develop * 33167c8 / examples/meta/generator/targets/cpp.json: https://github.com/shogun-toolbox/shogun/commit/33167c809b2cd775b86893ab5916e3918b15d6a5
 shogun-notifier-	shogun: add matrix and vector types for cpp
 shogun-notifier-	shogun: Heiko Strathmann :develop * 118c6da / examples/meta/generator/targets/cpp.json: https://github.com/shogun-toolbox/shogun/commit/118c6da3673105ec19ad8542f2bd3c4be798d05e
 shogun-notifier-	shogun: added long real vector and matrix
 shogun-notifier-	shogun: Heiko Strathmann :develop * b0c8f34 / examples/meta/src/tests/matrix_types.sg,examples/meta/src/tests/vector_types.sg: https://github.com/shogun-toolbox/shogun/commit/b0c8f349b7061e671f0c85e6487a22edfe2a4bda
 shogun-notifier-	shogun: meta example tests for vector and matrix types
 shogun-notifier-	shogun: Heiko Strathmann :develop * 2d48578 / examples/meta/src/tests/matrix_types.sg,examples/meta/src/tests/vector_types.sg: https://github.com/shogun-toolbox/shogun/commit/2d48578972b110212de81b612e11bc8b4dfa5428
 shogun-notifier-	shogun: not test long real vector for now, travis doesn't like it
 shogun-notifier-	shogun: Heiko Strathmann :develop * e1d86ba / examples/meta/src/tests/matrix_types.sg,examples/meta/src/tests/vector_types.sg: https://github.com/shogun-toolbox/shogun/commit/e1d86bac4a52bebd64d9ac55d7c86023772c36ac
 shogun-notifier-	shogun: use correct syntax for booleans
 shogun-notifier-	shogun: Heiko Strathmann :develop * 15850fb / examples/meta/generator/targets/ruby.json: https://github.com/shogun-toolbox/shogun/commit/15850fbb1a6374a5d6171c0d1a76119d0b3ced9d
 shogun-notifier-	shogun: add matrix and vector instantiations
 shogun-notifier-	shogun: Heiko Strathmann :develop * a56a9c4 / examples/meta/generator/targets/ruby.json: https://github.com/shogun-toolbox/shogun/commit/a56a9c4c08770903d5b24abc3b05071e985be916
 shogun-notifier-	shogun: fix typos
 shogun-notifier-	shogun: Heiko Strathmann :develop * 41419c0 / examples/meta/generator/targets/ruby.json: https://github.com/shogun-toolbox/shogun/commit/41419c06c14ad5bb7b4bd3de9ae6cf7c0117e234
 shogun-notifier-	shogun: working ruby meta example tests for vector and matrix
 shogun-notifier-	shogun: Heiko Strathmann :develop * 51520ed / examples/meta/generator/targets/java.json: https://github.com/shogun-toolbox/shogun/commit/51520ed462fdd02624141a15842977409e49bcfa
 shogun-notifier-	shogun: (non-working) draft for java matrix and vector types
 shogun-buildbot	build #1307 of precise - libshogun is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/precise%20-%20libshogun/builds/1307  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	wiking: we can disable precise now I guess
@wiking	no
@wiking	i really think we need one more releae
@wiking	before killing it
@wiking	have already a patch for that
@wiking	almost
@wiking	std::hash i need something
@wiking	and then i can patch the develop to still work with none c++11 stuff
@wiking	fuck what's happening in france
@wiking	internet keeps dropping somewhere there in a router
@wiking	50% packet loss
@HeikoS	its the rain
@HeikoS	wiking: ah I see
@HeikoS	ok then, lets keep it alive
@HeikoS	since we merged a few patches recently
@HeikoS	that broke it
@HeikoS	thought you were up for iut
@HeikoS	but ok, we can wait
@wiking	adn then we can still keep it with another compiler :P
@wiking	till 2017 april
@wiking	that's the EOL of precise
@HeikoS	I wont be able to make the GPL transition before september though
@HeikoS	okok
@HeikoS	wiking: what about OXPOHS patches?
 shogun-buildbot	build #2949 of bsd1 - libshogun is complete: Failure [failed configure]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/2949  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has quit [Quit: Leaving.]
 shogun-buildbot	build #86 of xenial - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/xenial%20-%20libshogun/builds/86  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has quit [Ping timeout: 276 seconds]
 shogun-buildbot	build #35 of FC23 - libshogun - aarch64 is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC23%20-%20libshogun%20-%20aarch64/builds/35  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, christopher <christopher.goldsworthy@outlook.com>
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- sanuj [~sanuj@117.203.7.181] has joined #shogun
-!- sanuj [~sanuj@117.203.7.181] has quit [Ping timeout: 244 seconds]
 shogun-buildbot	build #36 of FC23 - libshogun - aarch64 is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/FC23%20-%20libshogun%20-%20aarch64/builds/36  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- HeikoS [~heiko@AMarseille-651-1-123-80.w2-4.abo.wanadoo.fr] has quit [Ping timeout: 244 seconds]
-!- sanuj [~sanuj@117.204.254.120] has joined #shogun
-!- sanuj_ [~sanuj@117.204.254.120] has joined #shogun
-!- sanuj_ [~sanuj@117.204.254.120] has quit [Client Quit]
-!- sanuj [~sanuj@117.204.254.120] has quit [Remote host closed the connection]
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Ping timeout: 250 seconds]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
--- Log closed Sun Jul 24 00:00:35 2016
