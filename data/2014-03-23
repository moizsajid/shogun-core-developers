--- Log opened Sun Mar 23 00:00:50 2014
-!- khalednasr [~k.nasr92@41.69.203.191] has quit [Quit: Leaving]
-!- newlido [~quassel@41.237.151.196] has quit [Ping timeout: 240 seconds]
-!- kislay [~kislay@210.212.61.185] has quit [Ping timeout: 240 seconds]
-!- kislay [~kislay@14.139.41.150] has joined #shogun
-!- thoralf [~thoralf@91-65-136-194-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- kislay [~kislay@14.139.41.150] has quit [Ping timeout: 268 seconds]
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
-!- nikolisgal [~nikolisga@ppp141237211150.access.hol.gr] has quit [Remote host closed the connection]
-!- mode/#shogun [+o sonney2k] by ChanServ
 shogun-buildbot	build #755 of nightly_default is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/755
-!- vperic [~vperic@194.228.13.178] has quit [Ping timeout: 246 seconds]
-!- DarkRoom_ [~darkroom@14.139.82.6] has quit [Read error: Operation timed out]
-!- kislay [~kislay@14.139.41.150] has joined #shogun
-!- newlido [~quassel@41.237.151.196] has joined #shogun
-!- newlido [~quassel@41.237.151.196] has quit [Remote host closed the connection]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- jiaolong_ [553a5634@gateway/web/freenode/ip.85.58.86.52] has quit [Quit: Page closed]
-!- kislay [~kislay@14.139.41.150] has quit [Read error: Connection reset by peer]
-!- kislay [~kislay@14.139.41.150] has joined #shogun
-!- andrew [~andrew@c-50-184-110-141.hsd1.ca.comcast.net] has joined #shogun
-!- nikolisgal [~nikolisga@ppp141237211150.access.hol.gr] has joined #shogun
-!- andrew [~andrew@c-50-184-110-141.hsd1.ca.comcast.net] has quit [Ping timeout: 240 seconds]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
-!- Netsplit *.net <-> *.split quits: pfm_, @wiking
-!- Netsplit over, joins: pfm_
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- ServerMode/#shogun [+o wiking] by kornbluth.freenode.net
-!- vperic [~vperic@194.228.13.178] has joined #shogun
-!- nikolisgal [~nikolisga@ppp141237211150.access.hol.gr] has quit [Quit: Leaving]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- HeikoS [~heiko@0546d087.skybroadband.com] has joined #shogun
 HeikoS	.
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
-!- pl8787 [9fe22b60@gateway/web/freenode/ip.159.226.43.96] has joined #shogun
 pl8787	heikoS : Is there any io class in shogun can read string feature ?
 HeikoS	pl8787: in the sense of?
 pl8787	the format such as : 1|name|cate|0|0
 pl8787	I use csv reader, but only numerate feature can read
 HeikoS	I see
 HeikoS	pl8787: I dont know, you should ask sonney2k, andor lisitsyn, wiking
 lisitsyn	I don't speak english sorry
 lisitsyn	:D
 HeikoS	if its currently not possible, it might be agood idea to extend the existing class to be able to read categorical andor string data
 HeikoS	lisitsyn: ?
 lisitsyn	jk
-!- bumblebee [~quassel@202.78.175.199] has joined #shogun
 lisitsyn	I don't know actually
 pl8787	lisitsyn: how to solve this problem?
 lisitsyn	let me go through the code
 pl8787	lisitsy: ok thanks
 lisitsyn	should be possible
 lisitsyn	ah no
 lisitsyn	SG_NOTIMPLEMENTED
 lisitsyn	:D
 pl8787	ok, maybe I could implement myself, or use other language(python) preprocess the data
-!- vperic [~vperic@194.228.13.178] has quit [Quit: Konversation terminated!]
-!- HeikoS [~heiko@0546d087.skybroadband.com] has quit [Ping timeout: 264 seconds]
-!- HeikoS [~heiko@ra-vpn-212.ra-vpn.ucl.ac.uk] has joined #shogun
-!- HeikoS [~heiko@ra-vpn-212.ra-vpn.ucl.ac.uk] has quit [Read error: Connection reset by peer]
-!- nikolisgal [~nikolisga@ppp141237211150.access.hol.gr] has joined #shogun
-!- HeikoS [~heiko@0546d087.skybroadband.com] has joined #shogun
-!- HeikoS [~heiko@0546d087.skybroadband.com] has quit [Ping timeout: 264 seconds]
-!- kprah [67157f4c@gateway/web/freenode/ip.103.21.127.76] has joined #shogun
 kprah	wiking: hey, you there?
 kprah	sonney2k: I had a question on present bmrm solvers
 kprah	if we already have a bmrm solver (libbmrm.cpp/h) , then what's the reason of having an proximal bundle solver (libp3bm.cpp)?
 kprah	\msg
-!- kprah_ [67157f4c@gateway/web/freenode/ip.103.21.127.76] has joined #shogun
-!- kprah [67157f4c@gateway/web/freenode/ip.103.21.127.76] has quit [Ping timeout: 245 seconds]
-!- kprah [67157d4c@gateway/web/freenode/ip.103.21.125.76] has joined #shogun
-!- kprah_ [67157f4c@gateway/web/freenode/ip.103.21.127.76] has quit [Ping timeout: 245 seconds]
-!- kprah [67157d4c@gateway/web/freenode/ip.103.21.125.76] has quit [Quit: Page closed]
-!- nikolisgal [~nikolisga@ppp141237211150.access.hol.gr] has quit [Quit: Leaving]
-!- kprah [67157f4c@gateway/web/freenode/ip.103.21.127.76] has joined #shogun
-!- kprah [67157f4c@gateway/web/freenode/ip.103.21.127.76] has quit [Quit: Page closed]
-!- bumblebee [~quassel@202.78.175.199] has quit [Read error: Operation timed out]
-!- bumblebee [~quassel@202.78.175.199] has joined #shogun
-!- jiaolong [9e6d09e4@gateway/web/freenode/ip.158.109.9.228] has quit [Quit: Page closed]
-!- bumblebee_ [~quassel@202.78.175.199] has joined #shogun
-!- bumblebee [~quassel@202.78.175.199] has quit [Ping timeout: 240 seconds]
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- sonne|osx [~sonne@e178251106.adsl.alicedsl.de] has joined #shogun
-!- besser82 [quassel@fedora/besser82] has quit [Remote host closed the connection]
-!- dhruv13j [dhruv13j@gateway/shell/bnc4free/x-argwiipfafaabqkc] has quit [Remote host closed the connection]
-!- sonne|osx [~sonne@e178251106.adsl.alicedsl.de] has quit [Client Quit]
-!- sonne|osx [~sonne@e178251106.adsl.alicedsl.de] has joined #shogun
-!- bumblebee_ [~quassel@202.78.175.199] has quit [Ping timeout: 252 seconds]
-!- HeikoS [~heiko@0546d087.skybroadband.com] has joined #shogun
-!- besser82 [quassel@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: pl8787 :develop * 3afb4cf / tests/unit/statistics/HSIC_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/3afb4cf1bddf5c55d9cc9a3f2b4f1e79f5519416
 shogun-notifier-	shogun: Update BSD license at the top of the file.
 shogun-notifier-	shogun: Heiko Strathmann :develop * adc9500 / tests/unit/statistics/HSIC_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/adc950001671e2af852629828e80708bcef8a43e
 shogun-notifier-	shogun: Merge pull request #2066 from pl8787/hsic
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: #1983 Update BSD license at the top of the file.
-!- iglesiasg [~iglesiasg@524AE0A7.cm-4-3d.dynamic.ziggo.nl] has quit [Quit: Leaving]
-!- dhruv13j [dhruv13j@gateway/shell/bnc4free/x-dojotckqqmfmtwvw] has joined #shogun
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
 kislay	HeikoS, hey.
 HeikoS	kislay: hey!
 kislay	HeikoS, please tell me some pointers to get started with the opencv integration issue.
 lisitsyn	HeikoS: !
 lisitsyn	https://github.com/lisitsyn/aer/blob/master/test_lib_src/library.cpp
 HeikoS	kislay: I dont know this very well
 lisitsyn	see last three lines
 lisitsyn	four
 HeikoS	kislay: best is to write a mail to kevin about this, or just explore on your own a bit
 HeikoS	lisitsyn: aer?
 lisitsyn	HeikoS: don't tell me it is the first time you see it
 lisitsyn	:D
-!- travis-ci [~travis-ci@ec2-54-81-190-108.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/21377207
-!- travis-ci [~travis-ci@ec2-54-81-190-108.compute-1.amazonaws.com] has left #shogun []
 HeikoS	lisitsyn: I am sorry, so many things going on :)
 lisitsyn	HeikoS: yes that's what I develop to replace all the stuff
 lisitsyn	well
 HeikoS	what do you want to tell me with this gist?
 lisitsyn	that's how you define plugin
 HeikoS	is this how to import modules?
 lisitsyn	rather export
 HeikoS	I see
 kislay	HeikoS, okay.
 HeikoS	I think thats sweet!
 lisitsyn	HeikoS: what I want is some feedback because I am developing it mostly for shogun
 HeikoS	ok I see
 lisitsyn	HeikoS: so basically you'd have to say
 lisitsyn	I want to export class blabla
-!- zxtx [~zv@cpe-98-148-41-3.socal.res.rr.com] has joined #shogun
 HeikoS	lisitsyn: ok, so what about multiple classes?
 lisitsyn	which is inherited from one of our base classes
 HeikoS	lisitsyn: and how are modules organised?
 HeikoS	lisitsyn: do we keep the current folder structure?
 lisitsyn	I don't know
 lisitsyn	I don't force anything on that
 HeikoS	ok,
 lisitsyn	what I have now is library/metaclass/object infrastructure
 HeikoS	I mean for single classes this is perfect
 HeikoS	lisitsyn: okay, and everyone is too busy to give feedback? :D
 lisitsyn	sorry don't get it
 lisitsyn	HeikoS: no I only ask you :D
 lisitsyn	because you are some kind of fan of 'proper' things
 HeikoS	lisitsyn: can a class be registered in multiple libs?
 lisitsyn	one class in multiple libs??
 HeikoS	lisitsyn: haha, yeah but unable to do that myfelf :D
 HeikoS	myself
 lisitsyn	what's the usecase
 HeikoS	lisitsyn: so it would be cool if we could register the classes like within multiple modules
 HeikoS	lisitsyn: say, GP module
 HeikoS	needs GaussianKernel
 HeikoS	but LibSVM module also needs
 lisitsyn	you're speaking about dependencies?
 HeikoS	lisitsyn: yeah
 lisitsyn	well that's to be done yet
 HeikoS	lisitsyn: so it would be cool in the end if I just said: I only want GPs
 HeikoS	or only LibSVM
 lisitsyn	that's actually a great problem
 lisitsyn	HeikoS: a lot of things are going to be done with strings
 lisitsyn	that's a drawback
 HeikoS	mmmh
 HeikoS	ok
 lisitsyn	HeikoS: if you need gaussian kernel
 lisitsyn	you probably would ask some system
 lisitsyn	to spawn "GaussianKernel" for you
 lisitsyn	it would be As<Kernel> for you though
 lisitsyn	HeikoS: As is my shared_ptr ;)
 lisitsyn	I found it a good naming but I can get wrong
 HeikoS	ehm, I am using track there
 HeikoS	what?
 lisitsyn	HeikoS: remember we need shared_ptrs?
 HeikoS	yeah
 lisitsyn	basically I am hiding shared_ptr
 lisitsyn	I called it As
 HeikoS	give somm overview of those again? :)
 lisitsyn	so As<Kernel>
 lisitsyn	is a smart pointer for kernel
 lisitsyn	you can use it as kernel whatever way you want
 lisitsyn	HeikoS: overview of shared_ptr?
 lisitsyn	it is basically what we did with all these ref*
 HeikoS	yeah and why we want them
 lisitsyn	HeikoS: it is in C++11
 lisitsyn	it is just the same thing as SGRefObject or whatever
 lisitsyn	refcount
 lisitsyn	that's all DIY things that are already in std
 lisitsyn	HeikoS: so basically why to have probably buggy implementation of something from the standard library ;)
 HeikoS	ok
 HeikoS	I agree
 HeikoS	but thats different to the modules framwork no?
 lisitsyn	no not really
 lisitsyn	they are coming together unfortunately :)
-!- bumblebee [~quassel@202.78.172.162] has joined #shogun
 lisitsyn	say you want to spawn something
 lisitsyn	some kernel may be
 lisitsyn	what you get is either raw pointer
 lisitsyn	or some smart ptr already
 lisitsyn	see what I mean?
 lisitsyn	HeikoS: well and serialization problem can be solved here as well
 lisitsyn	if you don't mind :)
 lisitsyn	HeikoS: basically I store everything in some type-erasure type (any)
 HeikoS	thats cool
 lisitsyn	HeikoS: e.g. there is a type
 lisitsyn	that allows
 lisitsyn	Any x(3.0);
 HeikoS	lisitsyn: I have problems keeping the overview on this. Could you maybe write a little manifest on what is done how and link to the gists?
 lisitsyn	HeikoS: uhm yeah but it is still work in progress
 lisitsyn	I am just keeping you updated ;)
 lisitsyn	HeikoS: ah yeah and I have something to make dptrs easy
 lisitsyn	ok 'easier'
 lisitsyn	that's obvious but still
 lisitsyn	there is a class DPtr
 lisitsyn	so what you do is
 lisitsyn	private:
 lisitsyn	class Self;
 lisitsyn	DPtr<Self> self;
 lisitsyn	HeikoS: then you define this private class and use it in .cpp
 lisitsyn	dptr's default constructor creates an instance for you so you don't care about that at all
 lisitsyn	okay I already overloaded you ;)
 HeikoS	lisitsyn: sorry
 HeikoS	lisitsyn: what about a motivation document or something?
 HeikoS	where you explain why we want to do this, how you want to do this, and give examples, etc
 lisitsyn	as I said I want to work out some issues still
 HeikoS	I think that would greatly simplify the discussion
 HeikoS	lisitsyn: if we structured that a bit
 HeikoS	easier to identify issues
 lisitsyn	ok will do later once I resolve some things
 HeikoS	lisitsyn: sorry about that, but its too hard to understand all this from chat
 lisitsyn	hah okie
 HeikoS	lisitsyn: I also think this will make it easier for the others to participate. It might be that noone really understands what you are doing with that currently ;)
 lisitsyn	HeikoS: that's exactly true
 lisitsyn	I am pretty lonely here :D
 HeikoS	lisitsyn: hehe, well then do this, will make it much easier. Also, then people will know about you doing this
 HeikoS	lisitsyn: and since its hard to convince anyone in shogun to be excited about framework changes, this is also necessary to get manpower ;)
 HeikoS	lisitsyn: I bet thoralf will be excited
 lisitsyn	heh okay
 lisitsyn	HeikoS: have you known about C++'s name mangling?
 HeikoS	lisitsyn: no whats that?
 lisitsyn	HeikoS: e.g. if you have a function
 lisitsyn	int f(int x)
 lisitsyn	you can't just reference it with 'f'
 lisitsyn	if you are using C++
 lisitsyn	it would be exported as
 lisitsyn	intfdsfdsffPSdintxdfdsfsd
 lisitsyn	I mean it's name is pretty much ruined
 HeikoS	huh?
 lisitsyn	HeikoS: have you seen 'extern "C"' in code?
 HeikoS	where ?
 HeikoS	yeah
 lisitsyn	well in some libraries may be
 lisitsyn	that's to tell compiler
 lisitsyn	that you don't want to mangle it
 lisitsyn	it uses C rules of externalization
 HeikoS	I see
 HeikoS	ah weird
 lisitsyn	haha
 lisitsyn	HeikoS: funny thing is that type mangling is not in the standard of C++
 lisitsyn	if you have compiler X you can do that any way you want
 HeikoS	lisitsyn: yeaaaah, read and responded to *all* shogun emails finally ;)
 lisitsyn	they follow same rules nowadays
 lisitsyn	but still you can't be guaranteed
 lisitsyn	HeikoS: heh I don't have that much emails thanks to deity
 HeikoS	lisitsyn: I will do some cooking now
 lisitsyn	okay have fun
 HeikoS	lisitsyn: with vincent btw. And then I will kick him to write a schedule ;)
 HeikoS	lisitsyn: looking forward for your description of the module stuff
 HeikoS	see you
 lisitsyn	heh okay hello to vincent
 lisitsyn	don't expect it earlier than in a week :D
-!- soumyaC_ [uid15286@gateway/web/irccloud.com/x-ywfpriynusavedzn] has joined #shogun
 dhruv13j	lisitsyn: hey! just curious, why is the name mangling thing done?
 lisitsyn	dhruv13j: because of C++ things like const and etc
 lisitsyn	e.g.
 lisitsyn	f() const
 lisitsyn	and
 lisitsyn	f()
 lisitsyn	they are basically different functions
 lisitsyn	and you can have member functions
 lisitsyn	friend functions, templates
 lisitsyn	namespaces
 dhruv13j	so, to differentiate between these?
 lisitsyn	yeah
 lisitsyn	you don't have anything like that in C
 dhruv13j	is it possible to overload on the basis of constness?
 dhruv13j	like f()
 dhruv13j	and f() const
 lisitsyn	they are different functions
 dhruv13j	hmm...
 lisitsyn	you can have totally different implementations of these
 dhruv13j	and these are compiler dependent?
 lisitsyn	mangling or?
 dhruv13j	like clang's way is different from g++'s way to magle?
-!- HeikoS [~heiko@0546d087.skybroadband.com] has quit [Ping timeout: 268 seconds]
 lisitsyn	clang and g++ probably do it the same way now
 dhruv13j	if it was different, would it be a problem while loading modules etc?
 lisitsyn	but older compilers don't
 lisitsyn	dhruv13j: that's why if you do anything with modules
 lisitsyn	you need to do 'extern "C"'
 dhruv13j	hmm... cool
 lisitsyn	you can't do extern "C" on templates
 lisitsyn	or things like that
 dhruv13j	doesn't that limit designing modules?
 lisitsyn	well that limits you to do some bottleneck
 lisitsyn	like hide everything into one function
 lisitsyn	which returns all the data you need as an object
 dhruv13j	i don't understand... so templates are out if you design modules?
 lisitsyn	dhruv13j: yeah actually yes
 lisitsyn	you can't export templates
 lisitsyn	even with C++
 lisitsyn	you can only export specialized templates
 dhruv13j	unless you can assure all modules are compiled with the same compiler?
 lisitsyn	dhruv13j: no even with such an assumptin
 lisitsyn	I mean templates are compile-time
 dhruv13j	i mean don't use extern "C"
 lisitsyn	so you always have to put them to headers
 dhruv13j	okay...
 lisitsyn	so if you depend on headers of some module
 lisitsyn	it becomes not a module for you but the part of the library
 dhruv13j	doesn't this make it tough to use factory classes?
 lisitsyn	dhruv13j: well a bit
 lisitsyn	you usually don't export classes
 lisitsyn	but some functions that can create objects
 dhruv13j	like global functions, which are friends of classes?
 lisitsyn	extern "C" X* createX() { return new X(); }
 lisitsyn	that's ok ^
 dhruv13j	okay...
 dhruv13j	friend functions will only be needed if some other generic behaviour is required
-!- thoralf [~thoralf@91-66-33-156-dynip.superkabel.de] has joined #shogun
 thoralf	Hey.
 lisitsyn	hey
 dhruv13j	thoralf: hello!
 thoralf	dhruv13j, lisitsyn: Hey hackers.
 lisitsyn	dhruv13j: _ZN9__gnu_cxx13new_allocatorIN3aer13LibraryHandleEE9constructIS2_IRKSsEEEvPT_DpOT0_
 lisitsyn	dhruv13j: ^ example of mangled name
 dhruv13j	lisitsyn: http://pastebin.instantbird.com/642550
 dhruv13j	lisitsyn: The compiler always seems to choose the const function...
 lisitsyn	how did you check that?
 lisitsyn	I mean you always get 'x'
 dhruv13j	the cout
 dhruv13j	yeah
 dhruv13j	no the non-const returns x++
 lisitsyn	x++ or ++x?
 lisitsyn	:D
 dhruv13j	lol
 lisitsyn	it should use non-const function
 dhruv13j	yeah
 lisitsyn	it probably uses
 dhruv13j	non-const
 dhruv13j	lol
 lisitsyn	but if you make a function
 lisitsyn	that takes const reference
 lisitsyn	it should call the const thing
 dhruv13j	in the this argument
 dhruv13j	got it!
 lisitsyn	you can also use
 lisitsyn	const &
 lisitsyn	and const &&
 lisitsyn	functions
 lisitsyn	but that's like dangerous zone :D
 dhruv13j	yeah...
 dhruv13j	lisitsyn: thanks!
-!- HeikoS [~heiko@0546d087.skybroadband.com] has joined #shogun
 thoralf	Mr. S
 HeikoS	thoralf: Mr. K
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Quit: PirosB3]
-!- sonne|osx [~sonne@e178251106.adsl.alicedsl.de] has quit [Quit: sonne|osx]
-!- HeikoS [~heiko@0546d087.skybroadband.com] has quit [Ping timeout: 240 seconds]
-!- khalednasr [~k.nasr92@41.69.156.170] has joined #shogun
 lisitsyn	khalednasr: hey
 khalednasr	lisitsyn, hey
 lisitsyn	khalednasr: sorry I wasn't following your PR lately
 lisitsyn	reviewing it now
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has joined #shogun
 khalednasr	lisitsyn, take your time :)
 lisitsyn	khalednasr: get_layer thing is pretty dangerous
 thoralf	lisitsyn: WOW, I just benchmarked my import cleanups.  45m34s before, 39m56s after.
 thoralf	Saving of over 10%. :)
 lisitsyn	what's that?
-!- PirosB3 [~pirosb3@cpc4-newt31-2-0-cust631.newt.cable.virginm.net] has quit [Ping timeout: 240 seconds]
 thoralf	I don't understand.
 lisitsyn	khalednasr: okay I can tolerate that :D I think that's ok now
 khalednasr	lisitsyn, any alternatives for the get_layer thing?
 lisitsyn	khalednasr: well unique_ptr may be
 lisitsyn	with custom deleter
 lisitsyn	that just SG_UNREFs it
 khalednasr	lisitsyn, seems too much for such a simple function
 lisitsyn	khalednasr: too much overhead you mean?
 khalednasr	lisitsyn, yeah
 lisitsyn	khalednasr: I'll merge your PR once it passes travis build
 lisitsyn	it is in progress
 khalednasr	lisitsyn, there are a few bugs that i'm still working on
 lisitsyn	khalednasr: oh really? :)
 lisitsyn	I wanted to merge it already :D
 lisitsyn	what are the bugs?
 khalednasr	lisitsyn, next commit will be better :)
 khalednasr	lisitsyn,  one of the unit tests is failing  on travis for some reason
 lisitsyn	alright
 lisitsyn	khalednasr: check my comment for your proposal
 khalednasr	lisitsyn, alright, thanks
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- jiaolong [553a5634@gateway/web/freenode/ip.85.58.86.52] has joined #shogun
 thoralf	Hey jiaolong
 lisitsyn	khalednasr: and also
 lisitsyn	khalednasr: could you please be more active communication-wise?
 lisitsyn	khalednasr: theo simply doesn't know you yet I guess :)
 lisitsyn	your PR thing is pretty huge amount of job but we shouldn't lose that point
 khalednasr	lisitsyn, I'll try :)
-!- travis-ci [~travis-ci@ec2-54-80-179-187.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's khalednasr's turn to pay the next round of drinks for the massacre he caused in khalednasr/shogun: http://travis-ci.org/khalednasr/shogun/builds/21384247
-!- travis-ci [~travis-ci@ec2-54-80-179-187.compute-1.amazonaws.com] has left #shogun []
 lisitsyn	cool
-!- HeikoS [~heiko@0546d087.skybroadband.com] has joined #shogun
 khalednasr	lisitsyn, TBH I'm not very good at communication, any advice? :)
 lisitsyn	khalednasr: well just write letters ;)
 lisitsyn	khalednasr: did you already presented yourself to theo?
 khalednasr	lisitsyn, just the proposal
 lisitsyn	oh
 lisitsyn	then please write a mail
 lisitsyn	explain something about yourself and let him know what you would like to work on
 lisitsyn	khalednasr: that's really important as you'd have to negotiate project details
 khalednasr	lisitsyn, ok, thanks
 jiaolong	thoralf: Hi
 thoralf	jiaolong: Just sent you a small shell script: https://gist.github.com/tklein23/9730737
 jiaolong	thoralf: Thank you so much!
 thoralf	jiaolong: Everything alright so far?
 jiaolong	thoralf: I didnn't do unit test today. Sorry.
 jiaolong	thoralf: The Travis error is from a unit test and I am fixing it.
 jiaolong	thoralf: -1, +1 vs 0, +1 issue
 jiaolong	thoralf: yes , I think no big problems.
 thoralf	jiaolong: No problem, happens from time to time. :)
 jiaolong	thoralf: OK, I will test it throughly
 jiaolong	thoralf: I didn't know how to run the testing before
 jiaolong	thoralf: I thought cmake -ENABLE_TESTING=on .. && make will do everything :(
 jiaolong	thoralf: Regarding to the refactoring MulticlassMultipleOutputLabels, which  label type should we use? int16_t or index_t?
 thoralf	jiaolong: In short: "make ARGS='--output-on-failure' -jXXX test"
 thoralf	jiaolong: int32_t should be fine.  I'll fix it in MultilabelLabels.
 jiaolong	thoralf: OK, cool!
 jiaolong	thoralf: so the work is just replace MulticlassMultipleOutputLabels by MultilabelLabels?
 thoralf	jiaolong: Yes.
 thoralf	jiaolong: You may want to secure your changes by a few unit tests.
 thoralf	Don't know what already exists.
 jiaolong	thoralf: Yes, I will find a time to do it
 jiaolong	thoralf: I checked the set_label, it seems MulticlassMultipleOutputLabels is quite different
 thoralf	jiaolong: How different?  Will it be a problem?
 jiaolong	thoralf: well, I just took a quick look, I need to read and understand the code better
 jiaolong	thoralf: the real label index is not the same as the indx in set_labe(indx, vector)
 thoralf	jiaolong: Then this will be part of the refactoring.
 jiaolong	thoralf: is there any examples related to these two types of labels?
 jiaolong	thoralf: OK
 thoralf	jiaolong: I guess yes.  Do a grep for MulticlassMultipleOutputLabels over unit-tests or examples.
 jiaolong	thoralf: OK, MultilabelLabels is not in the LabelsFactory
 jiaolong	thoralf: why?
 thoralf	jiaolong: Hmm.  I never needed it.  Add it if you need to.
 jiaolong	thoralf: OK, just curious, not a big problem
 jiaolong	thoralf: OK, thank you very much! I am checking the code. See you!
 thoralf	Bye
-!- thoralf [~thoralf@91-66-33-156-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
--- Log closed Mon Mar 24 00:00:51 2014
