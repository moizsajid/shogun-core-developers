--- Log opened Mon May 06 00:00:32 2013
 shogun-buildbot	build #913 of deb2 - static_interfaces is complete: Failure [failed install test octave_static]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/913  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-184-73-20-211.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/6906494
-!- travis-ci [~travis-ci@ec2-184-73-20-211.compute-1.amazonaws.com] has left #shogun []
 van51	may be a silly question, but how can I run the tests in a specific unit test file?
 shogun-buildbot	build #1055 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1055
@lisitsyn	van51: --gtest-filter=Test.*
@lisitsyn	like that
 van51	lisitsyn: don't know where that goes :p
@lisitsyn	van51: as a key of test binary
 van51	i wrote a main function inside one :$
@lisitsyn	van51: main? why?
 van51	well, I wanted to run the TEST() in a file
 van51	so I added a main and called RUN_ALL_TESTS inside that file
 van51	noobish way, but I haven't used a testing framework without an IDE before :/
@lisitsyn	I see
@lisitsyn	not sure about IDE usage here
 van51	lisitsyn: can you explain it though a bit?
 van51	all I know is to call make tests
 van51	but I have a few (not mine) failing
@lisitsyn	van51: alright let me check
@lisitsyn	oops I broke gmock here
 van51	I wanted to ask about that too :p
 van51	my ./configure didn't spot it
@lisitsyn	van51: os?
 van51	ubuntu
@lisitsyn	van51: I am afraid manual install is the way
 van51	ah ok
 van51	lisitsyn: suppose I do that, instead of make tests, how do I select the specific test?
@lisitsyn	van51: in a minute
 van51	lisitsyn: sure, do your job :)
@lisitsyn	van51: ./shogun-unit-test --gtest_filter=LaplacianInferenceMethod.get_alpha
@lisitsyn	as an example
@lisitsyn	have to sleep now cu
 van51	lisitsyn: thank you
 van51	goodnight
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- van51 [~van51@athedsl-318776.home.otenet.gr] has left #shogun ["PING 1367803522"]
 shogun-buildbot	build #383 of nightly_default is complete: Failure [failed install test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/383
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- lisitsyn [~blackburn@109-226-120-160.clients.tlt.100megabit.ru] has left #shogun []
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 256 seconds]
-!- nube [~rho@116.90.239.3] has joined #shogun
@sonney2k	shogun-buildbot, force build 'nightly_default'
 shogun-buildbot	build forced [ETA 35m39s]
 shogun-buildbot	I'll give a shout when the build finishes
@sonney2k	shogun-buildbot, force build 'deb2 - static_interfaces'
 shogun-buildbot	build #914 forced
 shogun-buildbot	I'll give a shout when the build finishes
-!- iglesiasg [~nando@88.128.80.7] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- iglesiasg [~nando@88.128.80.7] has quit [Quit: leaving]
 shogun-buildbot	build #914 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/914
 shogun-buildbot	build #384 of nightly_default is complete: Failure [failed install test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/384
-!- sijin [~smuxi@144.214.222.109] has joined #shogun
-!- erlenda [~erlenda@fw-oslo.intelcom.no] has joined #shogun
@sonney2k	shogun-buildbot, force build 'nightly_default'
 shogun-buildbot	build forced [ETA 35m39s]
 shogun-buildbot	I'll give a shout when the build finishes
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 272 seconds]
 shogun-buildbot	build #385 of nightly_default is complete: Failure [failed install test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/385
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- mode/#shogun [+o lisitsyn] by ChanServ
@sonney2k	shogun-buildbot, force build 'nightly_default'
 shogun-buildbot	build forced [ETA 35m39s]
 shogun-buildbot	I'll give a shout when the build finishes
@lisitsyn	sonney2k: how do you feel?
@sonney2k	sick
@lisitsyn	badz
-!- ozan [~ozan@ee-167-078.eee.metu.edu.tr] has joined #shogun
 ozan	before starting to write unit tests I would like to solve build fail for QDA
 ozan	I got an error in Travis
 ozan	https://travis-ci.org/shogun-toolbox/shogun/jobs/6859829
 ozan	I think issue is related to python example
 ozan	however it is not included in the PR
@lisitsyn	sonney2k: my flight is finally booked
@lisitsyn	so if I am not hit by bus I am in berlin 9-15
@lisitsyn	ozan: yeah we have a trouble with it for some reason
 ozan	so what should I do then
@lisitsyn	ozan: well someone of us has to fix it at some point
@lisitsyn	why do you want to solve it for QDA?
 ozan	I just wanted to get a successful build message
 ozan	if not necessary I will proceed with unit tests then
 shogun-buildbot	build #756 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/756  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #386 of nightly_default is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/386
 ozan	is there any sample unit test for the functionality similar to QDA which I can check ?
@lisitsyn	ozan: oh sorry I didn't realize it is qda example that fails
@lisitsyn	that's worse! any idea why it produces different result?
-!- Yanglittle [deb20afa@gateway/web/freenode/ip.222.178.10.250] has joined #shogun
 ozan	I have an idea
 ozan	at some point
 ozan	I print labels for debug
 Yanglittle	excuse me, didn't the clustering deal with sparse data?
 ozan	but travis fails at that line
 ozan	however I did not included example file in my commit
-!- sijin [~smuxi@144.214.222.109] has quit [Ping timeout: 264 seconds]
 Yanglittle	excuse me, didn't the clustering deal with sparse data?
-!- travis-ci [~travis-ci@ec2-184-73-20-211.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/6916233
-!- travis-ci [~travis-ci@ec2-184-73-20-211.compute-1.amazonaws.com] has left #shogun []
 Yanglittle	excuse me, didn't the clustering deal with sparse data?
@lisitsyn	Yanglittle: k-means?
 Yanglittle	yes.
@lisitsyn	should work with sparse distance but I am afraid it cluster centers would be dense
 ozan	Can I use travis without making a pull request ?
-!- nube [~rho@116.90.239.3] has joined #shogun
@lisitsyn	ozan: yeah you may set up travis for your fork
 ozan	thanks, I will set-up travis and try to solve the issue
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 252 seconds]
-!- Yanglittle [deb20afa@gateway/web/freenode/ip.222.178.10.250] has quit [Quit: Page closed]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- travis-ci [~travis-ci@ec2-184-73-20-211.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's ozansener's turn to pay the next round of drinks for the massacre he caused in ozansener/shogun: http://travis-ci.org/ozansener/shogun/builds/6917797
-!- travis-ci [~travis-ci@ec2-184-73-20-211.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-184-73-30-241.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's ozansener's turn to pay the next round of drinks for the massacre he caused in ozansener/shogun: http://travis-ci.org/ozansener/shogun/builds/6917823
-!- travis-ci [~travis-ci@ec2-184-73-30-241.compute-1.amazonaws.com] has left #shogun []
-!- nube [~rho@116.90.239.3] has quit [Quit: Leaving.]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- abinayam [3d0c1363@gateway/web/freenode/ip.61.12.19.99] has joined #shogun
-!- abinayam [3d0c1363@gateway/web/freenode/ip.61.12.19.99] has quit [Client Quit]
@wiking	ozan: plz remove the announcement from your .travis.yml conf...
 ozan	wiking: I removed the announcement sorry for the mess
-!- nube [~rho@116.90.239.3] has quit [Read error: Operation timed out]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- nube [~rho@116.90.239.3] has quit [Client Quit]
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
 votjakovr	Hi everyone! I encountered a problem. When I run integration tests on my local machine, every test is OK, but travis-ci  fails on two tests.  Any ideas why does it happen?
@lisitsyn	votjakovr: that's kind of mystery yeah
 votjakovr	lisitsyn: Yep. Most interesting, that I generated these two tests.
@lisitsyn	votjakovr: some platform-dependent stuff - hell to debug
 votjakovr	lisitsyn: And I tried different configurations on my machine, but they are still OK
-!- erlenda [~erlenda@fw-oslo.intelcom.no] has quit [Remote host closed the connection]
-!- ozan [~ozan@ee-167-078.eee.metu.edu.tr] has quit [Quit: Leaving]
-!- nube [~rho@49.244.114.202] has joined #shogun
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
-!- sijin [~smuxi@144.214.222.109] has joined #shogun
@wiking	sonney2k: ping
@sonney2k	wiking, pong
@sonney2k	wiking, lisitsyn anything suspicious after the wheezy upgrade?
-!- van51 [~van51@athedsl-318776.home.otenet.gr] has joined #shogun
@wiking	sonney2k: haven't checked.... question: i want to have a random unittest, but for some of the cases i would need to save a vector, which size if 320+.
@wiking	sonney2k: maybe i should just test that 2 times running PRNG will produce the same random vector?
@wiking	and maybe create an integration test for this
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
-!- pickle27 [~kevin@rcv3-lab-pc.ee.queensu.ca] has joined #shogun
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
@sonney2k	wiking, it makes totally sense to also store such a vector
@sonney2k	wiking, you could either generate the vector from some python_modular code and then return it
@sonney2k	then it is serialized and 1:1 compared
@sonney2k	or write it somewhere to shogun/data/
-!- iglesiasg [d58f322f@gateway/web/freenode/ip.213.143.50.47] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Kevin Hughes :develop * 2ab1521 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/2ab152121f8296ccc2310902ab4ea0bd7a946454
 shogun-notifier-	shogun: multiclass lda initial commit, algorithm is working. ouptut is confirmed to match scikit learn, I would assume that more work is required to integrate this new class into shogun fully
 shogun-notifier-	shogun: Kevin Hughes :develop * 2fd7892 / src/shogun/multiclass/MCLDA.cpp,src/shogun/multiclass/MCLDA.h: https://github.com/shogun-toolbox/shogun/commit/2fd789284a5a78ddefbcbe9739f4d7987ee60ba3
 shogun-notifier-	shogun: MCLDA fixed the bug that caused a memory error on more complicated data
 shogun-notifier-	shogun: Kevin Hughes :develop * cdb25fe / src/shogun/multiclass/MCLDA.h: https://github.com/shogun-toolbox/shogun/commit/cdb25fe9da7fff1e03012393aa4a77223fa6715d
 shogun-notifier-	shogun: Update MCLDA.h
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fixed the tabs in MCLDA.h
 shogun-notifier-	shogun: Kevin Hughes :develop * ca4051a / src/shogun/multiclass/MCLDA.cpp: https://github.com/shogun-toolbox/shogun/commit/ca4051a1047a9284762742ca05501c80bee12b5e
 shogun-notifier-	shogun: Update MCLDA.cpp
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fixed tabbing in MCLDA.cpp
 shogun-notifier-	shogun: Kevin Hughes :develop * 9bdbff3 / src/shogun/multiclass/MCLDA.cpp: https://github.com/shogun-toolbox/shogun/commit/9bdbff3392e5d4f2c05c13ba83c4e4e862d53923
-!- lisitsyn1 [~blackburn@83.234.54.230] has joined #shogun
 shogun-notifier-	shogun: Update MCLDA.cpp
@iglesiasg	sonney2k: finally we got multiclass LDA
@iglesiasg	I remember you wanted this last year
 lisitsyn1	ahh I forgot to log out at job
 lisitsyn1	:D
 lisitsyn1	iglesiasg: spain?
@iglesiasg	lisitsyn1: yes
 lisitsyn1	pickle27: if you have any idea for an unit test for mc lda it would be very appreciated
@sonney2k	iglesiasg, yeah from you right?
@iglesiasg	I was in Frankfurt this morning, I trained my German for the workshop :D
@sonney2k	lisitsyn1, just authorize to nickserv and own your other me
 lisitsyn1	iglesiasg: oh I am doing quite well with it! I now know 4 words
@iglesiasg	sonney2k: no, pickle27 has done it
 lisitsyn1	tegel, schillstrasse
 lisitsyn1	kurfurstenstrasse
@sonney2k	lisitsyn1, btw excellent that you merge things... I think we are a bit slow currently
@sonney2k	iglesiasg, no I meant I asked you to do it last year :D
 lisitsyn1	and schoenefeld!
 lisitsyn1	:D
 lisitsyn1	sonney2k: is KaDeWe that nice?
@iglesiasg	sonney2k: oh yeah, but got my hands into the cover tree at the end
@iglesiasg	haha I remember me struggling with it
 lisitsyn1	JL tends to write one-shot code
 lisitsyn1	once done impossible to modify
 pickle27	I'll take a look at what scikit-learn has for a unit test and see if I can use their approach
 lisitsyn1	pickle27: thanks!
@iglesiasg	pickle27: and it would be sooo nice with eigen :)
 pickle27	yeah I agree, Eigen code is much nicer to read
@iglesiasg	lisitsyn1: do you think a version of MQDA/MLDA relying on eigen should be faster as well?
 pickle27	I am still planning to get to QDA and LDA with Eigen in the next bit
 lisitsyn1	I would not expect much faster
@iglesiasg	pickle27: very nice, thank you!
 pickle27	I don't know much about the speed difference between those libs but it will deffs be easier to follow, the whole row vs col pref is confusing
 shogun-buildbot	build #921 of bsd1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/921  blamelist: Kevin Hughes <kevin@kevin-M3920.(none)>
@iglesiasg	pickle27: idd
 lisitsyn1	pickle27: I didn't get the point - what's about row vs col?
@iglesiasg	pickle27, lisitsyn1 : my guess is that getting rid of loops like https://github.com/shogun-toolbox/shogun/blob/master/src/shogun/multiclass/QDA.cpp#L232 with Eigen's vectorized operations should be faster
 shogun-buildbot	build #922 of bsd1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/922  blamelist: Kevin Hughes <kevinhughes27@gmail.com>
 pickle27	fortran is column major and I believe Eigen3 is row major
 pickle27	the input to the classifier is a matrix of samples as rows so it makes more sense for everything to follow with the row major mindset
 pickle27	also these build failures aren't my fault right? it doesn't look related
 lisitsyn1	pickle27: http://eigen.tuxfamily.org/dox/TopicStorageOrders.html
 lisitsyn1	pickle27: eigen is not roww major by default
 lisitsyn1	pickle27: yeah not your fault
 shogun-buildbot	build #468 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/468  blamelist: Kevin Hughes <kevin@kevin-M3920.(none)>
 lisitsyn1	uh
 lisitsyn1	pickle27: this one is for you
@iglesiasg	pickle27: but these warnings are
@iglesiasg	http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/468/steps/compile/logs/warnings%20%282%29
@iglesiasg	:P
@iglesiasg	aham and the last crash in classifier_lda?
 pickle27	looking into the warnings - whats the crash?
 shogun-buildbot	build #916 of deb2 - static_interfaces is complete: Failure [failed test libshogun]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/916  blamelist: Kevin Hughes <kevin@kevin-M3920.(none)>
 lisitsyn1	sonney2k: you talkative!
 lisitsyn1	:D
 shogun-buildbot	build #923 of bsd1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/923
 shogun-buildbot	build #924 of bsd1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/924  blamelist: Kevin Hughes <kevin@kevin-M3920.(none)>
 lisitsyn1	pickle27: I'd suggest to relax for a while now - it should build all the commits
 shogun-buildbot	build #469 of rpm1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/469
 lisitsyn1	with different luck
@sonney2k	pickle27, next time please submit a *single* commit
@sonney2k	lisitsyn, what do you mean?
 pickle27	yeah sorry about that
 lisitsyn1	sonney2k: mentor stuff
@sonney2k	ohh that email to mentors?
@sonney2k	I send that 3 days ago...
 lisitsyn1	hahah
 lisitsyn1	I just received
@sonney2k	me too
@sonney2k	interesting
 lisitsyn1	sonney2k: are you using russian post or what?
@sonney2k	deutsche post is famous for speed!
 lisitsyn1	sonney2k: I once ordered an replacement screen for my notebook and it was on the way for 2.5 month
 lisitsyn1	beat it
 lisitsyn1	from UK
@iglesiasg	pickle27: comparing qda example https://github.com/shogun-toolbox/shogun/blob/master/examples/undocumented/libshogun/classifier_qda.cpp with yours
@sonney2k	pickle27, well next time - you can just do git reset --soft <id>
@iglesiasg	pickle27: I think it might be the missing SG_REF in output_labels
@iglesiasg	pickle27: just output in your code, sorry
@sonney2k	still you only need to SG_REF stuff if you pass it into other functions
@sonney2k	not when you call obj->train()
@iglesiasg	sonney2k: yeah, SG_REF and SG_UNREF for out_labels here looks unnecessary, doesn't it?
 pickle27	yeah that makes sense, it was in the qda example so I left it in
@iglesiasg	https://github.com/shogun-toolbox/shogun/blob/master/examples/undocumented/libshogun/classifier_qda.cpp
 shogun-buildbot	build #917 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/917
 pickle27	jumping back a bit to the Eigen discussion - I'm assuming that the rest of shogun uses Eigen as col major then?
 pickle27	So I shall as well when I work on LDA and QDA with Eigen
 lisitsyn1	pickle27: it is colmajor by default
 shogun-buildbot	build #757 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/757
 pickle27	so shogun uses it in the default way
 pickle27	got it
 lisitsyn1	yes sure
@iglesiasg	colmajor is like an unspoken standard, isn't it?
 pickle27	I don't know I think scikit learn is row major
 lisitsyn1	iglesiasg: btw did you notice scikits treats feature matrices transposed?
 lisitsyn1	when we have X they use X'
@iglesiasg	pickle27: true, I have used some code derived from scikit which was row major
 pickle27	I have a computer vision background so I think in row major
@iglesiasg	lisitsyn1: yeah I noticed some things are transposed wrt to us in there
@sonney2k	pickle27, iglesiasg yeah, matlab, octave, R all use column major
@sonney2k	so that is where we come from
 pickle27	makes sense
@sonney2k	python is using c-style a[i][j]
@sonney2k	I meant they wanted to be compatible with that
@sonney2k	so numpy uses C-order
@sonney2k	but can be tuned to work with fortran order
 pickle27	yeah I have used that flag when porting matlab to numpy
 pickle27	very hand :)
 pickle27	handy*
 pickle27	iglesiasg: btw I checked and that unused variable can be deleted but the other warning is okay its for the cov matrix which is stored but not used
 pickle27	iglesiasg: should I make yet another (sorry) commit to fix this?
@iglesiasg	pickle27: I have nothing against adding commits -- for the that's they way things work hehe
@iglesiasg	pickle27: we should get rid of the warnings though
@iglesiasg	pickle27: IIRC multiclass QDA does something similar as well, does the warning appear there too?
-!- travis-ci [~travis-ci@ec2-107-21-82-250.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/6930799
-!- travis-ci [~travis-ci@ec2-107-21-82-250.compute-1.amazonaws.com] has left #shogun []
@iglesiasg	pickle27: in case not (which I'd bet for) then there should be way to avoid the warning in lda too
 pickle27	iglesiasg: okay I'll take a look
-!- van51 [~van51@athedsl-318776.home.otenet.gr] has left #shogun ["PING 1367865330"]
 pickle27	iglesiasg: ah found it
 pickle27	iglesiasg: qda has a method to return the cov matrix which I am missing
@iglesiasg	pickle27: there you go
@iglesiasg	pickle27: just add these two fixes for the warnings and for the test and make a new PR
@iglesiasg	this should be much shorter and we should be able to merge it rather soon
@iglesiasg	pickle27: regarding the test, could you please valgrind it to assure everything is all right?
 pickle27	I'm looking into what happened now
@iglesiasg	pickle27: I think it is that SG_UNREF(output) without previous SG_REF
 pickle27	iglesiasg: there is a previous SG_REF
 pickle27	iglesiasg: its right below the definition and right before the print statement
@iglesiasg	pickle27: oh sorry, let me see again
@iglesiasg	I am bling
@iglesiasg	blind*
 gsomix	sonney2k, hello. there?
@sonney2k	gsomix, yeah
 gsomix	sonney2k, can you explain a little your idea for "add factory classes for" issue?
 pickle27	iglesiasg: I just rebuilt and ran the example on my machine and it went fine - what did you want me to do with valgrind I've never used that tool before
@iglesiasg	pickle27: take a look to the Makefile
@iglesiasg	or let me show you, one second
@sonney2k	gsomix, I was thinking that it might be better to bundle all the obtain_from* stuff not in the respective e.g. label type but in some factory class e.g. CLabelFactory where all the static functions for converting labels are contained
@iglesiasg	pickle27: compile the example with the -g for debuggin info
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Read error: Connection reset by peer]
@iglesiasg	and do valgrind --tool=memcheck ./classifier_lda
@iglesiasg	what do you see?
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
 gsomix	sonney2k, hm, but what kind of methods? something like get_BinaryLabels_from_generic()?
 gsomix	BinaryLabels* get_BinaryLabels_from_generic(Labels*)
 gsomix	as example
@iglesiasg	pickle27: or even better, valgrind --show-reachable=yes --leak-check=full ./classifier_lda
 pickle27	iglesiasg: I do get an error, just trying to make sense of it
@iglesiasg	pickle27: paste the output in pastebin if you want, I can take a look too
@iglesiasg	the more eyes, the better finding errors
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has quit [Quit: Leaving]
 pickle27	iglesiasg: http://pastebin.com/ZafWLLJ0
@iglesiasg	pickle27: did you compile with -g?
 pickle27	iglesiasg: I built using this g++ -g -o lda classifier_lda.cpp -lshogun
 pickle27	oh wait
 pickle27	then I ran the run thing woops
@iglesiasg	what?
 pickle27	I build a new target but ran valgrind on the old one, one sec
@iglesiasg	ok
 pickle27	iglesiasg: I updated the paste, looks error free?
 pickle27	iglesiasg: or maybe not
 pickle27	iglesiasg: yeah it still looks like it isn't running
@iglesiasg	I see the same thing I think
@iglesiasg	is it the same link?
 pickle27	yeah I updated it though, I did build with -g
 pickle27	but it doesn't seem to be 'attaching'
@iglesiasg	nah just open a new pastebin :)
@iglesiasg	I have never tried updating a already published one
@iglesiasg	anyway, it is cheap to open a new one :D
 gsomix	sonney2k, I cannot figured out a more elegant solution that methods in specialized classes.
 pickle27	iglesiasg: http://pastebin.com/TAWZC649
@iglesiasg	pickle27: this doesn't look normal
 gsomix	sonney2k, only automagically cast in swig typemaps.
@iglesiasg	vex amd64->IR: unhandled instruction bytes: 0xC5 0xF9 0x57 0xC0 0xE8 0x73 0x4 0xFF
@iglesiasg	pickle27: it looks like it doesn't compile correctly for your platform
 pickle27	valgrind or the example?
@iglesiasg	pickle27: you got to run this test without trouble before, didn't you?
* gsomix afk
 pickle27	iglesiasg: yeah I can run the example fine right now
@iglesiasg	pickle27: aham, pretty funny indeed
@iglesiasg	let me see your valgrind line
 pickle27	iglesiasg: valgrind --show-reachable=yes --leak-check=full ./lda
@iglesiasg	and ./lda works fine?
 pickle27	I just installed valgrind from apt
 pickle27	yes
@iglesiasg	run it again with -v please
@iglesiasg	I don't think it will give us new info though
 pickle27	iglesiasg: http://pastebin.com/ScJtjNxr
@iglesiasg	pickle27: I don't get it
 pickle27	iglesiasg: looks like it can't get the symbols from shogun and the other libs
@iglesiasg	yeah
@iglesiasg	the strange thing is that it pops up with valgrind
@iglesiasg	pickle27: I am off for dinner now, will be back a bitlater
 pickle27	okay later
@sonney2k	I mean like CLabelFactory::to_binary(CLabels* labels);
 gsomix	sonney2k, ok, got it.
 gsomix	sonney2k, ahhh, I fell into the "overthinking" trap. :)
@sonney2k	pickle27, compile shogun without optimizations (--disable-optimizations)
@iglesiasg	re
@iglesiasg	pickle27: did it get better after removing optimizations?
@sonney2k	lisitsyn, lisitsyn1 - pretty interesting - for others the submissions curve is basically linear
@sonney2k	and I just checked 2011,2012,2013 it is pretty exponential for us
@sonney2k	ohh and we had 'only' 65 submissions in the first year
@iglesiasg	ok, good night guys
-!- iglesiasg [d58f322f@gateway/web/freenode/ip.213.143.50.47] has quit [Quit: Page closed]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 pickle27	I haven't had a chance to check yet
 pickle27	I'll try and get to this later today
-!- nube [~rho@49.244.114.202] has quit [Ping timeout: 256 seconds]
--- Log closed Tue May 07 00:00:34 2013
