--- Log opened Mon May 27 00:00:19 2013
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Kevin Hughes :develop * 7d14502 / src/shogun/multiclass/QDA.cpp: https://github.com/shogun-toolbox/shogun/commit/7d14502376e2cee7d0b2fdcdc0605b51f4802145
 shogun-notifier-	shogun: fixed crash in QDA covar calculation
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * bfae181 / src/shogun/multiclass/QDA.cpp: https://github.com/shogun-toolbox/shogun/commit/bfae18199f8dd2f1e609a4c7faf30a6aa92f02ab
 shogun-notifier-	shogun: Merge pull request #1131 from pickle27/qda
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: fixed crash in QDA covar calculation
-!- travis-ci [~travis-ci@ec2-107-22-28-98.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7519558
-!- travis-ci [~travis-ci@ec2-107-22-28-98.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1166 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1166  blamelist: Kevin Hughes <kevin@kevin-M3920.(none)>
 shogun-buildbot	build #1167 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1167  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 shogun-buildbot	build #408 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/408
-!- nube [~rho@49.244.8.172] has quit [Quit: Leaving.]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 240 seconds]
-!- nube [~rho@116.90.239.3] has joined #shogun
 gsomix	good morning
 gsomix	sonney2k, good. tnx
-!- foulwall [~foulwall@li379-21.members.linode.com] has joined #shogun
-!- gsomix [~gsomix@188.168.2.227] has quit [Quit: Leaving]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun-data: Soeren Sonnenburg :master * ca1d0b6 / testsuite/tests/ (2 files): https://github.com/shogun-toolbox/shogun-data/commit/ca1d0b696150224cc280f9daff612124852d5025
 shogun-notifier-	shogun-data: update qda data
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 363d6c2 / data,tests/integration/python_modular/generator.py: https://github.com/shogun-toolbox/shogun/commit/363d6c273b60f538948589e9ae9b6f9130983f70
 shogun-notifier-	shogun: update data and add director examples to blacklist
@sonney2k	foulwall, good morning!
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 93df87f / src/shogun/statistics/MMDKernelSelectionComb.cpp: https://github.com/shogun-toolbox/shogun/commit/93df87f1f531ab6cb03107092e7d9b740b60595b
 shogun-notifier-	shogun: fix typo in warning msg
 foulwall	sonney2k: morning, I'll have my first final this afternoon.
@sonney2k	foulwall, oh good luck then and lets talk again tomorrow once google sent out the notifications!
@sonney2k	pickle27, I've regenerated the qda integration test data
 foulwall	sonney2k: thanks~
@sonney2k	so finally tests should all pass
@sonney2k	hushell, done with nips paper :D
@sonney2k	oops gtg
 shogun-buildbot	build #876 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/876  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-184-72-84-14.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7525685
-!- travis-ci [~travis-ci@ec2-184-72-84-14.compute-1.amazonaws.com] has left #shogun []
-!- vgorbati [5f6fea63@gateway/web/freenode/ip.95.111.234.99] has joined #shogun
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has joined #shogun
 sonne|work	Re
 hushell	sonney2k: :D not as quick as I expected, but all results are obtained, I am writing introduction ...
 sonne|work	hehe
-!- travis-ci [~travis-ci@ec2-184-72-84-14.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7525713
-!- travis-ci [~travis-ci@ec2-184-72-84-14.compute-1.amazonaws.com] has left #shogun []
 hushell	sonney2k: gsoc starts next week?
 hushell	writing is painful
 sonne|work	hushell: today will be notifications
 sonne|work	of acceptance/reject
 sonne|work	from then on everyone can start but official start is slightly later
 hushell	!!!exciting
 hushell	also nervous!
 shogun-buildbot	build #1168 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1168
 sonne|work	june 17 is the official start - but it sure won't hurt to start before
 hushell	I am expecting for the gsoc for a long time, writing is so boring
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 245 seconds]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- iglesiasg [d58f3247@gateway/web/freenode/ip.213.143.50.71] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- iglesiasg [d58f3247@gateway/web/freenode/ip.213.143.50.71] has quit [Client Quit]
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has joined #shogun
 shogun-buildbot	build #1169 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1169  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- mode/#shogun [+o lisitsyn] by ChanServ
@lisitsyn	ha-ha
@lisitsyn	sonne|work: I am back from no-internet-connection-land!
 sonne|work	lisitsyn: siberia?
 sonne|work	had fun playing with your grizzly bears?
 sonne|work	or whatever you call them up there?
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * d6cb133 / tests/integration/python_modular/generator.py: https://github.com/shogun-toolbox/shogun/commit/d6cb133556c7e82ec4f1641f2fab4dcb5e77cca1
 shogun-notifier-	shogun: fix typo in blacklist
 sonne|work	lisitsyn: anyways just in time to watch the test to go red -> green
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has joined #shogun
 sonne|work	van51: welcome back
 van51	sonne|work: hello
@lisitsyn	sonne|work: no electricity due to some fire :)
-!- travis-ci [~travis-ci@ec2-107-22-28-98.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7527064
-!- travis-ci [~travis-ci@ec2-107-22-28-98.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #877 of cyg1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/877
-!- thoralf [~thoralf@enki.zib.de] has joined #shogun
 thoralf	Good morning
 shogun-buildbot	build #1170 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1170
-!- vgorbati [5f6fea63@gateway/web/freenode/ip.95.111.234.99] has quit [Ping timeout: 250 seconds]
@lisitsyn	sonne|work: did you know ray dassen?
 sonne|work	no
 sonne|work	who was/is he
 sonne|work	?
@lisitsyn	debian developer
@lisitsyn	passed away yesterday
@lisitsyn	oh not yesterday
@lisitsyn	23th
@lisitsyn	sonne|work: http://www.debian.org/News/2013/20130523
 sonne|work	we all die...
 sonne|work	wow around for 19 years in debian
@lisitsyn	yes quite a long period
@lisitsyn	that's I am curious whether he was famous around debianeers
-!- HeikoS [~heiko@nat-191-4.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has left #shogun ["QUIT :Leaving."]
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- lambday [67157d36@gateway/web/freenode/ip.103.21.125.54] has quit [Ping timeout: 250 seconds]
-!- lambday [67157d37@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.55] has joined #shogun
 lambday	HeikoS: hi
@HeikoS	lambday: hi!
 lambday	got your mail
 lambday	I did't understand what you meant by an extension of shogun framework
 lambday	for integrating and testing new algorithms in shogun?
 lambday	as in, in future?
@HeikoS	lambday: A way of generalising independent computation tasks might be very useful for other parts
@HeikoS	take for example CMachine model-selection via grod-search
@HeikoS	this is a stupid algorithm, but it is used by many people
@HeikoS	you basically train/test machines with different parameters
@HeikoS	all these tasks are independent
 lambday	okay
 lambday	hmm
@HeikoS	you we could formulise them as a Task as in the class diagram
@lisitsyn	hah stupid == working HeikoS ;)
@HeikoS	then pass them to an engine that solves them in some way
-!- lambday [67157d37@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.55] has quit [Client Quit]
@HeikoS	lisitsyn: what?
@HeikoS	ah
@HeikoS	well
@lisitsyn	HeikoS: grid search is stupid but it is a working algorithm
@lisitsyn	:)
@HeikoS	lisitsyn: it is a ridiculus thing in my eyes, but what can you do :)
@HeikoS	people just like simple algorithms
@HeikoS	brute force stuff :D
@lisitsyn	HeikoS: but how would you approach it
@lisitsyn	I mean how do you search C then?
@HeikoS	there are many way to do this, all described early 2000s
@HeikoS	similar to the way its done with GPs
@HeikoS	gradient descent on some upper bound of the error
@lisitsyn	well
@lisitsyn	you'd have to have a great API to make that common
@lisitsyn	HeikoS: it is easy to reproduce brute solution
@lisitsyn	and they always work for you
@HeikoS	all true
@HeikoS	but we have this for GPs
@HeikoS	just need to implement some of these error functions
-!- lambday [67157e4e@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.126.78] has joined #shogun
@HeikoS	lisitsyn: sorry I dont want to dizz this stuff, just my thoughts
@lisitsyn	HeikoS: what do you mean? :)
@HeikoS	its already pretty good that we have grid-serach for arbritary machines
@HeikoS	I mean its fine as it is
@lisitsyn	HeikoS: I just wanted to note for stupid engineers like me it is working solution
 lambday	sorry I got disconnected :(
@HeikoS	lambday: no worries
@lisitsyn	I don't give a heck how to approach it else :)
@lisitsyn	probably being stupid is a problem of mine though :D
@HeikoS	haha, I wouldnt agree ;)
@lisitsyn	HeikoS: btw recalling that syntax I was pushing
@lisitsyn	are we still up for it?
@HeikoS	yes totally
@lisitsyn	hmm who could do that then
@HeikoS	lisitsyn:  btw there is also a way of speeding the std-grid search up quite a bit through some statistical tricks
@HeikoS	sonney2k:  pointed this out at some point
@HeikoS	might be nice to have this
@lisitsyn	HeikoS: like MCMC or so?
@HeikoS	no, MCMC and the word speed never go together :D
-!- van51 [~van51@195.251.235.71] has joined #shogun
@lisitsyn	HeikoS: you can't touch this
@HeikoS	haha :)
-!- gsomix [~gsomix@37.61.179.240] has joined #shogun
 gsomix	hello!
@lisitsyn	can't touch this
@lisitsyn	HeikoS: agaaain
@HeikoS	http://blog.mikiobraun.de/2011/12/fast-cross-validation.html
@lisitsyn	whoop
@lisitsyn	ahhh
@lisitsyn	HeikoS: I recall some core-sh*t from NIPS
@lisitsyn	sonne|work told us about it
@lisitsyn	core sets or so
@lisitsyn	I don't recall
@HeikoS	you drop parameters which are statistically significant loosers against others
@lisitsyn	sounds genetic
@lisitsyn	HeikoS: can't touch this
@HeikoS	not really
@lisitsyn	jk
@lisitsyn	:)
@HeikoS	anyway, we should have a look at this at some point
@HeikoS	problem is that its not really parallelisable anymore
 sonne|work	gsomix: finaly a function that is readable :)
@HeikoS	or that to that level
@HeikoS	but other things first
@lisitsyn	HeikoS: I would go for stupid but parallel solution actually
@HeikoS	lisitsyn: having both would be nice
@HeikoS	if you have many cores, go for the  easy, if not, go for the clever
@lisitsyn	our CPUs are fast and our RAM is going infinite :)
 gsomix	sonne|work, horray! I also got yours comments.
@lisitsyn	HeikoS: you can't touch this
@lisitsyn	:D
@lisitsyn	srry
@HeikoS	haha :D
@lisitsyn	HeikoS: this should be an anthem of shogun
@lisitsyn	HeikoS: when you are entering an website
@lisitsyn	you should hearr that
@HeikoS	hehe
@HeikoS	lambday: btw the Task.sove method should better be named .compute()
@lisitsyn	HeikoS: are you going to push that mcmc hammer to shogun?
 lambday	HeikoS: okay, changing
 lambday	:)
@HeikoS	lisitsyn: probably
@HeikoS	we got a name clash unfortunately :)
@HeikoS	have to rename it
@lisitsyn	HeikoS: I am submitting tapkee paper *today* so I am going to join your game with tasks at some point
@lisitsyn	HeikoS: no way, whyyy
@HeikoS	google for it
@HeikoS	mcmc hammer
@lisitsyn	hahah
@HeikoS	lisitsyn: ah shit, I never gave you my comments did I?
@HeikoS	lisitsyn: cool, that would help a lot
@lisitsyn	HeikoS: hmm you did I think
@lisitsyn	I don't remember
@HeikoS	really, good :)
@lisitsyn	anyway nevermind I can't wait much longer :)
@HeikoS	me neither
@HeikoS	ok
 sonne|work	gsomix: you should write a test for this function though
@lisitsyn	I've been working on it for years
@lisitsyn	and now I am 62 and no submission still yet
 sonne|work	gsomix: we have enough ascii files to try :D
@lisitsyn	I had one ascii file somewhere
@lisitsyn	HeikoS: https://twitter.com/Rick_Moyer/status/278641295285698560 LOL
@HeikoS	lambday: could you write a seperate diagram for all the computation task stuff (without the implementations, just base classes)
@HeikoS	lisitsyn:  thats it
@HeikoS	lambday: will help discussions with Sergey
 lambday	HeikoS: okay...you mean, computation task and computation task result classes?
@HeikoS	yeah just those for now, will be a small diagram and you can do this with copy paste
@lisitsyn	can't touch this diagram
 lambday	HeikoS: okay... mailing
 gsomix	sonne|work, really? I need one ~#N GB sized file. :)
@lisitsyn	ohohohoho
@lisitsyn	I recalled
@lisitsyn	wiking: you made random() const!
@lisitsyn	bad bad bad boy
 sonne|work	*lol*
 sonne|work	gsomix: you could use data/asp/Human.dat.bz2
 sonne|work	it is ~80M
@lisitsyn	let us have
@lisitsyn	uint64_t a = random64();
@lisitsyn	uint64_t b = random64();
 sonne|work	err 100M
@lisitsyn	the question is
@lisitsyn	whether a==b
@lisitsyn	I'd say -O3 makes it *true*
 gsomix	sonne|work, ok.
@lisitsyn	okay not really sure but it could
@lisitsyn	sonne|work: ^
 sonne|work	lisitsyn: sorry btu why
@lisitsyn	sonne|work: because it looks like a pure function if it is const
@lisitsyn	why to recompute its value twice if it has no side-effects
@lisitsyn	which cause changing its value
@lisitsyn	that's the meaning of const
 sonne|work	but only inside the CRandom class
@lisitsyn	yes but we have to check
@lisitsyn	compiler is magic
 lambday	HeikoS: just these two base classes? but these contains almost nothing here, their subclasses do
@lisitsyn	random function is not const
 sonne|work	lisitsyn: well tests work so you are wrong
@lisitsyn	it is as mutable as it can be
 sonne|work	but if tests are compiled with -O0 then :)
@lisitsyn	sonne|work: vgorbati told me we have an issue with calling normal only once
@lisitsyn	I didn't check due to blackout
@lisitsyn	and now recalled
@lisitsyn	will check tonight
@HeikoS	lambday: maybe an example of a class that has generate_tasks / aggregate results
 sonne|work	lisitsyn: normal?
@lisitsyn	normal_random I mean
@lisitsyn	sonne|work: anyway it is not const
 sonne|work	hmmhh, we have to move the other gaussian generator from CMath
@HeikoS	lambday: I am sorry, that was asked too quickly. Just leave it for now
 lambday	HeikoS: okay..
@HeikoS	lambday: we will use the full diagram for discussions
@HeikoS	its clearer, you are right
@lisitsyn	const tells me calling this function sequentially twice will return the same value
 lambday	HeikoS: yes its pretty clear when we see this whole picture, and log-det as an example of that
 lambday	this task idea was awesome!! :)
@HeikoS	lambday: lets hope it is possible ;)
 lambday	HeikoS: implementation?
@HeikoS	lambday: as lisitsyn pointed out, there are always difficulties if one wants to write those things in a general way
@lisitsyn	can't touch this
 lambday	HeikoS: but its good to have this general framework, no?
@HeikoS	lambday: yes, it would be very useful
@lisitsyn	lambday: I just mean we can't foresee all the stuff
 lambday	lisitsyn: true that
@lisitsyn	there is a wall right forward actually
@lisitsyn	we are moving to
@lisitsyn	:D
@HeikoS	lisitsyn, lambday: sonne|work pointed out that we can even have a qsub-based implementaton for the engine
 lambday	lisitsyn: all in all its just another brick in the wall, then :P
@lisitsyn	once we crashed into the wall we start refactoring
 lambday	qsub-based implementation?
@lisitsyn	curing our pain in the ass :D
@HeikoS	lambday: yes for qsub based clusters
 lambday	wow!
@lisitsyn	HeikoS: we will become graphlab you have to live with that
@lisitsyn	:D
@HeikoS	lisitsyn: we will be fine! all independent
 lambday	HeikoS: i'll shortly be back.. starving.. gotta eat something... about the work, the picture is quite clear now... what should be the next step? adding all the implementations?
 lambday	HeikoS: and we don't need the linear system class then
@HeikoS	lambday: indeed, only the linear solver, which takes a linear operator and a vector
 lambday	HeikoS: okay..
@HeikoS	lambday: once everything is clear, I would write all the base classes
@HeikoS	to get a feeling whether things actually work
@HeikoS	make sure to start a new feature branch with git-flow
@HeikoS	if those are done, refine class diagram
@HeikoS	then some simple implementations
 lambday	HeikoS: okay..
 lambday	so, it may be good to have a diagram with the base classes only
@HeikoS	lambday: and could you send the current class diagram to lisitsyn?
@HeikoS	lambday: yes, totally
@HeikoS	also without any overhead in the diagram
@HeikoS	just plain classes
@HeikoS	it gets too big otherwise
 lambday	HeikoS: okay..
 lambday	HeikoS: oh I almost forgot... the CRationalApproximationTaskResults inherits from both CIndependentComputationTaskResults and CIndependentComputationTask... I didn't understand this
@lisitsyn	naming reminds me java
@lisitsyn	:D
 lambday	lisitsyn: :D
 lambday	but sounds good and clear
@lisitsyn	let me find the longest class name in my current proj
@lisitsyn	hmm I am not a java programmer
@lisitsyn	the longest is AgentMessagesFactory :(
 sonne|work	lambday: I don't understand what this class does though so the name is not that helpful
 sonne|work	lisitsyn: but I know what you mean :D
 lambday	sonne|work: umm....
@lisitsyn	sonne|work: AbstractBusinessLayerCompositorDecompositorBuilderMasterCollaboratorFactory
@HeikoS	lambday: ehm, that might have been my mistake
 lambday	lisitsyn: whoa! :o
 lambday	HeikoS: hmmm... okay then removing it
@HeikoS	results doesnt inherit from task
 sonne|work	HeikoS: couldn't we use 'Job' ?
@lisitsyn	yes Job is better
 lambday	yes I thought so but wanted to make sure
@HeikoS	sonne|work: yes totally
 sonne|work	it is short
@HeikoS	make it job
@lisitsyn	handjob
@lisitsyn	scnr
@HeikoS	tztz
 lambday	lisitsyn: lol man :D
 sonne|work	lisitsyn: a few hours without power got you in the mood heh?
@HeikoS	lambday: CIndependentJob, but the subclasses dont get the "Independent"
 lambday	HeikoS: okay
 lambday	HeikoS: I'll change it after lunch and mail it back soon.. also adding sample_without_averaging method you told about
@lisitsyn	sonne|work: yes sure!
@HeikoS	lambday: yes, maybe there is also a better name for this :)
@HeikoS	lambday: enjoy your lunch
 lambday	be right back
-!- nube [~rho@116.90.239.3] has quit [Quit: Leaving.]
@lisitsyn	HeikoS: why to have such a class like independent job?
@HeikoS	algorithms can generate them under a unified interface
@HeikoS	computation class can call compute() on the interface
@HeikoS	computation class does not need to worry whats going under underneath
@lisitsyn	HeikoS: may be just a list<Job> dependencies?
@lisitsyn	if it is empty you have no dependencies
@HeikoS	I would like to go without dependencies
@HeikoS	the implementation of the job can still operate on say shared memory
@HeikoS	or serialized files
@HeikoS	but this can be done inside
@HeikoS	for every job
@HeikoS	I have the fear that adding this to the framework might make things complicated
@HeikoS	and it is task-dependent anyways
@HeikoS	lisitsyn: whats your opinion on this?
@HeikoS	how would you formulate dependencies and what would they be?
@lisitsyn	HeikoS: that's the question of this day
@lisitsyn	:D
@lisitsyn	I don't know tbh
@HeikoS	lisitsyn: so an example
@HeikoS	a matrix
@HeikoS	large one
@HeikoS	all jobs need this readonly
@HeikoS	what one could do is to add a pointer to the data to each job
@lisitsyn	HeikoS: I'd go for something generic step by step like read only proxies for these matrices
@HeikoS	why?
@lisitsyn	well that's safe
@HeikoS	if we want to go multiple-machine, we *have* to serialize it anyway
@HeikoS	so every job will load this matrix from disc
@HeikoS	or network
@lisitsyn	oh I can't touch this
@lisitsyn	:D
@HeikoS	and in multicore case, these things have to be read-only
@lisitsyn	sounds like implementing hadoop
@HeikoS	lisitsyn: this is not meant for millions of nodes
@HeikoS	just a few hundred max
@lisitsyn	MR in particular
@HeikoS	so we can rely on the nfs
@lisitsyn	uh uh I don't like doing that at all
@HeikoS	this is not large-scale stuff
@HeikoS	whats the problem (in our context)?
@lisitsyn	I am afraid of NIH
@HeikoS	whats that?
@lisitsyn	never invented here syndrome ;)
@HeikoS	I am not following you
@lisitsyn	I mean we'd rather stick to something supported by anyone else
@lisitsyn	than writing that thing
@HeikoS	still not following ;)
@lisitsyn	HeikoS: I mean doing it with our own serialization etc
@lisitsyn	reproduces what map reduce does
@HeikoS	we are much simpler
@HeikoS	but yes its similar
@HeikoS	so whats the alternative then?
@lisitsyn	may be employ something supported
@lisitsyn	HeikoS: what I am most worried is that we have to support all the stuff
@lisitsyn	we already have no power/will to support all the code we have
@lisitsyn	such IO routines
@lisitsyn	and other infrastructure sounds painful
@HeikoS	agreed, but thats a general problem
@HeikoS	lisitsyn: so the multi-machine stuff is far away
@HeikoS	if this worked for multi-core, it would already be very helpful
@HeikoS	even if the engine is just a single core loop its helpful
@HeikoS	to cast algorithms in terms of these jobs
@HeikoS	since it makes transition easier
@HeikoS	for the log-dets for example
@HeikoS	there is no point in even doing this without this job stuff
@lisitsyn	HeikoS: I can imagine we do that engines stuff
@lisitsyn	but we have to take it really seriously
@HeikoS	sure
@lisitsyn	basically it would become a supported core while algorithms get experimental
@HeikoS	I wouldnt change the existing algorithms for now
@HeikoS	just try to write new ones in that style
@HeikoS	if it works, fine, maybe change existing ones
@HeikoS	if it doesnt (too hard in whatever way), we can just plug in the sequential engine and no problems
@lisitsyn	HeikoS: I have a suggestion
@lisitsyn	once you get with some solution on log-det
@lisitsyn	let lambday change some existing algorithm to new 'paradigm'
@HeikoS	lisitsyn: yes good idea
@lisitsyn	and we will see something
@HeikoS	grid-search maybe
@HeikoS	or even simpler things
@HeikoS	kernel matrix
@HeikoS	one job for a block
@HeikoS	then we wouldnt have to do this ultra messy pthread stuff anymore
@HeikoS	pure horror that thing (at least to me :)
@lisitsyn	HeikoS: well jobs may be pthread powered still
@HeikoS	lisitsyn: yes, but with a central implementation
@lisitsyn	yes
@HeikoS	rather than 100 local once
@HeikoS	ones
@lisitsyn	yes these pthread runners allthrough the code are scary
@lisitsyn	HeikoS: I am quite interested in developing it actually
@HeikoS	lisitsyn: very welcome to do this
@lisitsyn	HeikoS: yeah lets see if I get enough time to join you
@HeikoS	lisitsyn: we dont have time pressure on this
@HeikoS	the log-det will be written in that framework anyway
@HeikoS	engine implementation will be sequential at first
@HeikoS	and if someone has time, we can do cooler things
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@lisitsyn	HeikoS: btw are you done with your nips thing?
@HeikoS	working on it
 lambday	back
 lambday	HeikoS: task looked better than job :(
@HeikoS	why?
 lambday	job is fine though..
 lambday	changed it.. added that method
 lambday	mailing to both of you
@lisitsyn	except to blowjob collision job sounds better
@lisitsyn	hah
 lambday	lisitsyn: I was just about to say - let's hope we don't blow this job :
 lambday	:D
 lambday	lisitsyn: I don't have your email id
 lambday	:(
@lisitsyn	lambday: lisitsyn.s.o@gmail.com
 lambday	lisitsyn: ty
@HeikoS	lambday: looks good, maybe even call aggregate results "reduce_results" or something
 lambday	HeikoS: umm... yes that's more generic name
@HeikoS	looking good apart from that, we could now start writing code for the base classes
@HeikoS	so one more thing that we have to be careful about
@HeikoS	the generic linear operators and operator functions
@HeikoS	I dont really know how we should do this
@HeikoS	shogun does not have the type Complex
@HeikoS	lisitsyn: what do you think on this?
 lambday	std::complex should be fine, no?
@HeikoS	lambday: still
@HeikoS	might be a problem
 lambday	HeikoS: implement complex things for shogun then?
 lambday	but we need complex for only a few parts here
@HeikoS	yes, internally this is fine
@HeikoS	but if we start having complex variables, we might get into trouble
@HeikoS	so I am not sure whether to have a generic CLinearOperator
@HeikoS	or CDenseMatrix
@HeikoS	CComplexDenseMatrix
@HeikoS	etc
@HeikoS	where do the complex values appear?
@HeikoS	only in the matrix of the shifted system right?
 lambday	in the weights and shifts only
 lambday	yes
@HeikoS	so then we could even completely hide this
@HeikoS	and say a linear operator just applies to a real vector
 lambday	and we'll never really use direct solver
 lambday	HeikoS: yes
@HeikoS	so then we could have an implementation CComplexSparseMatrixOperator
@HeikoS	which represents the shifted stuff
@HeikoS	and CSparseMatrixOperator for the other
@HeikoS	then we dont need any generic stuff anywhere
 lambday	umm.. okay then
@HeikoS	sorry for all those changes, just remembered that I made a mental note of this
 lambday	but having a base linear operator class would have been helpful, no?
@HeikoS	we have to try to avoid that any complex numbers are in function interfaces
@HeikoS	lambday: yes, but not generic
 lambday	HeikoS: no problem.. I myself am forgetting so many things
 lambday	HeikoS: only for real, you mean
 lambday	no complex stuff
@HeikoS	lambday: ah sorry
@HeikoS	let me think
@HeikoS	so the abstract base might be generic
@HeikoS	float64, float32 etc
@HeikoS	not complex though
 lambday	cool
@HeikoS	and the sublcass fixes T=float64_t
 lambday	float32_t would be used later?
 lambday	yes... okay
@HeikoS	I dont know
@HeikoS	maybe leave it as it is
@HeikoS	so CLinearOperator<T>
@HeikoS	CoperatorFunction<T>
-!- lambday [67157e4e@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.126.78] has quit [Quit: http://www.kiwiirc.com/ - A hand crafted IRC client]
@HeikoS	and then CRationalApproximation<T=float64_t>
@HeikoS	lisitsyn: what do you think?
@HeikoS	should these things be made available for types other that float64?
@HeikoS	we dont need others
-!- lambday [67157e4e@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.126.78] has joined #shogun
 lambday	HeikoS: sorry I got dc again :( my net connection sucks!
@HeikoS	lambday: see mail, leave the abstract bases generic it should be fine
@HeikoS	lambday: just one more sublety, we should not use SGVector<Complex>
@HeikoS	rather have to SGVector<float64_t> for real and imaginary parts
 lambday	so, array then?
 lambday	okay
 lambday	but that makes it bad to look at :-/
@HeikoS	the Complex type is not supported by shogun, so nothing that can be seen from outside a class should have this type
 lambday	HeikoS: alright... yes
@HeikoS	and linear operators you use all have T=float64_T
@HeikoS	because this is the type of the vector it is applied to
 lambday	implementations?
@HeikoS	ah shit
@HeikoS	so in the shifted system
@HeikoS	we compute the result of (C + i)^(-1) v and then use the imaginary part only or something right?
 lambday	HeikoS: yes
 lambday	after computing the system, only the imaginary part
 lambday	I mean, solving systems
@HeikoS	so actually, the result of the linear operator applied to a vector is complex
 lambday	HeikoS: yep, but we'll take the imaginary part of that
@HeikoS	this is bad
 lambday	:(
@HeikoS	we run in all sorts of issues with that
 lambday	like?
@HeikoS	see, first we set T=float64_t in CRationalApprox
 lambday	yes
@HeikoS	so the type of the base classes will also be like this
 lambday	yes
@HeikoS	which is fine
@HeikoS	since its a real matrix
@HeikoS	ok
 lambday	hmm
@HeikoS	sorry, this works :)
@HeikoS	next thing is
@HeikoS	when the jobs are created
@HeikoS	we create LinearOperators which have to return complex value
@HeikoS	s
 lambday	yes
@HeikoS	and we cannot hide this away
 lambday	cocg_m takes care of that
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
@HeikoS	but then is has a field m_operator where T=Complex
@HeikoS	which we cannot do
 lambday	we don't have to make operator complex
@HeikoS	if it is real valued though
@HeikoS	apply() will return a real valued vector
@HeikoS	am I correct?
 lambday	HeikoS: that's fine, I guess?
 lambday	https://github.com/lambday/KRYLSTAT/blob/master/cocg_m/eigen/eigen_cocg_m.h#L234
@HeikoS	whats that?
 lambday	linear operator applies on real, returns real vector.. in cocg_m
@HeikoS	ah thats in COCG_M
 lambday	that's where we need this apply(), no?
@HeikoS	so this solves a real system and then internally loops over the complex shifts
 lambday	hmm
@HeikoS	yes, should be fine in COCG_M then
@HeikoS	but what about solving all systems seperately
 lambday	HeikoS: that's problematic :-/
 lambday	will we ever use a complex direct solver? that was just for testing purpose, right?
 lambday	testing whether the framework works or not
 lambday	confused :(
@HeikoS	lambday yes, however, a) we still want this and b) also for cg, the matrix you multiply is compelx
@HeikoS	so you get a complex result
@HeikoS	lambday: btw complex direct solvers are no problem
 lambday	hmmm
@HeikoS	the problem is how to store the matrices without adding a new type to shogun
@HeikoS	we can currnetly only have non-complex types
@HeikoS	so the operator applied to a vector cannot return somthing complex
@HeikoS	I see two possible solutions:
@HeikoS	1) add complex type to shogun (extremely messy but possible)
@HeikoS	2) make the complex linear operator operator one vectors where the first half is for real and the second half is for imag. Internally, we can then construct the complex systems. Even more messy
@HeikoS	sonne|work, lisitsyn what do you think about adding a new type complex_t to shogun?
@HeikoS	how much work would that be?
@HeikoS	typemaps, serialisation, lots of lots of switch statements, what else?
 sonne|work	the typedef is just 3 lines. supporting it natively for typemaps etc means writing it for each interface
 sonne|work	all doable
@HeikoS	sonne|work: and feasible? did you ever consider complex types?
@HeikoS	lambday: maybe we should do this first then
 sonne|work	HeikoS: no never needed it but it is not hard to do. however problem is that we might want to limit ourselves to float64_t for complex
 sonne|work	to not have even more types
 lambday	adding complex... hmm
@HeikoS	sonne|work: yes I would also go for complex64_t
@HeikoS	or complex128_t ? I dont know how I would call it
 lambday	HeikoS: by the way, only the complex shifts makes the system complex, right? those are taken care separately in COCG_M, no? apply only applies the real matrix part - or may be I misunderstood
 lambday	:(
 sonne|work	HeikoS: 64_t
@HeikoS	lambday: you are right
@HeikoS	for COCG_M it is fine
@HeikoS	but what if we want to solve all systems seperately?
 lambday	HeikoS: got your point
@HeikoS	then we need a cg solver for a complex system
 lambday	yes
@HeikoS	lambday: but since I would like to see this included (one can precondition each system seperately and gain speed)
@HeikoS	we have to think about it
@HeikoS	lambday: but lets start with the COCG_M
@HeikoS	the other one only makes sense once we have a cluster implementation
 lambday	HeikoS: what have we decided regarding the complex then?
 lambday	add to shogun, or use separate vectors for real and imag
@HeikoS	lambday: haha, sorry for all the confusion :)
@HeikoS	so we will add complex64_t to shogun
@HeikoS	but later
@HeikoS	once COCG_M works, we can work on this
 lambday	HeikoS: no problem :D
 lambday	HeikoS: no I mean, even for COCG_M, we need shift vectors
 lambday	which are complex
@HeikoS	lambday, right
@HeikoS	hmm
@HeikoS	so: either two float64_t vectors and you construct the complex numbers internally
@HeikoS	or add the complex64_t now
@HeikoS	if we go the first way, we have to change it later
@HeikoS	but it might be easier for now
 lambday	now is better :D cause handling all real and imag in arithmatic operation will be deadly :(
@HeikoS	lambday: you can just construct a vector of std::complex internally
@HeikoS	just hide it to the outside world
@HeikoS	so no problem
@HeikoS	and easy to change later
 lambday	like the one I did in elliptic curve functions? or you mean, no typedef at all
 lambday	oh that's not for vector
 lambday	here we need vectors - sorry :(
@lisitsyn	HeikoS: uh a lot
@HeikoS	lambday: this needs to be changed later
@HeikoS	as said, we cannot have Real or Complex in any interface, only shogun types
@HeikoS	otherwise we need to hide those to the modular/static interfaces
@HeikoS	ah they are high precision anyway
@HeikoS	so we need to hide them
@HeikoS	they can stay as they are
@HeikoS	lambday: okay, lets add the complex64_t now. Then this discussion is over
 lambday	HeikoS: okay
 lambday	then we can have SGVector<complex64_t>
@HeikoS	yep
 lambday	cool
 lambday	:)
@lisitsyn	HeikoS: recalling porn things your project is really deep penetration
@HeikoS	lisitsyn: good stuff :)
@HeikoS	lambday: have  a look into the type stuff
@HeikoS	its a bit messy but should be possible
@lisitsyn	HeikoS: I didn't follow your conversation sorry - are there unanswered questions?
 lambday	HeikoS: okay, I'm checking
@HeikoS	lisitsyn: solution to all of them: we will add complex64_t to shogun,
 lambday	where do we define this types in shogun?
-!- vgorbati [~anonymous@77.47.132.39] has joined #shogun
@HeikoS	lambday:  common.h
 lambday	so, we need to add typedef std::complex<float64_t> complex64_t
@HeikoS	lambday: and DataType.h
@HeikoS	lambday: yes first thing
@HeikoS	then the new SG primitive tye
@HeikoS	which might cause problems
@HeikoS	add to your todo list: serialization, modular typemaps, check all switch over ptype
 lambday	I need to understand how the existing ones work first :(
@HeikoS	lambday: yes, take your time
@HeikoS	so we have this shogun type object
@HeikoS	TSGDataType
 lambday	hmm
 lambday	add it to primitive type, right?
@HeikoS	contains primitive type, container type(vector,matrix), struct type (string,sparse)
@HeikoS	yes
 lambday	hmmm
@HeikoS	TSGDataType is used by shogun parameter framework to represent things
@HeikoS	for example for serialisation, model-selection, equals method
@HeikoS	one has to register parameters with the SG_ADD macro
@HeikoS	which calls m_parameters->add of the current object
@HeikoS	in there, we need new methods for complex
@HeikoS	should be a few
@HeikoS	in the same style as the existing ones
@HeikoS	then we have to check serialisation
@HeikoS	which writes types to files
@HeikoS	then modular maps which map the type the the type of the language (eg python complex)
@HeikoS	lambday: browse through the code a bit, take your time
 lambday	HeikoS: yes... and by new methods, we'll be needing all the operators, right?
@HeikoS	I will have lunch now and have to do some work afterwards, but will be around during the day, so ask if anything uclear
 lambday	overloaded
@HeikoS	lambday: what do you mean by new operator?
-!- vgorbati [~anonymous@77.47.132.39] has quit [Ping timeout: 256 seconds]
@HeikoS	+ - * += etc?
 lambday	yes yes
@HeikoS	we get that from std::complex dont we?
 lambday	yes
 lambday	okay so nothing to do for that in shogun
@HeikoS	no thats all fine
@HeikoS	its very easy to add the type
@HeikoS	a bit more work to support it properly :)
@HeikoS	man, I realise that I type way too much :)
@HeikoS	so will get lunch now, see you in a  bit
 lambday	HeikoS: hmm.. I'm checking.. :)
 lambday	HeikoS: lol I do that too
 lambday	not here though cause most of the time I'm confused :D
 lambday	yes have lunch
 lambday	see you :)
 lambday	i too am going for some tea
 lambday	be right back
@HeikoS	chai :)
 lambday	HeikoS: yes garam chai :D
 lambday	garam=hot
 lambday	ciao :)
-!- nube [~rho@49.244.111.24] has joined #shogun
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has quit [Ping timeout: 250 seconds]
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- van51 [~van51@195.251.235.71] has quit [Quit: Leaving.]
@HeikoS	lambday:  back
-!- foulwall [~foulwall@li379-21.members.linode.com] has quit [Ping timeout: 256 seconds]
-!- foulwall_ [~foulwall@2001:da8:215:503:4907:15c7:758:7cf5] has joined #shogun
-!- foulwall_ [~foulwall@2001:da8:215:503:4907:15c7:758:7cf5] has quit [Remote host closed the connection]
-!- foulwall [~foulwall@li379-21.members.linode.com] has joined #shogun
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has quit [Quit: Page closed]
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has joined #shogun
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- zxtx [~zv@ool-457e751d.dyn.optonline.net] has quit [Ping timeout: 248 seconds]
-!- zxtx [~zv@ool-457e751d.dyn.optonline.net] has joined #shogun
-!- goldbug [~goldbug@global-2-1.nat.csx.cam.ac.uk] has joined #shogun
 lambday	HeikoS: back
-!- goldbug [~goldbug@global-2-1.nat.csx.cam.ac.uk] has quit [Ping timeout: 240 seconds]
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has quit [Quit: Leaving.]
-!- gsomix [~gsomix@37.61.179.240] has quit [Quit: Leaving]
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has joined #shogun
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has quit [Ping timeout: 250 seconds]
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has joined #shogun
-!- foulwall [~foulwall@li379-21.members.linode.com] has quit [Remote host closed the connection]
@sonney2k	van51, around?
 van51	sonney2k: yea
 van51	but on a skype call atm
@sonney2k	van51, ahh k
@sonney2k	van51, once you are free please say so :)
@sonney2k	shogun-buildbot, force build nightly_default
 shogun-buildbot	build forced [ETA 53m10s]
 shogun-buildbot	I'll give a shout when the build finishes
@sonney2k	hushell, have a look at http://shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1170/steps/compile%20python_modular/logs/warnings%20%2817%29
-!- foulwall [~foulwall@2001:da8:215:c252:addf:5916:dba8:873b] has joined #shogun
@sonney2k	hushell, there still are some warnings in MulticlassOneVsRestStrategy that you might want to fix
@sonney2k	foulwall, so how did it go? superhero?
 pickle27	sonney2k: I saw that the test failed thats the same result I got on my system, for some reason there are 2 differences in the classification with the Eigen3 QDA
 pickle27	it passes the synthetic test though
 foulwall	sonney2k: not bad~
@sonney2k	pickle27, which tests fail?
@sonney2k	foulwall, congrats then!
 foulwall	sonney2k: thanks, I can do some work tonight~~
@sonney2k	foulwall, when do you have your next exam?
 pickle27	the python modular one on the fm_train_real.dat has a slightly different output
 pickle27	sonney2k: but the unit test I wrote passes
@sonney2k	pickle27, compared to?
 foulwall	sonney2k: 1 month later, 3 exams left
 pickle27	sonney2k: the unit test is synthetic perfectly separated data and it is tested on the training input
@sonney2k	pickle27, I don't see anything that fails https://travis-ci.org/shogun-toolbox/shogun
@sonney2k	http://shogun-toolbox.org/buildbot/waterfall
 pickle27	the python example is on real data and doesn't produce 100 percent results the old and new version just make 2 different mistakes
@sonney2k	foulwall, ok nice!
 pickle27	it was on the build bot
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 819f7de / src/shogun/mathematics/Random.h: https://github.com/shogun-toolbox/shogun/commit/819f7de7bb608a8d057e9ac6a6567cba6a392066
 shogun-notifier-	shogun: add some documentation to the random() functions
 pickle27	sonney2k: http://shogun-toolbox.org/buildbot/builders/nightly_default/builds/408/steps/test/logs/stdio
@sonney2k	pickle27, ohh but this is from last night where everything was still kaboom
@sonney2k	pickle27, the current one is the python_modular one and it is happy
 pickle27	sonney2k: huh okay great
@sonney2k	pickle27, so just do you performance tests - and let the buildbot do its work :D
 pickle27	sonney2k: right you wanted a benchmark
@sonney2k	foulwall, what I consider most important is to get the structure of the demo's right
 pickle27	sonney2k: you want between lapack and the new version?
@sonney2k	foulwall, I mean general enough such that we don't have much code duplication
@sonney2k	pickle27, yeah and in general
 pickle27	sonney2k: okay!
 foulwall	sonney2k: I'm also worrying about that
@sonney2k	pickle27, I think we should provide benchmarks for each and every example in shogun but hey
 pickle27	sonney2k: yeah I'll put the results in a comment block
@sonney2k	foulwall, so for data it is pretty clear: it can come from a number of sources like artificially generated (datagenerator class, could be loaded from a file or input by the user via just clicks)
 foulwall	sonney2k: I'll have a try? seperate the demos into modules and reuse them
@sonney2k	then we have the coordinate system for drawing points - that is shared for everything
@sonney2k	and then the task specific machines, e.g. regression machines, binary classifiers, multiclass classifiers
@sonney2k	clustering (each one is rather specific...)
@sonney2k	then dimension reduction (aka converters - we can use lisitsyn's example there)
 van51	sonney2k: ok, I'm free now
@sonney2k	and then some illustrations for kernels, distances, loss, preprocessors, evaluations
@sonney2k	foulwall, if we get the structure right adding one more method is like writing 5-10 lines
 foulwall	sonney2k: ok~~ I'll rewrite the structures for reuse.
@sonney2k	foulwall, or make a plan and discuss it before doing the actual work
@sonney2k	van51, we have to talk later I have to leave the train now
@sonney2k	hope you will be around in the evening
 van51	sonney2k: I'll be around for 2-3 more hours for sure
 van51	and then by night again
 foulwall	sonney2k: so just give me some time and let me come up with a plan.
 foulwall	sonney2k: the exams are easy to deal, I'll start work for 6 hours/day from tomorrow if i'm accepted.
 shogun-buildbot	build #878 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/878  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has quit [Ping timeout: 250 seconds]
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 shogun-buildbot	build #409 of nightly_default is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/409
-!- lambday [67157e4e@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.126.78] has quit [Quit: http://www.kiwiirc.com/ - A hand crafted IRC client]
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has joined #shogun
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has quit [Client Quit]
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has joined #shogun
-!- lisitsyn [~lisitsin@mxs.kg.ru] has left #shogun []
-!- vgorbati [d4029f22@gateway/web/freenode/ip.212.2.159.34] has joined #shogun
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has quit [Quit: Leaving]
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has joined #shogun
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has quit [Client Quit]
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has joined #shogun
-!- vgorbati_ [d4029f22@gateway/web/freenode/ip.212.2.159.34] has joined #shogun
-!- lisitsyn [~blackburn@188.168.13.232] has joined #shogun
-!- vgorbati [d4029f22@gateway/web/freenode/ip.212.2.159.34] has quit [Ping timeout: 250 seconds]
 lisitsyn	ahaha forgot *both* my room keys and notebook AC adapter
-!- vgorbati_ is now known as vgorbati
 lisitsyn	I am probably with you gsocers tonight
 lisitsyn	not*
 lisitsyn	not with you :D
-!- vgorbati [d4029f22@gateway/web/freenode/ip.212.2.159.34] has quit [Ping timeout: 250 seconds]
@sonney2k	lisitsyn, poor guy!
 lisitsyn	sonney2k: yes I got a bad luck
@sonney2k	I am probably too dead to stay awake long :/
 lisitsyn	sonney2k: in an hour
@sonney2k	accumulated lack of sleep
@sonney2k	no idea if I survive that long
 lisitsyn	my battery won't survive for sure
@sonney2k	HeikoS, around?
@HeikoS	sonney2k:  yes
@sonney2k	HeikoS, it seems to be more problematic to organize rooms for the hands-on workshop at TU
@HeikoS	okay?
@HeikoS	TUB is so big, how can that be?
@sonney2k	maybe we should try to sit at c-base
 lisitsyn	lets sit at tiergarten!
 lisitsyn	with vodka!
@sonney2k	HeikoS, it is lots of stuff like they want money, each participant by name
@sonney2k	etc etc
@HeikoS	annoying
@HeikoS	and now?
@HeikoS	c-base?
@HeikoS	did you ask them?
 lisitsyn	tiergarten!
 lisitsyn	:D
@HeikoS	haha :D :)
 lisitsyn	I've never been to tiergarten
 lisitsyn	is it nice?
 lisitsyn	alright I've never been ANYWHER
 lisitsyn	:D
@HeikoS	Germany? Europe? NotRussia(tm)? :D
@sonney2k	HeikoS, no I am planning to though. I guess the group will be downsized quite a bit anyway on the post-official workshop day
 lisitsyn	HeikoS: never been anywhere abroad
@HeikoS	sonney2k: in that case, should be fine
@HeikoS	if cbase agrees
@iglesiasg	how many applicants for the workshop this far?
@sonney2k	I should have done the shogun & gsoc thing back when I was in academia. then one could have done the post conference sprints
@HeikoS	well thats life :)
@sonney2k	HeikoS, there are other suitable spots in berlin - star bucks in the worst case :D
@HeikoS	haha :d please not
@sonney2k	I will ask around
@sonney2k	HeikoS, I mean places like http://hackerspaces.org/wiki/Berlin
@sonney2k	Raumfahrtagentur would be something fancy too :D
@HeikoS	yes, that sounds cool
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has quit [Quit: Page closed]
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has quit [Quit: Leaving.]
@sonney2k	HeikoS, the big issue really is that I am away on that day so that makes it difficult
@HeikoS	I see
@HeikoS	so we should set beforehand right
 lisitsyn	batterryyyyy dyyyying
@HeikoS	then ask cbase first and then we will see
@HeikoS	lisitsyn: bye :)
 lisitsyn	I am alive yeet
 lisitsyn	noooo
-!- lisitsyn [~blackburn@188.168.13.232] has quit [Quit: Leaving.]
@sonney2k	HeikoS, we should really think about spending some money on gsoc'ers maybe some can join
@HeikoS	the new ones?
@HeikoS	would be cool
@HeikoS	but might be expensive
@HeikoS	for the non-europeans
@sonney2k	yeah :/
-!- goldbug [~goldbug@global-1-26.nat.csx.cam.ac.uk] has quit [Ping timeout: 245 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- deerishi [c649b206@gateway/web/freenode/ip.198.73.178.6] has joined #shogun
-!- lambday [67157e4f@gateway/web/freenode/ip.103.21.126.79] has joined #shogun
 lambday	HeikoS: hi...
@sonney2k	ohh man I really have to sleep now everyone relax. those of you that get accepted for gsoc - congrats. for those of you that didn't get in this year. don't take it personally we have 8 slots (which is a lot in gsoc terms) but had >50 students applying. if you are still interested in working with us we certainly would be more than happy to work with you too.
@sonney2k	and if you want to know more about our decision process (why you did / did not get in) ask me personally
-!- gsomix [~gsomix@185.6.239.144] has joined #shogun
 gsomix	good evening
 hushell	sonney2k: I should check these warning msg myself :( I'll fix it quickly
-!- iglesiasg [d58f32c1@gateway/web/freenode/ip.213.143.50.193] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	congrats to everyone accepted!
 gsomix	sonney2k, sonne|work hey. just got mail. thanks!
 hushell	cong!!! guys
-!- gsomix is now known as lisitsyn
 lisitsyn	iglesiasg, hushell, votjakovr, lambday, foulwall, pickle27  congrats
@iglesiasg	thanks lisitsyn! :)
 pickle27	lisitsyn: thanks!
 foulwall	thanks lisitsyn
 votjakovr	lisitsyn: thanks :)
 lisitsyn	you all have done a great work pre-season
 hushell	thank you! lisitsyn
 lisitsyn	iglesiasg, hushell, votjakovr, lambday, foulwall, pickle27 let us have a meeting later - we will let you know
@iglesiasg	sure, nice idea
 lisitsyn	if you are curious who is the 8th one it is van51
 lisitsyn	I am sorry to have no student this year
 lisitsyn	but that's how we vote
 pickle27	thats awesome, I'mm really looking forward to it!
@iglesiasg	lisitsyn: I am sorry too :(
 pickle27	lisitsyn: aren't I working with you?
@iglesiasg	lisitsyn: but then you will have more time to co-mentor me :)
 lisitsyn	pickle27, yes sure I'll will review your code
@iglesiasg	and the others too
 lisitsyn	pickle27, but I would have to learn BSS just like you :)
 pickle27	lisitsyn: ah right you were co-mentor or something for me too
 lisitsyn	I know about dimension reduction a bit more
 pickle27	lisitsyn: me too!
 lisitsyn	we really hope that the most of you are here to stay
 lisitsyn	that's really important for us to have guys like iglesiasg
 pickle27	lisitsyn: yeah I deffs hope to stick around!
 lisitsyn	anyway we are going to have a dense summer
 lisitsyn	we will schedule a meeting one of next days
 hushell	really happy to working with you guys!
@iglesiasg	definetely, lot of new and cool stuff coming up
 pickle27	yeah let me know about the meeting!
-!- deerishi [c649b206@gateway/web/freenode/ip.198.73.178.6] has quit [Quit: Page closed]
 pickle27	I am going to be at a conference for a few days so email might be more reliable but I'll try and be on IRC too
 lisitsyn	pickle27, yeah that
 lisitsyn	that's for sure
 lisitsyn	guys about some rules
 lisitsyn	once we start
 lisitsyn	you will have to send a weekly report
 lisitsyn	say monday or so
 lisitsyn	I'd like to note that we have to make it mandatory
 lisitsyn	there you would have just to say what you have done last week and what do you plan to do next week
 lisitsyn	just to clarify - if you had some issues and had no time - it is still muuuch better to send a report about that
 lisitsyn	iglesiasg, hushell, votjakovr, lambday, foulwall, pickle27 alright? :)
@iglesiasg	lisitsyn: of course
 foulwall	lisitsyn: gotcha
 hushell	sure, that's the way I'd like to schedule myself
 lisitsyn	we will have a few meetings through the summer
 lisitsyn	near milestones
 lisitsyn	so we will have one in next days
 lisitsyn	then once we started
 lisitsyn	then mid-term
 lisitsyn	then final meeting
 foulwall	lisitsyn: ok
 lisitsyn	there we can discuss what we are heading to
 lisitsyn	iglesiasg, hushell, votjakovr, lambday, foulwall, pickle27 do you guys have any questions?
 foulwall	lisitsyn: ok
 hushell	I am good
@iglesiasg	lisitsyn: yep, are we going to stick to IRC for these meetings this year or use something more interactive like google hangout?
 pickle27	yeah that sounds good!
 lisitsyn	iglesiasg, I don
 lisitsyn	t know
 lisitsyn	what others think
@iglesiasg	ok
 pickle27	might be cool to do one hangout but IRC is probably easier for regular meetings
@iglesiasg	let's see what sonne|work, sonney2k thinks too
@iglesiasg	I agree with pickle27
 lisitsyn	yeah he will have some opinion on that for sure
 lisitsyn	alright
 hushell	let everybody talk also a great idea
 lisitsyn	will pass gsomix's notebook to gsomix back then :)
 lisitsyn	congrats again guys
-!- lisitsyn is now known as gsomix
 gsomix	spirit of lisitsyn. huh
 gsomix	so, congrats too
 pickle27	thanks!
 foulwall	go sleeping now, it's 3:xx am here... too late, thanks to all my friends, cu
 pickle27	alright guys I am out for now too, talk to you later!
-!- pickle27 [~kevin@rcv3-lab-pc.ee.queensu.ca] has quit [Quit: Leaving]
-!- goldbug [~goldbug@global-2-11.nat.csx.cam.ac.uk] has joined #shogun
-!- goldbug [~goldbug@global-2-11.nat.csx.cam.ac.uk] has quit [Client Quit]
-!- goldbug [~goldbug@global-2-11.nat.csx.cam.ac.uk] has joined #shogun
-!- vgorbati [d4029f22@gateway/web/freenode/ip.212.2.159.34] has joined #shogun
 hushell	good nite
-!- lambday [67157e4f@gateway/web/freenode/ip.103.21.126.79] has quit [Ping timeout: 250 seconds]
-!- lambday [67157e4f@gateway/web/freenode/ip.103.21.126.79] has joined #shogun
-!- lambday [67157e4f@gateway/web/freenode/ip.103.21.126.79] has quit [Client Quit]
-!- goldbug [~goldbug@global-2-11.nat.csx.cam.ac.uk] has quit [Ping timeout: 252 seconds]
-!- lambday [67157e4f@gateway/web/freenode/ip.103.21.126.79] has joined #shogun
 lambday	guys, I had an urgent sysad job in my lab :( missed the chat
 lambday	checking the log
-!- goldbug [~goldbug@global-2-11.nat.csx.cam.ac.uk] has joined #shogun
 gsomix	nite
 lambday	night
 lambday	:)
-!- vgorbati [d4029f22@gateway/web/freenode/ip.212.2.159.34] has quit [Ping timeout: 250 seconds]
-!- goldbug [~goldbug@global-2-11.nat.csx.cam.ac.uk] has quit [Quit: Leaving]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has quit [Quit: Leaving]
-!- lambday [67157e4f@gateway/web/freenode/ip.103.21.126.79] has quit [Ping timeout: 250 seconds]
--- Log closed Tue May 28 00:00:20 2013
