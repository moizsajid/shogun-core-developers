--- Log opened Fri Aug 09 00:00:01 2013
--- Day changed Fri Aug 09 2013
@sonney2k	HeikoS, we need to decide where to put the notebooks though
@wiking	sonney2k: google... i have no idea
 shogun-buildbot	build #1689 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1689  blamelist: Soeren Sonnenburg <sonne@debian.org>
@HeikoS	sonney2k: have a dir on the website where they are pasted
@HeikoS	sonney2k: and then we autogenerate a html site with a list?
 lisitsyn	sonney2k: I once removed my source code being in a wrong directory
@sonney2k	lisitsyn, yeah that is what I am afraid of
 lisitsyn	sonney2k: we can use something hybrid
@sonney2k	I do too many context switches so it is rather likely to happen
 lisitsyn	makefile + CMake
@sonney2k	HeikoS, yeah and where do we put it on the website?
 lisitsyn	so calling make calls cmake
 lisitsyn	and make clean cleans cmake
@wiking	sonney2k: i think if u remove CMakeCache.txt
@wiking	that's good enough
-!- travis-ci [~travis-ci@ec2-54-211-42-245.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10004386
-!- travis-ci [~travis-ci@ec2-54-211-42-245.compute-1.amazonaws.com] has left #shogun []
@HeikoS	sonney2k: ah I see
@HeikoS	sonney documentation/tutorial
@sonney2k	HeikoS, or documentation/examples?
@HeikoS	sonney2k: yep
@HeikoS	sonney2k: I would like to activate file and line for WARNINGS and ERROR by default, do you agree?
@HeikoS	sonney2k: could you send me the scanned version of the signatures of the foundation?
@sonney2k	HeikoS, or the other thing (function?)
@HeikoS	sonney2k: what?
@HeikoS	sonney2k: see my PR
@HeikoS	I think its good for users
@HeikoS	to know from which file/class things come from
 shogun-notifier-	shogun-data: Soeren Sonnenburg :master * 8024808 / toy/ (4 files): https://github.com/shogun-toolbox/shogun-data/commit/80248082fd7db96f7b65eb5581d049811c7440e2
 shogun-notifier-	shogun-data: byte data was stored as float - really save as byte data now
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 873e32d / data: https://github.com/shogun-toolbox/shogun/commit/873e32d8e6b1d716e70f6ebd6275988b64799966
 shogun-notifier-	shogun: require fixed byte data
@sonney2k	HeikoS, just do it
 shogun-notifier-	shogun: Heiko Strathmann :develop * 103e071 / src/shogun/io/SGIO.cpp: https://github.com/shogun-toolbox/shogun/commit/103e071d3ca619e28fc45b48c04df3f0cf6630b7
 shogun-notifier-	shogun: warnings and worse always show file and line number
 shogun-notifier-	shogun: Heiko Strathmann :develop * 01641bc / src/shogun/io/SGIO.cpp: https://github.com/shogun-toolbox/shogun/commit/01641bc25e64efa28296b6b5ab7b0c9ad5b3f49a
 shogun-notifier-	shogun: error and warning always print file and line
 shogun-notifier-	shogun: Heiko Strathmann :develop * 72e0ba8 / src/shogun/io/SGIO.cpp: https://github.com/shogun-toolbox/shogun/commit/72e0ba80db9409e30a7cb6ac452893e21216c0b8
 shogun-notifier-	shogun: Merge pull request #1382 from karlnapf/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: always line and file for errors and warnings
 shogun-buildbot	build #1692 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1692  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@sonney2k	wiking, one more question - why do we need such new superlu?
@iglesiasg	ok guys
@iglesiasg	good night!
 lisitsyn	we don't need superlu at all :D
@sonney2k	oops it is late
 lisitsyn	I don't use it anymore
@wiking	sonney2k: ?
 shogun-buildbot	build #1693 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1693  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Soeren Sonnenburg <sonne@debian.org>
@sonney2k	wiking: -- Performing Test SUPERLU_MIN_VERSION_4_3
@sonney2k	-- Performing Test SUPERLU_MIN_VERSION_4_3 - Failed
@sonney2k	so why that?
-!- iglesiasg [~Fernando@s83-179-44-135.cust.tele2.se] has quit [Quit: Leaving]
@sonney2k	wiking, and I guess sth changed w/ unit tests? Generating base/clone_unittest.cc
@sonney2k	Traceback (most recent call last):
@sonney2k	  File "base/clone_unittest.cc.py", line 82, in <module>
@sonney2k	    output_file = sys.argv[2]
@sonney2k	IndexError: list index out of range
@sonney2k	make[1]: *** [base/clone_unittest.cc] Error 1
@sonney2k	wiking, I guess that is fixed once converting to cmake?
@wiking	dunno
@wiking	sonney2k: yes
@wiking	sonney2k: it's done
@wiking	sonney2k: i mean it's done with cmake
@wiking	sonney2k: cmake -DENABLE_TESTING=ON ../
@wiking	make
@wiking	ctest --output-on-failure
@wiking	and there u go
@sonney2k	wiking, well it still worked with 0e037a1968fa5a5b09259e3e8cf83c560c1aa0dc
@wiking	sonney2k: ?
@sonney2k	alright too late I have to sleep too
@HeikoS	sonney2k:  good night
@wiking	sonney2k: what did u wanted here actually: https://github.com/shogun-toolbox/shogun/blob/4daf5ee2f5d470bbd70cfaf5cd29d9c39472ad5a/examples/undocumented/python_modular/kernel_linear_byte_modular.py
@wiking	as u removed from tools.load import LoadMatrix
@wiking	but not
@wiking	 lm=LoadMatrix()
@wiking	ohfuckme
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10004895
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has left #shogun []
@wiking	versionheader change -> rebuild whole libshogun :(
@wiking	doh this needs fixing
@HeikoS	wiking, lisitsyn, please have a look at the doc sprint application
@HeikoS	update your details etc
@HeikoS	thoralf: nice job with your patch! :)
@wiking	HeikoS: The difference between sample and -1.67990517588 is 0.25253461607449879, which exceeds 1e-1, where
@wiking	sample evaluates to -1.4273705598055013,
@wiking	inferencemethod....
@wiking	-1.67990517588 evaluates to -1.6799051758800001, and
@wiking	1e-1 evaluates to 0.10000000000000001.
@HeikoS	wiking: ah thats my test right?
@wiking	y
 shogun-buildbot	build #1691 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1691  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
@HeikoS	wiking:
@HeikoS	Generating base/clone_unittest.cc Traceback (most recent call last):   File "base/clone_unittest.cc.py", line 82, in <module>     output_file = sys.argv[2] IndexError: list index out of range make[1]: Leaving directory `/home/buildbot/slaves/shogun-slave3/deb1_-_libshogun/build/tests/unit' make: Leaving directory `/home/buildbot/slaves/shogun-slave3/deb1_-_libshogun/build/src' make[1]: *** [base/clone_unittest.cc] Error 1 make: *** [unit-tests] Error 2 progra
@wiking	yeyey ye
@wiking	not using the right command
@wiking	it should be ctest --output-on-failure instead of make unit-tests
@wiking	but of course i can fix it if it's reeeallly necessary
@wiking	but it's ancient code :P
 shogun-notifier-	shogun: Heiko Strathmann :develop * b935813 / tests/unit/machine/gp/InferenceMethod_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/b9358130353c1e3285cb5157e1ce4a199a1448c8
 shogun-notifier-	shogun: lowered accuracy to avoid failing tests
 shogun-notifier-	shogun: Heiko Strathmann :develop * e7834bd / tests/unit/machine/gp/InferenceMethod_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/e7834bd6514ec43247e2eec80e6f32a5cf3d754c
 shogun-notifier-	shogun: lower once more to be sure :)
 shogun-notifier-	shogun: Heiko Strathmann :develop * ed77532 / tests/unit/machine/gp/InferenceMethod_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/ed775328555fbc874451924cb7691e00f3ec724b
 shogun-notifier-	shogun: Merge pull request #1383 from karlnapf/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: lower unit test accuracy in GP log-ml sampler
-!- HeikoS [~heiko@90.204.166.211] has left #shogun []
@wiking	cool thnx
 shogun-buildbot	build #1694 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1694  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #1696 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1696  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- travis-ci [~travis-ci@ec2-54-224-126-10.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10006348
-!- travis-ci [~travis-ci@ec2-54-224-126-10.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :develop * a8013be / examples/undocumented/python_modular/kernel_linear_byte_modular.py: https://github.com/shogun-toolbox/shogun/commit/a8013bea1b520120fba90da8ded86b9991993c4c
 shogun-notifier-	shogun: Switch kernel_linear_byte_modular.py example to use CSVFile reader
 shogun-buildbot	build #1697 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1697  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- hushell [~hushell@8-92.ptpg.oregonstate.edu] has joined #shogun
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10006364
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1695 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1695  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- hushell [~hushell@8-92.ptpg.oregonstate.edu] has quit [Ping timeout: 264 seconds]
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10008027
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-224-126-10.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10008502
-!- travis-ci [~travis-ci@ec2-54-224-126-10.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #483 of nightly_default is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/483
 shogun-buildbot	build #418 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/418
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :develop * 2086f20 / .travis.yml: https://github.com/shogun-toolbox/shogun/commit/2086f20a52db08488aaca8407af83698e4e61b13
 shogun-notifier-	shogun: travis: add octave modular job to allowed to failed
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10008502
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1698 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1698  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- gsomix [~gsomix@109.169.185.159] has joined #shogun
 gsomix	good morning
-!- gsomix [~gsomix@109.169.185.159] has quit [Read error: Connection timed out]
-!- gsomix [~gsomix@109.169.185.159] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * a68dbe4 / examples/undocumented/python_modular/kernel_linear_byte_modular.py: https://github.com/shogun-toolbox/shogun/commit/a68dbe4200136b5ff3d9463123b410c47da3e69e
 shogun-notifier-	shogun: convert byte example to CSVFile
@sonney2k	wiking, how can one avoid a full libshogun rebuild? put the const's only in Version.cpp?
 shogun-buildbot	build #1699 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1699  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	wiking, how can I specify I want -O0 ?
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 3ec0181 / src/shogun/ (5 files): https://github.com/shogun-toolbox/shogun/commit/3ec01815727ad96c6bb7e2a385bf9172c304bd85
 shogun-notifier-	shogun: move lib/versionstring.h include over to .cpp files to avoid full recompile
 shogun-notifier-	shogun: when version changes (git pull...)
@wiking	:>
@wiking	just woke up
@wiking	sonney2k: dunno
@wiking	i have to test
@wiking	https://github.com/shogun-toolbox/shogun/commit/3ec01815727ad96c6bb7e2a385bf9172c304bd85
@wiking	isnt solving it....
@wiking	imho the solution will be in the cmakefile...
 sonne|work	wiking: why not?
@wiking	dunno
 sonne|work	wiking: it is nowhere used in the headers any longer
@wiking	yes but it wasnt about that.... ever "P
 sonne|work	wiking: so it will just link again
 sonne|work	wiking: I mean the old Makefile.template is gone then right?
@wiking	version header generation is a make target
@wiking	and libshogun depends on this target
@wiking	hence i think if the target is 'rebuilt' that triggers the dependent target to be rebuild again
@wiking	i have to figure it out
 sonne|work	wiking: ohh so we have 2 reasons
 sonne|work	wiking: sure it must
@wiking	but we need to run the versionheader target
 sonne|work	wiking: but it shouldn't rebuild
@wiking	everytime
 sonne|work	wiking: but just compile
@wiking	since we cannot assure that things hasn't changed
 sonne|work	err compile lib/Version.cpp
@wiking	yeah i have to checkit
@wiking	but first i have to wake up
@wiking	and get a coffee
 sonne|work	heh
@wiking	btw travis was green after a looooong time finally: build 1736
@wiking	(i moved octave into allowed to fail mode)
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@wiking	iglesiasg: morning... travis went green \o/
@iglesiasg	wiking, awesome!
@iglesiasg	I haven't seen what was that made fail the fisher example
@iglesiasg	will have a quick look soon
@iglesiasg	wiking, btw, write in the google docs where do you live or would be coming from to the doc sprint
@wiking	iglesiasg: it's fixed...
@wiking	iglesiasg: yeah i have to read/edit that but first need to fix a cmake shit...
@iglesiasg	wiking, all right
@iglesiasg	wiking, just want to have a look, out of curiosity, even if it is fixed ;)
 sonne|work	iglesiasg: it was a long double function missing
@iglesiasg	aham I see
@wiking	iglesiasg: it was the problem with not detection the libm functions...
 sonne|work	iglesiasg: wow! the proposal heiko wrote is pretty good already!
@iglesiasg	yeah!
-!- travis-ci [~travis-ci@ec2-54-211-42-245.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10015654
-!- travis-ci [~travis-ci@ec2-54-211-42-245.compute-1.amazonaws.com] has left #shogun []
@wiking	sonne|work: i've just tested now... seems your fix actually did the job... only
@wiking	[  1%] Building CXX object src/shogun/CMakeFiles/shogun.dir/base/class_list.cpp.o
@wiking	[  1%] Building CXX object src/shogun/CMakeFiles/shogun.dir/base/Version.cpp.o
@wiking	are rebuilt...
@wiking	and of course stuff are relinked
@wiking	but that's all...
@wiking	cool
 sonne|work	wiking: yeah exactly
 sonne|work	wiking: why is class_list rebuilt?
@wiking	heh good question
 shogun-buildbot	build #1700 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1700  blamelist: Soeren Sonnenburg <sonne@debian.org>
@wiking	sonne|work: btw on the buildbots: the right way to build would be as on travis
@wiking	for configure: mkdir build && cd build && cmake -DENABLE_TESTING=ON -DBUNDLE_EIGEN=ON -DBUNDLE_JSON=ON ..
@wiking	compile: make
@wiking	test: ctest --output-on-failure
@wiking	sonne|work: u can test that on the fbsd bot
@wiking	sonne|work: it has cmake
 sonne|work	wiking: I don't have access from work
@wiking	ah :S
@wiking	then i guess later tonight
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has quit [Quit: Leaving.]
 thoralf	Hey.
@iglesiasg	hello hello
 sonne|work	wiking: what I was desperately missing is to totally disable gcc optimization flags - btw did you disable optimization flags when compiling the modular interfaces? Otherwise this really takes 3 times longer
 sonne|work	thoralf: hey - is your PR ready to be merged now?
 thoralf	sonne|work: I think it is - but Heiko wants me to change ASSERT to REQUIRE.
 thoralf	sonne|work: Can't do that today, maybe monday.
 thoralf	Sorry.
 sonne|work	yeah it is nice to have a reasonable error message
 sonne|work	thoralf: np
@iglesiasg	wiking, getting a cmake problem here
@iglesiasg	-- Found CCache: /usr/bin/ccache
@iglesiasg	/usr/bin/ccache: invalid option -- 'd'
@wiking	iglesiasg: pastebin it
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
@wiking	sonne|work: what flags exactly do u mean?
@iglesiasg	wiking, http://pastebin.com/Np7sWdax
 sonne|work	wiking: -O0 no tuning
@wiking	sonne|work: for swig generated cxx?
 sonne|work	wiking: what we had with --disable-optimization . Otherwise compile time is too tough
 thoralf	sonne|work: Preparing a PR from my local patches is quite a lot of work - so it's always a bit annoying doing shogun-housekeeping, too.
 sonne|work	wiking: well one is for libshogun and interfaces
 thoralf	sonne|work: I can continue sending PRs, but I've to take care that its not exceeding my capacities.
@wiking	sonne|work: currently the only optimization flag u have is -mtune=native...
 sonne|work	thoralf: I cannot follow sorry
 sonne|work	wiking: well use -march=native and -O9 or 3
 sonne|work	wiking: but not for compiling modular interfaces!
@wiking	sonne|work: no i have notspecified -O9 or 3 anywhere
 sonne|work	wiking: ohh you have to otherwise optimization is off
@wiking	sonne|work: yes
@wiking	well start editing the cmake file :)
@wiking	just make sure you do it for the right target
@wiking	i.e. Debug or Release
 thoralf	sonne|work: Ehrm.  I've been moving code around - most of the assertions have been there already.  A bit annoying to do the migration from ASSERT to REQUIRE.
@wiking	iglesiasg: wtf...
 sonne|work	thoralf: ahh ok well then we can merge it :D
@wiking	iglesiasg: what ht efuck is invalid option -- 'd'
 sonne|work	thoralf: but please do the require too it is like 10 mins work I guess
 sonne|work	thoralf: I mean do it later but do it
@iglesiasg	wiking, is it passed to ccache?
@wiking	well it seems but why and what i dont get it
 shogun-notifier-	shogun: Thoralf Klein :develop * ea623c7 / src/shogun/lib/SGSparseVector.cpp: https://github.com/shogun-toolbox/shogun/commit/ea623c72aa56571c637d378e665f4203fb5afab1
 shogun-notifier-	shogun: Bounds checking for dense_dot on sparse vectors (if vec is smaller than largest feature_index).
 shogun-notifier-	shogun: Thoralf Klein :develop * eead651 / src/shogun/features/SparseFeatures.cpp: https://github.com/shogun-toolbox/shogun/commit/eead651c088acd9d180105f59649146a9efbb9c6
 shogun-notifier-	shogun: Removed code duplication in CSparseFeatures<ST>::dense_dot: forwarding call to SGSparseVector<ST>::dense_dot
 shogun-notifier-	shogun: Thoralf Klein :develop * 768a187 / src/shogun/lib/ (3 files): https://github.com/shogun-toolbox/shogun/commit/768a18721d7ef2201bb46e6362a24573d51ec336
 shogun-notifier-	shogun: Moved sort_features() from SGSparseMatrix to SGSparseVector.  Fixed ASSERT to allow duplicate feature ids.
 shogun-notifier-	shogun: Thoralf Klein :develop * da5891c / src/shogun/lib/SGSparseVector.cpp,tests/unit/lib/SGSparseVector_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/da5891ce17410d0284c57a7b84e489ba3e43b3a1
 shogun-notifier-	shogun: SGSparseVector::sort_features() compresses duplicate features; wrote basic unit tests for sort_features().
 shogun-notifier-	shogun: Thoralf Klein :develop * b629081 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/b629081c749789a4b96374e4c9df4110a3fcff10
 shogun-notifier-	shogun: Moved get_feature(index) from SGSparseFeatures to SGSparseVector.  Added unit-tests to fix behaviour on duplicate entries.
 shogun-notifier-	shogun: Thoralf Klein :develop * f128965 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/f12896518117741b4066cfc95e83aaa97a1e7fcc
 shogun-notifier-	shogun: Moved get_dense() from SGSparseFeatures to SGSparseVector.  Added unit-tests to fix behaviour.
 shogun-notifier-	shogun: Thoralf Klein :develop * 9b4d950 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/9b4d95003f482f05a4754c1c729bbab6ec9e3f90
 shogun-notifier-	shogun: Added get_num_dimension() and parameter-less get_dense() to SGSparseVector.  Added unit tests.
 shogun-notifier-	shogun: Thoralf Klein :develop * b115168 / src/shogun/features/SparseFeatures.cpp,src/shogun/lib/SGSparseVector.cpp: https://github.com/shogun-toolbox/shogun/commit/b115168c673b6bb74ae97f6b4bc7fc02279ea7bd
 shogun-notifier-	shogun: Fixed formatting issues.
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * eab098f / / (5 files): https://github.com/shogun-toolbox/shogun/commit/eab098fe15e337a38be73ee5eda19450c50ecb86
 shogun-notifier-	shogun: Merge pull request #1380 from tklein23/sparse_fixes
@wiking	can u add a line to your ./CMakeLiss.txt: to line 23: MESSAGE(${CMAKE_CXX_COMPILER_ARG1}) MESSAGE(${CMAKE_CXX_COMPILER})
@wiking	and rerun cmake
@iglesiasg	wiking, sure
 thoralf	sonne|work: Okay, so it's only REQUIRE(condition, "format string", *arguments)?
 sonne|work	thoralf: yes
 thoralf	sonne|work: for instance: REQUIRE(num>=0 && num<get_num_vectors(), "get_feature(num=%d,index=%d): num exceeds [0;%d]\n", num, index, get_num_vectors());
 thoralf	sonne|work: Too verbose?
 sonne|work	thoralf: no perfect
@iglesiasg	wiking, I am sorry, I think I am doing something wrong. Parse error.  Expected a newline, got identifier with text "MESSAGE".
@iglesiasg	all right
@wiking	iglesiasg: indeed u r doing it wrong
@wiking	git diff
@iglesiasg	it had to be in a couple of lines
@wiking	and show me wtf
@iglesiasg	MESSAGE
@iglesiasg	MESSAGE
@iglesiasg	/usr/bin/c++
@iglesiasg	/usr/bin/ccache
@iglesiasg	that this what we get with those messages
@wiking	mmm and where does then that fucking d comes fomr? :)
 shogun-buildbot	build #1701 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1701  blamelist: Thoralf Klein <thoralf.klein@zib.de>
@wiking	do the same for CMAKE_C_COMPILER and CMAKE_C_COMPILER
@wiking	CMAKE_C_COMPILER_ARG1
@wiking	and CMAKE_C_FLAGS CMAKE_CXX_FLAGS
@wiking	if doesn't help then -DENABLE_CCACHE=OFF
@wiking	;)
@wiking	i have no idea
@wiking	where do u get that d
 shogun-buildbot	build #1703 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1703  blamelist: Soeren Sonnenburg <sonne@debian.org>, Thoralf Klein <thoralf.klein@zib.de>
@iglesiasg	wiking, flags are empty in both cases
@wiking	lol
@wiking	i'm sorry man
@wiking	htis is weird
@iglesiasg	I can just deactivate ccache
@wiking	but it would be great to figure out why
@wiking	sonne|work: ok so DEBUG = -O2 RELASE = -O9?
@wiking	any other flags u would like?
@wiking	-Wall -Wno-unused-parameter -Wformat -Wformat-security -Wparentheses -Wshadow -Wno-unknown-pragmas -Wno-deprecated
@wiking	?
@wiking	-O9 -fexpensive-optimizations\ -frerun-cse-after-loop -fcse-follow-jumps -finline-functions -fschedule-insns2\ -fthread-jumps -fforce-addr -fstrength-reduce -funroll-loops -mfpmath=sse
@wiking	for release ^?
@wiking	and i guess u want '-g' always
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10017342
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has left #shogun []
@wiking	hahah this merge was killing it all
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
@wiking	 lisitsyn i think i've found the solution for the dyn generated src list
 lisitsyn	wiking: !
 lisitsyn	how?
@wiking	lisitsyn: almost like the case of versionstring.h
@wiking	lisitsyn: i just don't know how to pass back a variable
@wiking	lisitsyn: if we do openmp, then swig should have those flags as well? :)
 lisitsyn	wiking: do you think so?
 lisitsyn	I don't know
 lisitsyn	it won't hurt anyway though
@wiking	i have no idea
@wiking	lisitsyn: so if we compile libshogun with c++11
@wiking	do we have to have the SWIG compiled with c++11 as well?
 lisitsyn	wiking: good question
 lisitsyn	I hope no but they changed ABI or so
 lisitsyn	so it could get us some problems
@wiking	i mean now i'm doing it
@wiking	but hten sometimes i cannot have c++11
 lisitsyn	wiking: where are you located now?
@wiking	as swig is not fully c++11 ready
 lisitsyn	croatia?
@wiking	lisitsyn: yep
 lisitsyn	zagreb?
@wiking	oh shit today i have to read/write
@wiking	lisitsyn: yes
 sonne|work	wiking: debug = -O0 and yes all the warning flags please
 lisitsyn	wiking: just to fill in this docsprint application
 sonne|work	wiking: yes and always -g
@wiking	sonne|work: debug -O0 not -O2?
@wiking	sonne|work: at least in past it was -O0
 lisitsyn	debug is -O0 for sure
@wiking	i mean -O2
@wiking	COMP_DEFAULT_OPTS="$COMP_WARNINGS -O2"
@wiking	this was in ./configure
 lisitsyn	really/
 lisitsyn	?
 lisitsyn	ehmhemhem
@wiking	yes
 lisitsyn	why :D
@wiking	dunno but ok
@wiking	i mean if no -O is set
@wiking	then it's -O0 by default
 lisitsyn	yes
@wiking	as it is now...
 lisitsyn	O2 is already optimizing out functions
@wiking	then i just have to fix the RELEASE flags...
 lisitsyn	so I'd prefer O0
 sonne|work	wiking: no -O3 by default?
@wiking	sonne|work: the old ./configure was like this
@wiking	COMP_DEFAULT_OPTS="$COMP_WARNINGS -O2"
@wiking	COMP_NO_OPTS="$COMP_WARNINGS -O0"
@wiking	cmake is now by default building Debug mode
@wiking	the only flag was now still missing is -g
@wiking	but i'm fixing that now
 sonne|work	wiking: we had 3 modes
 sonne|work	wiking: 1) no optimization at all -> -O0 for all
 sonne|work	wiking: 2) tune to the max -> -O9 -march=native for libshogun and -O0 for modular interfaces
 shogun-buildbot	build #1702 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1702  blamelist: Thoralf Klein <thoralf.klein@zib.de>
 sonne|work	wiking: 3) portable optimizations (as in shipped by debian) -> -O2 for libshogun -O0 for modular
 sonne|work	wiking: please make 2) the default since that is what *users* compiling shogun want
@wiking	sonne|work: so
@wiking	sonne|work: distribution build type?
 sonne|work	what?
@wiking	well we can have
@wiking	build types: debug, release, distribution
@wiking	debug = no optimization -O0
@wiking	release = -O9 -march=native
 sonne|work	yes that is what we usually use for developers
@wiking	distribution = -O2
 sonne|work	debug I mean
 sonne|work	yes perfect
@wiking	and the default build type is debug
@wiking	ok setting it up
@wiking	sonne|work: distribution: -march=native ?
@wiking	aaah you mean we should build release
@wiking	ok
@wiking	sonne|work: -g always i guess
 sonne|work	wiking: yes?
@wiking	sonne|work: -march=native for 3) (distribution) ?
@wiking	oerror: invalid value '9' in '-O9'
@wiking	:DDD
@wiking	oh yeah
@wiking	       -O0 -O1 -O2 -Os -Oz -O3 -O4
@wiking	for clang ;)
 lisitsyn	wiking: just O3
 lisitsyn	I have no idea what is O9
@wiking	yeah
 lisitsyn	I guess that's something like quantum computing optimization
@wiking	it'll b -IO3
 lisitsyn	in they year 2153
@wiking	O3
 lisitsyn	wiking: O4 is dangerous like a mine field
 lisitsyn	it kabooms the kaboom
@wiking	ok testing O3
@wiking	but i guess on travis we want to build in Debug mode :P
 sonne|work	wiking: well what we ship to users is what we should test :)
@wiking	sonne|work: ok
@wiking	somebody fix the last merge error
 sonne|work	thoralf: ^ any clues for https://travis-ci.org/shogun-toolbox/shogun/jobs/10017343 ?
@wiking	sonne|work: these were not used for swig cxx: -Wall -Wno-unused-parameter -Wformat -Wformat-security -Wparentheses -Wshadow -Wno-unknown-pragmas -Wno-deprecated
@wiking	sonne|work: do we want them?
-!- van51 [~van51@ppp-94-66-52-171.home.otenet.gr] has joined #shogun
-!- hoijui [~hoijui@adsl-84-227-37-53.adslplus.ch] has joined #shogun
 sonne|work	wiking: maybe not sure. put them in and we check later
 sonne|work	van51: morning!
-!- HeikoS [~heiko@nat-163-6.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 van51	sonne|work: morning!
 van51	sonne|work: I was grabbing a bite :)
 van51	sonne|work: I think that PR is good to merge
 van51	sonne|work: I ran the lang detection example last night and it did quite well
 van51	sonne|work: now I would like to make a dataset of small senteces to compare results  w/ and w/o quadratic
 van51	sonne|work: and then turn it into a demo
-!- hoijui [~hoijui@adsl-84-227-37-53.adslplus.ch] has quit [Quit: Leaving]
 sonne|work	van51: quite well == ?
 van51	sonne|work: it had like 99.99% accuracy on large documents and I just typed a few small sentences that it didn't miss
 van51	sonne|work: and the training time took ~2200 secs on 30k docs
 sonne|work	van51: that was for large documents right?
 van51	sonne|work: yea
 thoralf	sonne|work: I'll check.
 van51	sonne|work: well they 're not enormous either :P just an average wiki article
 sonne|work	van51: alright then create smaller snippets and try again
 thoralf	sonne|work: Sorry for the delay; meeting.
@HeikoS	sonne|work, lisitsyn, wiking, iglesias please more tuning of the proposal! Want to submit soon
 sonne|work	van51: well you could take say just say 5-50 words
 lisitsyn	HeikoS: yeah going through it
@HeikoS	sonne|work, lisitsyn, wiking, iglesias I have the feeling that if we send it too late, they might decide before weekend
@HeikoS	leaving us out
@HeikoS	so lets send it ASAP
@HeikoS	best thing is if they have in in their mailbox friday morning
@HeikoS	which is soon
@HeikoS	sonne|work, lisitsyn, wiking, iglesias what do you think if we push some individuals to apply for SHOGUN?
@HeikoS	like thoralf, or kevin?
 sonne|work	HeikoS: you mean thoralf and who else?
 thoralf	sonne|work: The break happened because I switched from SGVector<T> dense(0) to dense().
@HeikoS	sonne|work: pickle blogs a lot about shogun and does cool stuff
 sonne|work	thoralf: errm ok then use dense(0) (wtf?!?)
@HeikoS	dont know
 sonne|work	HeikoS: well or even lambday
@HeikoS	I think if there are some individuals applying our chances get batter
@HeikoS	yeah
@HeikoS	sonne|work: but that might be a bit difficult
@HeikoS	sonne|work: do you think its a good idea?
 sonne|work	butter batter better yes
@HeikoS	thoralf: interested is applying to the doc sprint?
 thoralf	HeikoS: What's this?
@HeikoS	sonne|work: Ill write to the mailing list maybe?
@wiking	HeikoS: gimme access for vigsterkr@gm
 thoralf	HeikoS: Sorry, didn't follow your thread.
@HeikoS	thoralf: getting together for three days in the US and write a book on shogzun
 thoralf	HeikoS: I'm in. ;)
@HeikoS	thoralf: so we apply as an organization, but individuals may also apply
@HeikoS	and we think that this might help
@HeikoS	thoralf: sent you an email
 sonne|work	HeikoS: well they would need to apply by end of today right?
@HeikoS	wiking: shared
@HeikoS	sonne|work: the thing is: its friday, I guess they will decide today
@HeikoS	so better earlier (for our big one=)
@HeikoS	I will submit in 3hrs
@HeikoS	so please everyone tune tune tune :)
@HeikoS	got to do some work  now see you later
 sonne|work	HeikoS: no they won't decide today
 sonne|work	HeikoS: I guess not before 1 week
 sonne|work	HeikoS: but still deadlines are deadlines
@HeikoS	ok
@HeikoS	sonne|work: Ill write an email to the mailing list to push individual users to apply
@HeikoS	sonne|work, thoralf: see mail on shogun-list
-!- van51 [~van51@ppp-94-66-52-171.home.otenet.gr] has quit [Quit: Leaving.]
@iglesiasg	wiking, hello hello
@iglesiasg	wiking, I am getting this when doing ccmake
@iglesiasg	Your compiler cannot expand a variadic template parameter into a fixed-length argument list.
@wiking	iglesiasg: this should have been fixed
@iglesiasg	It doesn't look like an error though
@wiking	iglesiasg: ah ok no it's not an error
@iglesiasg	wiking, should I worry about it?
@wiking	iglesiasg:
@wiking	    # to avoid problems with variadic template handling in gcc 4.6.3
@wiking	    # with -std=c++0x mode in gmock-matchers.h
@wiking	    # error: unimplemented: cannot expand 'Tail ...' into a fixed-length argument list
@wiking	    # TODO: check if there's a version
@wiking	so your compiler doesn't support c++11 but c++0x
@wiking	but c++0x will cause some troubles with gmock
@wiking	(see the variadic template parameter thingy)
@wiking	hence c++0x is not enabled
@wiking	nothing to worry about
@iglesiasg	ok
@wiking	thoralf: you did the sparsevector stuff?
 thoralf	wiking: Yes, why?
@wiking	if yes then in SGSparseVector.cpp:230
@wiking	why: SGVector<T> dense;
@wiking	i mean SGVector<T> dense();
@wiking	why is the () there?
 thoralf	wiking: Does it hurt?
@wiking	uyes
@wiking	it kills the compiler ;)
 thoralf	I just replaced it by (0)
 thoralf	wiking: That's all?
 thoralf	Puh.
 thoralf	Thanks.
@wiking	why not SGVector<T> dense;
@wiking	?
@wiking	it'll call SGVector<T> () ctor
 thoralf	wiking: Didn't know there's a difference between dense() and dense.
@wiking	ok i'll finish this and then commit the patch
@wiking	so dont send a PR for this
 thoralf	wiking: Ehrm.  I just prepared a PR containing this and a few other fixes. ;)
@wiking	thoralf: ok then send it
@wiking	and after that i'll send my stuff
 thoralf	PR is out.
 thoralf	HeikoS: It contains your annoying REQUIRE-thing. ;)
@HeikoS	thoralf: thanks!
@HeikoS	thoralf: I know annyoing but very helpful for users, as they otherwise only see assertion failed
@HeikoS	thoralf: could you change one more thing? We have an 80 characters per line style
 thoralf	wiking: Can you explain the difference between "SGVector<T> dense()" and "SGVector<T> dense"?
 thoralf	HeikoS: Ey!
@HeikoS	thoralf: ? :)
 thoralf	HeikoS: I was just moving code, so the assertions were not mine.  I fixed it on your behalf and now it's too long?
 thoralf	No! ;)
 thoralf	striking!
@HeikoS	thoralf: Well then just keep it in mind next time
@HeikoS	its easy, just press enter ;)
 thoralf	HeikoS: I will. ;)
@HeikoS	but thanks for the patch
@HeikoS	very good stuff!
@HeikoS	thoralf: dont blame me just trying to keep code clean
 thoralf	HeikoS: Yeah, it's okay.
 thoralf	HeikoS: I wish there would be a kind of indent-style to apply before committing.
@HeikoS	thoralf: thats why we need the doc camp :) shogun developer guidelines :)
 thoralf	HeikoS: Or code sniffer.
 thoralf	Yah.
 thoralf	Yeah.
@HeikoS	thoralf: I have that set up for eclipse btw
@HeikoS	doesnt work with  macros though
@HeikoS	but for other code things,
 thoralf	HeikoS: Which style did you choose?
@HeikoS	just press ctrl-shift-f
@HeikoS	there are things in some readme that I obey
@HeikoS	such as the 80 char limit
@HeikoS	spaces, newlines etc
 thoralf	HeikoS: I'm switching between eclipse and command-line, escpecially for remote editing.
@HeikoS	thoralf: yeah for remote emacs is cool, or vim
@HeikoS	but my fingers go on strike when I use them :)
 thoralf	HeikoS: My laptop has only 2 cores, my workstation 8.  So it's better to compile and check remote. :)
@HeikoS	thoralf: did you get the email on shogun-list about the doc sprint?
 thoralf	HeikoS: Yes, I did.
@HeikoS	thoralf: ha! indeed :) btw use cmake, compiling is done with ccache automagically
 thoralf	HeikoS: How to use this?
@HeikoS	wiking sent an email
@HeikoS	shogun with cmake is the subject
@HeikoS	its easy
@HeikoS	create dir
@HeikoS	run cmake with your options
@HeikoS	typ emake
@wiking	didin't get anything
@HeikoS	wiking: no mail on the shogun-list?
@wiking	ah ok ... not talking to me
@HeikoS	wiking: ah :)
 thoralf	sites google tells me "You need permission"
@iglesiasg	yes, it says that for me too
@iglesiasg	btw, why is it we lost the green in travis already? :(
 thoralf	HeikoS: Ah, it's new.  Didn't read that one yet.
@wiking	iglesiasg: hehhe wrong ctor by thoralf
@wiking	thoralf: where's the PR?
 thoralf	https://github.com/shogun-toolbox/shogun/pull/1384
@iglesiasg	it is not the new PR though
@iglesiasg	something was already bad before
@wiking	iglesiasg: diagonal shit
@wiking	in the unit test
 thoralf	wiking: Damn.  I broke my unit tests.
@wiking	or at least it was that before
 thoralf	It's always the same: "One quick PR and I'm done"
 thoralf	Never thinking that again. (Or kill me)
@wiking	thoralf:
@wiking	[  FAILED  ] HashedDocDotFeaturesTest.computed_features_test
@wiking	[  FAILED  ] HashedDocDotFeaturesTest.dense_dot_test
@wiking	[  FAILED  ] SparseFeaturesTest.subset_get_full_feature_vector_identity
@wiking	[  FAILED  ] SparseFeaturesTest.subset_get_full_feature_vector_permutation
@wiking	[  FAILED  ] SparseFeaturesTest.subset_get_full_feature_vector_smaller
@wiking	PLEASE COMPILE AND TEST YOUR PRs *BEFORE* sending even the PR
@wiking	it's just waste of compile time ...
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@wiking	becuase now we got that shit merged
@wiking	it's going to break all other ppl's PR broken
@wiking	and it's again where we were yesterday
 thoralf	wiking: Do you think I don't know that?
@wiking	where the travis output was not reliable
 thoralf	Seriously, I'm sorry.
@wiking	thoralf: making sure that u know
@wiking	;)
@wiking	it took me like weeks to get that travis into a working shape with cmake
@wiking	so that finally we can go on green
@iglesiasg	we should also stop merging stuff that doesn't pass travis
@wiking	ok let's fix the unit test
@iglesiasg	I mean it is not only responsible the person who does the PR
@wiking	iglesiasg: yes
 thoralf	FITCInferenceMethod.get_cholesky
 thoralf	*** Error in `./shogun-unit-test': free(): invalid pointer: 0x0000000001fb52c0 ***
@wiking	iglesiasg: but it was a catch 22 i think in this PR case
 thoralf	Unit tests are broken.
@wiking	iglesiasg: because the PR was sent before cmake marge
@wiking	iglesiasg: so the output of travis was unreliable
@iglesiasg	wiking, aah ok I see
@wiking	and even with the rebuild of travis build
@iglesiasg	I thought it was because of the new pull requests that got merged recently
@wiking	would fail as cmake wasn't even in yet
@iglesiasg	I mean I looked at this
@iglesiasg	https://travis-ci.org/shogun-toolbox/shogun/builds
@wiking	iglesiasg: yeah but that PR got in before cmake merge
@wiking	so there's nothing we could have done about it
@iglesiasg	aaham all right!
@wiking	thoralf: afaik not... :))
@wiking	thoralf: make clean the unit tests
@wiking	usually some shit got stuck in with the old unit test way
@wiking	and that caused horrible segfaults
 thoralf	File "base/clone_unittest.cc.py", line 82, in <module>: output_file = sys.argv[2]
 thoralf	IndexError: list index out of range
 thoralf	when running "make" in tests/unit/
@iglesiasg	wiking, I found some trouble compiling with test enabled. I guess it is because I should give the path to gmock and/or gtest somewhere?
 thoralf	problems when running "base/clone_unittest.cc.py base/clone_unittest.cc.jinja2" - any idea?
 thoralf	IndexError: list index out of range
@iglesiasg	thoralf, not really actually
@iglesiasg	do you know if that happens generating the unit tests for clone? afterwards actually running them?
 thoralf	iglesiasg: No, I think generating is failing.
 thoralf	iglesiasg: Since the py script is failing and the clone tests donn't exist yet.
@iglesiasg	thoralf, that looks funny indeed then. No idea why would that depend on the machine where it runs
@wiking	iglesiasg: no
@iglesiasg	wiking, why then?
@wiking	thoralf: what r u using? i guess not cmake
@wiking	iglesiasg: what was the error
@iglesiasg	wiking, let me show you
 thoralf	wiking: make
@iglesiasg	wiking, http://pastebin.com/wcqmNYtn
 thoralf	wiking: Your last commit on clone_unittest introduced new parameters, but you didn't change the Makefile?
@wiking	thoralf: yes bcau makefile is deprecated
@wiking	iglesiasg: lolface
@wiking	iglesiasg: let's do this this way
 thoralf	wiking: How to run the unit-tests then?
@iglesiasg	wiking, is cmake downloading gtest or something?
@iglesiasg	wiking, I had it in /usr/src and now I see onw in /usr/include
@wiking	iglesiasg: yes and it doesn't care abou tit
@HeikoS	wiking, lisitsyn we really should have a readme on this :)
 lisitsyn	HeikoS: I'll modify it rather soon
@wiking	HeikoS: i told to lisitsyn
@iglesiasg	this is not even 24h old guys, it is normal that these problems arise :)
@wiking	iglesiasg: ^ pull this version.
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :develop * 356d031 / / (6 files): https://github.com/shogun-toolbox/shogun/commit/356d03174f91784d73b26dd91c4fc2ad90845902
 shogun-notifier-	shogun: Add CTestConfig and add Release, Debug and Distribution CFLAGS
 shogun-notifier-	shogun: set CMAKE_BUILD_TYPE to Release by default
@wiking	i mean this
@iglesiasg	wiking, all right
@wiking	and then
@wiking	rm -rf build
@iglesiasg	wiking, rm -rf build
@wiking	yep
@wiking	mkdir build
@iglesiasg	hehe read your mind :P
@wiking	cd build
@wiking	cmake -DBUILD_DASHBOARD_REPORTS=ON <and whatever other flags u r using for cmake> ..
@wiking	and then NOT 'make' but
@wiking	ctest -D Experimental -j2 (or as many jobs u r usually using for building)
@wiking	and then wait
@wiking	until it compiles and runs the whole thing
@wiking	i'll get the output myself ;)
@iglesiasg	ok
@wiking	thoralf: you can quickfix this by adding to tests/unit/Makefile line 57
@wiking	instead of @$(PYTHON) $@.py $@.jinja2
@wiking	@$(PYTHON) $@.py $@.jinja2 ../../src/shogun/base/class_list.cpp
@wiking	so append there ../../src/shogun/base/class_list.cpp
@wiking	and u should be fine
@iglesiasg	wiking, it is on progress already
 thoralf	wiking: Thanks.
@wiking	iglesiasg: yeah it'll take a whiel as it compiles and stuff
@wiking	iglesiasg: but it's writing you the ... stuff right?
@iglesiasg	wiking, all right
@iglesiasg	wiking, yes
@wiking	cool
@wiking	so then just wait
@iglesiasg	lot of lines with lot of points and then Size numberK
@wiking	i should get an email once it uploaded the reports
@wiking	yes yes that's it
@iglesiasg	this is neat
 thoralf	wiking: There's still another parameter missing.
@wiking	thoralf: ?
 thoralf	class_list_file = sys.argv[3]
 thoralf	You told me output_file = sys.argv[2]
@wiking	ah fuck
@wiking	forgot that one
 shogun-buildbot	build #1704 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1704  blamelist: Viktor Gal <viktor.gal@maeth.com>
@wiking	@$(PYTHON) $@.py $@.jinja2 $@ ../../src/shogun/base/class_list.cpp
@wiking	liek that
@wiking	man eigen 3.1.2 is like shadowing everything in shogun
 thoralf	wiking: jinja2.exceptions.TemplateNotFound: base/clone_unittest.cc.jinja2
 thoralf	wiking: But: 874 Jul 24 17:28 base/clone_unittest.cc.jinja2
 thoralf	The file exists.
@wiking	thoralf: where are u running the make for the unit tests?
 thoralf	tests/unit
@wiking	mmm
@wiking	interesting
@wiking	thoralf: ahahahha i know
@wiking	the script
@wiking	base/clone_unittest.cc.py:60
@wiking	    templateLoader = jinja2.FileSystemLoader(searchpath="/")
@wiking	should be     templateLoader = jinja2.FileSystemLoader(searchpath="/")
@wiking	i mean ./ instead of /
@wiking	so relative path instead of full path
 thoralf	wiking: Man, you should test your stuff before committing! :D
@wiking	thoralf: ...
@wiking	thoralf: use cmake
@wiking	none of this would be a problem
@wiking	neither the segfault of the unit test
@wiking	iglesiasg: still running?
@iglesiasg	wiking, yep
@iglesiasg	wiking, there is a line with some !!!! instead of ...., worrying?
@wiking	mmm yeah i guess so :))) but lets see what's going to be the output
@wiking	afaik !! stands for error
-!- gsomix [~gsomix@109.169.185.159] has quit [Ping timeout: 260 seconds]
@wiking	and * is warning or something like this
@wiking	it's written there
 thoralf	wiking: I was all integrated into my eclipse and working... since your mail is <24h away, I hadn't time to read and adapt.
 thoralf	I know, not your fault. ;)
@wiking	thoralf: cmake -G Eclipse
 thoralf	But you at least could have said that the old make will be deprecated on the next git pull.
@wiking	and have fun
-!- gsomix [~gsomix@109.169.185.159] has joined #shogun
@wiking	thoralf:
@wiking	Eclipse CDT4 - Ninja        = Generates Eclipse CDT 4.0 project files. Eclipse CDT4 - Unix Makefiles
 thoralf	wiking: Cool.
@wiking	you can even choose if u want Ninja or Unix makefiles
 thoralf	wiking: Really impressed.
 thoralf	wiking: CMake Error: Could not create named generator Eclipse
 thoralf	wiking: Do I need some cmake extensions?
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10022852
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has left #shogun []
@wiking	one of the good sideeffects of cmake
@wiking	you can generate even fucking visual studio solution file
@wiking	let along xcode proj file
@wiking	thoralf: cmake --help
@wiking	thoralf: and you'll see what generators u have
@wiking	but yeah i guess it should have been
@wiking	cmake -G Eclipse CDT4 - Unix Makefiles
@wiking	or cmake -G "Eclipse CDT4 - Unix Makefiles"
@wiking	soemthing like this
@wiking	but just check what your cmake supports and act accordingly
 thoralf	wiking: Yeah, worked.
@wiking	thoralf: i cannot guarantee anything with that
@wiking	haven't tested it
@wiking	should work though...
@wiking	:P
@wiking	if not let me know and we can fixit
@wiking	iglesiasg: still in building phase?
 thoralf	Btw., my PR is updated.  Compiles and even unit-tests run locally. ;)
 thoralf	wiking: FYI: make -G replaces the Makefile which still in the project root
@wiking	thoralf: because you have not read the email
@wiking	thoralf: in shogun's root
@wiking	mkdir build
@wiking	cd build
@wiking	and there do the 'cmake -G <whatever> ..'
@wiking	iglesiasg: ? :)
@wiking	iglesiasg: got it :D
@HeikoS	wiking: I currently cannot compile
@HeikoS	In file included from /home/heiko/Desktop/shogun/shogun/src/shogun/lib/SGSparseVector.cpp:2:0:
@HeikoS	/home/heiko/Desktop/shogun/shogun/src/shogun/../shogun/lib/SGVector.h:38:3: error:   initializing argument 1 of 'shogun::SGVector<T>::SGVector(index_t, bool) [with T = std::complex<double>; index_t = int]' [-fpermissive]
@wiking	HeikoS: yeah i know thoralf is working on it
@HeikoS	ok
@wiking	HeikoS: i didn't merge that one...
@wiking	;)
@wiking	the quickfix for that error is this
@HeikoS	yeah merging always goes to quick, we should always ask travis before
@HeikoS	its green right?
@HeikoS	apart from this
 thoralf	My PR is green.
@wiking	no
 thoralf	Kindof green.
@wiking	thoralf: with the new?
@wiking	thoralf: gimme link
 thoralf	https://github.com/shogun-toolbox/shogun/pull/1384
 thoralf	OSX is still running.
@wiking	thoralf: ok just a sec
@wiking	restarting gcc job
@wiking	let's wait the gcc job to restart/finish
@wiking	oh this is getting even better
@wiking	restarting again but this seems to be a major error
@wiking	we cannot merge it
@wiking	iglesiasg: the problem with your thing is bascially that current shogun develop is utterly broken
@wiking	we should really just drop that merge
@wiking	i mean reverse
@wiking	because the quickfix as well seems to be killing it
@wiking	k
@wiking	we cannot compile currently shogun
@wiking	The log length has exceeded the limit of 4 Megabytes (this usually means that test suite is raising the same exception over and over).
@wiking	there's just too much shit with Eigen
@wiking	and it's shadowing everything
 shogun-notifier-	shogun: Viktor Gal :develop * 4150fbf / CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/4150fbf0f5595900be67dab3fb1fbd71bba570ce
 shogun-notifier-	shogun: Remove -Wshadow flag see issue #1385
 lisitsyn	wiking: -isystem!
 sonne|work	HeikoS: I am fine with it!
 lisitsyn	we need to use it somehow
 sonne|work	lisitsyn: yeah don't drop shadow
@wiking	lisitsyn: ok it'll be fixed
@wiking	or fix it
 lisitsyn	wiking: include_directories(SYSTEM "${EIGEN3_INCLUDE_DIR}")
 lisitsyn	use this
 lisitsyn	just add SYSTEM
 lisitsyn	before
@wiking	lisitsyn: edit + commit + push? :)
 lisitsyn	and you'll get now warnings
@wiking	i mean it's not only me who's allowed to edit cmakefiles
 sonne|work	HeikoS: we can nicely explain all the user issues like installation etc and extend as much as we want into ML algorithms and development so it is good enough for me now
 lisitsyn	wiking: yeah sure but you can get mad if I modify something you work on ;)
@wiking	lisitsyn: now it's already merged
@wiking	so it's free for grag
@wiking	grab
 sonne|work	wiking: well I am clueless about cmake anyway
 lisitsyn	wiking: oops you use list herfe
@wiking	lisitsyn: btw when u see how we includes
 lisitsyn	bad bad
@wiking	this was the only way
 lisitsyn	yeah
 lisitsyn	well
@wiking	remember the other conversation we had earlier...
 lisitsyn	wiking: but all includes are from libraries righT?
@wiking	like a week ago when i had to refactor the shit
@wiking	lisitsyn: git grep "LIST(APPEND INCLUDE"
@wiking	but yeah i guess so
@wiking	cannot remember anymore
 lisitsyn	wiking: where do you put the INCLUDE list to includes?
 shogun-buildbot	build #1705 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1705  blamelist: Viktor Gal <viktor.gal@maeth.com>
@wiking	lisitsyn: couples of places
@wiking	one is src/shogun/CMakeLists.txt
@wiking	the other is cmake/CommonModularInterface.cmake
@wiking	lisitsyn: imo the best way to do this is to maintain 2 list
@wiking	one system list and one normal include list
@wiking	and now it's only eigen....
@wiking	but who knows in the future
 sonne|work	HeikoS: ping ping?
 lisitsyn	wiking: we can include all the libraries as system actually
@wiking	why?
@wiking	i mean why we would do that?
 sonne|work	wiking: I am fine with the SYSTEM include way
 lisitsyn	wiking: we don't care about other code warnings
 shogun-notifier-	shogun: Thoralf Klein :develop * ce4ee05 / src/shogun/features/SparseFeatures.cpp,src/shogun/lib/SGSparseVector.cpp: https://github.com/shogun-toolbox/shogun/commit/ce4ee057ce3980725275ced9416c889f5cdf8b98
 shogun-notifier-	shogun: * replaced ASSERT by REQUIRE in several places
 shogun-notifier-	shogun: * removed redundant assertions on get_num_vectors(): get_sparse_feature_vector(num) already checks it
 shogun-notifier-	shogun: * replaced SGVector<T> dense() by dense to fix compiler errors.
 shogun-notifier-	shogun: Viktor Gal :develop * e2ad36b / src/shogun/features/SparseFeatures.cpp,src/shogun/lib/SGSparseVector.cpp: https://github.com/shogun-toolbox/shogun/commit/e2ad36bc0879f29a7c68213bcbef0d90276c2aaa
 shogun-notifier-	shogun: Merge pull request #1384 from tklein23/sparse_fixes
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: replaced ASSERT by REQUIRE; fixed SGVector<T> dense() compiler error
 lisitsyn	whether it is eigen or shmeigen
 lisitsyn	;)
 lisitsyn	I think we should not see other code warnings I mean
 lisitsyn	but if we include shogun code in INCLUDES
 lisitsyn	wiking: do we?
@wiking	lisitsyn: we do
 lisitsyn	ahh
@wiking	or wait
@wiking	include_directories(${INCLUDES} . ..)
@wiking	this could be split in two easily
@wiking	INCLUDE_DIRECTORIES(${INCLUDES} ${CMAKE_SOURCE_DIR}/src)
@wiking	same here
@wiking	and same here in unit tests
@wiking	include_directories(${INCLUDES} ${CMAKE_SOURCE_DIR}/src  ${source_dir}/include ${source_dir}/gtest/include)
@wiking	lisitsyn: shogun code is not among ${INCLUDES}
-!- travis-ci [~travis-ci@ec2-54-211-42-245.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10024388
-!- travis-ci [~travis-ci@ec2-54-211-42-245.compute-1.amazonaws.com] has left #shogun []
@wiking	so if u want u can include the ${INCLUDES} with SYSTEM
@wiking	and the others in normal way
@wiking	${INCLUDES} are indeed just 3rd party libs
@wiking	iglesiasg: i have a good news... i was wrong
@wiking	iglesiasg: the PR is always applied on top of HEAD in travis
 lisitsyn	wiking: I don't mind to include 3rd party as system then
@wiking	iglesiasg: or not :D
 lisitsyn	that looks okay, isn't it?
@wiking	iglesiasg: i dont understand exactly :P
 shogun-buildbot	build #1707 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1707  blamelist: Viktor Gal <vigsterkr@gmail.com>
 thoralf	wiking: I followed the instructions from your mail but cmake still overwrites local Makefiles.
 thoralf	wiking: in root: mkdir build; cd build; cmake .. -> build is empty, but files are overwritten
 thoralf	wiking: in src: does not work
@wiking	thoralf: woah
@wiking	thoralf: never seen this before
@wiking	thoralf: r u sure u have the HEAD of 'develop' branch?
 sonne|work	thoralf: weird it did work here
 thoralf	wiking: Yes.
@wiking	thoralf: mmm there's something wrong...
@wiking	as this way it has to do out of source compilation
 sonne|work	thoralf: so you are in shogun/ dir ?
 sonne|work	thoralf: and then you do mkdir build ; cd build ; cmake .. ?
 thoralf	sonne|work: ./src/shogun?  No, just tried ./ and ./src
@wiking	thoralf: copypaste the output of this here: head -n 1 CTestConfig.cmake
 sonne|work	not shogun/src/shogun but just shogun/
 sonne|work	wiking: I guess I cannot say it enough - great work... lets hope that we can remove configure & friends in about a week
@wiking	sonne|work: heheh yeah i was just thinking about that part
@wiking	sonne|work: but static is still missing
@wiking	sonne|work: btw what's the status of RModular?
@wiking	as i really haven't done anything about the rmodular interface
@wiking	as it was broken
 thoralf	SET (CTEST_PROJECT_NAME "shogun")
 sonne|work	wiking: but static just requires the same settings like the modular interface but just compiling that single file
@wiking	thoralf: hehe ok then there
 sonne|work	wiking: so it is really easy
@wiking	mkdir build && cd build && cmake ..
@wiking	sonne|work: what do u mean single file?
@wiking	sonne|work: ah u mean what's in python_static
@wiking	?
@wiking	PythonInterface.cpp ?
 thoralf	wiking: Ran successfully, but build directory is still empty.
 sonne|work	wiking: interfaces/octave_static/OctaveInterface.cpp etc
 sonne|work	yes
@wiking	mmm
 thoralf	-- Build files have been written to: xxx/shogun-github
@wiking	thoralf: gimme a shell to your machine :))))
@wiking	thoralf: i really want to see this
@wiking	sonne|work: and then i link that .o with libshogun?
@wiking	lisitsyn: what have u decided ? :)
 thoralf	wiking: I can create a new user, if it's what you wand.
 thoralf	want
 sonne|work	wiking: yes to a -shared .so and that's it
@wiking	thoralf: yeah... adduser wiking
@wiking	sonne|work: ok got it.. will do soon
 sonne|work	wiking: ohh exception: cmdline is a real executable !!
@wiking	sonne|work: hehe
 sonne|work	but for the rest it is exactly like that
 thoralf	wiking: My head is e2ad36b.., which is latest.
@wiking	indeed
@wiking	thoralf: just testing w8
@wiking	thoralf: ls /home/wiking/shogun/build
@wiking	thoralf: here's the history of my console
@wiking	git clone https://github.com/shogun-toolbox/shogun.git
@wiking	cd shogun/
@wiking	mkdir build
@wiking	cd build
@wiking	cmake ..
@wiking	ok sorry rm -rf -ed shogun
@wiking	do u need it still ?
@wiking	i can reproduce :D
 thoralf	wiking: All these files are in my project root.
 thoralf	wiking: Delete.
@wiking	u can delete my user now
@wiking	thoralf: woah man
@wiking	thoralf: u tried with eclipse generator?
 thoralf	wiking: Maybe it's I ran it once in the wrong directory?
 thoralf	Yes.
@wiking	w8
@wiking	i'll try that as well
@wiking	just a sec
@wiking	haven done that before
@wiking	mmm
@wiking	-- Could not determine Eclipse version, assuming at least 3.6 (Helios). Adjust CMAKE_ECLIPSE_VERSION if this is wrong.
@wiking	and
@wiking	CMake Warning in CMakeLists.txt: The build directory is a subdirectory of the source directory.
@wiking	This is not supported well by Eclipse.  It is strongly recommended to use a build directory which is a sibling of the source directory.
@wiking	these were the warnings
@wiking	but still
@wiking	there are tons of files in build
@wiking	including the .project file
@wiking	thoralf: yeah maybe you ran once in a bad way cmake
@wiking	try rm -rf build
@wiking	mkdir build && cd build
@wiking	and then run again the cmake with the parameters u want
 thoralf	wiking: Okay, it works with a clean checkout.
 thoralf	wiking: Now I'm trying to remove the build artifacts from the root directory and see it fixes
@wiking	thoralf: there's a git command for this
@wiking	dontremeber it again... lisitsyn wrote it yesterday
 thoralf	You don't mean git stash?
@wiking	thoralf: nono
@wiking	thoralf: it's a reset that removes all non repo related files as well
 lisitsyn	wiking: git clean -dfx
@wiking	thoralf: ^
@wiking	lisitsyn: heheh i saved it now :)
@wiking	thnx
 thoralf	wiking: Works now, thanks.
@wiking	nw
@wiking	thoralf: eclipse?
 thoralf	wiking: Importing "build" as a new eclipse project and hitting build works.
 sonne|work	thoralf: so how does this work?
 sonne|work	thoralf: you create a build dir and then how do you get the eclipse project file?
 thoralf	sonne|work: build$ cmake -G "Eclipse CDT4 - Unix Makefiles" ..
 thoralf	But actually it's not what I want.
 thoralf	Since the build files are not under version control.
@wiking	ok travis is back to green
 sonne|work	thoralf: ? I thought they are just symlinks?
@wiking	thoralf: ?
@wiking	thoralf: what files are not under version control?
@wiking	thoralf: http://www.vtk.org/Wiki/Eclipse_CDT4_Generator
@wiking	thoralf: http://www.vtk.org/Wiki/Eclipse_CDT4_Generator#Version_Control_Integration_in_Eclipse
@wiking	i guess something like this u r looking for
@wiking	thoralf: or http://www.cmakebuilder.com/
@wiking	thoralf: please let me know your experience
@wiking	and if i can ask
@wiking	write couple of lines if u get a something u like
 thoralf	wiking, sonne|work: If I create a prject from build/, then I don't see the source files in the browser.  But I was wrong as-in there is no copy of the source files in the build directory.
@wiking	so we can add that to the readme
 thoralf	I just can't navigate.
@wiking	thoralf: yes there's no copy
 thoralf	But I can build.
@wiking	thoralf: take a look at those tutorials i've just sent u
@wiking	they fix the problem u want
@wiking	cmake -G"Eclipse CDT4 - Unix Makefiles" -DECLIPSE_CDT4_GENERATE_SOURCE_PROJECT=TRUE ../certi_src
@wiking	This will create your normal project in the build tree and additionally an extra project in the source tree, we call it the "source-project". In Eclipse you can then import this source-project the same way as you import the normal project. This way you'll have two (or more) projects, one for browsing the sources and doing version control, the other for building your project.
 sonne|work	thoralf: if you get this to work I will use it too :D
@wiking	sonne|work: it can be
@wiking	sonne|work: tons of ppl use cmake projects with eclipse
@wiking	u just need to know the right flags for cmake
@wiking	to generate what u r looking for
 thoralf	Oh.  Inside "targets"/"[lib] shogun"/"source" I get an alphabetical list of all source files, but no directories. ;)
@wiking	sonne|work: i mean when i have to do someting in m$ VS
@wiking	sonne|work: i use cmake to generate the solution file ;P
@wiking	he following generators are available on this platform:
@wiking	 Visual Studio 6             = Generates Visual Studio 6 project files.
@wiking	 Visual Studio 7             = Generates Visual Studio .NET 2002 project
@wiking	                               files.
@wiking	 Visual Studio 10            = Generates Visual Studio 10 project files.
@wiking	 Visual Studio 11            = Generates Visual Studio 11 project files.
@wiking	 Visual Studio 7 .NET 2003   = Generates Visual Studio .NET 2003 project
@wiking	                               files.
@wiking	 Visual Studio 8 2005        = Generates Visual Studio 8 2005 project fil
@wiking	 Visual Studio 9 2008        = Generates Visual Studio 9 2008 project fil
@wiking	 Borland Makefiles           = Generates Borland makefiles.
@wiking	 NMake Makefiles             = Generates NMake makefiles.
@wiking	 NMake Makefiles JOM         = Generates JOM makefiles.
@wiking	 Watcom WMake                = Generates Watcom WMake makefiles.
@wiking	 MSYS Makefiles              = Generates MSYS makefiles.
@wiking	 MinGW Makefiles             = Generates a make file for use with
@wiking	                               mingw32-make.
@wiking	these are the generators on windows ;)
@wiking	so theoretically we can haz vs 2010 solution for shogun
@wiking	only thing is that the compiler flags are not handled well
@wiking	thoralf: google: cmake eclipse generator
@wiking	that's your friend to have all the funky stuff u want
 sonne|work	wiking: nice indeed
@wiking	sonne|work: the good sideeffect of using cmake for VS solutions that u dont have to care/fidle around with importing for example VS 2006 solution to vs 2011
@wiking	:P
 shogun-buildbot	build #1706 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1706  blamelist: Thoralf Klein <thoralf.klein@zib.de>
@wiking	sonne|work: i have a feeling that i need to fix the .deb package generator now ;)
@wiking	sonne|work: have u seen that twitter line i've just copied like a week ago from gstreamer core developers?
 sonne|work	wiking: no
@wiking	sonne|work: edward (one gstreamer core dev) said that having various binary packages shipped (like osx, deb, rpm etc) brought more developers to the project
 sonne|work	yeah sure
 sonne|work	wiking: more users == more developers
 sonne|work	I would says sth like for 10000 users there are 100 who do a bug report and 1 who contributes
@wiking	sonne|work: #?guadec? ?#?gstreamer? "Doing binary releases for win, macosx, ios, android brought more developers"
@wiking	in our case ios + android is not something we r aiming
 sonne|work	wiking: well do it! start with osx right?
@wiking	but a win release yes
@wiking	sonne|work: done
 sonne|work	wiking: we have a .dmg now?
@wiking	sonne|work: that was my first thing i did with cmake+cpack
@wiking	sonne|work: yes
 sonne|work	wiking: but libshogun only right?
@wiking	sonne|work: gimme space to upload :)
 sonne|work	not python or so?
@wiking	sonne|work: no
@wiking	sonne|work: libshoung+allmodular
 sonne|work	ahh nice
@wiking	sonne|work: and u can choose from the installer what u wanna install
 sonne|work	nice
@wiking	like only libshogun + some modular interface
 sonne|work	how can one do this automatic (nightly)
@wiking	or header files as well...
@wiking	etc.
@wiking	sonne|work: make package
 sonne|work	well if I am on linux...
@wiking	sonne|work: then u get deb or rpm + tar.gz + tar.bz2
@wiking	depends what package generator is available
@wiking	sonne|work: for osx package u need osx
@wiking	sonne|work: as it's using the native package generator
@wiking	sonne|work: either we get gunnar to put that osx bot online soon
@wiking	sonne|work: or i can trick travis osx builder
@wiking	to geneerate the package and upload it to somewhere
@wiking	;)
@iglesiasg	wiking, so were you wrong or not finally? :)
@wiking	iglesiasg: wrong :(
@iglesiasg	wiking, any idea how to fix it?
@wiking	iglesiasg: your problem was that u tried to compile a broken commit ;)
@wiking	iglesiasg: git pull the HEAD of develop and compile now
@wiking	iglesiasg: should work as travis just went green
@iglesiasg	wiking, eehm ok
@iglesiasg	wiking, but I was compiling the HEAD before ;)
@wiking	iglesiasg: yes but at that moment it was broken
@wiking	;)
@iglesiasg	I see
@iglesiasg	then it makes sense!
@wiking	indeed
@iglesiasg	removing -Wshadow commit fixes it?
@wiking	sonne|work: the problem with the travis trick is that: a) which commit will be the nightly release b) the osx job on travis already exceeds a bit the soft time limit of travis
@wiking	iglesiasg: no... that's another fix
@wiking	iglesiasg: thoralf sent a PR that fixed his previous PR
@iglesiasg	wiking, so from the last time I commited
@iglesiasg	the only new things are thoralf's commit and -Wshadow
@iglesiasg	what was failing in mine was compiling agains gtest
@iglesiasg	because of these undefined references
@wiking	iglesiasg: according to cdash that's not true
@wiking	iglesiasg: these were your problems http://maeth.com/cdash/viewBuildError.php?buildid=3
@wiking	it has nothing to do with gtest
@iglesiasg	wiking, I think they were not
@iglesiasg	let me double check please
@wiking	iglesiasg: well your last build was this: http://maeth.com/cdash/viewBuildError.php?buildid=3
@wiking	that's for sure
@wiking	;P
@iglesiasg	wiking, http://pastebin.com/wcqmNYtn
@wiking	yes
@wiking	and after that
@wiking	you did ctest -D Experimental
 sonne|work	wiking: with the buildbot I am currently generating the nightly stuff - so I was hoping that we could do the releases on that
@wiking	and that clearly showed that thers's something else wrong....
@iglesiasg	ok
 sonne|work	wiking: so only when everything compiles just fine
@wiking	iglesiasg: and i dont know how u ended up having that error
@wiking	iglesiasg: tryagain
@wiking	sonne|work: yep.... get gunnar to put that osx machine online
@wiking	or someBODY DONATE US AN OSX BUILDBOT
@wiking	^^^^^^^^^^^^^^^
@iglesiasg	what about travis' OSX machines?
@wiking	iglesiasg: @wiking> sonne|work: the problem with the travis trick is that: a) which commit will be the nightly release b) the osx job on travis already exceeds a bit the soft time limit of travis
@iglesiasg	wiking, I see, thank you and sorry for making you repeat
@wiking	nw it's a c-p ;)
@wiking	or i can install as i said in a VB an osx on my server
@wiking	but that implies some licensing problems :(
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/10024845
-!- travis-ci [~travis-ci@ec2-54-234-6-198.compute-1.amazonaws.com] has left #shogun []
@wiking	yey back to green
@wiking	"... you are granted a limited, non-transferable, non-exclusive license: [...] (iii) to install, use and run up to two (2) additional copies or instances of the Apple Software within virtual operating system environments on each Mac Computer you own or control that is already running the Apple Software."
@wiking	i do 2 copies of osx
@wiking	so some legal help here plz
@wiking	" to install, use and run up to two (2) additional copies or instances of the Apple
@wiking	Software within virtual operating system environments on each Mac Computer you own
@wiking	or control that is already running the Apple Software, for purposes of: (a) software
@wiking	development; (b) testing during software development; (c) using OS X Server; or (d)
@wiking	personal, non-commercial use."
 sonne|work	IANAL
-!- sonne|work [~sonnenbu@91-64-72-127-dynip.superkabel.de] has quit [Quit: Leaving.]
 lisitsyn	wiking: ^ look he feel nervous about not being a lawyer ;)
@wiking	:D
@wiking	lisitsyn: so what have u decided?
-!- thoralf [~thoralf@enki.zib.de] has quit [Quit: Konversation terminated!]
 lisitsyn	wiking: about?!
@wiking	lisitsyn: -isystem vs -I
 lisitsyn	ahh
@wiking	lisitsyn: and about whether i can haz oSX in VM
@wiking	:D
@wiking	legally
@wiking	lisitsyn: although the problem will be that that VM will need about 3 gigs of ram
@wiking	and i really need that 3 gigs of ram on my server
@wiking	so
@wiking	who has a spare server with spare 3 gigs of ram in it
@iglesiasg	wiking, it built smooth. Running ctest atm
@wiking	great!
@wiking	i think there was something there halfway broken
@wiking	that's how u ended up having that problem
@iglesiasg	this runs examples as well as unit tests, right?
@wiking	iglesiasg: everything it can
@wiking	u can restrict it by the -E and -R flags of ctest
@wiking	see ctest --help output
@wiking	so u can do: i want only unit test ctest -R unit
@iglesiasg	thanks!
@wiking	you want only python tests: ctest -R python
@wiking	or you want everything tested apart from python: ctest -E python
@wiking	of course it's good to have --output-on-failure as well
@wiking	just to see what has really went wrong
@iglesiasg	there were three things failing here
@iglesiasg	I guess the same ones you mentioned?
@iglesiasg	The following tests FAILED:
@iglesiasg	 97 - integration-python_modular-tester (Failed)
@iglesiasg	332 - python_modular-evaluation_cross_validation_multiclass_storage (Failed)
@iglesiasg	350 - python_modular-features_string_char_compressed_modular (Failed)
@wiking	i mean u can 'make test' as well but that doesn't show u the failed shit
@wiking	iglesiasg: oh
@wiking	iglesiasg: no they should be good
@wiking	i mean on travis its good
@wiking	with the head
@wiking	but then again integration-python_modular-tester fails big time on my machine as well...
@iglesiasg	ok
@wiking	but not that other two python
-!- HeikoS [~heiko@nat-163-6.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
@wiking	iglesiasg: that integration-python_modular-tester only works on travis :P
@iglesiasg	hehe
@iglesiasg	someone tuned it for travis
@wiking	and i guess sonney2k's machine
@iglesiasg	I didn't see in the output unit tests however
@iglesiasg	maybe I missed them though
@wiking	iglesiasg: integration-python_modular-tester
@wiking	no
@wiking	--output-on-failure
@wiking	otherwise it won't print it
@wiking	just that it failed
-!- HeikoS [~heiko@nat-163-6.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	iglesiasg: if unit test fails then the whole gtest ouput is printed out...
@iglesiasg	got it!
@iglesiasg	re-running with --output-on-failure to see how it goes
@wiking	heheh i'll have to finish up something now in a windows project.. i'll try cmaking shogun :DDD
@wiking	is there like python for windows? :)
@iglesiasg	yes, it is
@iglesiasg	about the other two tests failing in my machine
@iglesiasg	I think they probably happen because I didn't compile with gplk and lzo
@iglesiasg	but that should be guarded somehow
@wiking	hahah this is a historical moment: http://pastebin.com/41qdJPBp
@wiking	:>
@wiking	but basically nothing has been found
 lisitsyn	wiking: shogun on windows?
@wiking	lisitsyn: indeed
@wiking	lisitsyn: gotta finish some shitty work in m$ env so i thought to give it a go
@iglesiasg	did the unit tests get much faster now?
@wiking	iglesiasg: dunno
@wiking	iglesiasg: but be aware that u might be running Release now :(
@iglesiasg	wiking, that means with optimizations, right?
@iglesiasg	the old --disable-optimizations thingy
@iglesiasg	without s
@wiking	yes
@wiking	iglesiasg: -DCMAKE_BUILD_TYPE
@wiking	for cmake
@wiking	i mean
@wiking	-DCMAKE_BUILD_TYPE=Debug
@iglesiasg	it was in Release, yes
@wiking	iglesiasg: sonney2k said that that should be by default
@iglesiasg	wiking, we have Release and Debug, right?
@wiking	and Distribution
@iglesiasg	I don't know yet how to feel about this https://soundcloud.com/recordsyourcomments/48-1
@HeikoS	wiking, iglesiasg, lisitsyn, sonney2k,  I will submit the doc camp application now
@HeikoS	did you all have a look?
@wiking	HeikoS: yeps
@iglesiasg	yeah!
 lisitsyn	HeikoS: I did
 lisitsyn	no serious changes though
@HeikoS	ok
@HeikoS	then Ill submit
@HeikoS	lets hope for the best :)
@HeikoS	Pretty good text
@HeikoS	better than last year
@wiking	HeikoS: thnx heaps for putting this together!
@HeikoS	welcome :)
@HeikoS	ok submitted
@wiking	\o/
@iglesiasg	let's keep our fingers crosses
@iglesiasg	or crossed
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Read error: Connection reset by peer]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@iglesiasg	wiking,  I didn't lie Kyle in the ML, did I?
@iglesiasg	I mean, now with cmake, configure won't work fine
@iglesiasg	maybe I screwed though
-!- HeikoS [~heiko@nat-163-6.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
-!- van51 [~van51@ppp-94-66-52-171.home.otenet.gr] has joined #shogun
@wiking	?
@wiking	whaaat? :)))
@wiking	sorry i wasn't paying attetion :)
@wiking	aah mailing list
@wiking	let me check
@wiking	ok sent
@wiking	iglesiasg: hehehe
@wiking	1 minute difference
@iglesiasg	wiking, you are the fast guy! :P
@wiking	yeah more to the point
@wiking	but it's great you went into a deeper discussion ;)
@wiking	let's keep the users happy
@wiking	that little we have
@iglesiasg	haha yeah
@iglesiasg	I think he must be one of the very few users (the only?) who uses Shogun from cutting edge branch
@wiking	:D
@wiking	yeah i mean maaaan
@wiking	master branch must be like
@wiking	sooooo outdated :)
@wiking	although not that much
@wiking	it was branched out like in april or something
@wiking	but a lot of code got in the meanwhile
@iglesiasg	it depends on what he is using Shogun for, no doubt
@iglesiasg	have to dash off for some minutes now, see you later
@wiking	laterz
@wiking	should get python 3.3 testing working on trav
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
@wiking	ctest -D ExperimentalMemCheck
@wiking	this is naaasty ;)
@wiking	but only with -DBUILD_DASHBOARD_REPORTS=ON
@wiking	maybe we should just enable the whole CTest as is
-!- van51 [~van51@ppp-94-66-52-171.home.otenet.gr] has quit [Quit: Leaving.]
@wiking	http://maeth.com/cdash/viewDynamicAnalysisFile.php?id=1
@wiking	havefun
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
@wiking	you pickle27
@wiking	i mean YO1
@wiking	!
 pickle27	wiking: hey
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has left #shogun []
-!- lisitsyn [~lisitsyn@fb2-lo1.global63.net] has joined #shogun
 lisitsyn	wiking: do you know any way to add a 'synonym' for some class in other namespace?
 lisitsyn	like create an alias of class A::C in namespace B
 lisitsyn	typedef should be a way!
@wiking	:)
@wiking	indeed
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Quit: Ex-Chat]
-!- gsomix [~gsomix@109.169.185.159] has quit [Quit: Leaving]
-!- thoralf [~thoralf@p5B32571C.dip0.t-ipconnect.de] has joined #shogun
 thoralf	Hello.
@sonney2k	thoralf, hey hey
 thoralf	Hey sonney2k
@sonney2k	wiking, lisitsyn - did we apply for doc camp now?
 thoralf	Just writing my application.
 lisitsyn	sonney2k: well Heiko submitted sth
 thoralf	Heiko told that individuals should apply too, right?
 lisitsyn	thoralf: ehm!
@sonney2k	thoralf, sure do it!
 lisitsyn	how?
 lisitsyn	I must be missing something
--- Log closed Sat Aug 10 00:00:08 2013
