--- Log opened Tue May 22 00:00:05 2012
--- Day changed Tue May 22 2012
-!- cronor [~cronor@e177093001.adsl.alicedsl.de] has quit [Ping timeout: 252 seconds]
-!- cronor [~cronor@g231228106.adsl.alicedsl.de] has joined #shogun
-!- karlnapf [~heiko@host86-176-3-178.range86-176.btcentralplus.com] has joined #shogun
-!- karlnapf [~heiko@host86-176-3-178.range86-176.btcentralplus.com] has left #shogun []
-!- ckwidmer [~chris@HSI-KBW-046-005-237-106.hsi8.kabel-badenwuerttemberg.de] has quit [Remote host closed the connection]
 CIA-113	shogun: Sergey Lisitsyn master * r17f015e / (9 files in 2 dirs): Fixes for binary evaluations - http://git.io/pAdW-w
 CIA-113	shogun: Sergey Lisitsyn master * r4b44437 / (9 files in 4 dirs): Renamed LT_REAL to LT_REGRESSIONw - http://git.io/PLWUbA
-!- cronor [~cronor@g231228106.adsl.alicedsl.de] has quit [Quit: cronor]
 CIA-113	shogun: Sergey Lisitsyn master * r74ec526 / src/shogun/machine/DistanceMachine.h : Removed junk methods from DistanceMachine - http://git.io/1oMJ3A
 blackburn	?????????
 blackburn	hahh wrong window
 blackburn	n4ndo: ok waiting for your commit ;)
-!- blackburn [~blackburn@188.122.250.167] has left #shogun []
-!- av3ngr [av3ngr@nat/redhat/x-pmomtrbvblgrgxfj] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-pmomtrbvblgrgxfj] has quit [Read error: Connection reset by peer]
-!- abn_ [av3ngr@nat/redhat/x-xuvdsxngulszmtkw] has joined #shogun
-!- vikram360 [~vikram360@117.192.164.136] has joined #shogun
-!- abn__ [av3ngr@nat/redhat/x-nwncusfehavfbppt] has joined #shogun
-!- abn__ [av3ngr@nat/redhat/x-nwncusfehavfbppt] has quit [Read error: Connection reset by peer]
-!- abn__ [av3ngr@nat/redhat/x-kbzvzcoylxapkpmg] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-xuvdsxngulszmtkw] has quit [Ping timeout: 244 seconds]
-!- abn__ [av3ngr@nat/redhat/x-kbzvzcoylxapkpmg] has quit [Read error: Connection reset by peer]
-!- av3ngr [av3ngr@nat/redhat/x-gphxnzucexbjznbd] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-ptsowgvajarwgynm] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-ptsowgvajarwgynm] has quit [Read error: Connection reset by peer]
-!- abn__ [av3ngr@nat/redhat/x-wglprlbbgqmbekcb] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-gphxnzucexbjznbd] has quit [Ping timeout: 240 seconds]
-!- vikram360 [~vikram360@117.192.164.136] has quit [Ping timeout: 246 seconds]
-!- vikram360 [~vikram360@117.192.164.136] has joined #shogun
-!- abn__ [av3ngr@nat/redhat/x-wglprlbbgqmbekcb] has quit [Read error: Connection reset by peer]
-!- av3ngr [av3ngr@nat/redhat/x-kdvliwlttbrjbtzi] has joined #shogun
-!- vikram360 [~vikram360@117.192.164.136] has quit [Ping timeout: 246 seconds]
-!- sonney2k [~shogun@7nn.de] has quit [Ping timeout: 245 seconds]
-!- sonney2k [~shogun@7nn.de] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-kdvliwlttbrjbtzi] has quit [Read error: Connection reset by peer]
-!- av3ngr [av3ngr@nat/redhat/x-inlylnpychijztpn] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-cgbaacwlhhwpwsws] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-inlylnpychijztpn] has quit [Ping timeout: 245 seconds]
-!- abn__ [av3ngr@nat/redhat/x-iuhkwbiyovdvjszt] has joined #shogun
-!- vikram360 [~vikram360@117.192.164.136] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-cgbaacwlhhwpwsws] has quit [Ping timeout: 256 seconds]
-!- abn_ [av3ngr@nat/redhat/x-kkvvuspxqszxjeyk] has joined #shogun
-!- abn__ [av3ngr@nat/redhat/x-iuhkwbiyovdvjszt] has quit [Ping timeout: 260 seconds]
-!- abn_ [av3ngr@nat/redhat/x-kkvvuspxqszxjeyk] has quit [Read error: Connection reset by peer]
-!- abn_ [av3ngr@nat/redhat/x-bdztxorawqjwtbjr] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-bdztxorawqjwtbjr] has quit [Read error: Connection reset by peer]
-!- abn_ [av3ngr@nat/redhat/x-chtrdmvefhcomhyl] has joined #shogun
-!- gsomix [~gsomix@188.168.14.173] has quit [Ping timeout: 240 seconds]
-!- abn__ [av3ngr@nat/redhat/x-apmagomsomgqogex] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-chtrdmvefhcomhyl] has quit [Ping timeout: 250 seconds]
-!- vikram360 [~vikram360@117.192.164.136] has quit [Ping timeout: 256 seconds]
-!- vikram360 [~vikram360@117.192.164.136] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-zlsbjwqpoxgnkuui] has joined #shogun
-!- abn__ [av3ngr@nat/redhat/x-apmagomsomgqogex] has quit [Ping timeout: 248 seconds]
-!- sonne|work [~sonnenbu@194.78.35.195] has quit [Read error: Operation timed out]
-!- av3ngr [av3ngr@nat/redhat/x-mkyrjichayeuozkq] has joined #shogun
-!- sonne|work [~sonnenbu@194.78.35.195] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-mkyrjichayeuozkq] has quit [Read error: Connection reset by peer]
-!- abn__ [av3ngr@nat/redhat/x-hicajxdxbmsvfprp] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-zlsbjwqpoxgnkuui] has quit [Ping timeout: 250 seconds]
-!- av3ngr [av3ngr@nat/redhat/x-upbeghnmqgjxwjor] has joined #shogun
-!- abn__ [av3ngr@nat/redhat/x-hicajxdxbmsvfprp] has quit [Ping timeout: 276 seconds]
-!- av3ngr [av3ngr@nat/redhat/x-upbeghnmqgjxwjor] has quit [Read error: Connection reset by peer]
-!- abn_ [av3ngr@nat/redhat/x-dkjdkzksiuznnryi] has joined #shogun
-!- abn__ [av3ngr@nat/redhat/x-wzgmklxvgtfdklwi] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-dkjdkzksiuznnryi] has quit [Ping timeout: 265 seconds]
-!- mode/#shogun [+o sonney2k] by ChanServ
 CIA-113	shogun: Soeren Sonnenburg master * rc0954f1 / (49 files): fix python modular example for new label system - http://git.io/GWd4Jg
-!- abn__ [av3ngr@nat/redhat/x-wzgmklxvgtfdklwi] has quit [Read error: Connection reset by peer]
-!- abn__ [av3ngr@nat/redhat/x-caxmknntobyjaorc] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
 CIA-113	shogun: Soeren Sonnenburg master * rd7d1505 / src/interfaces/modular/Machine.i : use more fine grained %rename of apply() to get converters back to work - http://git.io/Bwaw6A
-!- abn__ [av3ngr@nat/redhat/x-caxmknntobyjaorc] has quit [Read error: Connection reset by peer]
-!- av3ngr [av3ngr@nat/redhat/x-hbmcwvnwmfwdwwgk] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-hbmcwvnwmfwdwwgk] has quit [Read error: Connection reset by peer]
-!- av3ngr [av3ngr@nat/redhat/x-htrnusvtyczkfwxc] has joined #shogun
-!- av3ngr [av3ngr@nat/redhat/x-htrnusvtyczkfwxc] has quit [Read error: Connection reset by peer]
-!- abn_ [av3ngr@nat/redhat/x-qjjmkztgcdxgddqm] has joined #shogun
-!- uricamic [~uricamic@2001:718:2:1634:d9cd:b2c5:1776:917b] has joined #shogun
 sonne|work	n4nd0: making progress?
 n4nd0	sonne|work: I am right now with the problem type thing blackburn told me about yesterday
 sonne|work	n4nd0: yeah it is very critical to get this done fast
-!- pluskid [~pluskid@111.120.62.119] has joined #shogun
 sonne|work	this will fix lots of crashers
 sonne|work	pluskid: new labels are in place now, lots of stuff works - maybe you try your MC stuff
 pluskid	sonne|work: cool!
 n4nd0	sonne|work: I understand that vowpal wabbit is used for classification, but does it support multiclass or just binary?
 sonne|work	I think binary
 n4nd0	sonne|work: all right, what about CWDSVMOcas, I think this is the one that can be used both for regression and binary classification
 sonne|work	no binary only
 n4nd0	mmm
 n4nd0	apply returns CRegressionLabels though
 sonne|work	fix it!
 sonne|work	apply() should always return CLabels
 sonne|work	and in this case CBinaryLabels down or up cast to CLabels :)
 n4nd0	all right
 n4nd0	well it actually returns CLabels since the prototype of the function is CLabels* apply, but internally those labels are created as CRegressionLabels*
 n4nd0	sonne|work: I will change that to CBinaryLabels, ok?
 sonne|work	sure
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- abn_ [av3ngr@nat/redhat/x-qjjmkztgcdxgddqm] has quit [Quit: That's all folks!]
 sonne|work	n4nd0: I guess there will be a couple of such things - because I used RealLabels aka RegressionLabels now for all classifier output before we switched yesterday :)
 n4nd0	ok, I will take it into account
 n4nd0	is it possible to ammend a past commit?
 n4nd0	I have some changes I want to include to a commit that is not the last one I did, but three commits ago
 n4nd0	I have tried doing git reset HEAD^^
 n4nd0	stage the files with the changes I want to amend to the commit
 n4nd0	git commit --amend
 n4nd0	and later come back to the tip of the branch using git reset and the SHA1
 sonne|work	n4nd0: wiking or pluskid might know... I have never done this but I guess git reset is needed :)
-!- karlnapf [~heiko@host86-176-102-20.range86-176.btcentralplus.com] has joined #shogun
 pluskid	n4nd0: I don't know either. I guess git stash won't work. But maybe you can use git format-patch to create patches and re-apply them later
 n4nd0	pluskid: yeah, I think git format-patch may be useful for this, thank you!
 n4nd0	sonne|work: I think the problem type changes are done now, tell me if something is not ok
 n4nd0	I may have forgotten any machine
 sonne|work	n4nd0: just run make check-examples - you will see if more things work now :)
 CIA-113	shogun: iglesias master * r09e6617 / (src/shogun/machine/Machine.h src/shogun/multiclass/QDA.h): + problem type macro in Machine and + return PT in QDA - http://git.io/3PUoqg
 CIA-113	shogun: iglesias master * r29c5724 / src/shogun/classifier/svm/WDSVMOcas.cpp : * fix CRegressionLabels* to CBinaryLabels* in apply - http://git.io/S3HhEg
 CIA-113	shogun: iglesias master * r13377dd / (27 files in 5 dirs): + return problem type in more classifiers - http://git.io/Uleu3w
 CIA-113	shogun: iglesias master * rbfab371 / (8 files in 2 dirs): + return problem type in regression machines - http://git.io/2hMqUg
 CIA-113	shogun: Soeren Sonnenburg master * r3801ecf / (37 files in 7 dirs): Merge pull request #538 from iglesias/problem_type - http://git.io/qpJIeg
 n4nd0	qutie a few of them still failing
 sonne|work	which?
 n4nd0	I have selected a random one right one and I found something curious
 n4nd0	[ERROR] assertion m_labels->get_label_type() == LT_BINARY failed in file classifier/svm/LibLinear.cpp line 82
 n4nd0	that is used from
 n4nd0	classifier_multiclasslinearmachine in libshogun
 n4nd0	I guess that the problem is that in that example the labels used are CMulticlassLabels
 n4nd0	while LibLinear requires them to be LT_BINARY
 sonne|work	n4nd0: but that is multiclasslbilinear
 n4nd0	I didn't understand
 sonne|work	we have a class for multiclassliblinear and for binaryclassliblinear
 n4nd0	do you mean that multiclassliblinear should be used for that and not LibLinear
 sonne|work	no idea why CLibLinear::train is even called!
 sonne|work	if this really is a MC example
 n4nd0	this is an example I wrote
 n4nd0	the idea was to use a binary classifier with one of the multiclass strategies
 sonne|work	n4nd0: ahh ok then this is a bug pluskid needs to handle
 n4nd0	I'd say that probably one must cast labels when the MulticlassMachine uses the train method of the BinaryMachine
 n4nd0	from MulticlassLabels to BinaryLabels
 pluskid	I'll look at this
 sonne|work	n4nd0: I think that linear mc machine does not create binary labels
 sonne|work	pluskid: thx
-!- blackburn [~blackburn@188.122.250.167] has joined #shogun
 blackburn	oh wow
-!- uricamic1 [~uricamic@2001:718:2:1634:5c56:5c20:5842:ed51] has joined #shogun
 sonne|work	blackburn: morning!
 blackburn	guten tag
 sonne|work	blackburn: could you fix the evaluations please?
 blackburn	ehm what to fix else?
 blackburn	I was pretty sure I fixed it :)
-!- uricamic [~uricamic@2001:718:2:1634:d9cd:b2c5:1776:917b] has quit [Ping timeout: 245 seconds]
 n4nd0	blackburn: I've just run make check-examples after doing the problem type things but several of them still fail :(
 sonne|work	blackburn: wait evaluations use confidences now to actually do the evaluations?
 blackburn	sonne|work: yes
 sonne|work	for ROC/pRC that is?
 blackburn	sonne|work: yes
 blackburn	confidences of binary labels
 sonne|work	ok
 blackburn	binary labels set confidences from vectors
 sonne|work	well multiclass machines are broken currently
 sonne|work	blackburn: ImportError: cannot import name AccuracyMeasure
 sonne|work	 ??
 sonne|work	what happened?
 pluskid	problem here is brute force type casting
 blackburn	sonne|work: ah I removed it :D
 blackburn	did you use it?
 sonne|work	why?
 blackburn	sonne|work: I thought it is pretty useless
 sonne|work	I like accuracy :)
 sonne|work	no keep it
 blackburn	sonne|work: ContingencyTableEvaluation(ACCURACY)
 sonne|work	keep it
 blackburn	argh
 sonne|work	explicit is good
 blackburn	sonne|work: a bunch of classes we don't really need
 sonne|work	I need this
 blackburn	rrr
 CIA-113	shogun: Sergey Lisitsyn master * r4e4ae17 / src/shogun/evaluation/ContingencyTableEvaluation.h : Restored explicit measure classes - http://git.io/Ya21QQ
 blackburn	sonne|work: should work now
 blackburn	hmm multiclass is b0rken for sure
 CIA-113	shogun: Soeren Sonnenburg master * rd59c2b2 / (4 files in 2 dirs): Label fix for missing examples - http://git.io/1pIo3Q
 pluskid	quite broken
 sonne|work	of course it is
 blackburn	I am working on it
 sonne|work	blackburn: IIRC pluskid too?
 pluskid	which part are you working on?
 blackburn	MulticlassMachine :D
 blackburn	hmm
 sonne|work	blackburn: shouldn't pluskid better work on this?
 pluskid	149: MCLabel -> BinaryLabel
 sonne|work	blackburn: and you better check why evaluations fail?
 pluskid	I have fixed this
 blackburn	sonne|work: what fails?
 blackburn	let me commit what I've done then
 sonne|work	blackburn: run the examples
 sonne|work	libshogun, python_modular ...
 sonne|work	lots of stuff works but some still fails
 blackburn	I've tested ROC/PRC last night
 sonne|work	blackburn: well just go over the failing (non-mc) examples then
 blackburn	let me commit first
 CIA-113	shogun: Sergey Lisitsyn master * r31c9307 / (4 files in 2 dirs): Some fixes for multiclass machine - http://git.io/id1lZw
 blackburn	pluskid: ok please continue with multiclass
 pluskid	ok
-!- gsomix [~gsomix@188.168.3.106] has joined #shogun
 gsomix	hi all
 sonne|work	pluskid, blackburn: btw everyone no need to explicitly typecast labels - better use (the safe!) CMulticlassLabels::obtain_from_genereric(lab) etc functions
 sonne|work	it will give you a CMulticlassLabel but check if casting is safe
 pluskid	cool
 pluskid	btw: sonne|work why you commented out the pure-virtual get_label_type in the base CLabels?
 sonne|work	all this RegressionLabels crap that machines return is mostly due to legacy
 pluskid	and make it return REGRESSION?
 sonne|work	what?
 sonne|work	I didn't comment it out
 pluskid	Labels.h:61
 sonne|work	err?!
 sonne|work	I didn't do that
 pluskid	haha
 CIA-113	shogun: Soeren Sonnenburg master * rdf320e8 / (src/shogun/labels/DenseLabels.h src/shogun/labels/Labels.h): make get_label_type pure virtual again - http://git.io/QTdklg
 blackburn	it is not me either I think
 blackburn	:D
 sonne|work	haha
 pluskid	some evil ghost is in our dev team :D
 pluskid	very strange problem here...
 pluskid	in n4nd0's libshogun example, a LinearMCMachine is created
 pluskid	then I call get_machine_problem_type of that machine in gdb
 pluskid	it returns PT_BINARY
 pluskid	-.-
 CIA-113	shogun: Sergey Lisitsyn master * rb6a6727 / examples/undocumented/python_modular/serialization_matrix_modular.py : Fixed serialization_matrix_modular example - http://git.io/ALHF4g
 CIA-113	shogun: Sergey Lisitsyn master * r9eb2a83 / (3 files in 2 dirs): Fixed GaussianProcessRegression - http://git.io/6tUArQ
 blackburn	n4nd0: btw inline virtual makes no sense
 pluskid	hmm
 blackburn	pluskid: hmmmm
 pluskid	forgot to recompile
 pluskid	after updating the shared library
 pluskid	so the vtable is confused
 blackburn	pluskid: but wait there is no mention of proper PT_MULTICLASS in LinearMulticlassMachine
 pluskid	previously no
 pluskid	I've added this
 blackburn	ah ok
 pluskid	and I found a lot of machines didn't register EMachineType
 pluskid	does it necessary for *every* machine to register this?
 blackburn	pluskid: machine type is rather for static interfaces
 n4nd0	blackburn: oh really?
 blackburn	n4nd0: what?
 n4nd0	blackburn: I thought they were different concepts
 n4nd0	blackburn: why inline virtual doesn't make sense
 blackburn	about inline virtual?
 n4nd0	yes
 blackburn	hmm can you imagine how can compiler inline a function that calls by pointer? :)
 CIA-113	shogun: Sergey Lisitsyn master * r28082be / (2 files): Fixed ConjugateIndex - http://git.io/VbDGBg
 CIA-113	shogun: Chiyuan Zhang master * r52d53fd / (2 files): Fixed multiclass problem-type. - http://git.io/ol9d0w
 CIA-113	shogun: Sergey Lisitsyn master * rf318aee / (2 files): Merge branch 'multiclass-ecoc' of https://github.com/pluskid/shogun - http://git.io/JAvw8g
 CIA-113	shogun: Evgeniy Andreev master * r61ff1e2 / (39 files): const methods in Features - http://git.io/84xecw
 CIA-113	shogun: Sergey Lisitsyn master * r7ca1c60 / (39 files): Merge branch 'const_methods' of https://github.com/gsomix/shogun - http://git.io/K4aUnA
 CIA-113	shogun: Chiyuan Zhang master * r6216379 / src/shogun/machine/MulticlassMachine.cpp : Simple fix for mkl_multiclass crasher - http://git.io/oxT1pw
 CIA-113	shogun: Sergey Lisitsyn master * rde154b3 / src/shogun/machine/MulticlassMachine.cpp : Merge branch 'multiclass-ecoc' of https://github.com/pluskid/shogun - http://git.io/kQmGdw
 blackburn	pluskid: larank is failing in python_modular - could you please take a look?
 pluskid	blackburn: I'll try, but I'm not sure I can fix, coz I know nothing about how LaRank works
 pluskid	just back from supper :D
 blackburn	pluskid: no need to know - something is wrong with methods I think
 pluskid	ok
 blackburn	sonne|work: why I see terminate called after throwing an instance of 'shogun::ShogunException' w/o any SG_ERROR message?
 CIA-113	shogun: Sergey Lisitsyn master * rd204fcd / (src/shogun/multiclass/KNN.cpp src/shogun/multiclass/KNN.h): Proper multiclass labels handling in KNN - http://git.io/4cLTXQ
 sonne|work	blackburn: some exception at illegal place maybe?
 pluskid	blackburn: I found the problem
 blackburn	pluskid: what is?
 pluskid	the apply() method returns a CBinaryLabel
 pluskid	when constructing the CBinaryLabel object
 pluskid	in the constructor, set_label is called
 pluskid	set_label checks whether the label is valid
 pluskid	and found there's only one class
 pluskid	it raise SG_ERROR
 blackburn	hmm
 blackburn	cool
 pluskid	how do you think this should be handled?
 pluskid	sonne|work: what do you think? A BinaryLabel returned by apply() may not be "valid" (i.e. two class)
 blackburn	pluskid: does it happen in larank?
 pluskid	yes, in the example
 pluskid	that's why it's failing
 pluskid	although it should print "Not a two class labeling - no positively labeled examples found\n"
 pluskid	don't know why this message is swallowed
 CIA-113	shogun: Sergey Lisitsyn master * rfca820b / (3 files in 2 dirs): Fixed DomainAdaptation binary svm - http://git.io/9MlBPA
 blackburn	pluskid: but why only one class here?
 pluskid	blackburn: because it classify all examples as negative ?
 blackburn	but larank is multclass?
 pluskid	blackburn: isn't is OvO (or OvR)?
 blackburn	OvR
 blackburn	ah get it
 pluskid	then there should be binary classifier under the sense
 blackburn	damn
 blackburn	we should allow output to be all negative
 blackburn	or all positive.
 pluskid	I'm not sure how to modify this
 pluskid	sonne|work should give some decision here
 blackburn	yeah interesting problem
-!- vikram360 [~vikram360@117.192.164.136] has quit [Ping timeout: 244 seconds]
 blackburn	pluskid: ok may be some option that ignores validation?
 blackburn	pluskid: how do you obtain error message?
 blackburn	karlnapf: hey
 karlnapf	blackburn hi
 blackburn	karlnapf: do you have time to take a look on modelselection error?
 karlnapf	yes, just finished studying for today :)
 karlnapf	although I will have lunch before
 karlnapf	but whats the problem
 karlnapf	?
 blackburn	ok, please take a look on modelselection_grid_search_kernel
 blackburn	it fails with wrong label type
 karlnapf	mmmh
 karlnapf	I did not really check out the new label stuff
 karlnapf	what does that mean, fails with wrong label type?
 blackburn	karlnapf: for some strange reason it passes wrong type of labels to evaluation
 karlnapf	that probably then happens in the select_model method
 blackburn	yes
 blackburn	exactly
 blackburn	hmm wait
 karlnapf	what has happened to the git?
 karlnapf	takes ages to update?
 blackburn	karlnapf: oh wrong data commit
 karlnapf	?
 blackburn	we will remove it later I hope
 blackburn	karlnapf: one guy updated ASP application and added data
 blackburn	I have removed it but it went to index
 karlnapf	oh no ;)
 karlnapf	argh my git program cant handle that
 karlnapf	crashes
 blackburn	that sounds a bit strange hmm
 karlnapf	I think I will clone freshly
-!- vikram360 [~vikram360@117.192.164.136] has joined #shogun
 karlnapf	blackburn, I have to go to the post office now (closes soon) and will have lunch, I will get back here afterwards and try to fix the error
 blackburn	ok
 karlnapf	btw only three exams left :) 2 next week
 blackburn	three?
 blackburn	argh crazy
 karlnapf	hehe :)
 karlnapf	bioinformatics, kernel methods and ML algorithms
 blackburn	weren't the former about the same?
 pluskid	blackburn: I falled asleep ...
 pluskid	blackburn: I do a backtrace of Python
 blackburn	how?
 pluskid	dump the core, and gdb on the core
 blackburn	oh
 pluskid	the validation is in the constructor
 blackburn	pluskid: ok and how to dump the core? :)
 pluskid	ulimit -c unlimited
 pluskid	IIRC
 blackburn	then?
 blackburn	run my python script?
 pluskid	then the core will be dumped
 pluskid	when the program aborts
 blackburn	to file?
 pluskid	yeah
 blackburn	hmm cool
 pluskid	:D
 blackburn	pluskid: and how to gdb on that file?
 pluskid	the validation is called on set_labels, if I remove the validation there, will sonne|work becomes crazy?
 pluskid	gdb program core
 blackburn	hehe
 pluskid	here will be gdb python core
-!- sonne|work is now known as crazy_horse
 blackburn	pluskid: ok and the last q - how to trace back?
 crazy_horse	pluskid: it is clear that we need to allow any kind of outputs
 pluskid	blackburn: type "bt" in gdb
 blackburn	(gdb) bt
 blackburn	#0  0x00007f7e095a5445 in ?? ()
 blackburn	#1  0x00007f7e095a8bab in ?? ()
 blackburn	#2  0x0000000000000000 in ?? ()
 pluskid	crazy_horse: so, shall I just remove the validation?
 crazy_horse	the only way I see how to handle that currently is to add some flag via which validation can be disabled
 pluskid	blackburn: I think you should recompile your shogun with debug enabled
 blackburn	oooooooh
 crazy_horse	pluskid: we need this validation when training svms etc
 crazy_horse	if we get invalid labels one gets weird results
 pluskid	crazy_horse: an extra parameter "do_validation" with default value true?
 crazy_horse	question is whether we should call is_valid upon set_labels
 crazy_horse	or should require the call to is_valid in all machines
 pluskid	things become complicated
 pluskid	no simpler solution?
 crazy_horse	I am open for suggestions
 wiking	blackburn: -g
 blackburn	wiking: -g what?
 wiking	blackburn: as a CFLAGS
 blackburn	hmm
 crazy_horse	blackburn: what are you doing?
 blackburn	okay food time
 wiking	blackburn: otherwise u'll have troubles with gdb-ing shogun
 blackburn	crazy_horse: trying to understand why my script fails here
 crazy_horse	pluskid: -g is usually on
 crazy_horse	blackburn: which script
 blackburn	crazy_horse: one for my thesis - uses multiclassliblinear
 crazy_horse	ok
 blackburn	fails on apply with exception but no message
 crazy_horse	why don't you use gdb on it directly?
 blackburn	on python?
 blackburn	hm why not
 crazy_horse	gdb --args python <scriptname.py>
 blackburn	okay I'll try
 pluskid	crazy_horse: how about we do not call valid_labels on constructors, but let CMachine call it before training started?
 crazy_horse	pluskid: that is what I suggested
 crazy_horse	I don't have a better solution...
 crazy_horse	maybe is valid should print a warning only
 crazy_horse	and return a boolean
 pluskid	print a warning doesn't make sense for returned CLabels, either
 blackburn	I think validation before training is better
 blackburn	okay bug I get is exactly that one we have in larank
 pluskid	fixing
 pluskid	BTW, do we need an explicit '\n' in SG_ERROR?
 blackburn	yes
 blackburn	I think so
 pluskid	ok, thanks
 crazy_horse	pluskid: ok then please do the changes and call is_valid() everywhere before training...
 crazy_horse	pluskid: btw there usually is some ASSERT(labels->get_label_type ...) etc just at the start of train*()
 pluskid	crazy_horse: isn't it simply call in CMachine::train?
 pluskid	all subclasses redefines train_machine
 pluskid	but CMachine::train is always called
 crazy_horse	pluskid: ahh indeed
 pluskid	fixing
 crazy_horse	so ASSERT(labels) should be put there too
 crazy_horse	only label type checking is specific to machine
 blackburn	hehe crazy_horse it is way to crazy to add it everywhere
 blackburn	too*
 crazy_horse	blackburn, pluskid - we will need it on other occassions however, like AUCKernel etc
 crazy_horse	so better check locations where label type is checked
 blackburn	pluskid: will you do that?
 blackburn	crazy_horse: did you remove ignore of operator[]?
 pluskid	here's the pull request
 crazy_horse	blackburn: no
 blackburn	hmm
 pluskid	blackburn: do what?
 blackburn	pluskid: "(04:06:23 PM) crazy_horse: blackburn, pluskid - we will need it on other occassions however, like AUCKernel etc"
 pluskid	I don't understand AUCKernel, what is it?
 blackburn	a kernel :)
 pluskid	a kernel that needs a label?
 CIA-113	shogun: Evgeniy Andreev master * r90bc6bd / (src/shogun/base/DynArray.h src/shogun/lib/DynamicArray.h): fixes warnings and potential bugs - http://git.io/geT-TQ
 CIA-113	shogun: Sergey Lisitsyn master * re27e8f2 / (src/shogun/base/DynArray.h src/shogun/lib/DynamicArray.h): Merge branch 'Arrays' of https://github.com/gsomix/shogun - http://git.io/0p2OJA
 CIA-113	shogun: Sergey Lisitsyn master * rc3b256b / (14 files in 2 dirs): Merge branch 'multiclass-ecoc' of https://github.com/pluskid/shogun - http://git.io/h3NEIw
 CIA-113	shogun: Chiyuan Zhang master * r4d35f91 / (5 files): An interface for checking label type - http://git.io/Du--tA
 CIA-113	shogun: Chiyuan Zhang master * r91de8f9 / (10 files in 2 dirs): CLabels::is_valid should only be called at proper situation. - http://git.io/_eLB9Q
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
 blackburn	pluskid: yeah..
 pluskid	strange...
 pluskid	I'll look at it
 crazy_horse	pluskid: there are other such things ...
 pluskid	crazy_horse: please give me a list
 pluskid	or maybe you can add them? just one line
 pluskid	labels->ensure_valid()
 crazy_horse	pluskid: I don't know which ones they are by heart
 pluskid	omg
 crazy_horse	grep for labels->get_label_type
 crazy_horse	pluskid: there simply are too many
 pluskid	ok
 pluskid	-.-
 pluskid	that many?
 crazy_horse	pluskid: well evaluation for sure
 pluskid	evaluation?
 crazy_horse	shogun/evaluation
 pluskid	why evaluation have to ensure (e.g.) a binary label has both +1 and -1?
 blackburn	ROC would fail I think
 blackburn	unwanted /0 I think
 pluskid	ah?
 pluskid	isn't ROC calculated on accuracy and recall?
 pluskid	I think having all +1 labels is OK unless I predict them all wrong
 blackburn	ROC calculated on TPR and FPR
 pluskid	hmm
 blackburn	if everything in truth labels is +1 - you would have divide by zero here
 blackburn	pluskid: elt me fix evals
 pluskid	blackburn: thanks
-!- blackburn [~blackburn@188.122.250.167] has quit [Remote host closed the connection]
-!- blackburn [~blackburn@188.122.250.167] has joined #shogun
 karlnapf	tsts cloning and updating takes > 10 mins now
 crazy_horse	karlnapf: we will take care of that but for now please help fix the issues :D
 blackburn	argh gnome shell died
 CIA-113	shogun: Sergey Lisitsyn master * rc196b13 / (3 files): Added ensure_valid to ROC, PRC and ContingencyTableEvaluation - http://git.io/KImlPQ
 karlnapf	crazy_horse, yes youre right :), but I currently cannot even compile
 crazy_horse	karlnapf: why that?
 karlnapf	because my code is still updating
 blackburn	you have bad connection there in UK :D
 blackburn	have someone broke that cable across strait of dover?
 karlnapf	I know :)
 crazy_horse	blackburn: you should be pretty quiet here you merged this!
 karlnapf	UK internet completely sucks
 karlnapf	100kb/s during this time of the day
 karlnapf	and that costs you 45 punds a month
 blackburn	crazy_horse: at least I have OK connection :D
 karlnapf	pounds
 crazy_horse	these mad russians :D
 crazy_horse	pluskid: https://github.com/shogun-toolbox/shogun/pull/545/files look at the indention
 crazy_horse	something is again getting wrong
 crazy_horse	otherwise it is ready to merge
 pluskid	crazy_horse: oops, I'll fix this
 crazy_horse	pluskid: other patches from today have similar problem :/
 crazy_horse	thanks
 pluskid	it seems I accidentally configured expandtab in vim
 pluskid	:(
-!- wiking [~wiking@we02c096.ugent.be] has joined #shogun
-!- wiking [~wiking@we02c096.ugent.be] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 245 seconds]
 crazy_horse	ahh
 crazy_horse	pluskid: but ts=4 right? so we could replace 4 spaces -> 1 tab everywhere?
 pluskid	hmm, maybe I can do a sed in the whole codebase
 crazy_horse	pluskid: maybe we first fix this problem then do that later
 crazy_horse	isn't there some source code beautifier that could do this anyway?
 crazy_horse	maybe not a good idea
 crazy_horse	for third party stuff we would then have to do a full diff /compare
 crazy_horse	it is hard enough already
 pluskid	code beautifier might be complicated to config to obey shogun convention
 crazy_horse	pluskid: and we don't wnat to touch external code
 crazy_horse	so no
 crazy_horse	pluskid: just fix this one here and lets get labels to stable for now
 pluskid	fixed
 blackburn	crazy_horse: it seems you liked new nickname?
 crazy_horse	I cannot change it back
-!- crazy_horse is now known as sonne|work
 blackburn	:D
-!- blackburn is now known as crazy_horse
 sonne|work	pluskid: still weird https://github.com/shogun-toolbox/shogun/pull/545/files
 sonne|work	pluskid ^last one
-!- sonne|work is now known as crazy_russian
-!- crazy_horse is now known as BODKA
-!- crazy_russian is now known as sonne|work
-!- sonne|work is now known as blackburn
-!- BODKA is now known as sonne|work
 blackburn	sonne|work:  can you look at my pull request?
 sonne|work	blackburn: no! I have 3 works and 9 kids!
 pluskid	BODKA: finally this one should be correct
 sonne|work	jobs :D
 CIA-113	shogun: Chiyuan Zhang master * rd3b4e9c / (3 files): Ensure related kernels call labels->ensure_valid - http://git.io/EwJ2wg
 CIA-113	shogun: Chiyuan Zhang master * r8d10a3a / (3 files): Fix indentation convention - http://git.io/_PmJPw
 CIA-113	shogun: Chiyuan Zhang master * r6fb43da / src/shogun/kernel/ScatterKernelNormalizer.h : fixed more indent conventions - http://git.io/tkRPaQ
 CIA-113	shogun: Soeren Sonnenburg master * r1cc1e70 / (3 files): Merge pull request #545 from pluskid/multiclass-ecoc - http://git.io/8lJ32w
 blackburn	pluskid: let sonne|work merge this :D
 blackburn	ohh he did already
 blackburn	good
 sonne|work	blackburn: did you make any progress on SLEP?
 karlnapf	blackburn, how does this new labels stuff work
 karlnapf	where do I have to pay attention?
 sonne|work	hmm
 sonne|work	clustering now fail
 sonne|work	because of check in train()
* pluskid is crazy trying to send some fax via the internet
 sonne|work	karlnapf: okay in new concept outputs of say svm are stored in confidences of labels
 sonne|work	and actual labels are +1 or -1
 karlnapf	sonne|work yes just read a bit through it
 karlnapf	the modsel example fails because train_locked has no distinction between label types yet
 sonne|work	ahh
 karlnapf	I will add that
 sonne|work	yes add please
 karlnapf	there also is a new memory leak if training is not performed locked
 karlnapf	sonne|work, how was the policy for SG_REF again when a new object is returned?
* blackburn thinks sonne|work is so wise
 sonne|work	lol
 sonne|work	karlnapf: no need to SG_REF new object IIRC
 karlnapf	kk
 blackburn	sonne|work: greetings to russia!
 karlnapf	do we have any more cases than regression and binary yet?
 blackburn	err from :D
 blackburn	multiclass
 sonne|work	blackburn: I do not act like an idiot! you are a bad actor :)
 karlnapf	apply_multiclass is not in kernelmachine so far
 sonne|work	karlnapf: multiclassmachine
 karlnapf	ah sure, of course
 sonne|work	and kernelmulticlassmachine
 blackburn	sonne|work: yeah I am stupid
 CIA-113	shogun: Sergey Lisitsyn master * r4ead6f0 / (5 files in 2 dirs): Added virtual method indicating whether machine requires labels for training, - http://git.io/-vLWLw
-!- vikram360 [~vikram360@117.192.164.136] has quit [Ping timeout: 260 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
 CIA-113	shogun: Sergey Lisitsyn master * r32ce04d / (2 files): Fixes for OnlineLinearMachine - http://git.io/3Iv4uA
-!- vikram360 [~vikram360@117.192.164.136] has joined #shogun
 CIA-113	shogun: Sergey Lisitsyn master * r3f690ca / (2 files): Fixes for PluginEstimate - http://git.io/OJThLw
-!- uricamic1 [~uricamic@2001:718:2:1634:5c56:5c20:5842:ed51] has quit [Quit: Leaving.]
 pluskid	import shogun.Features.MulticlassLabels
 pluskid	crashes python...
 sonne|work	blackburn: you are pretty active today!
 blackburn	thank you!
-!- karlnapf [~heiko@host86-176-102-20.range86-176.btcentralplus.com] has quit [Ping timeout: 276 seconds]
-!- karlnapf [~heiko@host86-176-125-91.range86-176.btcentralplus.com] has joined #shogun
 pluskid	no longer crash with the latest code
 CIA-113	shogun: Sergey Lisitsyn master * r4d58627 / (2 files): Fixes for WDSVMOcas - http://git.io/kKX2-A
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
* blackburn strikes again
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 karlnapf	the semantics of the apply code have changed
 karlnapf	that causes the errors in the locked examples
 karlnapf	before, apply() directly called apply on all indices
 karlnapf	now its different
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	my blog is oficially created, yay!!
 pluskid	n4nd0: show us the url
 n4nd0	http://iglesiashogun.wordpress.com
 n4nd0	there is nothing yet :O
 pluskid	oops, The connection was reset
 pluskid	behind the wall
 pluskid	this blog is created specially for shogun?
 karlnapf	n4nd0, cool :)
 n4nd0	pluskid: yeah
 n4nd0	pluskid: I have no intention to blog about more stuff this far
 n4nd0	karlnapf: thank you :)
 karlnapf	I also got one:
 karlnapf	http://herrstrathmann.de/google-summer-of-code-blog
 blackburn	sonne|work: can you add them to planet shogun?
 karlnapf	blackburn, there is an error in contingency table evaluation
 karlnapf	passing the same labels twice results in non 1.0 accuracy
 karlnapf	to bee seen in the kernel_machine_train_locked example
 karlnapf	which I will push now
 blackburn	karlnapf: uh that must be due to the new labels ...
 karlnapf	yeh, probably :D
 blackburn	karlnapf: could you paste a reproducible example?
-!- gsomix [~gsomix@188.168.3.106] has quit [Ping timeout: 252 seconds]
 n4nd0	see you later guys
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- karlnapf1 [~heiko@host86-180-47-142.range86-180.btcentralplus.com] has joined #shogun
 karlnapf1	uuh London internet rocks
-!- karlnapf [~heiko@host86-176-125-91.range86-176.btcentralplus.com] has quit [Ping timeout: 276 seconds]
 CIA-113	shogun: Heiko Strathmann master * r2a49637 / (6 files in 2 dirs): Merge pull request #547 from karlnapf/master - http://git.io/0k2g9g
 CIA-113	shogun: Heiko Strathmann master * r3d93199 / examples/undocumented/libshogun/modelselection_grid_search_kernel.cpp : extended example to use locked and unlocked x-validation - http://git.io/150L6w
 karlnapf1	blackburn, see output of kernel_machine_train_locked
 karlnapf1	displays labels, output and accuracy
 CIA-113	shogun: Heiko Strathmann master * r95f980f / (4 files): added label distinctions for apply_locked - http://git.io/Ao80FQ
 CIA-113	shogun: Heiko Strathmann master * r18894b6 / src/shogun/machine/KernelMachine.cpp : removed unnecessary check - http://git.io/67dEog
 CIA-113	shogun: Heiko Strathmann master * r516773c / examples/undocumented/libshogun/kernel_machine_train_locked.cpp : some more output messages revealed an error in CEvaluation - http://git.io/zo5YWQ
 blackburn	karlnapf1: ok will have a look
 karlnapf1	I think we should write more test cases
 karlnapf1	defined input /output
 blackburn	karlnapf1: we have that but not activated
 blackburn	and I guess now everything is b0rken
 karlnapf1	I mean for simple stuff
 karlnapf1	like single methods
 karlnapf1	but ok
 karlnapf1	later :)
 blackburn	karlnapf1: each python modular example is a test case...
 karlnapf1	I know
 blackburn	and they cover all simple examples like creating feature objects etc
 blackburn	ok
 karlnapf1	but I think we should do this in a more systematics way
 blackburn	later yes
 karlnapf1	so that errors are easy to find
 blackburn	makes sense
 karlnapf1	otherwise it always takes 20 mins to find a bug which would be immediately found by a test
 blackburn	documentation sprint & test sprint :)
-!- blackburn is now known as crazy_horse
-!- karlnapf [~heiko@host86-176-126-86.range86-176.btcentralplus.com] has joined #shogun
-!- sonne|work is now known as blackburn
 blackburn	back
-!- karlnapf1 [~heiko@host86-180-47-142.range86-180.btcentralplus.com] has quit [Ping timeout: 276 seconds]
 blackburn	karlnapf: cool homepage
 karlnapf	blackburn, thanks :)
 karlnapf	Ill pass it on
 blackburn	karlnapf: so what is wrong with contingency table/
 karlnapf	have you run the example?
 blackburn	which one?
 karlnapf	kernel_machene_train_locked
 blackburn	it was soeren you know
 blackburn	:D
 blackburn	py or cpp?
 CIA-113	shogun: Chiyuan Zhang master * r85330b4 / (2 files in 2 dirs): Make LLBDecoder non-abstract - http://git.io/QjV05g
 CIA-113	shogun: Chiyuan Zhang master * rcc662e7 / examples/undocumented/python_modular/classifier_multiclass_ecoc_ovr.py : Now the equivalence of OVR and ECOCOVR+LLBDecoding validated - http://git.io/V4thPg
 blackburn	karlnapf: I didn't know you born in 1984 :D
 blackburn	you are a big boy comparing to me hehe
-!- karlnapf1 [~heiko@host86-176-252-136.range86-176.btcentralplus.com] has joined #shogun
 karlnapf1	sorry blackburn, internet connection :(
 karlnapf1	did you write anything?
 blackburn	(06:55:06 PM) blackburn: karlnapf: I didn't know you born in 1984 :D
 blackburn	(06:55:26 PM) blackburn: you are a big boy comparing to me hehe
 karlnapf1	well :)
 blackburn	ok so back to contingency
 karlnapf1	28 so far :)
 blackburn	21 here
-!- karlnapf [~heiko@host86-176-126-86.range86-176.btcentralplus.com] has quit [Ping timeout: 276 seconds]
 karlnapf1	I know :)
@sonney2k	hey add the magic 7 :)
 blackburn	hahah
 blackburn	hoahaha
@sonney2k	and you know my age :D
 blackburn	hahha
 blackburn	21,28,35
 blackburn	cool
@sonney2k	from diapers to retirement
 karlnapf1	soeren is 35?
@sonney2k	karlnapf1, yeah you may call me daddy
 karlnapf1	oh, just read the last lines :)
 karlnapf1	hehe, you in fact are one
 blackburn	heh I think we need a 14 yrs old developer
 karlnapf1	lol magic 7
@sonney2k	42 would also not be bad
-!- crazy_horse was kicked from #shogun by sonney2k [crazy_horse]
 blackburn	heh yeah that would bake you young again
 blackburn	bake?
 blackburn	make
 blackburn	:D
 karlnapf1	who is crazy horse?
 blackburn	karlnapf1: it was crazy_soeren
 karlnapf1	oh, two much code refactoring today? :D
 blackburn	yeah that hurts your health sometimes
 blackburn	:D
 karlnapf1	hehe :)
 blackburn	karlnapf1: so what is the reproducing example?
 karlnapf1	kernel_machine_train_locked
 blackburn	i checked contingency - see nothing bad here
 karlnapf1	I already wrote 5 times
 karlnapf1	but always my connection died before
 blackburn	hehe
 blackburn	no I get it
 karlnapf1	have a look at the output
 blackburn	but I can't see anything realted to evaluations
 blackburn	terminate called after throwing an instance of 'shogun::ShogunException'
 blackburn	[ERROR] CKernelMachine::apply(CFeatures*) cannot be called when data_lock was called before. Call data_unlock to allow.Aborted (core dumped)
 blackburn	that's what I see
 karlnapf1	oh
 karlnapf1	fetch my update
 blackburn	ok let me recompile
 karlnapf1	I fixed a bug before that happened
 blackburn	it seems I forgot that
 karlnapf1	(you added this locked check in apply() although that wasnt necessary)
 karlnapf1	I removed it again
 karlnapf1	blackburn, I need a coffee break, will be back in 10 mins
 blackburn	ok sure
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has joined #shogun
 blackburn	karlnapf1: ok I tried to reproduce - multiple calls have equal accuracies..
 blackburn	ah labels are equal
 blackburn	but accuracy is not
 blackburn	I see
@sonney2k	blackburn, I am fixing it
 blackburn	sonney2k: ok
@sonney2k	we need to use labels
@sonney2k	not confidence here
 blackburn	http://img-fotki.yandex.ru/get/6110/65616424.78/0_759a7_99ae425c_XXL
 blackburn	crazy russian bridge
 blackburn	sonney2k: but why? it should work too - are confidences set wrong or what?
 CIA-113	shogun: Soeren Sonnenburg master * rd27ca42 / src/shogun/evaluation/ContingencyTableEvaluation.cpp : use get_label() in contingencytableeval - http://git.io/yGkELQ
@sonney2k	blackburn, because they are hardly == 1
@sonney2k	blackburn, actually >=1 ?
@sonney2k	what?
 blackburn	oh
 blackburn	>=0
@sonney2k	we should put == 1 there
 blackburn	in case of labels yes
 blackburn	in case of confidences >=0 I guess
@sonney2k	blackburn, what this does is just count TPs, FPs, ...
 karlnapf1	re
@sonney2k	for the fixed threshold
 blackburn	yes
@sonney2k	so we can just use labels
@sonney2k	using confidences only make sense if we do sign(x + thresh)
@sonney2k	or so
 CIA-113	shogun: Soeren Sonnenburg master * r33a03c0 / src/shogun/evaluation/ContingencyTableEvaluation.cpp : check for equality - http://git.io/AX6U-Q
@sonney2k	blackburn, did you know that java throws a divide by zero exception if you do 1/0 but not 1.0/0.0 ?
 blackburn	sonney2k: no but it looks obvious
@sonney2k	totally!
 blackburn	1.0/0.0 = NaN
 blackburn	or?
@sonney2k	inf
@sonney2k	or ?
 blackburn	inf
 blackburn	yes inf
 blackburn	hmm what is nan?
 blackburn	0.0/0.0 I guess
@sonney2k	karlnapf1, so you know how to fix the modsel stuff?
-!- karlnapf [~heiko@host86-181-9-71.range86-181.btcentralplus.com] has joined #shogun
 karlnapf	.
@sonney2k	karlnapf, so you know how to fix the modsel stuff?
@sonney2k	man you have some krappy KONNEXION
 karlnapf	I dont get it: I am in the capital of europe but the internet SUCKS
 blackburn	haha abramovich has bought all the bandwidth in uk I guess
 blackburn	chelsea is not enough
 karlnapf	annoying: I am working on a cluster compute remotely ....
 karlnapf	sonney2k, the modsel example works again
@sonney2k	really?
 karlnapf	I added the label distinction
@sonney2k	the libshogun ones still crash
 karlnapf	in kernel machine
 karlnapf	huh?
 karlnapf	let me check
-!- karlnapf1 [~heiko@host86-176-252-136.range86-176.btcentralplus.com] has quit [Ping timeout: 276 seconds]
 blackburn	no it works
 blackburn	sonney2k: works
 karlnapf	k
@sonney2k	even modelselection_grid_search_linear ?
@sonney2k	it crashes here
@sonney2k	./modelselection_grid_search_linear
@sonney2k	parameters available for model selection for LibLinear:
@sonney2k	C1 (C Cost constant 1.): float64
@sonney2k	C2 (C Cost constant 2.): float64
@sonney2k	root with
@sonney2k	C1 with values: vector=[0.25,0.5,1,2,4]
@sonney2k	C2 with values: vector=[0.25,0.5,1,2,4]
@sonney2k	[ERROR] Not a two class labeling - no negatively labeled examples found
@sonney2k	terminate called after throwing an instance of 'shogun::ShogunException'
@sonney2k	Aborted
 karlnapf	oh
 karlnapf	sonney2k, yes I will have a look at these
@sonney2k	karlnapf, does the accuracy stuff work again?
@sonney2k	I mean with the patch I just submitted?
 karlnapf	sonney2k, yes
@sonney2k	ok good
 karlnapf	sonney2k, could we add somethign to error messages to know from which line in which file these come from?
@sonney2k	pluskid, can you have a look at evaluation_clustering.py ?
@sonney2k	if you are not sleeping already
@sonney2k	karlnapf, just enable
 karlnapf	how=?
 blackburn	sonney2k: no I am fixing it
 blackburn	already get the error
@sonney2k	enable_file_and_line
 karlnapf	sonney2k, nice!
 karlnapf	sonney2k, is this a compile switch or a runtime flag?
@sonney2k	obj.io.enable_file_and_line()
@sonney2k	pluskid, ok then better go to bed before I find more bugs :)
@sonney2k	karlnapf, runtime flag
@sonney2k	like obj.io.enable_progress()
@sonney2k	blackburn, libsvmoneclass doesn't get any labels now ? but what is this classifier_libsvmoneclass_modular.py?
 blackburn	sonney2k: could you please ignore [] and =?
 blackburn	sonney2k: I'll check
@sonney2k	hmmhh classifier_multiclass_ecoc.py TypeError: Cannot create new instances of type 'ECOCSimpleDecoder'
@sonney2k	^ that is still sth for pluskid
 pluskid	too bad I didn't go to bed just now :p
 CIA-113	shogun: Sergey Lisitsyn master * r2741f89 / (2 files): Added problem type to clustering - http://git.io/JWPZTw
@sonney2k	pluskid, apologies to keep you awake
 pluskid	I'll spend 15min on the ECOC bug, if I fail, I'll kill it tomorrow
-!- vikram360 [~vikram360@117.192.164.136] has quit [Ping timeout: 250 seconds]
@sonney2k	thx
@sonney2k	alright got to leave train
@sonney2k	btw 30 C here
 pluskid	so hot
@sonney2k	and in train even hotter
 pluskid	no air conditioner ?
@sonney2k	nope
 pluskid	toooooooo strange, you have WIFI on train but have no air conditioner....
@sonney2k	cu
 pluskid	cu
 blackburn	okay the only libshogun examples those are failing are modelselection ones
 CIA-113	shogun: Sergey Lisitsyn master * r75cc249 / src/shogun/classifier/svm/LibSVMOneClass.h : Made LibSVMOneClass do not require labels - http://git.io/BWAYaw
-!- karlnapf1 [~heiko@host86-177-117-96.range86-177.btcentralplus.com] has joined #shogun
-!- karlnapf [~heiko@host86-181-9-71.range86-181.btcentralplus.com] has quit [Ping timeout: 276 seconds]
-!- pluskid [~pluskid@111.120.62.119] has quit [Quit: Leaving]
-!- karlnapf [~heiko@host86-181-154-199.range86-181.btcentralplus.com] has joined #shogun
-!- karlnapf1 [~heiko@host86-177-117-96.range86-177.btcentralplus.com] has quit [Ping timeout: 260 seconds]
 puffin444	Hey I have a question
-!- karlnapf1 [~heiko@host86-185-113-10.range86-185.btcentralplus.com] has joined #shogun
 puffin444	It looks like the Google office event limits presentations to 5-8 min, 4 slides.
-!- karlnapf [~heiko@host86-181-154-199.range86-181.btcentralplus.com] has quit [Ping timeout: 260 seconds]
 puffin444	How does one present GPs to a general audience in 5 mins?
-!- vikram360 [~vikram360@117.192.164.136] has joined #shogun
-!- karlnapf [~heiko@host86-185-113-58.range86-185.btcentralplus.com] has joined #shogun
-!- karlnapf1 [~heiko@host86-185-113-10.range86-185.btcentralplus.com] has quit [Ping timeout: 245 seconds]
-!- karlnapf1 [~heiko@host86-179-59-186.range86-179.btcentralplus.com] has joined #shogun
-!- karlnapf [~heiko@host86-185-113-58.range86-185.btcentralplus.com] has quit [Ping timeout: 245 seconds]
-!- karlnapf [~heiko@host86-185-15-136.range86-185.btcentralplus.com] has joined #shogun
-!- karlnapf2 [~heiko@host86-177-182-9.range86-177.btcentralplus.com] has joined #shogun
 karlnapf2	why do you enforce that +1 and -1 exists in binary labels? what if machine only returns +1 in apply?
 karlnapf2	this causes the error in x-val
 blackburn	puffin444: oops
 puffin444	blackburn: oops?
 blackburn	puffin444: 5 mins? :)
-!- karlnapf1 [~heiko@host86-179-59-186.range86-179.btcentralplus.com] has quit [Ping timeout: 260 seconds]
 blackburn	good question
 puffin444	Yep. I have 5 mins to explain what Shogun is, why its cool, and and advanced machine learning algorithm :)
-!- karlnapf [~heiko@host86-185-15-136.range86-185.btcentralplus.com] has quit [Ping timeout: 245 seconds]
 blackburn	puffin444: I am afraid you would need to explain what means 'gaussian', 'process' and how can you apply it :)
-!- karlnapf [~heiko@host86-176-253-193.range86-176.btcentralplus.com] has joined #shogun
-!- karlnapf2 [~heiko@host86-177-182-9.range86-177.btcentralplus.com] has quit [Ping timeout: 245 seconds]
 puffin444	blackburn: I guess so.
 blackburn	as for shogun
 blackburn	hmm..
 blackburn	say it is large scale (sonney2k applied it to whole human genome once)
 CIA-113	shogun: Heiko Strathmann master * r653fa34 / src/shogun/evaluation/ContingencyTableEvaluation.cpp : Merge pull request #548 from karlnapf/master - http://git.io/SwL84A
 CIA-113	shogun: Heiko Strathmann master * r0cb67a7 / src/shogun/evaluation/ContingencyTableEvaluation.cpp : bugfix: removed valid check since this case has to be allowed - http://git.io/0nrGvA
 blackburn	have a lot of interfaces
 blackburn	and under heavy and fast development
 puffin444	sonney2k applied to the whole human genome! :o
 blackburn	puffin444: yes iirc he trained svm on some subset and applied to the whole genome
 puffin444	Do you some of the details? I would definitely want to bring that up.
 puffin444	blackburn: Also, didn't you mention that you applied Shogun to traffic lights?
 blackburn	puffin444: hmm yes I am applying it to recognize traffic signs (not lights)
 puffin444	blackburn: Traffic signs. Got it.
 blackburn	puffin444: wiking is applying it to recognize medical images
 puffin444	blackburn: Like fMRI?
-!- karlnapf [~heiko@host86-176-253-193.range86-176.btcentralplus.com] has quit [Ping timeout: 245 seconds]
 blackburn	yes it is one of modalities
-!- karlnapf [~heiko@host86-182-165-38.range86-182.btcentralplus.com] has joined #shogun
-!- karlnapf [~heiko@host86-182-165-38.range86-182.btcentralplus.com] has quit [Ping timeout: 245 seconds]
-!- karlnapf [~heiko@host86-177-176-105.range86-177.btcentralplus.com] has joined #shogun
@sonney2k	puffin444, shogun is used to do genome annotations, predictions have been made to detect genes (part of official annotation of C.elegans is mGene that uses shogun for the genomic signals)
@sonney2k	I used it to predict the solubility of molecules in water
@sonney2k	and to predict starts of the gene on the human genome
@sonney2k	puffin444, we used the coffin principle to predict gender based on face images
 puffin444	sonney2k: What classification task was used for 6-7 billion test cases in the human genome? Was that to detect genes?
@sonney2k	karlnapf, the check should only be there when really needed
@sonney2k	puffin444, starts of the gene
 puffin444	It's just that I only have so much space on my maximum 4 slides
 puffin444	sonney2k: ok
@sonney2k	basically for each nucleotide scanning the human genome in both directions
@sonney2k	~7billion nt
@sonney2k	but I also learned a splice site detector (something inside of a gene) and I trained on ~50 million sequences of length 141 in a ~10 million dimensional feature space
-!- karlnapf1 [~heiko@host86-181-156-142.range86-181.btcentralplus.com] has joined #shogun
 blackburn	hmm I get 0.0 accuracy constantly
 blackburn	:D
@sonney2k	blackburn, you could be better :)
 blackburn	some bug there..
-!- karlnapf [~heiko@host86-177-176-105.range86-177.btcentralplus.com] has quit [Ping timeout: 245 seconds]
-!- karlnapf1 [~heiko@host86-181-156-142.range86-181.btcentralplus.com] has quit [Ping timeout: 245 seconds]
-!- karlnapf [~heiko@host86-179-59-28.range86-179.btcentralplus.com] has joined #shogun
-!- alexberlin [82955843@gateway/web/freenode/ip.130.149.88.67] has joined #shogun
@sonney2k	hi alexberlin
 alexberlin	tester
 alexberlin	bla
 karlnapf	sonney2k, blackburn and the rest: I give up for today, this internet connection drives me mad, hope its better tomorrow
 blackburn	haha
 karlnapf	but the modsel examples should run now
 karlnapf	there was this check
 karlnapf	assertion that labels of both +1 and -1 appear in label instance in the evaluation
 karlnapf	but this doesnt always hold
 karlnapf	bye :)
-!- karlnapf [~heiko@host86-179-59-28.range86-179.btcentralplus.com] has left #shogun []
 CIA-113	shogun: Sergey Lisitsyn master * refb79fe / src/shogun/multiclass/MulticlassOCAS.h : Changed C type of multiclass OCAS to proper float64_t - http://git.io/CKQMZw
-!- gsomix [~gsomix@188.168.14.91] has joined #shogun
 blackburn	sonney2k: here?
 blackburn	I do not understand why do you call obtain from generic in these macroses
@sonney2k	blackburn, yes
@sonney2k	?
 blackburn	sonney2k: e.g. apply_binary  returns BinaryLabels
 blackburn	why to cast it
@sonney2k	ahh
@sonney2k	no need to indeed
@sonney2k	fixing
 blackburn	sonney2k: could you please remove unneeded apply macroses too?
@sonney2k	?
 CIA-113	shogun: Soeren Sonnenburg master * r2786e87 / src/interfaces/modular/Machine.i : remove unneeded casts - http://git.io/RrDHfA
 blackburn	for conjugateindex, wdocas, etc
@sonney2k	blackburn, why are they not needed?
 blackburn	sonney2k: hmm no apply(CFeatures* data) here anymore
@sonney2k	blackburn, that is why we need to introduce one
 blackburn	hmmm
@sonney2k	blackburn, are we mostly good with the transition now btw?
 blackburn	sonney2k: yes
 blackburn	sonney2k: I was confused with some case here
 blackburn	apply() returned some useless shit with 0.0 accuracy
 blackburn	and apply_multiclass() is correct
 blackburn	I use MulticlassLibLinear
 blackburn	I do not understand why it is so
@sonney2k	blackburn, please compare label/confidence outputs
 shogun-buildbot	build #236 of nightly_none is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/236
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
@sonney2k	blackburn, I am asking because we should try to strip shogun src
@sonney2k	from this massive 100mb file
 blackburn	sonney2k: ah yes
 blackburn	sonney2k: do you know how to do that? I found some ways to do that
 blackburn	apply() = [ 13.  13.  13. ...,  23.  23.  23.]
 blackburn	apply_multiclass() = [ 16.   1.  38. ...,   6.   7.  10.]
 blackburn	confidences are []
 blackburn	how can that be damn..
@sonney2k	blackburn, please valgrind
@sonney2k	I will be away for some time now - blackburn if you have time please try to fix static interfaces...
 blackburn	I wanted to get my thesis 0.05% complete tonight
 blackburn	:)
 puffin444	Going to lunch. Be back in a bit.
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has quit [Quit: Page closed]
-!- vikram360 [~vikram360@117.192.164.136] has quit [Ping timeout: 276 seconds]
 blackburn	hahaha
 CIA-113	shogun: Sergey Lisitsyn master * r40e4ea3 / src/interfaces/modular/Machine.i : Splitted methods in apply macro in Machine.i. - http://git.io/z--1pg
 blackburn	hmm that didn't help
@sonney2k	blackburn, can we revert it then?
 blackburn	sonney2k: problem is still here
 blackburn	..
@sonney2k	so yes
@sonney2k	did you valgrind?
 blackburn	sonney2k: apply(feats) applies for train features
 blackburn	no not memory problem
@sonney2k	blackburn, no valgrind errors?
 blackburn	sonney2k: it applies to train features
 blackburn	not to given ones
 blackburn	sonney2k: can you try to fix it?
 CIA-113	shogun: Sergey Lisitsyn master * r99f81b6 / src/interfaces/modular/Machine.i : Revert "Splitted methods in apply macro in Machine.i." - http://git.io/LEsGpg
@sonney2k	blackburn, can you try mcsvm.apply(testfeat)
@sonney2k	I have an idea...
 blackburn	classifier = MulticlassLibLinear(C,feats_train,labels)
 blackburn	classifier.train()
 blackburn	out = classifier.apply(feats_test).get_labels()
 blackburn	print out
 blackburn	out = classifier.apply_multiclass(feats_test).get_labels()
 blackburn	print out
 blackburn	sonney2k: ^
 blackburn	different out
@sonney2k	blackburn, I guess it is because of the apply(CFeatuers=NULL)
 blackburn	yes I tried to approach it but that was wrong guess
@sonney2k	blackburn, anyway can we now first fix the 100MB repository
@sonney2k	http://help.github.com/remove-sensitive-data/
@sonney2k	what was the filename again?
 blackburn	just remove *.gz2.pickle
 blackburn	and *.gz2
@sonney2k	I will create a fresh clone
@sonney2k	will take some time
 blackburn	sonney2k: will it break all forks/
@sonney2k	yes
@sonney2k	we have to announce this on the mailing list
@sonney2k	blackburn, *.bz2 you mean?
 blackburn	sonney2k: eb07b040ce533393043d9b3241e79a62e8f390ba
 blackburn	applications/asp/data/Cress.dat.bz2
 blackburn	applications/asp/data/Cress.dat.bz2.pickle
 blackburn	applications/asp/data/Fly.dat.bz2
 blackburn	applications/asp/data/Fly.dat.bz2.pickle
 blackburn	applications/asp/data/Human.dat.bz2
 blackburn	applications/asp/data/Human.dat.bz2.pickle
 blackburn	applications/asp/data/Worm.dat.bz2
 blackburn	applications/asp/data/Worm.dat.bz2.pickle
@sonney2k	ok so *.bz2*
* sonney2k 50% cloned
@sonney2k	full checkout is 159M
@sonney2k	lets remove the files
 blackburn	sonney2k: 154M../../.git
 blackburn	yes just like .git
 blackburn	~
@sonney2k	blackburn, do you want to remove sth else?
@sonney2k	now would be a good time :D
 blackburn	sonney2k: hmm no idea
 blackburn	were there any other bad commits?
@sonney2k	probably
@sonney2k	but who cares - we suck bad w/ git at least we did when we started
@sonney2k	no way to hide that
 blackburn	I do not care about lame commits at all
@sonney2k	me neither, I am very proud of the F... OFF SOEREN commit
 blackburn	hahah
@sonney2k	and other username not set ones :D
 blackburn	hm there was a use
 blackburn	r
 blackburn	I liked very much
 blackburn	hmm
@sonney2k	157M
@sonney2k	haha
 blackburn	sonney2k: that's ok
 blackburn	if you didn't gc prune
@sonney2k	I did
 blackburn	???
 blackburn	interesting
 blackburn	sonney2k: how did you use filter-branch?
@sonney2k	git filter-branch --index-filter 'git rm --cached --ignore-unmatch *.bz2*'
@sonney2k	it mentioned rm of all the files btw
@sonney2k	blackburn, let me push it to shogun-toolbox/test
@sonney2k	dammed connection died
@sonney2k	...again
 blackburn	hmm
@sonney2k	...120k/s now
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has joined #shogun
@sonney2k	blackburn, it's there
@sonney2k	please check it our
@sonney2k	out
@sonney2k	https://github.com/shogun-toolbox/test
 blackburn	50% 10mb
 blackburn	20mb
 blackburn	43 mb
 blackburn	sonney2k: .git is 23M
@sonney2k	ok great
@sonney2k	so shall I force push it?
@sonney2k	basically all history sha's since january will then be different
@sonney2k	and everyone will have to rebase
@sonney2k	blackburn, ??
 blackburn	sonney2k: I don't mind
 blackburn	it is much better than having 150M .git
@sonney2k	yeah
@sonney2k	blackburn, done
@sonney2k	please pull again from that one
@sonney2k	don't overwrite the other yet
 blackburn	sonney2k: from test?
 blackburn	blackburn@blackburn-laptop:~/OSS/test/test$ git pull
 blackburn	fatal: https://github.com/shogun-toolbox/test.git/info/refs not found: did you run git update-server-info on the server?
@sonney2k	blackburn, not test
@sonney2k	the real one
 CIA-113	shogun: Sergey Lisitsyn master * r91829c9 / src/interfaces/modular/Machine.i : Revert "Splitted methods in apply macro in Machine.i." (+1449 more commits...) - http://git.io/oQs9Lg
@sonney2k	test is RIP
@sonney2k	btw look at what it does https://github.com/shogun-toolbox/shogun/pull/546
 blackburn	hahah
@sonney2k	btw are branches now dead too?
@sonney2k	seems like
 blackburn	sonney2k: .git is 158M here now :)
@sonney2k	blackburn, on a fresh clone?
 blackburn	no
 blackburn	old one
 blackburn	ok doing fresh
@sonney2k	don't erase the old one though
 blackburn	ok
@sonney2k	we still have backups at google / shogun-toolbox
@sonney2k	I guess I need to clone with --mirror to get the branches
@sonney2k	doing that now
-!- hoijui [~hoijui@dslb-092-078-177-248.pools.arcor-ip.net] has joined #shogun
@sonney2k	at least we don't have to delete the whole thing
 blackburn	yeah
@sonney2k	mirror gets the branches
@sonney2k	running filterbranch again
@sonney2k	I guess I have to push --mirror or push --all
@sonney2k	blackburn, btw we started with 22M
@sonney2k	when we switched to git
 blackburn	hmm
 blackburn	well 30M now not much larger
@sonney2k	yeah git rocks
@sonney2k	considering how much changed
-!- alexberlin [82955843@gateway/web/freenode/ip.130.149.88.67] has quit [Ping timeout: 245 seconds]
* gsomix writes poisson brackets,  live-civita symbols and thinks about him...
 gsomix	*levi-civita
 shogun-buildbot	build #971 of libshogun is complete: Failure [failed git]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/libshogun/builds/971  blamelist: blackburn91@gmail.com
@sonney2k	gsomix, want to be a guinea pig?
 shogun-buildbot	build #972 of libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/libshogun/builds/972
@sonney2k	blackburn, ok done
@sonney2k	I think we should exercise once how the rebase could work
@sonney2k	gsomix, you have a pull request open on git hub
 blackburn	sonney2k: hm let me try to rebase my master
 blackburn	in fork
@sonney2k	gsomix, can you please make a copy of your shogun git
@sonney2k	then in this copy do a git pull --rebase ?
@sonney2k	blackburn, yeah please do
 gsomix	sonney2k, copy? ok.
 blackburn	sonney2k: loong rebase
@sonney2k	blackburn, check the size of the repository afterwards...
@sonney2k	not that we are again >100MB
 blackburn	sonney2k: hmm my fork is not clean I am afraid
 gsomix	sonney2k, do you mean local copy?
@sonney2k	blackburn, ?
@sonney2k	gsomix, yes
 blackburn	sonney2k: that big commit was in my fork I think
@sonney2k	blackburn, I see
@sonney2k	gsomix, stop it then
 blackburn	415M
@sonney2k	blackburn, I guess it has to do with the (remote) branches
 blackburn	:D
 blackburn	ok rebase in progress still lets wait
 gsomix	sonney2k, hm, ok.
@sonney2k	blackburn, I have no idea then how to rescue branches
 blackburn	sonney2k: ok it failed to rebase
 blackburn	which branches?
@sonney2k	shogun_1.0
@sonney2k	shogun_1.1
 blackburn	why we want these branches but not tags?
@sonney2k	blackburn, tags too of course
 blackburn	sonney2k: but what's wrong with tags?
@sonney2k	??
@sonney2k	we need the branches and tags
 blackburn	I understand - what is broken?
@sonney2k	blackburn, I don't know how to run filterbranch and have the tags/branches
 blackburn	sonney2k: it seems you haave to specify all branches in filter branch
@sonney2k	blackburn, how
 blackburn	Lets you rewrite git revision history by rewriting the branches mentioned in the <rev-list options>, applying custom filters on each revision. Those filters can modify each tree (e.g. removing a file or running a perl rewrite on all files) or information about each commit. Otherwise, all information (including original commit times or merge information) will be preserved.
@sonney2k	-- --all
 blackburn	sonney2k: but our tags and branches have no .gz2 I think?
@sonney2k	vipins commit is from january
@sonney2k	no idea
 blackburn	sonney2k: last release was in december I think
 blackburn	or I am sure
 blackburn	:)
@sonney2k	I had to do git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch *.bz2*' --tag-name-filter cat -- --all
@sonney2k	blackburn, please clone again
 CIA-113	shogun: Soeren Sonnenburg shogun_1.1 * rf000737 / src/shogun/lib/versionstring.h : Tagging shogun_1.1.0 release - http://git.io/BnIYwA
 blackburn	whoa
-!- hoijui [~hoijui@dslb-092-078-177-248.pools.arcor-ip.net] has quit [Quit: Leaving]
 blackburn	sonney2k: ok what to check?
 blackburn	.git is 30M still
@sonney2k	blackburn, clone
@sonney2k	very good
 blackburn	cloned
@sonney2k	git branch -a
@sonney2k	and then try a rebase...
 blackburn	blackburn@blackburn-laptop:~/OSS/shogun_new/shogun/src$ git branch -a
 blackburn	* master
 blackburn	  remotes/origin/HEAD -> origin/master
 blackburn	  remotes/origin/boost_serialization
 blackburn	  remotes/origin/c50
 blackburn	  remotes/origin/galaxy
 blackburn	  remotes/origin/master
 blackburn	  remotes/origin/multiboost
 blackburn	  remotes/origin/shogun_1.0
 blackburn	  remotes/origin/shogun_1.1
 blackburn	  remotes/origin/structure
 blackburn	rebase of??
 blackburn	sonney2k: ehm what to rebase?
@sonney2k	blackburn, what you did before
@sonney2k	I don't have anything to rebase
 blackburn	sonney2k: fork?
@sonney2k	blackburn, or we ask gsomix again
 blackburn	hmm ok let me try to rebase fork
@sonney2k	yeah
 blackburn	that takes a while
@sonney2k	blackburn, so?
@sonney2k	gsomix, can you try the same?
@sonney2k	gsomix, do a copy of your git repo
 blackburn	sonney2k: yeah failed to merge again
@sonney2k	(local copy)
@sonney2k	blackburn, what did you do?
 blackburn	sonney2k: tried to rebase my fork
@sonney2k	blackburn, command line?
 blackburn	git fetch upstream/master
 blackburn	git rebase upstream/master
@sonney2k	blackburn, wait but do you have an additional commit?
 blackburn	sonney2k: no it should be clean in master ..
 blackburn	I guess it would be easier to re-create fork
 gsomix	sonney2k, missed. =___= should I do something?
@sonney2k	gsomix, yes please do
@sonney2k	1) create a copy of your git (local copy)
@sonney2k	then do a git pull --rebase on the copy
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 gsomix	sonney2k, ok. without fetch? I updated the repository in the afternoon.
@sonney2k	gsomix, all obsolete now
@sonney2k	but please *keep a copy*
@sonney2k	gsomix, either with git fetch and then git rebase or git pull --rebase
 gsomix	sonney2k, >> Current branch master is up to date.
@sonney2k	gsomix, ok
@sonney2k	gsomix, and if you try this on some of your pull request feature branches?
 blackburn	sonney2k: still..
@sonney2k	blackburn, still what?
 blackburn	Failed to merge in the changes.
 blackburn	Patch failed at 0001 Introduced converters module, moved DR preprocessors to it, fixed examples, updated other classes according to changes
@sonney2k	blackburn, lets see if it works for gsomix...
@sonney2k	gsomix, any news?
@sonney2k	blackburn, it did work here too btw
 gsomix	sonney2k, rebase and push?
 blackburn	sonney2k: on your fork?
@sonney2k	gsomix, update your pull request
@sonney2k	but you need to rebase before
@sonney2k	on your feature branch
@sonney2k	blackburn, do you remember how we added the shogun-toolbox and google code remotes
@sonney2k	with --mirror=push I mean?
 blackburn	sonney2k: I do not remember any --mirror there.. what for?
@sonney2k	blackburn, to push the branches
@sonney2k	or is this not necessary?
 gsomix	sonney2k, sec
@sonney2k	please do now
@sonney2k	this is urgent
 blackburn	hmm I do not remember sorry - I think git push should do something similar
@sonney2k	maybe we used push --mirror at some point
 gsomix	sonney2k, >> Everything up-to-date
 gsomix	hmmm.
@sonney2k	gsomix, on gsomix:titled_features ?
 gsomix	looks like that "pull --rebase" didn't rebase? I'm confused.
 gsomix	yep
@sonney2k	which branch are you on?
 gsomix	sonney2k, titled_features
@sonney2k	and what does git log show?
 gsomix	sonney2k, my last commit. :(
@sonney2k	gsomix, and befoere that?
 gsomix	commit df320e82b334cd42043d239431454ec4243f370c
 gsomix	Author: Soeren Sonnenburg <sonne@debian.org>
 gsomix	Date:   Tue May 22 11:00:26 2012 +0200
 gsomix	    make get_label_type pure virtual again
@sonney2k	gsomix, ok then you didn't pull --rebase with master
 gsomix	sonney2k, re-do?
 blackburn	git pull --rebase upstream master
 blackburn	I guess
 gsomix	usually I do "git rebase upstream/master"...
@sonney2k	gsomix, but then you would need to fetch first
@sonney2k	so fetch first and then do it this way
 gsomix	sonney2k, in progress.
 gsomix	slow. I think I can solve couple of problems in optics
@sonney2k	I just did the same on sth
@sonney2k	and it just took 1 sec
 CIA-113	shogun: Sergey Lisitsyn master * rf575c12 / src/interfaces/modular/Machine.i : Revert "Splitted methods in apply macro in Machine.i." - http://git.io/vwv3wA
 CIA-113	shogun: Soeren Sonnenburg master * rd126d99 / src/interfaces/modular/Machine.i : only use %rename for non-type aware interfaces - http://git.io/L_5qlA
 CIA-113	shogun: Sergey Lisitsyn master * r5b12cea / src/interfaces/modular/Machine.i : Splitted methods in apply macro in Machine.i. - http://git.io/_JX5PA
 blackburn	wtf
 blackburn	:D
@sonney2k	wtf do I have the revert splitted stuff 2 times?!
@sonney2k	gsomix, any news?
 gsomix	sonney2k, http://pastebin.com/15rcAqDM
@sonney2k	blackburn, gsomix ok then. no idea how to rescue that situation
 blackburn	sonney2k: recreate all forks
@sonney2k	I would say fresh checkout and git-format patch to the rescue
@sonney2k	yeah
@sonney2k	blackburn, shall I push --force again with the last 3 commits removed?
@sonney2k	it is a bit weird that we have them twice
 blackburn	sure
@sonney2k	blackburn, I am too tired for all that
@sonney2k	please do and send an email to the ML
 blackburn	ok
 blackburn	hmm strange commit arrangement
--- Log closed Wed May 23 00:00:41 2012
