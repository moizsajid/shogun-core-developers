--- Log opened Thu May 09 00:00:37 2013
-!- iglesiasg [d58f32bd@gateway/web/freenode/ip.213.143.50.189] has quit [Quit: Page closed]
@sonney2k	van51, yeah remove that legacy crap
 van51	sonney2k: ok, got it ;)
 van51	on another note, is there a reason why operator[] isn't overloaded in CDynamicObjectArray?
 van51	not that it's important, it just seems strange :p
@sonney2k	van51, well it is usually new'd so you would have to (*array)[1] etc
@sonney2k	but feel free :D
-!- goldbug [~quassel@global-2-11.nat.csx.cam.ac.uk] has joined #shogun
 van51	hehe just for consistency :D
 van51	sonney2k: actually, maybe all get_*_kernel() should go, and just have get_kernel(index_t idx)
 van51	and maybe a get_last_kernel
@wiking	sonney2k: do we assure alignedness with SG_MALLOC?
@wiking	as i can see not :(
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- goldbug [~quassel@global-2-11.nat.csx.cam.ac.uk] has quit [Remote host closed the connection]
-!- foulwall [~foulwall@2001:da8:215:503:74db:1c21:5626:64bc] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * c5a21a8 / src/shogun/mathematics/Random.cpp,src/shogun/mathematics/Random.h: https://github.com/shogun-toolbox/shogun/commit/c5a21a80ea25b41d9d7fd2dde7d961c4da52f8fd
 shogun-notifier-	shogun: Implement Ziggurat normal distrib sampler
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * d52b026 / tests/unit/statistics/QuadraticTimeMMD_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/d52b0263f7dc13c01c92e68f0731348c156c6154
 shogun-notifier-	shogun: Change to EXPECT_NEAR macro
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * a44102d / src/shogun/mathematics/Random.cpp,src/shogun/mathematics/Random.h: https://github.com/shogun-toolbox/shogun/commit/a44102d8b355733d8c8830094cfabf7037060035
 shogun-notifier-	shogun: Random: allocate vectors on heap
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * 68a7ab2 / tests/unit/mathematics/Random_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/68a7ab28597cb674511f4c8acadbfb03a6b35e71
 shogun-notifier-	shogun: Add unit test for normal_distrib
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7005414
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * c4cfc1a / src/shogun/mathematics/Random.h: https://github.com/shogun-toolbox/shogun/commit/c4cfc1ae534f396eb2c55f956789be85cc7cd005
 shogun-notifier-	shogun: Random: include shogun/lib/common.h for stdint.h
@wiking	doh
@wiking	why there's no UINT64_MAX on ubuntu? :)
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7005551
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has left #shogun []
 van51	wiking: I am on ubuntu and I have it
 van51	but for c++ I had to define __STDC_CONSTANT_MACROS first
 naywhayare	wiking: uint64_t is a C99 type not a C++ type, maybe this is helpful: http://lists.freebsd.org/pipermail/freebsd-bugs/2012-December/051270.html :)
 naywhayare	(can you tell I am procrastinating on my own work by randomly answering questions unnecessarily in IRC ??)
 shogun-buildbot	build #334 of nightly_none is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/334
 sijin	Could anyone tell me what will be the problem when travis could not compile?
 shogun-buildbot	build #326 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/326
 shogun-buildbot	build #389 of nightly_default is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/389
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 sijin	lisitsyn: It seems that tapkee checks the value of num_neighbors for every embedding method
 sijin	lisitsyn: kpca doesn't use this , then some input would make the default value of num_neighbor (10) "invalid"
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 264 seconds]
-!- sijin [~smuxi@144.214.222.109] has quit []
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- foulwall [~foulwall@2001:da8:215:503:74db:1c21:5626:64bc] has quit [Remote host closed the connection]
-!- nube [~rho@116.90.239.3] has quit [Read error: Connection reset by peer]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has joined #shogun
-!- hushell [43bd6474@gateway/web/freenode/ip.67.189.100.116] has joined #shogun
 deerishi	@sonny2k : could you take a look at this https://github.com/deerishi/shogun/compare/m1
 deerishi	i did what you said,cloned another repo ,and pasted the files.
 deerishi	i did not touch the data,tests files
 deerishi	should i send the pr?
 deerishi	@HeikoS:could you also take a look at that?
 gsomix	good morning
-!- sijin [~smuxi@144.214.222.109] has joined #shogun
-!- hushell [43bd6474@gateway/web/freenode/ip.67.189.100.116] has quit [Ping timeout: 245 seconds]
-!- mdragan [8d55007a@gateway/web/freenode/ip.141.85.0.122] has joined #shogun
@sonney2k	naywhayare, taht is the destiny of IRC users :)
-!- iglesiasg [c1934d18@gateway/web/freenode/ip.193.147.77.24] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- iglesiasg [c1934d18@gateway/web/freenode/ip.193.147.77.24] has quit [Quit: Page closed]
 deerishi	@HeikoS: I have sent the pr
 deerishi	it does not contain any of the data/tests broken files
 deerishi	@sonny2k : also the number of commits is 1
 gsomix	deerishi, hi
 deerishi	hi gsomix
 gsomix	deerishi, please, sent your PR into develop branch, not master
 gsomix	*send
 gsomix	deerishi, thanks!
 deerishi	:)
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has quit [Ping timeout: 245 seconds]
@wiking	sonney2k: actually when we include stdint.h why dont we have a #define __STDC_LIMIT_MACROS
@wiking	so that we have access to the *_MAX macros?
@wiking	or just include <cstdint> instead....
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * c3e8f19 / src/shogun/lib/common.h: https://github.com/shogun-toolbox/shogun/commit/c3e8f19d8212eba84727c89df90052d48a9fc7e5
 shogun-notifier-	shogun: Define __STDC_LIMIT_MACROS before including stdint.h
@wiking	weelll that did not help :D
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7014634
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has left #shogun []
@wiking	mmm 3rd try :P
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * ea4dceb / src/shogun/lib/common.h,src/shogun/mathematics/Random.h: https://github.com/shogun-toolbox/shogun/commit/ea4dceb5842790d9b3aba26ad024299137bdb8b7
 shogun-notifier-	shogun: Remove __STDC_LIMIT_MACROS macro and use std::numeric_limits
-!- travis-ci [~travis-ci@ec2-23-22-231-136.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7014835
-!- travis-ci [~travis-ci@ec2-23-22-231-136.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * e3143c5 / src/shogun/mathematics/Random.cpp: https://github.com/shogun-toolbox/shogun/commit/e3143c569f604f2ef7e26b02386e53ed3711ba04
 shogun-notifier-	shogun: Use std::numeric_limit instead of macros
-!- nube [~rho@116.90.239.3] has quit [Quit: Leaving.]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- lambday [3ba2174f@gateway/web/freenode/ip.59.162.23.79] has joined #shogun
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7014931
-!- travis-ci [~travis-ci@ec2-107-22-117-126.compute-1.amazonaws.com] has left #shogun []
-!- nube [~rho@116.90.239.3] has quit [Quit: Leaving.]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- lambday [3ba2174f@gateway/web/freenode/ip.59.162.23.79] has quit []
@lisitsyn	sijin: good point, making these checks lazy is on my todo
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has joined #shogun
 deerishi	@sonny2k :i have resent the pr
 sijin	lisitsyn: ok, currently, i just set num_neighbor of kpca to some "safe" value. btw, my pr still fails in travis-build ( I have pulled the latest develop branch)
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has quit [Ping timeout: 245 seconds]
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has left #shogun ["PING 1368094192"]
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 256 seconds]
 shogun-notifier-	shogun: deerishi :develop * b0a4260 / examples/ (4 files): https://github.com/shogun-toolbox/shogun/commit/b0a4260edf0bfd7ae451aaf15bb31e19ec72d623
 shogun-notifier-	shogun: kpca
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 372889d / examples/ (4 files): https://github.com/shogun-toolbox/shogun/commit/372889d49545994b1ae4f98bbaa01a1ed50b785e
 shogun-notifier-	shogun: Merge pull request #1078 from deerishi/mk1
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Kernel PCA Test/Check
 shogun-buildbot	build #938 of bsd1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/938  blamelist: deerishi <deerishi@gmail.com>
 shogun-notifier-	shogun: Viktor Gal :feature/PRNG * 801bb93 / src/configure,src/shogun/mathematics/Random.cpp: https://github.com/shogun-toolbox/shogun/commit/801bb935307de36df78abd37d881e8429fdb573c
 shogun-notifier-	shogun: Random use d/SFMT fill array functions only when memory is aligned
-!- mdragan [8d55007a@gateway/web/freenode/ip.141.85.0.122] has quit [Ping timeout: 245 seconds]
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7016474
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has left #shogun []
@wiking	sonney2k: once somebody has the time, should implement memory alignment support in shogun :P
@sonney2k	wiking, but this has some side effects no?
@sonney2k	if we allocate lots of small chunks
@sonney2k	?
@wiking	sonney2k: well it has a sideeffect of course
@wiking	overhead
 shogun-buildbot	build #939 of bsd1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/939
@wiking	sonney2k: i'm just saying that SFMT can only fast fill array with sse2 instructions if the memory is 16byte aligned
@wiking	obviously
@wiking	so i had to make a check there
@wiking	as in darwin malloc is already giving you back a 16 byte aligned memory
@wiking	always
@wiking	on other os of course it's not like this
 shogun-buildbot	build #773 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/773  blamelist: Soeren Sonnenburg <sonne@debian.org>
@wiking	sonney2k: but maybe we should as well add support for non system memory managers
@wiking	like jmalloc
@wiking	i've prepared a patch for it
@wiking	i just wonder where the fuck did i put that one :DD
@wiking	i guess it's either a branch or in a stash
@wiking	yeah i think i got it :)
@wiking	anyhow the PRNG feature is about to be ready
@wiking	jemalloc and hoard is much faster
@wiking	then the usual gnu malloc on linux
@wiking	sonney2k: http://www.hoard.org/
@wiking	http://plasma.cs.umass.edu/emery/screenshots
@sonney2k	wiking, speed is always welcome ... aligned_alloc()
@wiking	sonney2k: yeah so i'll push that configure patch for replacing the default system malloc
@wiking	i just need to test them
@wiking	but this prng should be finished as well
@sonney2k	wiking, one thing at a time
@wiking	yeah tell me about it
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has joined #shogun
@sonney2k	wiking, if you do this with aligned_alloc - we need to tell gcc somehow that the memory is aligned
@sonney2k	otherwise it won't fully benefit from it
@wiking	sonney2k: posix_memalign
@wiking	we should use that rather
@wiking	btw how we should test the new PRNG?
@wiking	i mean now i think it's there
@wiking	it's ready
@wiking	but we need to fix the integration tests
@wiking	../data/clustering/KMeans_EuclidianDistance_3.mERROR
@wiking	libshogun (x86_64/git_801bb93_2013-05-09_12:36134331283) Copyright (C) 1999-2009 Fraunhofer Institute FIRST Copyright (C) 1999-2011 Max Planck Society Copyright (C) 2009-2011 Berlin Institute of Technology Copyright (C) 2012 Soeren Sonnenburg, Sergey Lisitsyn, Heiko Strathmann Written (W) 1999-2012 Soeren Sonnenburg, Gunnar Raetsch et al. ( configure options: "configure options --disable-optimization --interfaces=python_static" compile flags: "-fPIC -g 
@wiking	as u can see this fails already
@sonney2k	wiking, yeah makes sense
@sonney2k	k-means does random init
@wiking	yep
@wiking	i know
@wiking	but we need to fix that
@wiking	and as well other integration tests
@sonney2k	well once you have unit tests we can just regenerate the expected data
@wiking	unit tests?
@wiking	they are done :)
@wiking	https://travis-ci.org/shogun-toolbox/shogun/jobs/7016700
 deerishi	finally merged 1 PR!!!!!!!!!!!!!!
 deerishi	feels gr8!!!
@wiking	deerishi: yeah tell me about it
@wiking	deerishi: my mailbox is full with your PR attempts ;P
 deerishi	haha
-!- travis-ci [~travis-ci@ec2-23-22-231-136.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7016698
-!- travis-ci [~travis-ci@ec2-23-22-231-136.compute-1.amazonaws.com] has left #shogun []
 deerishi	will start working on global alignment kernels
 deerishi	that issue is still open rite?
 shogun-buildbot	build #1070 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1070  blamelist: deerishi <deerishi@gmail.com>
@wiking	sonney2k: so, merge?
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has quit [Ping timeout: 245 seconds]
 shogun-buildbot	build #1071 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1071  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-notifier-	shogun: Viktor Gal :develop * c521a6d / .gitignore: https://github.com/shogun-toolbox/shogun/commit/c521a6d96b8abae3294aa45e98d0dc4a5007cf88
 shogun-notifier-	shogun: Add .DS_Store to gitignore
 shogun-buildbot	build #774 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/774  blamelist: Viktor Gal <viktor.gal@maeth.com>
-!- travis-ci [~travis-ci@ec2-23-22-231-136.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7017472
-!- travis-ci [~travis-ci@ec2-23-22-231-136.compute-1.amazonaws.com] has left #shogun []
-!- foulwall [~foulwall@li379-21.members.linode.com] has joined #shogun
 shogun-buildbot	build #1072 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1072  blamelist: Viktor Gal <viktor.gal@maeth.com>
@sonney2k	wiking, yeah once the current errors are fixed
@sonney2k	hmmhh MCLDA cannot work
@sonney2k	pickle27, didn't you do MCLDA :D
@sonney2k	look at multiclass/MCLDA.cpp:282
@wiking	ok fix it fuck
@wiking	:>
@wiking	who broke it? :)
-!- lambday [3ba21749@gateway/web/freenode/ip.59.162.23.73] has joined #shogun
 lambday	hi HeikoS
 lambday	hello lisitsyn
-!- abinash [75c8e12e@gateway/web/freenode/ip.117.200.225.46] has joined #shogun
-!- vgorbati [d4029f22@gateway/web/freenode/ip.212.2.159.34] has joined #shogun
-!- foulwall [~foulwall@li379-21.members.linode.com] has quit [Remote host closed the connection]
-!- abinash [75c8e12e@gateway/web/freenode/ip.117.200.225.46] has quit [Ping timeout: 245 seconds]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
@wiking	votjakovr: ping
-!- lambday [3ba21749@gateway/web/freenode/ip.59.162.23.73] has quit []
 votjakovr	wiking: Hi
@wiking	lisitsyn: ping
@wiking	votjakovr: with one of your commit we've got some things broken
@wiking	i mean tests
 votjakovr	wiking: Do you mean travis-ci fault?
@wiking	votjakovr: yes
@wiking	votjakovr: suddenly gaussian regression started to fail
@wiking	as well as charp modular cannot be compiled
@wiking	lisitsyn: do you know what's DSYEV failed with code 175 is?
 votjakovr	wiking: but on my machine gaussian regression test is OK
@wiking	i mean what is actually error code 175
@wiking	votjakovr: not on travis
@wiking	votjakovr: what's your machine btw
 votjakovr	wiking: intel core i7-860, Ubuntu 13.04
@wiking	mmmhm
@wiking	and when u run make tests
@wiking	the python gaussian regression runs fine
 votjakovr	wiking: I run tester.py and it is OK
@wiking	votjakovr: in shogun/src
@wiking	just type make tests
 votjakovr	wiking: It is failed on classifier_svmlight_string_features_precomputed_kernel and library_map libshogun examples
-!- gsomix [~gsomix@188.168.3.6] has quit [Remote host closed the connection]
@wiking	mmm interesting
 votjakovr	wiking: And it stops on libshogun examples, that is why I run tester.py
@wiking	votjakovr: well then obviously there's more problem
 votjakovr	wiking: these libshogun examples reports: undefined reference to symbol 'pthread_spin_init@@GLIBC_2.2.5'
@wiking	aaaah
@wiking	votjakovr: can u check configure.log
@wiking	if u still have it
@wiking	if not then run again ./congiure
@wiking	and check configure.log for: spinlock
@wiking	damn fuck.... i have to fix that :)
 votjakovr	wiking: 'Result is: yes'
@wiking	votjakovr: yeah i figured
@wiking	there's some linking problem there
@wiking	as u supposed to have spinlock
@wiking	in configure.log
@wiking	what is the cc line?
@wiking	sonney2k: darwin version of spinlock: http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man3/spinlock.3.html
 votjakovr	cc   -I/usr/include/json   -I/usr/include/libxml2   -I/usr/include/atlas -isystem /usr/include/eigen3   -fPIC  -g -Wall -Werror-implicit-function-declaration -Wno-unused-parameter -Wformat -Wformat-security -Wparentheses -Wshadow -Wno-unknown-pragmas -Wno-deprecated -O9 -fexpensive-optimizations -frerun-cse-after-loop -fcse-follow-jumps -finline-functions -fschedule-insns2 -fthread-jumps -fforce-addr -fstrength-reduce -funroll
 votjakovr	-loops -mfpmath=sse -march=native -mtune=native -pthread ./configure-25615-10652.c -o ./configure-2697-10652.o  -Xlinker --no-undefined -pthread -lm -pthread -lhdf5 -ljson -lxml2 -llapack -lcblas -llapack_atlas -larpack -lnlopt -lglpk -lm -llzo2 -lsnappy -lz -lbz2 -llzma
 pickle27	sonney2k: oh god
 votjakovr	wiking: It is from spinlock checking section
@wiking	votjakovr: yep
 pickle27	sonney2k: what a terrible mistake my bad
@wiking	votjakovr: i wonder why you get undefined reference to symbol 'pthread_spin_init@@GLIBC_2.2.5'
@wiking	since with these flags you managed to compile that small example and actually call pthread_spin_init
 votjakovr	wiking: libshogun example also writes this: 'note: 'pthread_create@@GLIBC_2.2.5' is defined in DSO /lib/x86_64-linux-gnu/libpthread.so.0 so try adding it to the linker command line'
 votjakovr	wiking: and this: 'note: 'pthread_spin_init@@GLIBC_2.2.5' is defined in DSO /lib/x86_64-linux-gnu/libpthread.so.0 so try adding it to the linker command line'
@wiking	aaahaaa
@wiking	i wonder what is linked then
 pickle27	sonney2k: sent a PR to fix that embarrassing mistake, I'll be looking into breaking up the train function, making a unit test and an Eigen3 version over the next bit
 votjakovr	wiking: Btw csharp_modular is OK on my last PR.
-!- foulwall [~foulwall@2001:da8:215:c252:d0e6:bc9e:72f:96d9] has joined #shogun
 votjakovr	wiking: When I added -lpthread and -L/lib/x86_64-linux-gnu options, these two examples was linked without errors.
@lisitsyn	wiking: hey back
@lisitsyn	hey, back I mean
@lisitsyn	dsyev 175 probably means
@lisitsyn	that 175th leading minor has negative det
@lisitsyn	ahh no
@lisitsyn	it is tridiagonalization error
@lisitsyn	wiking: I guess it may happen if matrix is not symmetric
@wiking	lisitsyn: any suggestions? :)
@wiking	lisitsyn: i mean now with using PruneVarSubMean finally MulticlassLibLinear started to give me reasonable results
@lisitsyn	wiking: assure it is symmetric
@lisitsyn	let me get back to log
@lisitsyn	where does it happen?
@wiking	lisitsyn: well i load in the data
@wiking	i mean data matrix -> realfeatures
@wiking	and then i try to do the pca
@wiking	then basically crashes with that assert
@lisitsyn	ohh interesting
@lisitsyn	wiking: http://starlogs.net/#shogun-toolbox/shogun
 pickle27	starlogs is awesome!
@lisitsyn	haha
@lisitsyn	I've never seen it before
 pickle27	there is also http://www.commitlogsfromlastnight.com/
@wiking	lisitsyn: hahaha
-!- foulwall [~foulwall@2001:da8:215:c252:d0e6:bc9e:72f:96d9] has quit [Remote host closed the connection]
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has joined #shogun
@lisitsyn	HeikoS: why clusters?
@lisitsyn	I don't get your comment here :)
@lisitsyn	about KNN and modsel
@HeikoS	uh
@HeikoS	wait
@HeikoS	wasnt that KMeans? :)
@HeikoS	damn
@HeikoS	I always switch those
@HeikoS	let me delete the comment quickly
@lisitsyn	haha!
@lisitsyn	I thought so
@lisitsyn	HeikoS: I think the idea on that issue is that we just can compute nearest neighbors once for maximum K
@HeikoS	lisitsyn: sorry :)
@lisitsyn	and later we are much faster with doing classification
@HeikoS	lisitsyn: explain
@lisitsyn	HeikoS: if we computed neighbors in train set for test set
@lisitsyn	with K set to maximum of some range
@lisitsyn	we can do classification rather fast - we just select precomputed indices
@lisitsyn	we can even go with binary search here
@HeikoS	lisitsyn: I cannot find the issue
@HeikoS	how to search issues
@HeikoS	lisitsyn:  I see
@lisitsyn	HeikoS: https://github.com/shogun-toolbox/shogun/issues/468
@HeikoS	but who cares about knn?
@lisitsyn	haha
@lisitsyn	good question
@HeikoS	good idea still
@HeikoS	but not really relevant for anyone
@HeikoS	ah, long day here :)
@HeikoS	lisitsyn: currently working on something for NIPS. And the title is MCMC Hammer :D
@lisitsyn	HeikoS: ha! I have holiday today :P
@lisitsyn	hahahahaha
@lisitsyn	you can't touch this
@HeikoS	exactly :D
@lisitsyn	tadatada
@lisitsyn	you can't touch this
@HeikoS	will be the best sampler ever
@lisitsyn	can't touch this
@HeikoS	lisitsyn:  do you know the original
@HeikoS	I like that even more
@HeikoS	rick james - superfreak
@lisitsyn	superfreak superfreak!
@lisitsyn	she's superfreaky
@lisitsyn	can't touch this!
@HeikoS	haha :)
@lisitsyn	HeikoS: my mind is in off state now
@lisitsyn	wiking: u can't touch this!
@lisitsyn	HeikoS: can't touch this markov chain
@lisitsyn	I can't touch shogun
@HeikoS	hehe, glad you like this :)
@lisitsyn	HeikoS: u can't touch this paper
@HeikoS	grove on blackburn!
@lisitsyn	HeikoS: you may say that to your supervisor
@lisitsyn	u can't touch this
@lisitsyn	:D
 votjakovr	wiking: So what do you think about how to solve the problem with libshogun examples?
@lisitsyn	votjakovr: u can't touch this!
@lisitsyn	:D
 votjakovr	lisitsyn: Yeah :D
@lisitsyn	HeikoS: ooh why oh why you did it to me
@lisitsyn	MCMC Hammer rocks
 votjakovr	lisitsyn: great song!
@HeikoS	just being evil :)
@lisitsyn	votjakovr: you get it!
@HeikoS	https://www.youtube.com/watch?v=Vv3f0QNWvWQ&feature=player_embedded
@lisitsyn	HeikoS: hahaha
@lisitsyn	HeikoS: btw give me any good reference on mcmc bitte schoen!
@HeikoS	lisitsyn: like a tutorial?
@lisitsyn	yes for an asshole like me
@lisitsyn	:D
@HeikoS	https://www.google.co.uk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=2&ved=0CDwQFjAB&url=http%3A%2F%2Fwww.people.fas.harvard.edu%2F~plam%2Fteaching%2Fmethods%2Fmcmc%2Fmcmc.pdf&ei=FNqLUeG4M6X40gWlwoGADw&usg=AFQjCNE13QZ-k-KHSmw_NiHzAB9Gf4hOzA&sig2=FOlbrgLY6HNNe1fdrXf8WQ&bvm=bv.46340616,d.d2k
@HeikoS	I like this
@lisitsyn	nice, thanks!
 vgorbati	lisitsyn: hi, I wanted to ask: you are creating DenseMatrix from FeatureCallback 2 times, and I also need to do this in manifold sculpting implementation - do you mind if I will extract these lines into a separate function?
@lisitsyn	vgorbati: hmm where it is created 2 times?
 vgorbati	lisitsyn: I mean that there are 2 places where you do this - in embedPassThru and in embed for t-SNE
@lisitsyn	ahh
@lisitsyn	yes of course
@lisitsyn	if you need it
@lisitsyn	vgorbati: just for better understanding
@lisitsyn	idea of using callbacks here is to give some flexibility
 vgorbati	lisitsyn: I am thinking to put it in utils/matrix.hpp, is it a reasonable place?
@lisitsyn	vgorbati: no I think some other place would be better
@lisitsyn	matrix.hpp has center thing
@lisitsyn	it has nothing to do with callbacks
@lisitsyn	some utils/features.hpp may be or so
 vgorbati	lisitsyn: ok. btw, I see centerMatrix calls in tapkee/routines/pca.hpp or tapkee/tapkee_methods.hpp, but there are no #include '.../utils/matrix.hpp' there - should it be so?
 votjakovr	HeikoS: Hi, I'd like to discuss something. Do you have any time?
@HeikoS	votjakovr: sure, whats up?
@lisitsyn	vgorbati: yeah they are just in the same compilation unit so it works
@lisitsyn	but it should be here probably, yes
@HeikoS	votjakovr:  will be leaving work soon though, whats up?
 votjakovr	HeikoS: I'm not sure, but I think that there is a bug in GPML matlab toolbox in partial derivative by ell in covSEiso. It is computed like: dK(i,j)/dell = sf2 * exp(-(x(i) - x(j))^2/(2*ell^2)) * (x(i) - x(j))^2 / (ell^2), but I think it should be computed like:  dK(i,j)/dell = sf2 * exp(-(x(i) - x(j))^2/(2*ell^2)) * (x(i) - x(j))^2 / (ell^*3*). What do you think about this?
-!- vgorbati [d4029f22@gateway/web/freenode/ip.212.2.159.34] has quit [Ping timeout: 245 seconds]
@HeikoS	votjakovr: let me check
@HeikoS	votjakovr: whats the kernel itself? the functional form?
 votjakovr	HeikoS: K(i, j) = sf2 * exp(-(x(i) - x(j))^2/(2*ell^2))
@HeikoS	votjakovr: so the difference is the exponent in the ell right?
 votjakovr	HeikoS: yep
@HeikoS	votjakovr: wow and in the GPML toolbox, there is a two, should be a bug then. I wonder why nobody discovered this so far
@HeikoS	which file is it computed in?
 votjakovr	HeikoS: cov/covSEiso.m
@HeikoS	and i is
@HeikoS	the parmeter index of which the partial derivative should be computed?
 votjakovr	first
@HeikoS	K = sf2*exp(-K/2).*K;
 votjakovr	yep
@HeikoS	you could do a quick simple check:
@HeikoS	plot the kernel for two fixed points as a 1D function of ell
@HeikoS	and plot the derivative
@HeikoS	seems weird that this bug is in there ...
@HeikoS	votjakovr: wait
@HeikoS	ah sorry
@HeikoS	no I think its a bug, but make sure to plot it
 votjakovr	HeikoS: I think the same
@HeikoS	if it doesnt make sense (and your correction K = sf2*exp(-K/2).*K/ell; makes sense), then we should report it
@HeikoS	the same?
@HeikoS	ah I see
 votjakovr	Yep, I think it should be computed like K = sf2*exp(-K/2).*K/ell
@HeikoS	indeed
@HeikoS	could you send me the plots of both versions once you created them? I am curious how the difference looks like. Also good for reporting the bug
@HeikoS	so I guess the line was copied in shogun? :)
-!- deerishi [73f88294@gateway/web/freenode/ip.115.248.130.148] has quit [Ping timeout: 245 seconds]
 votjakovr	Which line?
@HeikoS	the kernel derivative
 votjakovr	So in shogun kernel derivative is computed by width = 2*ell^2 and computed correctly
-!- FSCV [~FSCV@204.45.132.11] has joined #shogun
@HeikoS	okay
@HeikoS	votjakovr: well, nice job that you spotted this! :)
 votjakovr	HeikoS: I mean in CGaussianKernel
@HeikoS	votjakovr: ok saw it
@HeikoS	votjakovr: so maybe you should implement a graphical example which selects the best kernel?
@HeikoS	you could generate data from the GP with a known kernel size and then learn the kernel size via ML2
@HeikoS	and then plot things in python
@HeikoS	this way we have 1) a nice example for modelselection with GP regression 2) evidence that things work out fine in shogun
@HeikoS	how did you spot the bug btw?
@HeikoS	when writing unit tests?
@HeikoS	comparing against GPML?
 votjakovr	HeikoS: Yep :)
@HeikoS	very cool that you do that! Otherwise we can never be sure whether things work. And even finding bugs in toolboxes that are referenced by thousands of people around the world. Awesome! :)
@HeikoS	votjakovr: I gotta go home now, see you around!
 votjakovr	HeikoS: Thanks :)
@HeikoS	bye!
 votjakovr	See you soon
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has joined #shogun
@sonney2k	van51, could you please fix the build warning and split up your combine_kernels function into a couple of reasonable sub-functions?
@sonney2k	the function is just to big to be parse-able
@sonney2k	van51, this one here http://shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1072/steps/compile%20libshogun/logs/warnings%20%282%29
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 874f3f3 / src/shogun/multiclass/MCLDA.cpp: https://github.com/shogun-toolbox/shogun/commit/874f3f3d5cae12df993e84249129707f924bedb3
 shogun-notifier-	shogun: MCLDA fixed covariance matrix normalization
 van51	sonney2k: yea sure
@sonney2k	votjakovr, you said it you fixed the c# issue already?
@sonney2k	van51, thanks
@sonney2k	wiking, whats up with the spinlock thing?
 van51	soneey2k: btw as I am re-writing the CCombinedKernel to use CDynamicObjectArray, should I also change this function to return an array?
 van51	or it doesn't matter?
 van51	sonney2k*
@sonney2k	van51, well yes but one step at a time?
@sonney2k	lisitsyn, we need that spreadsheet
 votjakovr	sonney2k: nope, i said that my PR, it seems, didn't break c# modular compilation.
@sonney2k	votjakovr, ok then let me do the fix
@sonney2k	wiking, you want some defines for spinlock business & OSX?
 shogun-buildbot	build #775 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/775  blamelist: Soeren Sonnenburg <sonne@debian.org>
 votjakovr	sonney2k: Ok, i'd like to ask about failed integration tests in travis-ci. How do you think to fix this problem?
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7030036
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 7418ae1 / src/interfaces/modular/modshogun_ignores.i: https://github.com/shogun-toolbox/shogun/commit/7418ae1b6acd86203d958ec2ff0a960f2f6d6460
 shogun-notifier-	shogun: fix c# build failure
@sonney2k	votjakovr, which one?
 votjakovr	sonney2k: gp regression tests
-!- gsomix [~Miranda@188.168.3.6] has joined #shogun
 gsomix	good evening
 shogun-buildbot	build #776 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/776  blamelist: Soeren Sonnenburg <sonne@debian.org>
 votjakovr	sonney2k: I think, it works everywhere except travis
@lisitsyn	HeikoS: sonney2k: please check the doc I shared
 shogun-buildbot	build #1073 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1073  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7030719
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has left #shogun []
@sonney2k	votjakovr, I don't know either - travis is just some buildbot running some ubuntu virtual machine it seems
 shogun-buildbot	build #1074 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1074  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	Huh?!
@sonney2k	what is that
@sonney2k	The following tests failed!
@sonney2k	p
@sonney2k	p ???
@lisitsyn	what?
@sonney2k	http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1074/steps/test%20python_modular/logs/stdio
@lisitsyn	sonney2k: I see no p in examples
@lisitsyn	sonney2k: so how did that happen :D
@sonney2k	no idea yet
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has quit [Quit: Leaving]
-!- arcolife [arcolife@nat/redhat/x-tfkofwlsgeocvlqk] has joined #shogun
-!- iglesiasg [d58f329b@gateway/web/freenode/ip.213.143.50.155] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * b12a2f1 / data: https://github.com/shogun-toolbox/shogun/commit/b12a2f1a57eaac68ecde3f449cfaa7bb86412028
 shogun-notifier-	shogun: require new data version for kpca tests
@sonney2k	lisitsyn, reason is kpca data not yet there and whatever mishandling in tester.py
@lisitsyn	oh I see
@sonney2k	lisitsyn, btw why do we have 2 kernelpca things?
@sonney2k	preprocessor_kernelpca_modular.py
@sonney2k	preprocessor_kpca.py ?
@lisitsyn	what is preprocessor_kpca ..
@lisitsyn	:D
@lisitsyn	uh what a code
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * f313ed6 / tests/integration/python_modular/tester.py: https://github.com/shogun-toolbox/shogun/commit/f313ed636e5707dacefb130fde2924c2d2272f40
 shogun-notifier-	shogun: fix weird bug in tester.py occurring when no data is available
@lisitsyn	sonney2k: it is you who merged it :D
@lisitsyn	sonney2k: but you were under PR DoS attack
@sonney2k	psst
@sonney2k	don't tell anyone
@lisitsyn	let me count
 shogun-buildbot	build #777 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/777  blamelist: Soeren Sonnenburg <sonne@debian.org>
@lisitsyn	sonney2k: that guy sent you 13 pull requests
@lisitsyn	no surprise you got confused
@lisitsyn	:D
@sonney2k	lisitsyn, do we have some more nice graphical examples now btw?
@lisitsyn	sonney2k: yes of course
@lisitsyn	sonney2k: graphical/inverse_covariance_estimation_demo.py
@sonney2k	who did that?
@lisitsyn	sonney2k: monica
@lisitsyn	sonney2k: graphical/group_lasso.py
@lisitsyn	sonney2k: that's cesar fuentes
@sonney2k	looks very cool
@sonney2k	and very short too!
-!- arcolife [arcolife@nat/redhat/x-tfkofwlsgeocvlqk] has left #shogun ["Leaving"]
@wiking	fuck
@wiking	that pr spammed my inbox!
@lisitsyn	wiking: kpca?
@wiking	y
@wiking	okok
@wiking	when can i merge?
@lisitsyn	wiking: merge what?
@wiking	prng branch
@wiking	imo it's ready
@lisitsyn	ah
@wiking	if i see kpca one more time i'll fucking git rm it :D
@lisitsyn	wiking: well it is just 13 attempts
@wiking	hehehe
@wiking	only
@wiking	:D
@lisitsyn	why so serious
@wiking	well to be totally
@wiking	honest
@wiking	the PRNG branch is like 20+ commits
@wiking	:DDDD
@wiking	so it's even worse than that kpca PR attempt
@lisitsyn	no, why?
@wiking	too many commit :P
@wiking	anyhow
@wiking	when do we get develop branch into a working shape again?
@lisitsyn	why not, if they are not breakers
@sonney2k	wiking, I think I fixed all issues...
@sonney2k	but lets wait for the BB
@wiking	ok
@wiking	sonney2k: if it goes OK
@wiking	then let's merge prng
@wiking	sonney2k: btw why spinlock is more preferred than simple mutex?
@sonney2k	lisitsyn, what is an inverse covariance matrix btw?
@sonney2k	wiking, faster!
@lisitsyn	sonney2k: just inverse of covariance matrix
@wiking	ok sonney2k i'm just reading wikipedia
@sonney2k	ok what does a inverse covmatrix tell me?
@sonney2k	wiking, busy loops!
@lisitsyn	sonney2k: how features are related
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7032639
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has left #shogun []
@lisitsyn	sonney2k: lasso regularization pushes coefficients to zero
@lisitsyn	so you get only strongly related features
@sonney2k	wiking, so for e.g. SG_UNREF / SGVector passing around we need these to ensure the refcount is in sane state
@sonney2k	lisitsyn, ohh nice
@sonney2k	now the example makes more sense to me
@lisitsyn	sonney2k: I wrote it one day
@lisitsyn	but never had an example
@lisitsyn	I just re-used some stuff from SLEP
@lisitsyn	that's why
@lisitsyn	:)
@lisitsyn	sonney2k: group lasso is very cool too
@lisitsyn	sonney2k: but this is something you understand already, yes?
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 4a0582b / examples/undocumented/python_modular/graphical/inverse_covariance_estimation_demo.py: https://github.com/shogun-toolbox/shogun/commit/4a0582b9abce9743125a83e5cadcf389a8e59e67
 shogun-notifier-	shogun: fix typo in inv cov estiamtion demo
 shogun-buildbot	build #778 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/778  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- van51 [~van51@athedsl-320452.home.otenet.gr] has quit [Quit: Leaving.]
 shogun-buildbot	build #1075 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1075
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7032878
-!- travis-ci [~travis-ci@ec2-107-20-28-143.compute-1.amazonaws.com] has left #shogun []
@sonney2k	wiking, it's your turn
@sonney2k	wiking, buildbot is happy
@sonney2k	lisitsyn, isn't group lasso just MKL?
@lisitsyn	sonney2k: I can't cast it to MKL
@lisitsyn	may be it is but I don't know
@lisitsyn	sonney2k: L1/L2 is like
@lisitsyn	sum of absolute L2 in groups
@lisitsyn	so weights in each feature group is pushed towards each other
@lisitsyn	while groups are pushed to zero
 shogun-buildbot	build #779 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/779  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	yeah same for MKL
@sonney2k	you have SVM (L2) in group
@sonney2k	and L1 on top
@sonney2k	and it is crap :D
@lisitsyn	sonney2k: ahh so you mean like kernels that work just on one group of features
@lisitsyn	this way yes
@sonney2k	yes
@lisitsyn	sonney2k: I did one experiment for georg last summer
@lisitsyn	hierarchical regularization worked quite well
@lisitsyn	well the data was hierarchical
@lisitsyn	that's why I guess
-!- travis-ci [~travis-ci@ec2-54-224-131-101.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7033420
-!- travis-ci [~travis-ci@ec2-54-224-131-101.compute-1.amazonaws.com] has left #shogun []
@sonney2k	wiking, alright once you wake up do your merge
@iglesiasg	good night guys
-!- iglesiasg [d58f329b@gateway/web/freenode/ip.213.143.50.155] has quit [Quit: Page closed]
 shogun-buildbot	build #1077 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1077  blamelist: Soeren Sonnenburg <sonne@debian.org>
--- Log closed Fri May 10 00:00:38 2013
