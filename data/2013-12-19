--- Log opened Thu Dec 19 00:00:13 2013
-!- besser82 [~besser82@fedora/besser82] has quit [Quit: freedom, friends, features, first ---> fedoraproject.org]
-!- bb_ [458fc8de@gateway/web/freenode/ip.69.143.200.222] has quit [Ping timeout: 272 seconds]
 shogun-buildbot	build #652 of nightly_default is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/652
-!- Saurabh7 [~Saurabh7@117.200.187.127] has joined #shogun
 Saurabh7	hello, can anyone tell me why the java modular thing fails in https://travis-ci.org/shogun-toolbox/shogun/builds/15686637?
-!- lisitsyn [~lisitsyn@80.252.20.67] has quit [Ping timeout: 252 seconds]
-!- zxtx [~zv@129-79-241-148.dhcp-bl.indiana.edu] has quit [Ping timeout: 250 seconds]
-!- tricksy_ is now known as tricksy
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- Saurabh7 [~Saurabh7@117.200.187.127] has quit [Ping timeout: 240 seconds]
-!- Saurabh7 [~Saurabh7@59.88.34.245] has joined #shogun
 lisitsyn	wiking: we are on the way to win hah
-!- zxtx [~zv@c-98-223-196-32.hsd1.in.comcast.net] has joined #shogun
-!- Saurabh7 [~Saurabh7@59.88.34.245] has quit [Ping timeout: 248 seconds]
-!- Saurabh7 [~Saurabh7@117.212.159.94] has joined #shogun
-!- Saurabh7 [~Saurabh7@117.212.159.94] has quit [Quit: Leaving]
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has quit [Quit: Leaving.]
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has joined #shogun
-!- xanthus [uid15721@gateway/web/irccloud.com/x-ntgkbkbxkgsbammv] has joined #shogun
 wiking	lisitsyn: \o/
 wiking	lisitsyn: seems ppl are not so keen on the licensing story :P (only 3 votes till now)
 lisitsyn	wiking: I can't decide between MIT and BSD
 lisitsyn	:D
 wiking	lol
 wiking	just pick one
 wiking	anyhow bsd is not really specified which one of that :P
 wiking	3 liner 2 liner etc.
 lisitsyn	wiking: I like 2-clause more
 lisitsyn	wiking: I am quite tired of beliefs any company will ever commit anything
 lisitsyn	due to lgpl/gplness
 lisitsyn	this has nothing to do with 2/3-clause, just recalled :)
 wiking	yeah sure
 wiking	see webkit
 wiking	that was working nicely for a while :P
 lisitsyn	wiking: yeah if you are webkit
 lisitsyn	or linux
 lisitsyn	wiking: still believe gpl would only scare away and that's it
 lisitsyn	no commitment to commit anything :)
 wiking	yeah well now we only have to decide which way to go
 wiking	and send out ~90 emails :)
 wiking	and in worst case drop out some code :P
 lisitsyn	I like that
 lisitsyn	dropping code is the most effective thing
 wiking	well this way we might be forced to do so :)
 lisitsyn	wiking: it is good to be forced to do good!
 wiking	heheh well yeah i think we'll need about 2-3 months to get this thing done
 wiking	so i think we could barely finish it before next gsoc :P
 wiking	seems the cmake improvements are optimized for fedora and like distors as nothing works from that on a normal distribution
-!- besser82 [~besser82@2a02:8108:8840:1800:e8b:fdff:fe16:bb33] has joined #shogun
-!- besser82 [~besser82@2a02:8108:8840:1800:e8b:fdff:fe16:bb33] has quit [Changing host]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
 lisitsyn	wiking: it doubled the number of website visitors haha
 wiking	:D
 wiking	lol
 wiking	well reddit effect
 wiking	lol github tracker works!
-!- bb_ [458fc8de@gateway/web/freenode/ip.69.143.200.222] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Saurabh7 :develop * 0512023 / tests/unit/evaluation/ (2 files): https://github.com/shogun-toolbox/shogun/commit/0512023bfb9cf4dacb4f888598b5ddcb2b5a5e4d
 shogun-notifier-	shogun: test cross validation fold indices
 shogun-notifier-	shogun: Saurabh7 :develop * 0f9ddbd / tests/unit/evaluation/ (2 files): https://github.com/shogun-toolbox/shogun/commit/0f9ddbd05c3bce46d3432a6b21df8834841f26a8
 shogun-notifier-	shogun: modified one file to include all tests
 shogun-notifier-	shogun: Saurabh7 :develop * 32725f5 / tests/unit/evaluation/ (2 files): https://github.com/shogun-toolbox/shogun/commit/32725f50f23ece9771b7fce70821f2007da99034
 shogun-notifier-	shogun: remove file
 shogun-notifier-	shogun: Saurabh7 :develop * ef6347d / tests/unit/evaluation/CrossValidation_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/ef6347dd3fe73fe6d04963541e4b9d5e2445a425
 shogun-notifier-	shogun: fixed typos in crossvalidation tests
 shogun-notifier-	shogun: Saurabh7 :develop * f4f8f07 / tests/unit/evaluation/CrossValidation_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/f4f8f07ec14e5007781c389594d3c91484e45d82
 shogun-notifier-	shogun: test covering of all indices
 shogun-notifier-	shogun: Saurabh7 :develop * 7458c16 / tests/unit/evaluation/CrossValidation_unittest.cc: https://github.com/shogun-toolbox/shogun/commit/7458c1696515b99217be8c08873bdce2955084fb
 shogun-notifier-	shogun: test covering of all indices
 shogun-buildbot	build #2543 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/2543  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Saurabh7 <saurabh.mahindre@gmail.com>
 wiking	huh that's a failure
-!- iglesiasg [~iglesiasg@c-3415e555.08-88-73746f24.cust.bredbandsbolaget.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- bb_ [458fc8de@gateway/web/freenode/ip.69.143.200.222] has quit [Ping timeout: 272 seconds]
-!- Saurabh7 [~Saurabh7@117.200.185.218] has joined #shogun
-!- iglesiasg [~iglesiasg@c-3415e555.08-88-73746f24.cust.bredbandsbolaget.se] has quit [Quit: Leaving]
-!- travis-ci [~travis-ci@ec2-23-22-78-97.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/15704551
-!- travis-ci [~travis-ci@ec2-23-22-78-97.compute-1.amazonaws.com] has left #shogun []
-!- Saurabh7 [~Saurabh7@117.200.185.218] has quit [Ping timeout: 240 seconds]
 shogun-buildbot	build #140 of clang34 - undefined behaviour analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20undefined%20behaviour%20analysis/builds/140  blamelist: Saurabh7 <saurabh.mahindre@gmail.com>
-!- Saurabh7 [~Saurabh7@117.200.185.218] has joined #shogun
 shogun-buildbot	build #138 of clang34 - thread analysis is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20thread%20analysis/builds/138  blamelist: Saurabh7 <saurabh.mahindre@gmail.com>
 shogun-buildbot	build #157 of clang34 - static analysis is complete: Failure [failed analyse]  Build details are at http://buildbot.shogun-toolbox.org/builders/clang34%20-%20static%20analysis/builds/157  blamelist: Saurabh7 <saurabh.mahindre@gmail.com>
-!- Saurabh7 [~Saurabh7@117.200.185.218] has quit [Ping timeout: 246 seconds]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- iglesiasg [~fjig@red-17.csc.kth.se] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- iglesiasg [~fjig@red-17.csc.kth.se] has quit [Quit: leaving]
-!- lisitsyn [~lisitsyn@80.252.20.67] has joined #shogun
 besser82	hey lisitsyn!
 lisitsyn	besser82: hey
 besser82	are you proof in da pure ANSI-C ???
 lisitsyn	besser82: well know a bit
 besser82	perhaps you know...
 lisitsyn	besser82: just ask and lets see if I know the answer ;)
 besser82	is it safe to cmp some double with da memcmp?
 lisitsyn	besser82: safe in means of?
 besser82	like da if ( memcmp ( double a, double b, sizeof(double) )  == 0 )  // doubles are equal
 besser82	sry, worng...
 lisitsyn	it doesn't sound like a good idea
 besser82	like da if ( memcmp ( (void*) double a, (void*) double b, sizeof(double) )  == 0 )  // doubles are equal
 lisitsyn	I mean comparing doubles exactly is kind of bad
 lisitsyn	besser82: apart from that it should work ok
 besser82	i know, but i need da generic code for working with da int int64 float double ....
 besser82	complex
 besser82	because da FORTRAN linpack is da mut too slow
 besser82	lisitsyn: ^^
 lisitsyn	besser82: okay I see
 lisitsyn	besser82: but still it could be an issue
 lisitsyn	double a == double b is like a rare case
 besser82	from mem fooprint or from value?
 besser82	footprint, i guess....
 lisitsyn	besser82: isn't it the same? ;)
 besser82	lisitsyn: \o/ NOOOOOOOOOOO!
 lisitsyn	besser82: you can have similar values but different footprints that's true
 lisitsyn	but similar not the same right?
 besser82	lisitsyn: likely on not IEEE conform hw
 besser82	lisitsyn: you gont me  :-P
 lisitsyn	besser82: so what do you compare?
 besser82	lisitsyn: ordinals of eval()
 lisitsyn	besser82: are you sure you want to rewrite anything from linpack? ;)
 besser82	and I need a way to do the in da ANSI-C with da generic-code
 lisitsyn	you gonna have a lot of troubles with that I guess
 besser82	for da f*ck**g embedded device  :-P
 lisitsyn	besser82: macroses for the win!
 lisitsyn	besser82: just use CMP(a,b)
 lisitsyn	CMP(double, a, b);
 lisitsyn	CMP(int, a, b);
 lisitsyn	etc
 lisitsyn	would that work?
 besser82	lisitsyn:  That's not in da ANSI-C  :(
 lisitsyn	besser82: why not?
 lisitsyn	#define CMP(type, a, b) type##cmp_implementation(a,b)
 lisitsyn	intcmp_implementation(a,b) { return a==b; }
 besser82	that would be too much size in binary  ;)
 lisitsyn	besser82: ehmmmm what's the other way?
 besser82	lisitsyn: i dunno, but memcpm
 besser82	lisitsyn: memcmp isn't picky about types
 lisitsyn	besser82: yes it doesn't care
 lisitsyn	besser82: but floating point?
 besser82	lisitsyn: i'm currently checkin if it would matter ---> p_implementation(a,b)
 besser82	lisitsyn: i'm currently checkin if it would matter ---> http://paste.fedoraproject.org/63243/87472324
 lisitsyn	besser82: in means of == it could be ok but do you need == for doubles?
 lisitsyn	it would work for 0.0 or whatever
 besser82	lisitsyn: yes somewhere in fortran code of linpack there is such
 lisitsyn	but once you get 0.75 + 0.5 it is not the same as 0.5 + 0.75
 besser82	lisitsyn: so i need to check for that in the loop, tooo....  thanks for pointing that out  ;)
 besser82	lisitsyn: seems that on recent compiler 0.5 + 0.75 is the same as 0.75 + 0.5 ...  :D
 lisitsyn	besser82: what about 0.76 and 0.51?
 besser82	from memory compare
 besser82	lemme check
 besser82	lisitsyn: same memory
 besser82	lemme do a loop check for vals 0.00001 .... 1000.0000
 lisitsyn	besser82: looks like it works
 lisitsyn	http://ideone.com/qA3Vb5
 lisitsyn	besser82: http://ideone.com/qA3Vb5 modified a bit
 lisitsyn	besser82: IEEE floating numbers are not commutative ;)
 besser82	lisitsyn: haha
 besser82	lisitsyn: a != b  :-P
 besser82	lisitsyn: should be memcmp ( ba, ab)   ;)
 lisitsyn	oops
 lisitsyn	http://ideone.com/qA3Vb5
 lisitsyn	okay let me break it
 besser82	lisitsyn:  same mem  :D
 besser82	lisitsyn:  looks like compilers are today smarter that the ones from 1985  :-P
 lisitsyn	besser82: it has nothing to do with compilers
 besser82	lisitsyn:  but with serialization  ;)
 besser82	lisitsyn:  and it looks recent compilers do these on real / double
 besser82	with da automagick  ;)
 besser82	lisitsyn:  let's try clang and see if  that f*cks it up  ;)
 besser82	lisitsyn: nope even clang does it right  ;)
 besser82	lisitsyn: like using serialization
 lisitsyn	besser82: what serialization?
 besser82	lisitsyn: making shure there is always the same mem-repres of one possible value
 lisitsyn	besser82: well in this snippet of mine
 lisitsyn	it just computes the same value
 besser82	lisitsyn: yes
 lisitsyn	let me force it to compute it non-associative way somehow
 besser82	lisitsyn: kk
 lisitsyn	besser82: compilers are smart but IEEE stays the same
 besser82	lisitsyn: proof?
 lisitsyn	besser82: what makes it different? :)
 lisitsyn	it is a standard
 besser82	lisitsyn: but then compiler are not compliant to IEEE
 lisitsyn	no it just optimizes this synthetic test
 besser82	lisitsyn: it look like it optimizes the whole loops
 besser82	when doing a cmp in a loop
 besser82	like loop:  a_ptr = &b ;  a=a+i ; b=i+b; memcmp (a,b,sizeof(double))
 lisitsyn	yeah sure
 lisitsyn	besser82: you've got to compare assembly to make sure ;)
 lisitsyn	besser82: but the truth is the same still, comparing doubles is a bit dangerous
 besser82	lisitsyn: yes, but i'm the search for doing all with the least possible code....
 besser82	all == int, int64, real, double, complex, ...
 lisitsyn	besser82: and == is faster ;)
 besser82	lisitsyn: yes, but more different code
 lisitsyn	I am pretty sure it won't inline memcmp
 besser82	lisitsyn: the matter is speed && minimum binsize
 besser82	lisitsyn: otherwise i could stick with that fortran-shit
 lisitsyn	besser82: fortan is considered faster for algebra ;)
 lisitsyn	due to good vectorization and alignment
 besser82	lisitsyn: really?
 besser82	lisitsyn: but it actually takes too much mem
 besser82	lisitsyn: for linking in gfortran
 besser82	lisitsyn: and for f-linpack i will need f-blas, which isn't faster that say atlas or openBlas
-!- zxtx [~zv@c-98-223-196-32.hsd1.in.comcast.net] has quit [Ping timeout: 248 seconds]
 besser82	lisitsyn: found my solution when studying the code of openBLAS  :D
 besser82	lisitsyn: many thanks
-!- iglesiasg [~iglesiasg@c-3415e555.08-88-73746f24.cust.bredbandsbolaget.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- zxtx [~zv@129-79-241-148.dhcp-bl.indiana.edu] has joined #shogun
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has quit [Ping timeout: 240 seconds]
-!- sonne|work [~sonnenbu@24-134-74-216-dynip.superkabel.de] has joined #shogun
-!- FSCV [~FSCV@fixed-203-250-138.iusacell.net] has joined #shogun
-!- bb [458fc8de@gateway/web/freenode/ip.69.143.200.222] has joined #shogun
 besser82	bb: Are all your problems solved now?
 bb	besser82 yes.. i have got shogun installed on osx! which was my primary choice.. i did not get any time today to test applications code etc
 bb	besser82 will do that in the next few days..
 besser82	bb: Nice to hear  :)
 bb	besser82 where are you located..
 besser82	bb: Germany, near Hannover
 besser82	bb: and youss
 besser82	bb: and you?
 bb	besser82 okay good in DC, USA
 besser82	bb: How is it going there?  Snow and stuff?
 bb	it does not snow much in dc .. around 4-5 times for the year
 besser82	bb: actually it isn't much different over here.  Temperatures are still > 0?C
 bb	besser82 that is good.. i used to work for a german company
 besser82	bb: Which one?
 bb	besser82 qiagen sciences
 besser82	bb: never heard of them....
 bb	it is a biotech company
 besser82	bb: i see  just googled them  ;)
 bb	besser82 what kind of work do you do..
 besser82	bb: I'm a freelancer, focussed on riskcalculations for individual insurances
 besser82	bb: stuff like JLo wants to insure her bum-bum or Hugh Heffner wants to insure himself not needing viagra  :-P
 bb	besser82 okay good... that sounds interesting
 besser82	bb: actually just sounds...
 bb	these days they can grow or trip anything
 bb	i meant trim
 besser82	bb: from me pov it is all the same
 bb	besser82 i understand
 besser82	bb: just mining huge amounts of data and applying some `magic` on that  :D
 bb	besser82 you will get rich someday and not show up on irc anymore
 besser82	bb:  :-P
 besser82	bb: That would actually not stop me from hanging out in irc  ;)
 besser82	bb: biotech actually seems to be more interessting, btw.
 bb	besser82 were you in the shogun workshop in summer
 besser82	bb: unfortunalely not,  i just hit the project ~ sept
 bb	besser82 okay
 besser82	bb: but i think next year i will be there
 besser82	bb: you, too?!?
 bb	besser82 good.. i would like to attend too just for fun and vacation lets see
 besser82	bb: nice!
 besser82	bb: but i don't know the scedule, yet...
 besser82	bb: looks like sonney2k needs to publish...
 besser82	bb: hope it won't interfere with some of my other visits
 besser82	bb: like fosdem, brussels or devconf.cz in Brno,CZ
 bb	besser82 yeah.. i have very slim chance to make it
 besser82	bb: Why?
 bb	besser82 good i dont have any such nice plans...just leaving work is hard for me
 besser82	bb:  so much to do?
 besser82	bb:  for me those are essential, because of catching up those new movements in some projects / products have in use on my infra
 bb	besser82 i am not a freelancer.. to make the big invention/bucks
 besser82	bb  ^^
 besser82	bb:  Those are actually part of my work
 besser82	bb:  not directly, but inderectly, because I'm using some nifty redhat stuff on my infra  like oVirt / open Stack / openShift
 bb	besser82 good i do not know these terms.. may be some day when i get out of my routine i can
 besser82	bb:  those are some middleware / cloud-oriented things
 besser82	bb:  oVirt is low-level datacenter management
 besser82	bb:  openStack actually make private cloud like putting some butter on your bread
 bb	besser82 okay.. so who are the commericial players in this
 besser82	bb:  http://www.openstack.org/foundation/companies/
 besser82	bb: says everything  ;)
 besser82	bb: ...brb...  pc
 besser82	bb: lots of global players
 bb	besser82 okay
 besser82	bb re
 besser82	bb: openShift is actually for deploying Software-as-a-Service
 bb	besser82 okay so do you get paid to this stuff as these are funded by these companies
 besser82	bb: no, i just use it, it's opensource
 besser82	bb:  because it makes my work a lot easier
 besser82	bb:  so i can focus on important stuff...
 besser82	bb:  which doesn't bring me $$$
 bb	besser82 okay may be not $$$ but $$$$$$$$$$$$$$$$$$$$$$$$
 besser82	bb:  the stuff which brings me $$$$$$$$ isn't important, just annoying neccesity
 besser82	bb: important stuff == making the world a better place, e.g.
 bb	besser82 that is good .. are you married by any chance
 besser82	bb: nope
 besser82	bb: have been but that's ~2 yo ago...
--- Log closed Fri Dec 20 00:00:14 2013
