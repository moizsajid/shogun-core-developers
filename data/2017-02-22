--- Log opened Wed Feb 22 00:00:35 2017
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203989223
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203993841
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []
@sukey	Pull Request #3620 "Add time comparison for KNN_KDTREE"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3620
-!- mikeling [uid89706@gateway/web/irccloud.com/x-cdfbgmlceusqskbo] has joined #shogun
-!- lambday [31cf349d@gateway/web/freenode/ip.49.207.52.157] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
-!- goksinen_ [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
@lambday	wiking: there?
@wiking	yes
@wiking	gonna be away
@wiking	for 10 muns
@wiking	*mins
@lambday	wiking: okay.. on travis the build seems inconsistent
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
@sukey	Pull Request #3534 "LinalgRefactor - Cholesky - CPU only"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3534
@wiking	lambday, back
@wiking	lambday, yeah it is
@wiking	but it is because it's multiprocessing
@wiking	i mean multithreading
@wiking	i.e.
@wiking	so it's not travis' fault
@wiking	it is actually a bug
@lambday	wiking: yeah.. but after the fix, I am not being able to reproduce the error in my local.. it works fine..
@lambday	wiking: any ideas on how I can reproduce this?
@wiking	mmm
@sukey	Pull Request #3635 "LinalgRefactor - Memory Transfer Mutex"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3635
@wiking	lambday, managed to reproduce it... but only outside of gdb :)
@sukey	New Commit "fix a memory leak in multikernel mmd" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/26098beb0b05c148f18c13fb920a345f3dbdf3fa
@lambday	wiking: just ran it once again.. same thing here :( if you can let me know some more details then maybe I can try to fix it
@lambday	wiking: going to work now... will be back 8-ish hrs later but I'll be online from office to keep track
@wiking	lambday, ok... but i'm just rewriting a bit that input parser
@wiking	and parse buffer
@wiking	as it's really not necessary to use mutexes there
@wiking	:)
-!- lambday_ [c40f1708@gateway/web/freenode/ip.196.15.23.8] has joined #shogun
-!- mode/#shogun [+o lambday_] by ChanServ
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204074298
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []
@lambday_	hmm looks like I broke a couple of other tests...
@lambday_	but the streaming test passed
@sukey	New Commit "Create TODO.md" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/dd3949ab5fd41bad323dce14fc9eb559275a419c
@wiking	lambday for the future
@wiking	could you use tickets or project (https://github.com/shogun-toolbox/shogun/projects
@wiking	for this todo?
@wiking	plz
@lambday_	wiking: sure I'll do that..
@wiking	because now this would be shipped with any distribution
@wiking	and i dont see really the point of that
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Soumyajit De's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204090022
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []
@wiking	lambday here?
@wiking	or lambday_ here?
@lambday_	wiking: hey
@wiking	ok so i was a bit working on some shit with these streaming features
@wiking	and i just realised something
@wiking	what the fuck does
@wiking	streamingFeature.duplicate()
@wiking	mean
@wiking	not syntactically
@wiking	but semantically
@wiking	what would you expect there?
@wiking	you have 2 Streaming objects
@wiking	and then?
@lambday_	wiking: another copy of the streaming feature object
@wiking	yeah but ok
@wiking	that i understand
@wiking	but functionally
@wiking	then what?
@lambday_	dunno... they should be able to stream independent of each other
@wiking	so you have the copy of the thing
@wiking	and totally independent of each other?
@wiking	or they are viewing the same stream/
@wiking	?
@lambday_	wiking: talking just from semantics, they should be able to share the same matrix (assuming that it's a streaming dense feature object)..
@lambday_	just a sec.. brb
@wiking	yeah the sharing of the same matrix i get
@wiking	i mean the input they are streaming should be the same
@wiking	but
@wiking	do you expect it to just to be a 'shared' view of the stream
@wiking	or that they are reading the stream totally independent way?
@wiking	i.e. if A does some read()
@wiking	B's read() wouldnt move
@wiking	?
@wiking	so they are just different objects over the same stream
@wiking	or actually
@wiking	they are reading the streams in a different manner
@wiking	so basically
@wiking	x = a.get_streamed_features(1);
@wiking	y = b.get_streamed_features(1);
@wiking	x == y?
@wiking	or y is the element after x
@lambday_	back
@lambday_	wiking: well, I'd expect x.equals(y), even though x != y... because it creates temporary small matrices.. based on the streaming size
@wiking	mmm
@wiking	what do you mean 'temporary small matrices'?
@wiking	this is a very simple question
@wiking	is x == y ?
@wiking	if you b.get_streamed_features(1)
@wiking	on both objects
@wiking	where b = a.duplicate()
@lambday_	say, we have 10000 features... streaming size is 10.. then it returns a new matrix, copying that 10
@lambday_	wiking: yeah... they are same, value-wise..
@wiking	get_streamed_features( num_elements)
@wiking	so you request the num elements there
@wiking	so you get N values back
@wiking	in a CFeatures
@wiking	ok so they are totally independent streams
@wiking	?
@wiking	over the same input
@lambday_	wiking: I am just guessing.. semantically they should be independent..
@wiking	i mean
@wiking	we should decide
@wiking	because currently
@wiking	it's just another view
@lambday_	on a, I should be able to do a.get_streamed_features(N) and on b, b.get_streamed_features(M)
@wiking	of the input
@lambday_	hmm
@wiking	ok this needs fixing then
@wiking	because currently
@wiking	the mutex-es
@wiking	are
@wiking	shared_ptr
@wiking	namely they are operating over the same fucking
@wiking	mutex
@wiking	so there should be an explicit copy of the mutex
@lambday_	yeah..
@lambday_	is this duplicate method used anywhere in Shogun?
@lambday_	why not call it clone then :/
@wiking	this is virtual of CFeatures
@lambday_	ah
@wiking	and btw its not being used anywhere
@wiking	so
@wiking	i woudl say
@wiking	i would not implement this for streaming features?
@wiking	and even delete the copy ctor of it?
@wiking	hmm?
@wiking	just to avoid confusion
@lambday_	wiking: maybe that's fine... SG_NOTIMPLEMENTED
@wiking	yeah just want to explicitly disable copy ctor on these streaming stuff
@wiking	so that nobody tries to copy it
@wiking	or if they want
@wiking	they can
@wiking	just implement it correctly
@lambday_	yeah otherwise the shared_ptr with mutex will get screwed up
@wiking	yes
@wiking	although now i'm trying to kill all the mutexes
@wiking	with atomic
@wiking	but the story there the same
@wiking	atomic's copy ctor is = delete
@wiking	so there you need explicit copying as well
@lambday_	so you **have** to delete your copy ctor
@wiking	yep
@lambday_	wiking: I am going for lunch.. will be back in 30 mins
@wiking	lambday just one question
@wiking	am i righ tthat if you delete the parent's copy ctor
@wiking	the derived classes will implicitly have their copy ctor 'deleted'
@wiking	yeah i think so :)
@wiking	ok it is
@wiking	clang is exactly telling me this
@wiking	perfect
@wiking	:)
-!- rushabh [67334b7e@gateway/web/freenode/ip.103.51.75.126] has joined #shogun
@lambday_	wiking: back.. so it is working now?
@wiking	mmm no
@wiking	it still needs more fixing
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	HeikoS, y0
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 255 seconds]
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	Issue #3652 "investigate XGBoost" karlnapf added label: "development tasks" - https://github.com/shogun-toolbox/shogun/issues/3652
@sukey	Issue #3652 "investigate XGBoost" karlnapf added label: "entrance" - https://github.com/shogun-toolbox/shogun/issues/3652
@sukey	Issue #3652 "investigate XGBoost" opened by karlnapf - https://github.com/shogun-toolbox/shogun/issues/3652
@HeikoS	lisitsyn:  jo
@HeikoS	you around?
@wiking	HeikoS, my phone is dying
@wiking	i'm gonna be back in a sec
@HeikoS	wiking: kk
 mikeling	HeikoS: hi, I had update the KNN notebook and the gist in https://gist.github.com/MikeLing/c57eef21a17c4371e2dcb3f4ce7505eb
@HeikoS	wiking: https://github.com/libdynd/libdynd
@HeikoS	you ever saw this?
@sukey	Pull Request #3620 "Add time comparison for KNN_KDTREE"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3620
@HeikoS	ah it is c++14
@wiking	:>
 mikeling	and I also create pr to shogun-data in https://github.com/shogun-toolbox/shogun-data/pull/134 ;)
@HeikoS	mikeling: will check soon
 mikeling	HeikoS: thank you! :)
@sukey	New Commit "fix a memory leak in multikernel mmd" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/26098beb0b05c148f18c13fb920a345f3dbdf3fa
@sukey	New Commit "doc fix for resize_vector and unit test" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/6f95a077aeab0f4569b580cce533a64c77ff0ea7
@sukey	New Commit "change index_t casts of size_t to int64_t where safe" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/7b2b73504306eda5c72db29243f9f4737d908a17
 CaBa	heya
@HeikoS	jojo
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 255 seconds]
-!- lambday_ [c40f1708@gateway/web/freenode/ip.196.15.23.8] has quit [Quit: Page closed]
@sukey	Issue #3651 "LibSVM train() error. (with BinaryLabels)"- https://github.com/shogun-toolbox/shogun/issues/3651
-!- travis-ci [~travis-ci@ec2-54-224-148-1.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204152352
-!- travis-ci [~travis-ci@ec2-54-224-148-1.compute-1.amazonaws.com] has left #shogun []
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-pwjlxepjpzgtegbh] has joined #shogun
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	lisitsyn: jojo
@HeikoS	sonney2k: around?
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204154375
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 268 seconds]
@lambday	back
@sukey	New Commit "fix segfault in unit tests" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/5ba962e86340aa6388d8fcc080454b6855a21211
-!- kesslerfrost [~textual@2405:204:103:e41c:c5e5:3ec8:4660:43da] has joined #shogun
-!- mikeling [uid89706@gateway/web/irccloud.com/x-cdfbgmlceusqskbo] has quit [Quit: Connection closed for inactivity]
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204233735
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []
@sukey	New Commit "make silent underflow failure explicit at runtime" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/ddf78b11c6f66b6bae559eaac27ae73bdcfd2365
-!- kesslerfrost [~textual@2405:204:103:e41c:c5e5:3ec8:4660:43da] has quit [Ping timeout: 240 seconds]
-!- kesslerfrost [~textual@49.44.51.104] has joined #shogun
@lambday	wiking: hi
-!- kesslerfrost [~textual@49.44.51.104] has quit [Ping timeout: 260 seconds]
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204258060
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []
-!- kesslerfrost [~textual@49.44.51.104] has joined #shogun
 CaBa	all that subsetting logic... it is nestable, right? if i apply subsets to my features, i can plug them into the usual machinery like x-val and it will be able to subset it further, right?
-!- rushabh [67334b7e@gateway/web/freenode/ip.103.51.75.126] has quit [Quit: Page closed]
-!- kesslerfrost [~textual@49.44.51.104] has quit [Quit: kesslerfrost]
@sukey	New Commit "fixed memory leak in statistical hypothesis test unit tests" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/49f28650bf583effbb78bb8be96d2dca84c9f589
-!- lambday [31cf349d@gateway/web/freenode/ip.49.207.52.157] has quit []
 Saurabh7_	CaBa: yes it should
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204334009
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has left #shogun []
--- Log closed Thu Feb 23 00:00:37 2017
