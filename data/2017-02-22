-- Log opened Wed Feb 22 00:00:35 2017
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has joined #shogun	00:26
travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203989223	00:26
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has left #shogun []	00:26
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun	01:09
travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203993841	01:09
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []	01:09
@sukey	Pull Request #3620 "Add time comparison for KNN_KDTREE"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3620	02:24
-!- mikeling [uid89706@gateway/web/irccloud.com/x-cdfbgmlceusqskbo] has joined #shogun	03:27
-!- lambday [31cf349d@gateway/web/freenode/ip.49.207.52.157] has joined #shogun	03:37
-!- mode/#shogun [+o lambday] by ChanServ	03:37
-!- goksinen_ [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]	03:49
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	04:02
@lambday	wiking: there?	04:07
@wiking	yes	04:07
@wiking	gonna be away	04:08
@wiking	for 10 muns	04:08
@wiking	*mins	04:08
@lambday	wiking: okay.. on travis the build seems inconsistent	04:08
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]	04:09
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	04:09
@sukey	Pull Request #3534 "LinalgRefactor - Cholesky - CPU only"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3534	04:32
@wiking	lambday, back	05:26
@wiking	lambday, yeah it is	05:26
@wiking	but it is because it's multiprocessing	05:26
@wiking	i mean multithreading	05:26
@wiking	i.e.	05:26
@wiking	so it's not travis' fault	05:26
@wiking	it is actually a bug	05:26
@lambday	wiking: yeah.. but after the fix, I am not being able to reproduce the error in my local.. it works fine..	05:41
@lambday	wiking: any ideas on how I can reproduce this?	05:41
@wiking	mmm	05:43
@sukey	Pull Request #3635 "LinalgRefactor - Memory Transfer Mutex"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3635	05:45
@wiking	lambday, managed to reproduce it... but only outside of gdb :)	05:58
@sukey	New Commit "fix a memory leak in multikernel mmd" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/26098beb0b05c148f18c13fb920a345f3dbdf3fa	06:13
@lambday	wiking: just ran it once again.. same thing here :( if you can let me know some more details then maybe I can try to fix it	06:16
@lambday	wiking: going to work now... will be back 8-ish hrs later but I'll be online from office to keep track	06:17
@wiking	lambday, ok... but i'm just rewriting a bit that input parser	06:25
@wiking	and parse buffer	06:25
@wiking	as it's really not necessary to use mutexes there	06:25
@wiking	:)	06:25
-!- lambday_ [c40f1708@gateway/web/freenode/ip.196.15.23.8] has joined #shogun	06:53
-!- mode/#shogun [+o lambday_] by ChanServ	06:53
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun	07:22
travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204074298	07:22
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []	07:22
@lambday_	hmm looks like I broke a couple of other tests...	07:40
@lambday_	but the streaming test passed	07:41
@sukey	New Commit "Create TODO.md" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/dd3949ab5fd41bad323dce14fc9eb559275a419c	08:00
@wiking	lambday for the future	08:10
@wiking	could you use tickets or project (https://github.com/shogun-toolbox/shogun/projects	08:10
@wiking	for this todo?	08:10
@wiking	plz	08:10
@lambday_	wiking: sure I'll do that..	08:37
@wiking	because now this would be shipped with any distribution	08:40
@wiking	and i dont see really the point of that	08:40
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun	08:53
travis-ci	it's Soumyajit De's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204090022	08:53
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []	08:53
@wiking	lambday here?	08:58
@wiking	or lambday_ here?	08:58
@lambday_	wiking: hey	08:59
@wiking	ok so i was a bit working on some shit with these streaming features	08:59
@wiking	and i just realised something	08:59
@wiking	what the fuck does	08:59
@wiking	streamingFeature.duplicate()	08:59
@wiking	mean	08:59
@wiking	not syntactically	08:59
@wiking	but semantically	08:59
@wiking	what would you expect there?	09:00
@wiking	you have 2 Streaming objects	09:00
@wiking	and then?	09:00
@lambday_	wiking: another copy of the streaming feature object	09:00
@wiking	yeah but ok	09:00
@wiking	that i understand	09:00
@wiking	but functionally	09:00
@wiking	then what?	09:00
@lambday_	dunno... they should be able to stream independent of each other	09:00
@wiking	so you have the copy of the thing	09:00
@wiking	and totally independent of each other?	09:01
@wiking	or they are viewing the same stream/	09:01
@wiking	?	09:01
@lambday_	wiking: talking just from semantics, they should be able to share the same matrix (assuming that it's a streaming dense feature object)..	09:01
@lambday_	just a sec.. brb	09:02
@wiking	yeah the sharing of the same matrix i get	09:02
@wiking	i mean the input they are streaming should be the same	09:02
@wiking	but	09:02
@wiking	do you expect it to just to be a 'shared' view of the stream	09:02
@wiking	or that they are reading the stream totally independent way?	09:02
@wiking	i.e. if A does some read()	09:03
@wiking	B's read() wouldnt move	09:03
@wiking	?	09:03
@wiking	so they are just different objects over the same stream	09:03
@wiking	or actually	09:03
@wiking	they are reading the streams in a different manner	09:03
@wiking	so basically	09:04
@wiking	x = a.get_streamed_features(1);	09:04
@wiking	y = b.get_streamed_features(1);	09:04
@wiking	x == y?	09:05
@wiking	or y is the element after x	09:05
@lambday_	back	09:06
@lambday_	wiking: well, I'd expect x.equals(y), even though x != y... because it creates temporary small matrices.. based on the streaming size	09:07
@wiking	mmm	09:07
@wiking	what do you mean 'temporary small matrices'?	09:07
@wiking	this is a very simple question	09:07
@wiking	is x == y ?	09:08
@wiking	if you b.get_streamed_features(1)	09:08
@wiking	on both objects	09:08
@wiking	where b = a.duplicate()	09:08
@lambday_	say, we have 10000 features... streaming size is 10.. then it returns a new matrix, copying that 10	09:08
@lambday_	wiking: yeah... they are same, value-wise..	09:09
@wiking	get_streamed_features( num_elements)	09:09
@wiking	so you request the num elements there	09:09
@wiking	so you get N values back	09:09
@wiking	in a CFeatures	09:09
@wiking	ok so they are totally independent streams	09:09
@wiking	?	09:09
@wiking	over the same input	09:09
@lambday_	wiking: I am just guessing.. semantically they should be independent..	09:10
@wiking	i mean	09:10
@wiking	we should decide	09:10
@wiking	because currently	09:10
@wiking	it's just another view	09:10
@lambday_	on a, I should be able to do a.get_streamed_features(N) and on b, b.get_streamed_features(M)	09:10
@wiking	of the input	09:10
@lambday_	hmm	09:11
@wiking	ok this needs fixing then	09:11
@wiking	because currently	09:11
@wiking	the mutex-es	09:11
@wiking	are	09:11
@wiking	shared_ptr	09:11
@wiking	namely they are operating over the same fucking	09:11
@wiking	mutex	09:11
@wiking	so there should be an explicit copy of the mutex	09:11
@lambday_	yeah..	09:11
@lambday_	is this duplicate method used anywhere in Shogun?	09:12
@lambday_	why not call it clone then :/	09:12
@wiking	this is virtual of CFeatures	09:12
@lambday_	ah	09:12
@wiking	and btw its not being used anywhere	09:13
@wiking	so	09:13
@wiking	i woudl say	09:13
@wiking	i would not implement this for streaming features?	09:13
@wiking	and even delete the copy ctor of it?	09:13
@wiking	hmm?	09:13
@wiking	just to avoid confusion	09:13
@lambday_	wiking: maybe that's fine... SG_NOTIMPLEMENTED	09:13
@wiking	yeah just want to explicitly disable copy ctor on these streaming stuff	09:13
@wiking	so that nobody tries to copy it	09:13
@wiking	or if they want	09:14
@wiking	they can	09:14
@wiking	just implement it correctly	09:14
@lambday_	yeah otherwise the shared_ptr with mutex will get screwed up	09:14
@wiking	yes	09:14
@wiking	although now i'm trying to kill all the mutexes	09:14
@wiking	with atomic	09:14
@wiking	but the story there the same	09:14
@wiking	atomic's copy ctor is = delete	09:14
@wiking	so there you need explicit copying as well	09:14
@lambday_	so you **have** to delete your copy ctor	09:14
@wiking	yep	09:15
@lambday_	wiking: I am going for lunch.. will be back in 30 mins	09:17
@wiking	lambday just one question	09:17
@wiking	am i righ tthat if you delete the parent's copy ctor	09:17
@wiking	the derived classes will implicitly have their copy ctor 'deleted'	09:17
@wiking	yeah i think so :)	09:17
@wiking	ok it is	09:19
@wiking	clang is exactly telling me this	09:19
@wiking	perfect	09:19
@wiking	:)	09:19
-!- rushabh [67334b7e@gateway/web/freenode/ip.103.51.75.126] has joined #shogun	09:41
@lambday_	wiking: back.. so it is working now?	10:01
@wiking	mmm no	10:01
@wiking	it still needs more fixing	10:02
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun	10:02
-!- mode/#shogun [+o HeikoS] by ChanServ	10:02
@wiking	HeikoS, y0	10:03
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 255 seconds]	10:07
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun	10:53
-!- mode/#shogun [+o HeikoS] by ChanServ	10:53
@sukey	Issue #3652 "investigate XGBoost" karlnapf added label: "development tasks" - https://github.com/shogun-toolbox/shogun/issues/3652	11:18
@sukey	Issue #3652 "investigate XGBoost" karlnapf added label: "entrance" - https://github.com/shogun-toolbox/shogun/issues/3652	11:18
@sukey	Issue #3652 "investigate XGBoost" opened by karlnapf - https://github.com/shogun-toolbox/shogun/issues/3652	11:18
@HeikoS	lisitsyn:  jo	11:23
@HeikoS	you around?	11:23
@wiking	HeikoS, my phone is dying	11:43
@wiking	i'm gonna be back in a sec	11:43
@HeikoS	wiking: kk	11:43
mikeling	HeikoS: hi, I had update the KNN notebook and the gist in https://gist.github.com/MikeLing/c57eef21a17c4371e2dcb3f4ce7505eb	11:51
@HeikoS	wiking: https://github.com/libdynd/libdynd	11:53
@HeikoS	you ever saw this?	11:53
@sukey	Pull Request #3620 "Add time comparison for KNN_KDTREE"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3620	11:53
@HeikoS	ah it is c++14	11:54
@wiking	:>	11:54
mikeling	and I also create pr to shogun-data in https://github.com/shogun-toolbox/shogun-data/pull/134 ;)	11:54
@HeikoS	mikeling: will check soon	11:58
mikeling	HeikoS: thank you! :)	11:59
@sukey	New Commit "fix a memory leak in multikernel mmd" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/26098beb0b05c148f18c13fb920a345f3dbdf3fa	12:13
@sukey	New Commit "doc fix for resize_vector and unit test" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/6f95a077aeab0f4569b580cce533a64c77ff0ea7	12:20
@sukey	New Commit "change index_t casts of size_t to int64_t where safe" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/7b2b73504306eda5c72db29243f9f4737d908a17	12:28
CaBa	heya	12:43
@HeikoS	jojo	12:44
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 255 seconds]	12:57
-!- lambday_ [c40f1708@gateway/web/freenode/ip.196.15.23.8] has quit [Quit: Page closed]	13:05
@sukey	Issue #3651 "LibSVM train() error. (with BinaryLabels)"- https://github.com/shogun-toolbox/shogun/issues/3651	13:27
-!- travis-ci [~travis-ci@ec2-54-224-148-1.compute-1.amazonaws.com] has joined #shogun	13:29
travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204152352	13:29
-!- travis-ci [~travis-ci@ec2-54-224-148-1.compute-1.amazonaws.com] has left #shogun []	13:29
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-pwjlxepjpzgtegbh] has joined #shogun	14:09
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun	14:10
-!- mode/#shogun [+o HeikoS] by ChanServ	14:10
@HeikoS	lisitsyn: jojo	14:10
@HeikoS	sonney2k: around?	14:11
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun	14:15
travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204154375	14:15
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []	14:15
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 268 seconds]	14:19
@lambday	back	14:49
@sukey	New Commit "fix segfault in unit tests" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/5ba962e86340aa6388d8fcc080454b6855a21211	16:26
-!- kesslerfrost [~textual@2405:204:103:e41c:c5e5:3ec8:4660:43da] has joined #shogun	16:37
-!- mikeling [uid89706@gateway/web/irccloud.com/x-cdfbgmlceusqskbo] has quit [Quit: Connection closed for inactivity]	17:09
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun	17:19
travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204233735	17:19
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []	17:19
@sukey	New Commit "make silent underflow failure explicit at runtime" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/ddf78b11c6f66b6bae559eaac27ae73bdcfd2365	17:26
-!- kesslerfrost [~textual@2405:204:103:e41c:c5e5:3ec8:4660:43da] has quit [Ping timeout: 240 seconds]	17:30
-!- kesslerfrost [~textual@49.44.51.104] has joined #shogun	17:57
@lambday	wiking: hi	18:12
-!- kesslerfrost [~textual@49.44.51.104] has quit [Ping timeout: 260 seconds]	18:14
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has joined #shogun	18:18
travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204258060	18:18
-!- travis-ci [~travis-ci@ec2-54-196-155-41.compute-1.amazonaws.com] has left #shogun []	18:18
-!- kesslerfrost [~textual@49.44.51.104] has joined #shogun	18:20
CaBa	all that subsetting logic... it is nestable, right? if i apply subsets to my features, i can plug them into the usual machinery like x-val and it will be able to subset it further, right?	19:09
-!- rushabh [67334b7e@gateway/web/freenode/ip.103.51.75.126] has quit [Quit: Page closed]	19:12
-!- kesslerfrost [~textual@49.44.51.104] has quit [Quit: kesslerfrost]	20:43
@sukey	New Commit "fixed memory leak in statistical hypothesis test unit tests" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/49f28650bf583effbb78bb8be96d2dca84c9f589	20:55
-!- lambday [31cf349d@gateway/web/freenode/ip.49.207.52.157] has quit []	20:56
Saurabh7_	CaBa: yes it should	20:57
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has joined #shogun	21:47
travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/204334009	21:47
-!- travis-ci [~travis-ci@ec2-54-204-179-254.compute-1.amazonaws.com] has left #shogun []	21:47
--- Log closed Thu Feb 23 00:00:37 2017