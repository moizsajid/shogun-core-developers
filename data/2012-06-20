--- Log opened Wed Jun 20 00:00:41 2012
-!- n4nd0 [53b32c87@gateway/web/freenode/ip.83.179.44.135] has quit [Quit: Page closed]
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has joined #shogun
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking_ [~wiking@108.170.25.86] has joined #shogun
-!- wiking_ [~wiking@108.170.25.86] has quit [Changing host]
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 248 seconds]
-!- wiking_ is now known as wiking
-!- wiking_ [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Ping timeout: 265 seconds]
-!- wiking_ is now known as wiking
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	wiking: hey, what's up? how is it going with the PrimalMosekSOSVM example? I read in the logs you were running it
@sonney2k	n4nd0 long time no see
@sonney2k	I've merged your stuff
@sonney2k	Infrastructure  wise I would need to know which functions should return specialized types
 n4nd0	sonney2k: hi, apply should return an structure type probably
 n4nd0	not a CStructuredLabels* but a subtype of it, e.g. CMulticlassSOLabels*
 n4nd0	also the get_label(idx) of CStructuredLabels*
@sonney2k	Will you be here in the evening ?
@sonney2k	We can then easily fix those
 n4nd0	I can do it if you want
 n4nd0	ok, tell me when and I'll be here
@sonney2k	After 19 hrs
 n4nd0	all right, I will be around from 19h then
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 240 seconds]
-!- nji [31ca5015@gateway/web/freenode/ip.49.202.80.21] has joined #shogun
-!- zxtx [~zv@cpe-98-154-83-76.socal.res.rr.com] has joined #shogun
 nji	hi!! does anyone know how to use img(erdas imagine raw format) images?
-!- uricamic [~uricamic@2001:718:2:1634:5d58:8730:47cd:6cf8] has joined #shogun
-!- nji [31ca5015@gateway/web/freenode/ip.49.202.80.21] has quit [Ping timeout: 245 seconds]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has joined #shogun
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- zxtx [~zv@cpe-98-154-83-76.socal.res.rr.com] has quit [Ping timeout: 246 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 265 seconds]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- nicococo [~nico@lacedcoffee.ml.tu-berlin.de] has joined #shogun
-!- nicococo [~nico@lacedcoffee.ml.tu-berlin.de] has left #shogun []
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has joined #shogun
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- emrecelikten [~emre@176.40.254.205] has quit [Quit: Leaving.]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has joined #shogun
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
-!- alexlovesdata [82955843@gateway/web/freenode/ip.130.149.88.67] has joined #shogun
 alexlovesdata	it is only a matter of time when I will fail with these too complex captchas
-!- blackburn [d5578ec7@gateway/web/freenode/ip.213.87.142.199] has joined #shogun
-!- blackburn [d5578ec7@gateway/web/freenode/ip.213.87.142.199] has quit [Quit: Page closed]
-!- uricamic [~uricamic@2001:718:2:1634:5d58:8730:47cd:6cf8] has quit [Quit: Leaving.]
-!- ckwidmer [8ca3fe9d@gateway/web/freenode/ip.140.163.254.157] has joined #shogun
-!- ckwidmer [8ca3fe9d@gateway/web/freenode/ip.140.163.254.157] has quit [Ping timeout: 245 seconds]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	alexlovesdata: hi, how is it going? do you have a moment?
 alexlovesdata	yes i have a moment
 alexlovesdata	did your MC-SVM got better results after your chat with Nico?
 alexlovesdata	the C hack still improves?
 n4nd0	yeah, with the C hack I am getting results similar to one-vs-rest, what is nice
 n4nd0	now I am trying to train the SOSVM with bias terms for the multiclass classification example
 n4nd0	because the % of correct training without bias, about 40%, is too low, and I think it could be achieved even if the implementation is buggy
@sonney2k	alexlovesdata, get a real IRC client
 n4nd0	however, with bias one-vs-rest gets about 90% correct classification
 n4nd0	:D
 n4nd0	so if I manage to get the same result with SOSVM I will be more confident about the implementation
@sonney2k	hi n4nd0
 n4nd0	sonney2k: hi
@sonney2k	n4nd0, I am wondering whether you could compare to some reference
@sonney2k	like some CS MC svm
@sonney2k	or some matlab code from nico
@sonney2k	cocococoo
 n4nd0	I am comparing to liblinear MC, but it is not SO of course
 n4nd0	Nico told me that he couldn't find his MC SO code :D
 n4nd0	I can give it a shot with svm-struct, I have already tried their multiclass test locally
@sonney2k	n4nd0, well then nico should just re-do it
@sonney2k	it is trivial in matlab...
@sonney2k	liblinear MC is not really the same thing
@sonney2k	it uses regularized bias...
@sonney2k	and it does not really converge too well
@sonney2k	btw, what epsilon did you give liblinear?
 alexlovesdata	you are right Soeren
 alexlovesdata	I will try to get  an irc client
 n4nd0	sonney2k: epsilon = 1e-3
 n4nd0	10e-3 sorry
 alexlovesdata	svm struct MC could be well for comparison, as I said yesterday :)
 n4nd0	alexlovesdata, sonney2k if I want to train my sosvm for MC with bias, should I use regularized bias or not?
 alexlovesdata	good question
@sonney2k	n4nd0, with 'true' bias
 n4nd0	sonney2k: I thought that liblinear bias not regularized since the value of the bias I get is much larger than the rest of the components of w, a few orders of magnitude
 alexlovesdata	without regularization would be better
@sonney2k	regularized bias is in liblinear because they cannot handly true bias
@sonney2k	handle
 alexlovesdata	but it is easier to implement with
@sonney2k	n4nd0, hmmhh I am not 100% sure with this but the rest of liblinear doesn't have a true bias so I would be surprised if the mc part had
-!- alexlovesdata [82955843@gateway/web/freenode/ip.130.149.88.67] has quit [Quit: Page closed]
 n4nd0	ok
 n4nd0	sonney2k: is it the epsilon value relevant? I tend to put it as small as possible (as long as the warnings don't show up) to improve classification results
@sonney2k	n4nd0, I just checked the source
@sonney2k	they use regularized bias in MC
 n4nd0	ok
@sonney2k	n4nd0, yes - the smaller the better
 n4nd0	can you tell me the line where it appears?
@sonney2k	if you compare to mosek - mosek will do 1e-12 or so optimization
 n4nd0	I tried to check it on my own but lost trace of it
@sonney2k	n4nd0, 108 in MulticlassLibLinear.cpp
 n4nd0	sonney2k: ok, did you want to take a look to the modular issue related to my code?
 n4nd0	I am surprised anyway sonney2k, look http://snipt.org/vahff0
 n4nd0	the first two columns are the weight vectors
 n4nd0	the last column each of the bias
 n4nd0	epsilon = 10e-5 in this case
@sonney2k	n4nd0, what you could do is create some multiclass problem where you put 4 gaussians at the x and y axis at (-1,0), (+1,0), (0,-1), (0,+1)
@sonney2k	n4nd0, wait doesn't help
@sonney2k	n4nd0, how many classes do you use?
 n4nd0	yeah, I have thought of that
@sonney2k	I mean just use 2 classes
@sonney2k	and then doing that would work
 n4nd0	for more than three classes I cannot come up with any disposition in 2D that makes it linearly separable for hyperplanes without bias
@sonney2k	n4nd0, btw why don't you compare to GMNPSVM?
 n4nd0	I have no idea what is that, let me see
@sonney2k	n4nd0, a true multiclass svm. I am not sure about the exact formulation though
 n4nd0	sonney2k: why do you think it could be better with GMNPSVM?
 n4nd0	I am taking a fast look and I think it is in the dual
 n4nd0	I chose LibLinear because I can train in the primal as well, like it is done for the SO-SVM
@sonney2k	n4nd0, I dont' know what the current state is
@sonney2k	n4nd0, btw disabling bias is probably best then w/ liblinear and in your code
@sonney2k	reducing epsilon from 1e-2 ... 1e-6 you should get more and more close results
 n4nd0	n4nd0: without bias I obtain similar % of correct classification with liblinear and my code, what is good
 n4nd0	but the thing is that for the example I am trying, 10 Gaussians with 100 samples each quite separated
 n4nd0	this % is quite low, about 40%-50%
 n4nd0	I believe there could be an error in my code and still get this rate
 n4nd0	that's why I wan to try it with bias, LibLinear goes up to 90% with bias for the same example
 n4nd0	if I get something similar with so-svm then I'll be more confident that the code may be ok
@sonney2k	n4nd0, don't compare accuracy
@sonney2k	n4nd0, compute the output of each f(x)
 n4nd0	what should I compare then?
 n4nd0	scores?
@sonney2k	and compare the real valued numbers
 n4nd0	weight vectors?
@sonney2k	n4nd0, normally when you compare convex optimizers you compute the objective value
@sonney2k	and if it deviates by not too much all is good
 n4nd0	yeah I understand that
 n4nd0	but Nico told me that since they are different solvers for the optimization problem
 n4nd0	they could be not so equal
@sonney2k	n4nd0, so what?
@sonney2k	if they are close then it is ok
 n4nd0	I am testing right now and giving you the results
@sonney2k	and results shouldb e more close when epsilon -> 0
@sonney2k	n4nd0, how can you compute objectives for liblinear?
@sonney2k	I guess in your code you have it as output of mosek
 n4nd0	for liblinear I just do get_w() for each machine
 n4nd0	aaah! I forgot to say, I am using a MulticlassMachine formed by binary LibLinear
 n4nd0	not MulticlassLibLinear
 n4nd0	I should have said that before, sorry
@sonney2k	n4nd0, ??
@sonney2k	how is this comparable then?
@sonney2k	n4nd0, don't you do true multiclass?
 n4nd0	http://snipt.org/vahfh6
 n4nd0	that's how it is exactly done
@sonney2k	n4nd0, well not you should compare it to true multiclass liblinear!
 n4nd0	aham, why? shouldn't they be more or less the same?
@sonney2k	n4nd0, it is like comparing apples and bananas...
@sonney2k	n4nd0, really the best thing you can do is compare it to nicos' true MC code
 n4nd0	:O, really, why? I thought it had actually sense
@sonney2k	how?
@sonney2k	I mean you need to compare if objectives are the same
@sonney2k	classification accuracy is only a vague indication that things are ok
 n4nd0	aham, exactly the same optimization problem
@sonney2k	as alex said compare it to the true CS thing http://svmlight.joachims.org/svm_multiclass.html
 n4nd0	I am not sure why they shouldn't be equivalent though
@sonney2k	so download TJ's svm multiclass
@sonney2k	make sure to disable bias in your code
@sonney2k	and to scale C by number of examples in your code (seems like TJ is doing it...)
 n4nd0	my bias doesn't change anything so ...
 n4nd0	ok
@sonney2k	n4nd0, it changes objective
@sonney2k	and that is all what counts
@sonney2k	then compare objectives
@sonney2k	difference should be *very small*
@sonney2k	in the order of epsilon
 n4nd0	there's no epsilon in my code
@sonney2k	n4nd0, in TJs there is
 n4nd0	yes
@sonney2k	and yours is using mosek's default so should be <1e-12
 n4nd0	I am not sure this epsilon is mosek's default
 n4nd0	I have seen that in the paper the bias they use is for the condition to add a new constraint
 n4nd0	sorry
 n4nd0	don't read bias ^, read epsilon
 n4nd0	http://www.cs.cornell.edu/People/tj/publications/tsochantaridis_etal_04a.pdf
 n4nd0	page 4, algorithm 1, line 8
@sonney2k	n4nd0, it basically means they tolerate some constraint violation
@sonney2k	up to epsilon
@sonney2k	so if you set epsilon smaller it will take longer to converge (or will never :D
 n4nd0	yes
 n4nd0	what I meant is that it is not the mosek's default, but another thing
@sonney2k	n4nd0, yes of course
 n4nd0	in my code it will be simply H(y_pred) > xi_i, in line 8 of the algo
 n4nd0	that's how it is in the code
@sonney2k	just run svm multiclass once with say 0.1 as epsilon
@sonney2k	then compare objectives
@sonney2k	then run it with 1e-4 or so
@sonney2k	and compare again
@sonney2k	results shoudl become more similar
@sonney2k	when decreasing epsilon in svm multiclass
 n4nd0	my liblinear multiclass right?
 n4nd0	or should I repeat for MulticlassLiblinear?
@sonney2k	dont' care about liblinear
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has joined #shogun
@sonney2k	n4nd0, compare you MCSO svm w/ svm multiclass
@sonney2k	puffin444, hey there .... about your patch - shall we merge it or what is the state
@sonney2k	puffin444, other known issues except for this live user?
 puffin444	I was hoping that it would be merged, as the additional model selection code would make it a pretty huge patch
@sonney2k	puffin444, well you never said so
@sonney2k	so we didn't know
 puffin444	I have tested it as much as possible for accuracy against GPML and for memory leaks via Valgrind
@sonney2k	ok
@sonney2k	so only the live user issue is in there right?
 puffin444	Yes.
@sonney2k	puffin444, so you now use enums to compare classes?
@sonney2k	no longer get_name?
 puffin444	Yes.
@sonney2k	ok
 puffin444	I'm using enums to determine the likelihood models and will do so for other classes for now on.
 CIA-18	shogun: Soeren Sonnenburg master * r5609bab / (18 files in 3 dirs): Merge pull request #585 from puffin444/master (+11 more commits...) - http://git.io/Aj_NBg
@sonney2k	puffin444, btw can we have some example for that?
 puffin444	Absolutely
@sonney2k	puffin444, ahh and one more comment - what do you need iostream for?
 puffin444	Nothing. I had it in there for debugging and looks like I forgot to take it out. sorry :(
@sonney2k	puffin444, did you already include it in the modular interfaces or are you using it from C?
@sonney2k	puffin444, you can always use SG_PRINT
 puffin444	Will do so in the future.
@sonney2k	and nowadays matrix.display() / vector.display() etc
@sonney2k	puffin444, thanks for the patch
 puffin444	Right now it's all in C/C++, I can have a python example if you wish.
@sonney2k	puffin444, well some C/C++ one for the moment is OK - later we need some eye candy in python / matplotlib :)
 puffin444	Absolutely. Would you like me to submit a small patch including an example right away or would if be fine if I just included it when I submit the model selection code?
 n4nd0	sonney2k: is there something to talk about the modular interface?
@sonney2k	n4nd0, yes - you said you wanted to return some specialize code
@sonney2k	puffin444, the earlier we have an example the better - these things get checked on the buildbot so they are kind of a minimal test
 puffin444	Okay.
@sonney2k	n4nd0, err derived class
@sonney2k	so I need to know the exact names to get things to work
 n4nd0	sonney2k: first, since I am using specialized StructuredLabels, e.g. MulticlassSOLabels; I wonder whether apply should return StructuredLabels and later cast or return MulticlassSOLabels directly
 n4nd0	and then when I do CStructuredLabels::get_label()
 n4nd0	that returns a CStructuredData*
 n4nd0	but maybe it would be better to return the derived class, e.g. CRealNumber for the multiclass example
@sonney2k	n4nd0, yeah we can do that
@sonney2k	but I need some list for that and an example (in python to see if things work now)
 n4nd0	sonney2k: things won't work in python now since the swig interface is not fully completed
 n4nd0	sonney2k: but I can try to do it, make the example work and let you know
 n4nd0	is that ok?
@sonney2k	n4nd0, sure
 n4nd0	but just as an idea
 n4nd0	what is the preference, to do swig magic to return correct types or to use things like RealNumber.obtain_from_generic(multiclassSOLabels)
 n4nd0	however for PrimalMosekSOSVM I doubt if swig magic will work since one may want to return MulticlassSOLabels or other types of labels depending on the application at hand
@sonney2k	n4nd0, I would always provide the obtain_from_generic helpers
@sonney2k	n4nd0, it is only 'syntactic sugar' to not having to use them from the type unaware interfaces in cases where these are not needed of course
 CIA-18	shogun: Soeren Sonnenburg master * r140515f / src/interfaces/modular/Machine.i : revert patch deactivating apply magic - http://git.io/woCRXw
@sonney2k	n4nd0, if you want to see how it is done look at interfaces/modular/Machine.i
@sonney2k	basically all I do is some %extend classname { CRegressionLabels* apply(CFeatures* data=NULL) {  return $self->apply_regression(data); } }
@sonney2k	and then a %rename of the original apply function
@sonney2k	that's it
 CIA-18	shogun: Soeren Sonnenburg master * rf4d348f / (43 files in 7 dirs): move kernel normalizers to shogun/kernel/normalizer - http://git.io/40CGTQ
 n4nd0	sonney2k: ok, thanks
-!- wiking [~wiking@wsip-184-185-108-33.ri.ri.cox.net] has joined #shogun
-!- wiking [~wiking@wsip-184-185-108-33.ri.ri.cox.net] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
 shogun-buildbot	build #972 of cmdline_static is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cmdline_static/builds/972
-!- blackburn [5bde8018@gateway/web/freenode/ip.91.222.128.24] has joined #shogun
@sonney2k	blackburn, hey there
 blackburn	hey
@sonney2k	blackburn, any reason you disabled the apply magic in interfaces/modular/Machine.i
 blackburn	hmm did I?
@sonney2k	yeah
@sonney2k	all commented
@sonney2k	I fixed that in 140515f139e1dd9605d96ea28a80d1bfd8e92a2d
 blackburn	I do not remember I did that
@sonney2k	blackburn, git blamed you
@sonney2k	and git never lies
@sonney2k	:D
-!- blackburn [5bde8018@gateway/web/freenode/ip.91.222.128.24] has quit [Ping timeout: 245 seconds]
-!- blackburn [5bde8018@gateway/web/freenode/ip.91.222.128.24] has joined #shogun
 blackburn	sonney2k: I do not really understand why it became commented O_o
 blackburn	it was rather unintentional
 shogun-buildbot	build #973 of cmdline_static is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cmdline_static/builds/973  blamelist: walke434@msu.edu, sonne@debian.org
-!- blackburn [5bde8018@gateway/web/freenode/ip.91.222.128.24] has quit [Quit: Page closed]
@sonney2k	puffin444, can you please have a look at examples/undocumented/libshogun/regression_gaussian_process.cpp ?
@sonney2k	it fails currently...
@sonney2k	fails to compile that is
 puffin444	Oh No. It looks like I forgot to update the regression_gaussian_process.cpp file for the new interface :-/
 puffin444	I am uploading a new example ASAP.
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has quit [Ping timeout: 245 seconds]
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has joined #shogun
-!- wiking [~wiking@wsip-184-185-108-33.ri.ri.cox.net] has joined #shogun
-!- wiking [~wiking@wsip-184-185-108-33.ri.ri.cox.net] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
@sonney2k	blackburn, chris' patch breaks stuff - examples in libshogun won't work
 CIA-18	shogun: puffin444 master * r0051549 / (4 files in 3 dirs): Updated Gaussian Process Regression example. - http://git.io/5RGkUw
 CIA-18	shogun: Soeren Sonnenburg master * rcf381d6 / (4 files in 3 dirs): Merge pull request #591 from puffin444/master - http://git.io/fv0d5w
@sonney2k	puffin444, btw you can use init_shogun_with_defaults()
@sonney2k	then you don't need to set a print etc function
 puffin444	ok.
 puffin444	I'll quickly change the example if you want with that.
 puffin444	Sorry about breaking the build.
@sonney2k	puffin444, blackburn/chris broke it before you so relax :)
@sonney2k	and they are both hiding
@sonney2k	wiking, any news on your PR?
 wiking	jes
@sonney2k	wiking, a real one tomorrow?
 wiking	i have a merging error here
 wiking	trying to resolve
@sonney2k	?
 wiking	something happened with the Makefile in the example
 wiking	that i cannot merge in
 wiking	debugging
 puffin444	sonney2k, are we still using NLOPT in shogun?
@sonney2k	puffin444, if you need it - you can. pluskid found another lib that seems to be better suited for his optimization problem
@sonney2k	(see his pull request - maybe it fits to what you want to do)
 puffin444	sonney2k, I saw pluskid's patch and I wondered if it would be easier just to use his lib
@sonney2k	puffin444, look at it!
@sonney2k	it seemed very promising to me
 puffin444	It does to me too. My only concern is that it doesn't support constraints
 puffin444	But I think the only constraints I have are that the hyperparameters must be positive.
@sonney2k	puffin444, try it out on some toy example - I would bet it supports box constraints...
 puffin444	Would optimizing over log space work?
@sonney2k	puffin444, no idea - have a look at this lib (I don't know it either) or ask oliver
 puffin444	I think it would - Oliver mentioned something like this.
@sonney2k	IIRC will a log transform keep things convex
@sonney2k	actually log(x) is a counter example - haha
 n4nd0	puffin444: about optimizing after applying log, it depends on what are you applying log to I think
 puffin444	ok
 n4nd0	depending on its convexity/concavity and if it's decreasing/increasing it can turn the problem into convex and so
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 264 seconds]
-!- wiking [~wiking@huwico/staff/wiking] has quit [Quit: wiking]
-!- emrecelikten [~emre@176.41.10.108] has joined #shogun
-!- puffin444 [62e3926e@gateway/web/freenode/ip.98.227.146.110] has quit [Quit: Page closed]
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has joined #shogun
-!- wiking [~wiking@ip68-14-87-205.ri.ri.cox.net] has quit [Changing host]
-!- wiking [~wiking@huwico/staff/wiking] has joined #shogun
--- Log closed Thu Jun 21 00:00:41 2012
