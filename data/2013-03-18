--- Log opened Mon Mar 18 00:00:14 2013
-!- zxtx [~zv@63.239.94.10] has joined #shogun
-!- zxtx [~zv@63.239.94.10] has quit [Ping timeout: 240 seconds]
-!- zxtx [~zv@63.239.94.10] has joined #shogun
-!- zxtx [~zv@63.239.94.10] has quit [Ping timeout: 256 seconds]
-!- zxtx [~zv@63.239.94.10] has joined #shogun
-!- sidi [~sidi@14.139.122.114] has joined #shogun
-!- sidi [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- zxtx [~zv@63.239.94.10] has quit [Ping timeout: 264 seconds]
-!- sidi [~sidi@14.139.122.114] has joined #shogun
-!- sidi [~sidi@14.139.122.114] has quit [Client Quit]
-!- sidi [~sidi@14.139.122.114] has joined #shogun
@sonney2k	wiking, that would mean we always have merge conflicts in the file and this file would be committed on every attempt
-!- blackburn [~blackburn@109.226.90.103] has quit [Quit: Leaving.]
-!- zxtx [~zv@75-59-238-10.lightspeed.sntcca.sbcglobal.net] has joined #shogun
-!- sidi_ [~sidi@14.139.122.114] has joined #shogun
-!- sidi [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has joined #shogun
-!- n4nd0 [~nando@n141-p108.kthopen.kth.se] has joined #shogun
-!- zxtx [~zv@75-59-238-10.lightspeed.sntcca.sbcglobal.net] has quit [Ping timeout: 240 seconds]
-!- zxtx [~zv@75-59-238-10.lightspeed.sntcca.sbcglobal.net] has joined #shogun
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has joined #shogun
 sonne|work	wiking: heyja I have an idea how to get rid of the version.h file :-)
 sonne|work	we just do everything on-the-fly with defines on the cmdline!
 sonne|work	wiking: then we could use the scheme we want :D
 sonne|work	and for releases we just rely on proper tagging - i.e. 2.1 with time from NEWS
-!- sidi_ [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- blackburn [~lisitsin@mxs.kg.ru] has joined #shogun
 wiking	:D
 wiking	sonne|work: interesting idea
 wiking	sonne|work: but i'm sure many opensource project has already solved this somehow
 sonne|work	wiking: then please point me to anyone who solved this
 sonne|work	blackburn: I had this idea how we could use git flow
 sonne|work	blackburn: we would drop the lib/versionstring.h thing
 sonne|work	and create things on the file (if .git dir exists)
 sonne|work	and otherwise take the version info from NEWS file
 blackburn	sonne|work: yeah makes sense for me
 sonne|work	blackburn: so we would need to add lots of stuff to $DEFINE (all on cmdline) instead of in a .h file
 sonne|work	the only trouble is that anyone using libshogun would not be able to figure out the version
 blackburn	let me check what is defined there
 sonne|work	because no such file would exist
 sonne|work	(which sucks)
 blackburn	sonne|work: so jsut extrac these defines from git?
 sonne|work	blackburn: well we do that with .version.sh
 sonne|work	ohh better
 sonne|work	we generate lib/versionstring.h always on the fly
 sonne|work	so we just need a small change to .version.sh
 blackburn	sonne|work: sounds good
-!- ptizoom [~christian@85.210.83.72] has joined #shogun
 sonne|work	blackburn: alright then we can follow https://github.com/diaspora/diaspora/wiki/Git-Workflow from now on
 sonne|work	ptizoom: zoom zoom!
 ptizoom	yep... still at ground NAN!
 ptizoom	is shogun-toolbox surviving?
 blackburn	ptizoom: interesting question
 ptizoom	well...I overlooked lots of # packages...
 ptizoom	ptizoom is a strange name, and not very flattering...but unique. never used by anyone since ~1998!
 blackburn	ptizoom: yeah I chose a name for my library using the same way
 ptizoom	(tm)
 wiking	sonne|work: yeah i'm just looking
 sonne|work	ptizoom: what does ptizoom stand for?
 wiking	sonne|work: btw why don't we just use the good old epoch.major.minor_revision format?
 sonne|work	wiking: we do
 sonne|work	shogun 2.1.0
 wiking	sonne|work: in the header as well?
 ptizoom	klein zoom...!
 wiking	sonne|work: i see the MAINVERSION macro
 wiking	sonne|work: but we could switch to the usual slicing up it into different parts
 wiking	like most of the opensource project does it
 wiking	do we really need to know the git revision ?
 sonne|work	wiking: sure
 sonne|work	if someone reports an issue and has *some* git compiled version
 sonne|work	how do we know the version?
 wiking	you mean he would have a randomly checked out shogun version
 sonne|work	yes
 wiking	and then he wouldn't be able to tell us which rev he used from the repo?
 sonne|work	that's the most common way of using shogun I guess
 sonne|work	yeah
 wiking	i mean without the header
 wiking	since afaik if they have a random version
 wiking	then they checked out the git repo
 wiking	hence they can tell us which is the last git commit in their repo
 sonne|work	wiking: if they didn't update in the meantime and only have a single version lying around yes
 wiking	yes but i don't see it happening that somebody has *some* commit inbetween 2 releases, but he wouldn't be able to tell us his last commit w/o the version string
 wiking	i mean how did he get that source in the first place w/o checking out the repo
 sonne|work	wiking: I had that a lot
 wiking	sonne|work: using then versionstring.h.in ?
-!- sidi [~sidi@14.139.122.114] has joined #shogun
 wiking	and generate versionstring.h from that with the help of ./configure
 sonne|work	wiking: I don't really understand what you are saying but we have a nice fix now so I guess that is good enough to no longer worry about this issue
 wiking	well the most common things that oss project do is simply have a .in file (you know the template file). i think that's the common format of autoconf
 wiking	and then just use that to generate with ./configure script the actual .h file
 wiking	pretty common stuff...
 sonne|work	wiking: that is what we do
 sonne|work	though not with .in but with a shell script
-!- n4nd0 [~nando@n141-p108.kthopen.kth.se] has quit [Ping timeout: 264 seconds]
-!- sidi [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- sidi [~sidi@14.139.122.114] has joined #shogun
-!- ptizoom [~christian@85.210.83.72] has quit [Quit: Ex-Chat]
-!- n4nd0 [~nando@n141-p108.kthopen.kth.se] has joined #shogun
-!- n4nd0 [~nando@n141-p108.kthopen.kth.se] has quit [Client Quit]
-!- n4nd0_ [~nando@n141-p108.kthopen.kth.se] has joined #shogun
-!- n4nd0_ is now known as n4nd0
-!- sidi [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- sidi [~sidi@14.139.122.114] has joined #shogun
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has quit [Ping timeout: 246 seconds]
-!- blackburn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- hoijui [~hoijui@141.23.76.85] has joined #shogun
-!- hoijui [~hoijui@141.23.76.85] has quit [Ping timeout: 245 seconds]
-!- blackburn [~blackburn@185.6.239.95] has joined #shogun
-!- sidi [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- sidi [~sidi@14.139.122.114] has joined #shogun
-!- sidi_ [~sidi@14.139.122.114] has joined #shogun
-!- sidi [~sidi@14.139.122.114] has quit [Read error: Connection reset by peer]
-!- sidi_ [~sidi@14.139.122.114] has quit [Client Quit]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 1e05037 / Makefile: https://github.com/shogun-toolbox/shogun/commit/1e05037e64cae1a2a247e64db8c5d316a1cccf34
 shogun-notifier-	shogun: fix release script
 shogun-notifier-	shogun: Soeren Sonnenburg :dev * 6ce4431 / src/ChangeLog: https://github.com/shogun-toolbox/shogun/commit/6ce44315fdc21bfee6876d006201530c3c28d885
 shogun-notifier-	shogun: updated changelog
 shogun-notifier-	shogun: Soeren Sonnenburg :dev * 1b1130d / doc/Doxyfile: https://github.com/shogun-toolbox/shogun/commit/1b1130d2ca8f48e97737caa405ede519abe70253
 shogun-notifier-	shogun: Preparing for new Release shogun_2.1.0
 shogun-notifier-	shogun: Soeren Sonnenburg :dev * e6138dd / src/ChangeLog: https://github.com/shogun-toolbox/shogun/commit/e6138ddfb06ea1ad193a2a3c0f941a7bfadff26b
 shogun-notifier-	shogun: Preparing for new Release shogun_2.1.0
 blackburn	sonney2k: release every day!
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has joined #shogun
 shogun-buildbot_	build #364 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/364  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- zxtx [~zv@75-59-238-10.lightspeed.sntcca.sbcglobal.net] has quit [Ping timeout: 264 seconds]
 wiking	yeeey
 wiking	:)
 wiking	anybody around?
 blackburn	wiking: yes
 wiking	blackburn: so actually now with the version string changes, are we going for direct commit ?:)
 blackburn	wiking: I don't mind direct commit
 wiking	please let's do it!
 blackburn	wiking: I do direct commit anyway :D
 wiking	since if we really go forward with the git-flow-like dev mechanizm, we should not encounter merging problems
-!- alexlovesdata [~binder@2001:638:806:e001:eda1:5a75:ff2a:e6f] has joined #shogun
 wiking	btw: fetching the upstream repo via 3g... isn't having the most optimal speed
@sonney2k	alexlovesdata, hey
 wiking	blackburn: i've created a mini patch for ./configure
 alexlovesdata	int32_t num_samples=features->get_num_vectors();
 alexlovesdata	SGMatrix<float64_t> outmatrix(dim_feature_space,num_samples);
 alexlovesdata	float64_t val = CMath::sqrt(2.0 / dim_feature_space);
 alexlovesdata	for (int32_t vecind = 0; vecind < num_samples; vecind++)
 alexlovesdata	{
 alexlovesdata	for (int32_t od = 0; od < dim_feature_space; ++od)
 alexlovesdata	{
 alexlovesdata	float64_t tmpval=randomcoeff_additive[od]+features->dense_dot (vecind, randomcoeff_multiplicative+od*dim_input_space, dim_input_space);
 alexlovesdata	outmatrix.matrix[od+dim_feature_space*vecind]=val*cos(tmpval);
 alexlovesdata	}
 alexlovesdata	}
 wiking	for jemalloc and tc malloc
 alexlovesdata	CDenseFeatures<float64_t> * result = new CDenseFeatures<float64_t>(outmatrix);
 wiking	lol face :D
 blackburn	uh that's a rude hello
 wiking	so yeah i have a tcmalloc,jemalloc patch for shogun..
 wiking	interested?
 blackburn	wiking: I don't give a what tcmalloc is :)
 wiking	basically a faster heap manager library than the default glibc
 wiking	as well as both support heap profiling
 wiking	and heap checking
 wiking	-> leak checking
 wiking	blackburn: https://www.facebook.com/notes/facebook-engineering/scalable-memory-allocation-using-jemalloc/480222803919
 wiking	both are developed by the big boyz
 alexlovesdata	code spam-in :P
 wiking	jemalloc = facebook; tcmalloc = google
 blackburn	wiking: with proper define would be nice
 wiking	blackburn: ?
 blackburn	wiking: not the default thing I mean
 wiking	yeah
 wiking	it's a configure flag
 wiking	and by default it's disabled
 blackburn	wiking: is it possible to change default allocator for everything?
 blackburn	I don't know a way but may be you know
 wiking	as it's a drop-in malloc replacement library, it doesn't need any extra stuff just to link with the given library
 wiking	even LD_PRELOAD should work....
 wiking	according to tcmalloc you just do LD_PRELOAD
 blackburn	wiking: just link?
 wiking	and the malloc calls are going to be overriden
 wiking	*overridden
 wiking	blackburn: yep... so when linking the shogun lib: -ltcmalloc
 wiking	and that's all
 blackburn	wiking: I am curious if there is a speedup
 wiking	yeah i didn't manage to test that
 wiking	i've created tcmalloc replacement yesterday night
 wiking	but then it came out that it's buggy under 10.8 osx
-!- n4nd0 [~nando@n141-p108.kthopen.kth.se] has quit [Quit: leaving]
 wiking	so i quickly written the jemalloc support as well
 wiking	as that works fine
 wiking	but didn't have time for debugging
 wiking	but since i've created we might as well put it in
 wiking	as maaaybe somebody would like to play with it
 wiking	and then if somebody has time to test it....
 wiking	i mean it shoudl be fairly easy to check this
 wiking	the bsd1 bot uses jemalloc fork by default (freebsd's malloc library isn't based on glibc)
 wiking	so we could check there running times for the examples
 blackburn	wiking: any package in ubuntu?
 wiking	blackburn: dunno just a sec
 wiking	libtcmalloc-minimal0 - an efficient thread-caching malloc
 wiking	libtcmalloc-minimal0-dbg - an efficient thread-caching malloc
 wiking	libjemalloc-dev - development files and documentation for jemalloc
 wiking	libjemalloc1 - general-purpose scalable concurrent malloc(3) implementation
 wiking	so yes
 wiking	;)
 blackburn	let me try it with tapkee
 wiking	both are in
 blackburn	I am curious
 wiking	blackburn: LD_PRELOAD it
 blackburn	wiking: I feel stupid - what does it mean?
 wiking	e.g. LD_PRELOAD="/usr/lib/libtcmalloc.so"
 blackburn	wiking: and run app?
 wiking	LD_PRELOAD="/usr/lib/libtcmalloc.so" ./example
 blackburn	wiking: no need for any linking you mean?
 wiking	yes
 wiking	blackburn: shoudl work w/o anything
 wiking	they don't recommend this mode
 wiking	but should work
 wiking	as it really overrides the *malloc() functions
 wiking	and as it preloads that lib
 wiking	anybody who calls *malloc will end up calling tcmalloc's functions
 wiking	but yeah otherwise just append a -ltcmalloc to your linking flags
 blackburn	wiking: no significant speedup on a toy example
 wiking	btw: do you have memory heavy examples?
 wiking	:D
 blackburn	wiking: probably I do not malloc often
 wiking	yep
 blackburn	wiking: no, but I was curious still
 wiking	hehehe
 wiking	blackburn: http://goog-perftools.sourceforge.net/doc/tcmalloc.html
 blackburn	wiking: with -O3 it could avoid any mallocs at all hah
 wiking	see the graphs on the bottom of the page
 blackburn	wiking: it is a good thing for servers I guess
 wiking	mmm well anything that needs to be scalled ;)
 wiking	*scaled :)
 wiking	anyhow it's not only this
 wiking	heap-profiling is really handy as well
 wiking	but with the tcmalloc package in ubuntu you cannot do it
 wiking	as it is the _minimal version
 wiking	that doesn't have any profiling support
 blackburn	wiking: I see
 wiking	heiko ? or he gut exhausted from the bughunt... ? :S
@sonney2k	alexlovesdata, http://www.shogun-toolbox.org/doc/en/current/classshogun_1_1CDotFeatures.html
 blackburn	wiking: btw I solved gtest issue
 wiking	blackburn: u had one? :)
 blackburn	wiking: well yes
 wiking	aaah
 wiking	with tapkee u mean/
 blackburn	https://github.com/lisitsyn/tapkee/blob/master/CMakeLists.txt
 wiking	?
 blackburn	yes
 wiking	remember...
 blackburn	wiking: I am playing with tapkee to learn new things :D
 blackburn	(mostly)
 wiking	cool cool
 wiking	shiiiit
 wiking	the clang-analyzer output is really getting huge
 wiking	it's 3gigs now
 wiking	and only having february as tar.bz2
 blackburn	wiking: I failed to set up analyzer and tapkee :D
 wiking	and march non archived
 blackburn	no output at all..
 wiking	mmm
 wiking	interesting
 blackburn	wiking: and about t-SNE
 blackburn	wiking: it is ready and I even play with it but I still wait for laurens
 blackburn	he said he don't mind gpling but disappeared then
 blackburn	it would be faster to write it once again hah
 wiking	:S
 wiking	wtf. freebsd has clang but i cannot find scan-build
 blackburn	wiking: so for shogun no tricks with scan-build were made?
 wiking	no not really
 wiking	the basic commands that are in the examples
 wiking	but i guess it's a bit different with cmake
 blackburn	wiking: well I tried with exact g++ calling command
 blackburn	got nothing again
 wiking	btw i think the scan-build in ubuntu lts is still not the best
 wiking	as it reports a lot of stupid things....
 wiking	as if it doesn't fail on assertation errors
 blackburn	I should update my system
 wiking	like this one
 wiking	http://categorizer.tmit.bme.hu/~wiking/shogun.sa/2013-03-18-1/report-B6vpaU.html#EndPath
 wiking	i dont understand why is it not realising tht there's and assert on rn1
 wiking	and this doesn't appear on my scan-build of shogun
 wiking	that one realises that actually the assert catches the null pointer dereferencing
 blackburn	heh
@sonney2k	blackburn, look google is accepting applications now!
 alexlovesdata	wiking,blackburn: I did not got what you talked :D , I will log off, have a nice evening
-!- alexlovesdata [~binder@2001:638:806:e001:eda1:5a75:ff2a:e6f] has left #shogun []
 blackburn	sonney2k: yeah application is improving, we will send it in time
 blackburn	sonney2k: it is ok to send a day before deadline right?
 blackburn	sonney2k: the application itself is quite easy but we have to detalize ideas
 wiking	blackburn: plz approve my request
 blackburn	wiking: sure
 wiking	thnx
 blackburn	wiking: I shared with wiking <at> maeth.com before
 wiking	yep unforunately it's not google accounted
 wiking	;)
 blackburn	yeah
@sonney2k	blackburn, no it is not easy and detailizing ideas is sth we should try hard now
@sonney2k	blackburn, wiking I have another git flow blocker
 blackburn	sonney2k: detalizing ideas is much harder for me
@sonney2k	we currenlty have DOXYGEN 's version also encoded in doc/Doxyfile
 wiking	sonney2k: listeninng.... it's almost as if u find cockblockers in shogun ;)
@sonney2k	blackburn, well draft *1* now
@sonney2k	blackburn, then ask all the mentors now
 blackburn	sonney2k: asked already
 wiking	sonney2k: you mean: PROJECT_NUMBER         = v2.1.0
 wiking	?
 blackburn	sonney2k: twos
@sonney2k	wiking, yes
@sonney2k	blackburn, whom did you ask?
 wiking	sonney2k: that's easy to solve
 blackburn	sonney2k: igor and cheng
 wiking	sonney2k: that's a common way of having doxyfile.in
 wiking	sonney2k: this is how i solved this in another project of mine: http://git.xiph.org/?p=liboggplay.git;a=blob;f=doc/Doxyfile.in;h=fea318f77412097f06f52c1481eb6c6e3b678af5;hb=HEAD
@sonney2k	wiking, so we generate Doxyfile from Doxygen.in ?
 wiking	sonney2k: yes
@sonney2k	ok
 wiking	afaik versionstring.h.in should be done as well ;)
 wiking	s/afaik/imo/
 wiking	but yeah i guess i told this already
 shogun-notifier-	shogun: Soeren Sonnenburg :master * d946b1d / doc/Makefile,doc/Doxyfile_cn.in,doc/Doxyfile_en.in: https://github.com/shogun-toolbox/shogun/commit/d946b1d4e5c0bee8155b93b852c2c45865bafac6
 shogun-notifier-	shogun: always version doxygen files based on NEWS
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 68f6a48 / Makefile,src/.version.sh,src/Makefile.template: https://github.com/shogun-toolbox/shogun/commit/68f6a48699bab5def2175eadf50565b7e4949b4f
 shogun-notifier-	shogun: autogenerate lib/versionstring.h based on NEWS file if no .git repo is available
@sonney2k	blackburn, once you have a draft for one task on the website I would send it to the other usual suspects (olivier, quok, alex, vojtech, ...)
 blackburn	sonney2k: tomorrow's morning
 shogun-buildbot_	build #1003 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1003  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-54-242-15-83.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/5605594
-!- travis-ci [~travis-ci@ec2-54-242-15-83.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Soeren Sonnenburg :master * a482789 / src/.version.sh: https://github.com/shogun-toolbox/shogun/commit/a482789c482309d061f41017e6fc6936a0257fcb
 shogun-notifier-	shogun: add 0xMMmmrr (MM==major mm==minor rr=release) to version
-!- travis-ci [~travis-ci@ec2-23-22-102-149.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/5606700
-!- travis-ci [~travis-ci@ec2-23-22-102-149.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot_	build #1004 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1004
-!- zxtx [zv@conference/pycon/x-pscdziifemaqmrdh] has joined #shogun
-!- zxtx [zv@conference/pycon/x-pscdziifemaqmrdh] has quit [Ping timeout: 255 seconds]
-!- hoijui [~hoijui@dslb-088-074-124-160.pools.arcor-ip.net] has quit [Ping timeout: 264 seconds]
 shogun-buildbot_	build #365 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/365  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- zxtx [zv@conference/pycon/x-rnauhrcjrxankcvr] has joined #shogun
--- Log closed Tue Mar 19 00:00:14 2013
