--- Log opened Tue Jul 31 00:00:17 2012
-!- heiko1 [~heiko@host86-181-156-213.range86-181.btcentralplus.com] has joined #shogun
-!- heiko1 [~heiko@host86-181-156-213.range86-181.btcentralplus.com] has quit [Quit: Leaving.]
-!- needsch [~user@ip-176-198-229-75.unitymediagroup.de] has quit [Ping timeout: 252 seconds]
 CIA-18	shogun: Sergey Lisitsyn master * r3bda438 / (4 files in 2 dirs): A bunch of fixes for multitask algoritmhs - http://git.io/tUKTlQ
-!- blackburn [~blackburn@109.226.100.87] has quit [Quit: Leaving.]
-!- ckwidmer [8ca3fe9d@gateway/web/freenode/ip.140.163.254.157] has joined #shogun
-!- puffin444_ [62e3926e@gateway/web/freenode/ip.98.227.146.110] has quit [Quit: Page closed]
-!- emrecelikten [~emre@176.40.234.211] has quit [Ping timeout: 240 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 246 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- uricamic [~uricamic@2001:718:2:1634:e506:de07:312c:a435] has joined #shogun
-!- av3ngr [~av3ngr@60-241-222-244.static.tpgi.com.au] has joined #shogun
-!- av3ngr [~av3ngr@60-241-222-244.static.tpgi.com.au] has left #shogun []
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- pluskid [~pluskid@111.120.64.205] has joined #shogun
-!- pluskid [~pluskid@111.120.64.205] has quit [Ping timeout: 260 seconds]
-!- pluskid [~pluskid@108.171.196.83] has joined #shogun
-!- yoo [2eda6d52@gateway/web/freenode/ip.46.218.109.82] has joined #shogun
 yoo	hi al
-!- heiko [~heiko@host86-181-156-213.range86-181.btcentralplus.com] has joined #shogun
-!- blackburn [~blackburn@109.226.100.87] has joined #shogun
-!- emrecelikten [~emre@176.40.234.211] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- pluskid [~pluskid@108.171.196.83] has quit [Ping timeout: 260 seconds]
-!- pluskid [~pluskid@111.120.64.205] has joined #shogun
-!- needsch [~user@ip-176-198-229-75.unitymediagroup.de] has joined #shogun
-!- heiko [~heiko@host86-181-156-213.range86-181.btcentralplus.com] has left #shogun []
 pluskid	blackburn: what's the working cycle if I want to add some multiclass learning stuff to the shogun tutorial?
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Read error: Operation timed out]
-!- pluskid [~pluskid@111.120.64.205] has quit [Ping timeout: 260 seconds]
-!- pluskid [~pluskid@108.171.196.83] has joined #shogun
-!- pluskid [~pluskid@108.171.196.83] has quit [Quit: Leaving]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 252 seconds]
-!- hoijui [~hoijui@141.23.65.251] has joined #shogun
-!- gsomix [~gsomix@95.153.166.127] has joined #shogun
-!- emrecelikten [~emre@176.40.234.211] has quit [Ping timeout: 264 seconds]
-!- emrecelikten [~emre@176.42.217.59] has joined #shogun
-!- uricamic [~uricamic@2001:718:2:1634:e506:de07:312c:a435] has quit [Quit: Leaving.]
-!- yoo [2eda6d52@gateway/web/freenode/ip.46.218.109.82] has quit [Quit: Page closed]
-!- gsomix [~gsomix@95.153.166.127] has quit [Ping timeout: 248 seconds]
-!- heiko [~heiko@dhcp-184-16.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- hoijui [~hoijui@141.23.65.251] has quit [Ping timeout: 264 seconds]
-!- emrecelikten [~emre@176.42.217.59] has quit [Ping timeout: 255 seconds]
-!- emrecelikten [~emre@92.44.119.104] has joined #shogun
-!- emrecelikten [~emre@92.44.119.104] has quit [Ping timeout: 260 seconds]
-!- emrecelikten [~emre@92.44.119.53] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- hoijui [~hoijui@dslb-092-078-244-135.pools.arcor-ip.net] has joined #shogun
@sonney2k	!seen gsomix
@sonney2k	droopy is dead - oh noooo
-!- emrecelikten [~emre@92.44.119.53] has quit [Ping timeout: 260 seconds]
 blackburn	sonney2k: did you check chiyuan's PR?
-!- heiko [~heiko@dhcp-184-16.internal.eduroam.ucl.ac.uk] has left #shogun []
-!- gsomix [~gsomix@95.153.161.255] has joined #shogun
 gsomix	report!
 gsomix	just a moment
 gsomix	I'm writing :)
 n4nd0	gsomix: what news this week? :)
 gsomix	n4nd0, it seems, that 'no news'. I'm resting a little at sea. ^__^
 n4nd0	gsomix: nice! enjoy it; where?
 gsomix	n4nd0, http://bit.ly/McuADd
 blackburn	yellow one
 n4nd0	cool
 blackburn	I've been to black sea - it is yellow believe me
 blackburn	:D
 gsomix	n4nd0, thanks. :)
 blackburn	gsomix: and I wdn't believe it is not
 gsomix	blackburn, green at now.
 blackburn	basically because russians are dirty pigs
 blackburn	with no culture and nothing
 gsomix	blackburn, huh. this is very much in the resorts... pigs, I mean
 blackburn	omg snail eating cucumber here
 blackburn	the ugliest thing I've ever seen
 n4nd0	blackburn: dirty pigs?
 n4nd0	I bet you don't like that much Russia :P
 blackburn	n4nd0: I don't like russians
 blackburn	n4nd0: most of russians are totally rude, uneducated and angry - there is no reason to love this people
 blackburn	n4nd0: well I generalize too much but russians you know in sweden are probably the best because they managed to leave :D
 n4nd0	hehe
-!- gsomix_ [~gsomix@95.153.184.16] has joined #shogun
-!- gsomix [~gsomix@95.153.161.255] has quit [Ping timeout: 255 seconds]
@sonney2k	gsomix_, around now?
@sonney2k	blackburn, HUGE PR!
@sonney2k	n4nd0, yeah do PLiFs first then COFFIN stuff
@sonney2k	n4nd0, I hope you finally have some idea why this can be useful...
 n4nd0	sonney2k: I have faith more than idea right now :O
@sonney2k	n4nd0, think of you want to train a 10 million dimensional problem with 50 million examples on your notebook
@sonney2k	that is when computing features on demand is the only way
 n4nd0	yes, I understand that
 n4nd0	so COFFIN is a way to manage features on demand? or something else?
@sonney2k	only that yes
@sonney2k	you compute *non-zero* features on demand
 n4nd0	ok
@sonney2k	this can be much faster than precomputing features
@sonney2k	but can also be slower
@sonney2k	depends on you Phi(x)
@sonney2k	and the sparsity of x / Phi etc
@sonney2k	n4nd0, in any case I can tell that the example I used in the coffin paper got reproduced on a 1000 node cluster at yahoo :)
@sonney2k	with explicitly computed features :)
 n4nd0	nice
 blackburn	hmm we need cluster modelselection
 n4nd0	the problem is that here the Phi depends both on features and labels
 gsomix_	sonney2k, will be in 30 minutes. ok?
@sonney2k	gsomix_, I might be gone by then...
@sonney2k	n4nd0, what is the problem? I don't see it (yet?).
-!- gsomix_ is now known as gsomix
 gsomix	sonney2k, ok. I'm here.
@sonney2k	gsomix, so what is the state?
@sonney2k	blackburn, one way would be to store parts of the modsel tree / together with everything else (on disk) and then run that part on some node
@sonney2k	shouldn't be too hard
 blackburn	sonney2k: technologically?
 blackburn	concept is clear for sure
@sonney2k	blackburn, well we can serialize the machine with everythingneeded
@sonney2k	so all that is needed is dump parts of the tree too
@sonney2k	...and load it back in
 gsomix	sonney2k, there is problem with pointers. they breaks between get_buffer and release_buffer.
 gsomix	and it's strange
 blackburn	well map reduce may be
 n4nd0	sonney2k: we need them a CFeatures object that holds both features and labels?
 gsomix	and only for SGVector.
@sonney2k	blackburn, maybe not :D
 blackburn	sonney2k: what else? MPI? handmade solution
 blackburn	?
@sonney2k	gsomix, what does get/releasebuffer point to for sgvectors?
@sonney2k	blackburn, I only have access to sun grid engine based clusters...
 n4nd0	dinner time!
-!- n4nd0 is now known as n4nd0_away
 blackburn	sonney2k: I am pretty lame - does it mean you can't run say hadoop?
@sonney2k	n4nd0, where do you have features and labels accessible currently?
@sonney2k	blackburn, exactly
 blackburn	sonney2k: what can be ran?
@sonney2k	blackburn, I have to call qsub <some executable / script >
@sonney2k	then it will be run on some node
 blackburn	ohh qsub
 gsomix	sonney2k, in get_buffer we allocate memory for shapes and strides.
 blackburn	sonney2k: which technology would work on that kind of clusters?
 gsomix	and put it in PyView
@sonney2k	gsomix, but you point to the memory of the SGVector?
 gsomix	nope
@sonney2k	gsomix, where is that done
 gsomix	internal memory, only for buffer stuff.
@sonney2k	gsomix, hmm - could the operators of SGVector += etc conflict with the ones you have in your pybuf *
 n4nd0_away	sonney2k: the features labels are accesible in the CStructuredModel, see https://dl.dropbox.com/u/11020840/shogun/SOFramework_classes.pdf
 gsomix	sonney2k, hardly. buffer stuff is independent of the operators.
@sonney2k	n4nd0_away, maybe a structureddotfeatures class that has access to both labels and features would be the right thing then - it could supply you with the operations you usually do in structuredmodel
@sonney2k	gsomix, well if pointers `break` someone else must be modifying them - did you check with valgrind?
 gsomix	sonney2k, nope. can valgrind detect it? cool.
@sonney2k	gsomix, valgrind will detect any memory leaks / accidental memory access
 gsomix	btw python docs says, that this pointers should be const for other code.
@sonney2k	(it seems this one is not intentional so probably)
 gsomix	ok, I will check it.
@sonney2k	gsomix, anyway back to the big picture of the project - the last task (that I consider very important) are the typemaps for the model selection
@sonney2k	gsomix, IIRC you have some intense university studies starting again in september so it is better to start very soon (in 1-2 days) with that ...
 gsomix	sonney2k, is there specification of syntax for model selection?
@sonney2k	and postpone the debugging again
@sonney2k	gsomix, well I sent you two emails with examples
 gsomix	sonney2k, aha
@sonney2k	gsomix, btw pybuffer access for Labels should be much easier...
 gsomix	sonney2k, yes, of course
@sonney2k	and that together with densefeatures is probably the most used. sgvector* stuff will only be used by people doing directors for rather complex stuff I guess
 gsomix	sonney2k, and working with numpy without copying...
 gsomix	so what's plan?
@sonney2k	gsomix, just do it all :D
 gsomix	yay!
@sonney2k	gsomix, but lets prioritize - for pybuffers just do the stuff with labels for now (that should be done by end of tomorrow or?)
@sonney2k	gsomix, any estimates on how long numpy w/o copying would take?
 blackburn	sonney2k: octave celebrates JIT
@sonney2k	blackburn, did you see my msg?
 blackburn	yeah
 blackburn	but they STILL celebrate
 blackburn	:D
 gsomix	sonney2k, labels - tomorrow.
@sonney2k	blackburn, heheh
 gsomix	sonney2k, w/o copying - 1-2 days.
 blackburn	sonney2k: measure it in vodka/hour
@sonney2k	gsomix, ok then just do it
 blackburn	i.e.
 blackburn	how much vodka/hours would it take, gsomix?
@sonney2k	gsomix, IIRC we have a meeting on friday
@sonney2k	gsomix, so after that meeting it would be good if you can discuss with heiko about the modsel typemaps
 gsomix	sonney2k, oh. P____p
 gsomix	what's time?
@sonney2k	gsomix, because he knows how to create the parameter trees
 blackburn	we really need a hack for C1/C2
 blackburn	it *should* be in 2.0
@sonney2k	blackburn, full ack
 blackburn	everybody complains
@sonney2k	blackburn, can't we have the SGVector based solution with len=1 -> C / len=2 -> Cp Cn / len = n -> C[i]
 blackburn	sonney2k: we could but it would take a while to get it work
@sonney2k	blackburn, only other alternative I see is to have a C member variable and a Cp / Cn member variable and a Cs member variable
@sonney2k	and then some flag what is to be used :-[
 blackburn	I'd suggest to add C for now
@sonney2k	gsomix, 3rd of august 11 UTC
@sonney2k	(as usual)
 gsomix	sonney2k, thanks.
@sonney2k	gsomix, can you make it this time?
@sonney2k	blackburn, or alternatively C2 = 0 indicates that C1 is to be used solely
 blackburn	sonney2k: well and the other one is to add something that ties parameters to each other
@sonney2k	blackburn, btw I have *never* seen C1 / C2 to improve accuracy in practice...
@sonney2k	blackburn, which is tough ...
 blackburn	sonney2k: why to have it then :D
@sonney2k	heh
 blackburn	sonney2k: well actually nothing works in ML :D
@sonney2k	blackburn, seems like droopy is on vacations
@sonney2k	except for SVMs ;-)
 gsomix	sonney2k, ok, I'll try... right now. I'm resting a little with gf at sea. sorry for that. :)
 blackburn	sonney2k: I'm currently trying to model select multitask method on cancer data to achieve 0.62 AUC
 gsomix	ok, will be in 30 minutes and will work.
 blackburn	30 minutes is not enough
 blackburn	ok I'm quiet :D
 blackburn	sonney2k: what I meant is that nothing works :D
 blackburn	svm too however
@sonney2k	blackburn, which is already sth!
@sonney2k	blackburn, I need help with the code review of pluskids patch
@sonney2k	it is too big
 blackburn	sonney2k: 0.1 better than random uhhhh :D
 blackburn	sonney2k: well I've seen one thing there
 blackburn	I didn't get
@sonney2k	gsomix, relax and have fun and then have fun again :D
 blackburn	I do not understand why to have kernel factory
@sonney2k	blackburn, I asked that too
 blackburn	I am a big fan of factories
@sonney2k	I've written ~10 comments or so
-!- gsomix [~gsomix@95.153.184.16] has quit [Quit: Ex-Chat]
 blackburn	I live in city full of factories
 blackburn	but still why to have it
@sonney2k	blackburn, no idea
@sonney2k	didn't make sense to me either
@sonney2k	alright gtg too
@sonney2k	cu
 blackburn	see you
 blackburn	well you commented on most things already
 blackburn	factories were the only confusing things here
@sonney2k	well and we have a lot of std:: stuff in there..
@sonney2k	queue
@sonney2k	algoritm
@sonney2k	whatever
@sonney2k	blackburn, pluskid is like an std:: virus
@sonney2k	;-)
 blackburn	sonney2k: heh I use std sometimes too
@sonney2k	blackburn, you bastard!
 blackburn	sonney2k: I hate dynamicarray or how it is called
 blackburn	:D
@sonney2k	blackburn, I guess you will never explain why :D
 blackburn	sonney2k: will you ever explain why to use handmade data structures? :)
 n4nd0_away	serialization was an answer once I think
-!- n4nd0_away is now known as n4nd0
 blackburn	but internally?
 blackburn	we do not serialize everything
 n4nd0	but we do serialize vectors, matrices, etc?
 n4nd0	right?
 blackburn	sure but I use it only for temporary stuff like dynamic sets and dynamic vectors
 n4nd0	ok
 n4nd0	maybe there were more difficulties with std ones?
 n4nd0	blackburn: let me ask you something
 blackburn	n4nd0: ask me
 n4nd0	in our multiclass machines, the user is forced to use labels within {0, 1, ..., num_classes-1}
 n4nd0	right?
 blackburn	exactly
 n4nd0	ok
 n4nd0	I am making right now the same assumption for my HMSVMLabels and the features I use for the HMSVM
 n4nd0	and I feel a bit lazy to change it :)
 blackburn	I wish we had everything general
 n4nd0	I will issue the PR like that and will hear from the lords
 blackburn	but we would end being lisp interpreter in the case
 n4nd0	why?
 blackburn	I mean next step is to allow some gaps here
 blackburn	next is to allow strings
 blackburn	objects
 blackburn	:)
 blackburn	and so on
 n4nd0	is it in the plans to support list?
 n4nd0	lisp*
 blackburn	??
 blackburn	:D
 blackburn	why to have it?
 n4nd0	haha I don't know
 n4nd0	I am just trying to understand your previous comment :D
 blackburn	I mean tries of making everything general have no end
 n4nd0	aham ok! I understand know
 blackburn	if we go for generality where to stop?
 n4nd0	I understood your comment completely the other way round hehe
 blackburn	:)
 n4nd0	blackburn: another question :)
 n4nd0	let's say I have a local variable in a function, an SGVector
 blackburn	right
 n4nd0	this function is going to be called lot of times during the execution of my algorithm
 n4nd0	I want to avoid the allocation of memory for the structure every time is called
 blackburn	preallocate that vector then
 n4nd0	I think that in java this could be done using static, for a local variable
 n4nd0	I am not sure though
 n4nd0	do I need to make this local variable a class member?
 n4nd0	I don't really like this solution :S
 blackburn	yeah I see no other way
 blackburn	or put it to arguments :)
 n4nd0	class member would be then
 blackburn	I think I have an idea
 n4nd0	blackburn: do you think this kind of considerations do actually have impact at the end of the day?
 n4nd0	tell me
 blackburn	we should implement some pool
 blackburn	which is global
 n4nd0	summer is the right time for them
 blackburn	heh sure
 blackburn	so you do
 blackburn	VectorPool::get(size)
 blackburn	or so
 blackburn	and it returns preallocated stuff
 blackburn	allocations are not cheap but I don't know whether it really impacts there
 n4nd0	I can test it before doing
 n4nd0	check how long it takes and memory used
 n4nd0	the idea of the pool is ok
 n4nd0	but I don't see directly how it is avoided to use extra class members?
 n4nd0	the VectorPool is required right?
 n4nd0	but indeed it is an improvement
 n4nd0	in my case I won't need just one SGVector
 blackburn	n4nd0: vector pool can be global
-!- hoijui [~hoijui@dslb-092-078-244-135.pools.arcor-ip.net] has quit [Quit: Leaving]
 blackburn	n4nd0: I just received swedish spam letter :D
 n4nd0	blackburn: oh, not from me :P
 n4nd0	what does it say?
 blackburn	that I've won in UK lottery
 blackburn	:D
 n4nd0	nice
 blackburn	google spam filters work baaad
 n4nd0	they tell to a Russian in Swedish that he has won the lottery in UK?
 blackburn	exactly they did
 n4nd0	they are pretty bad spammers I think :DD
--- Log closed Wed Aug 01 00:00:17 2012
