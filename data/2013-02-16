--- Log opened Sat Feb 16 00:00:14 2013
--- Day changed Sat Feb 16 2013
 n4nd0	sonney2k: where is that address from?
@sonney2k	n4nd0, you need to get the full trace
 n4nd0	let me try again
@sonney2k	Episode.IV / A.NEW.HOPE
@sonney2k	etc
 n4nd0	nothing here
@sonney2k	star wars!
 n4nd0	but I have seen something like through telnet some time
@sonney2k	http://beaglenetworks.net/post/42707829171/star-wars-traceroute
@sonney2k	the guy who did it
 n4nd0	sonney2k: not around any more I guess?
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- cavalier- [~cavalier-@70.118.110.73] has quit []
-!- FSCV_ [~FSCV@173.254.212.46] has quit [Quit: Leaving]
-!- lambday [0e8b6149@gateway/web/freenode/ip.14.139.97.73] has joined #shogun
 lambday	hello, this is soumyajit again.. I have a few queries regarding the "fast food" idea... I was unable to see the video but I went through the paper that talks about introducing Taylor features to approximate the kernel...
 lambday	firstly, they apply the method for Gaussian kernels but says "a similar approach could also work for other kernels which depend on distances or inner products between feature vectors, e.g. the sigmoid kernel."... does that mean all CDotKernels in shogun?
 lambday	secondly, how do you plan to implement this? say, for Gaussian kernel, extending it to another class that uses this method? and do it for all the kernels that the method applies to?
 lambday	thirdly, where can I look for some paper reference of the "fast food" talk?
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has joined #shogun
 blackburn	lambday: it is only a draft and more references will come once mentor of that idea describe it more
 lambday	blackburn: okay.. thanks :)
-!- sumit [73f91219@gateway/web/freenode/ip.115.249.18.25] has quit [Ping timeout: 245 seconds]
-!- lambday [0e8b6149@gateway/web/freenode/ip.14.139.97.73] has left #shogun []
-!- sumit [ca4eaca2@gateway/web/freenode/ip.202.78.172.162] has joined #shogun
-!- pari [6eeaec2a@gateway/web/freenode/ip.110.234.236.42] has joined #shogun
-!- flxb [~flx@g226040027.adsl.alicedsl.de] has joined #shogun
 wiking	mmm
 wiking	i'm wondeirng about this fast food
 wiking	as there are other approaches as well
 wiking	like from vedaldi
 wiking	HKM ++
 wiking	so to say ;)
 pari	hi all, I have just finished installing shogun. But i am not sure if everything is installed correctly. Is there any way to check it?
 wiking	pari well try to run an example? :)
 wiking	blackburn: ping
 pari	ok, thanks.. let me see
 pari	i couldn't get the example running i am getting the following error: basic_minimal.cpp:(.text+0x29): undefined reference to `shogun::init_shogun(void (*)(_IO_FILE*, char const*), void (*)(_IO_FILE*, char const*), void (*)(_IO_FILE*, char const*), void (*)(bool&, bool&))' basic_minimal.cpp:(.text+0x2e): undefined reference to `shogun::exit_shogun()' collect2: ld returned 1 exit status
 pari	what could be possibly wrong?
 wiking	mmm
 wiking	i reckon the path where the shogun library is installed (if u did make install) is not in the library path
-!- pari [6eeaec2a@gateway/web/freenode/ip.110.234.236.42] has quit [Ping timeout: 245 seconds]
-!- flxb [~flx@g226040027.adsl.alicedsl.de] has quit [Ping timeout: 244 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- sumit [ca4eaca2@gateway/web/freenode/ip.202.78.172.162] has quit [Ping timeout: 245 seconds]
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
 n4nd0	sonney2k: around?
 n4nd0	sonney2k: proof of concept for the website http://iglesiashogun.alwaysdata.net/
 n4nd0	I have isolated there the addition of the new bar
 n4nd0	let me know if you were thinking of something like that
 blackburn	wiking: yeah fast food is not the only way
-!- flxb [~flx@g226040027.adsl.alicedsl.de] has joined #shogun
-!- n4nd0 [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
-!- flxb [~flx@g226040027.adsl.alicedsl.de] has quit [Ping timeout: 252 seconds]
-!- heiko1 [~heiko@b019b9ec.bb.sky.com] has joined #shogun
@sonney2k	heiko1, hey there - I have a question about serialization again
@sonney2k	when an array of SGVectors is de-serialized
@sonney2k	then the serialization code will call SG_MALLOC(SGVector<type>, len) right?
@sonney2k	wiking, I just did make valgrind in tests/unit
@sonney2k	guess what - ocas examples have uninited memory reads
@sonney2k	so no wonder we see weird stuff
 blackburn	sonney2k: is that mcocas?
 wiking	sonney2k: lol?
@sonney2k	ocas/mcocas
 blackburn	sonney2k: so libocas? I tested mc one before IIRC
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 749d966 / .gitignore: https://github.com/shogun-toolbox/shogun/commit/749d96694ba2f35b84f786bccb57614179415fec
 shogun-notifier-	shogun: Ignore gcda file extension
 shogun-notifier-	shogun: Sergey Lisitsyn :master * c4d485e / src/shogun/lib/tapkee/tapkee_shogun.cpp: https://github.com/shogun-toolbox/shogun/commit/c4d485eea0740e9357812b55a166e18120d5c6c4
 shogun-notifier-	shogun: Fixed totally wrong tapkee integration feature access callback
-!- in3xes [~in3xes@122.174.121.230] has joined #shogun
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 4091d89 / src/Makefile.template: https://github.com/shogun-toolbox/shogun/commit/4091d89436dcfda623a16ce7cfd59033db045fc5
 shogun-notifier-	shogun: Added gcda for clear target
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 9860c73 / src/shogun/converter/LaplacianEigenmaps.cpp: https://github.com/shogun-toolbox/shogun/commit/9860c736661ff4aba365c0986911d9883b176cfb
 shogun-notifier-	shogun: Removed unnecessary and memory-wise wrong distance initialization in laplacian eigenmaps
@sonney2k	wiking, please run make valgrind in unit tests there are also errors in LatentModel
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 99a8236 / src/shogun/.project: https://github.com/shogun-toolbox/shogun/commit/99a82365fa46dede16d93d0ef12be9027125b532
 shogun-notifier-	shogun: add eclipse project file
 shogun-notifier-	shogun: Soeren Sonnenburg :master * 2b60dbe / / (9 files): https://github.com/shogun-toolbox/shogun/commit/2b60dbe596d28aaabed9122799b1aede31c484c5
 shogun-notifier-	shogun: Fix serialization of Sparse features
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: - remove inplace (de-)constructors for SGSparse
 shogun-notifier-	shogun: - add malloc support for SGSparseVector<T>
 shogun-notifier-	shogun: - enable unit test for sparse feature serialization
 heiko1	sonney2k, eclipse project file?
@sonney2k	heiko1, yeah
@sonney2k	with own shogun formatter :D
 heiko1	sonney2k, array of SGVectors, mmmh cannot really remember got to check the code
@sonney2k	heiko1, I managed to fix this
@sonney2k	heiko1, I did some magic to SG_MALLOC
 heiko1	sonney2k, that is cool, so I can just always press ctrl-shift-f and formatting will be fine?
 heiko1	sonney2k, cool!
@sonney2k	whenever you do SG_MALLOC(SGVector<T>, len) then it will call new SGVector<T>[len]();
@sonney2k	this will call the inplace constructor automagically
@sonney2k	and SG_FREE() will know what to do too
 heiko1	I see
 heiko1	cool!
@sonney2k	so this will e.g.make dynarray of SGVector work etc
 heiko1	btw thanks for fixing this base-class problem
@sonney2k	slightly stupid to have so many sg_malloc functions now but this fixes things at least in a nice way for the user
@sonney2k	underneath it is hacky though
 heiko1	yeah, agree, this is a good solution
@sonney2k	but I don't see a way around this if we don't want to switch to new[] / new()
@sonney2k	which is bad because we then can no longer interact with C malloc'd memory directly
 heiko1	nono, agreed on this
@sonney2k	(no more realloc / direclty using python matrix memory etc)
@sonney2k	heiko1, so while we are at it - serialization I mean - what would it cost to support SGMatrixList / SGNDArray?
 blackburn	sonney2k: so you like working in eclipse now?
 heiko1	sonney2k, you mean how much effort that would be?
 heiko1	Can't really tell, these things tend to be a bit unpredictable
 heiko1	For what do we need those?
 heiko1	anything in particular?
@sonney2k	e.g. serialization of QDA
@sonney2k	but yes in general I would like to have serialization support for all SG* datatypes
 heiko1	yes true
 heiko1	dont know, at some point just has to take the pain :)
 heiko1	sonney2k, btw I should this week finish my MMD stuff, so I can spend some time on doing things
 heiko1	but whats top priority in your opinion?
@sonney2k	heiko1, getting shogun 2.1 out
 heiko1	there is also this svm C thing
 heiko1	yeh regarding that
@sonney2k	I don't know if we should add new features...
@sonney2k	maybe better fix warnings / bugs etc
 heiko1	ok
 heiko1	I will focus on that then
 heiko1	also a bit documentation
 heiko1	there are also still some bugs in the streaming features
 heiko1	and unit tests would also be good
@sonney2k	heiko1, if you find bugs you should put them to github issues
 heiko1	so far I did all these "tests" in the examples
 heiko1	sonney2k, I know, the ones I mentioned are in there in fact
@sonney2k	then we can write a unit test for that and fix the bug
 heiko1	yes
 heiko1	I am really happy about the unit tests
@sonney2k	heiko1, so what would be needed for SGNDArray & serialization?
@sonney2k	I mean I think we need a new type or?
@sonney2k	heiko1, btw eclipse is dog slow... but it is very easy to jump around in tons of code / do refactoring
 heiko1	sonney2k, I dont know currently, would have to look in the code and think about it, its some time since I last read code for this
 heiko1	sonney2k, eclipse is very good in my opinion, for exactly those things, searching classes, refactoring, all this blabla that makes life easier
 heiko1	I also like the debugger
 heiko1	I was doing lots of emacs before
 heiko1	but eclipse is just more comfortable
 heiko1	and less RMI also :)
@sonney2k	heiko1, well I am using it at work so why not give it a try for C++ /' shogun
 heiko1	sonney2k, I dont use it for compiling though
@sonney2k	but it is too slow :/
 heiko1	yes
 heiko1	I mean
 heiko1	its not that bad
@sonney2k	I would be interested in trying shogun & java
 heiko1	slower than emacs - of course
@sonney2k	it is here
@sonney2k	but my machine is aging...
 heiko1	what takes long?
 heiko1	ah ok, yes
@sonney2k	click ... wait ... click ... wait
 heiko1	I remember on my old machine, it was a bit annoying
 heiko1	but you can disable a few things
 heiko1	then it gets faster
@sonney2k	heiko1, I think doing ndarray is actually easy
@sonney2k	one needs to write one vector with the dimension sizes
@sonney2k	then all that is needed is to write out the whole data
@sonney2k	in the same way like any vector/matrix
 heiko1	how is the data stored in the ndarray?
@sonney2k	just a ptr to data
@sonney2k	linear
@sonney2k	in memory
@sonney2k	like for sgmatrix
 heiko1	so all in a row
 heiko1	I was wondering whether one would jiust have multiple arrays at different positions or like this
@sonney2k	no why should one
@sonney2k	that is what sgmatrix list is for
@sonney2k	it can handle e.g. images of different size
@sonney2k	heiko1, I just had a look. I think all that is needed is to refactor these new_cont_begin stuff
@sonney2k	to get a SGVector as argument with the dims
 heiko1	sonney2k, with this structure it should be quite easy to do the nda,
@sonney2k	if dims==1/2
 heiko1	yes
 heiko1	exactly
@sonney2k	then it does the same like before
@sonney2k	that's it
 heiko1	the migration stuff is a bit more tricky
@sonney2k	but there are none
 heiko1	cannot remember the methods names but there are some which also do the case distinctions over the types
 heiko1	let me check
 heiko1	TParameter::allocate_data_from_scratch
 heiko1	void TParameter::copy_data
 heiko1	well they should not be too hard to extend
 heiko1	since already working
 blackburn	a few memory errors left!
@sonney2k	heiko1, looks easy indeed
@sonney2k	the biggest issue is to do the refactoring of new_cont_begin but that's it
@sonney2k	blackburn, context?
 heiko1	sonney2k, maybe you find some inconsistencies on the way :)
 blackburn	sonney2k: I mean in make check-valgirnd
@sonney2k	blackburn, in libshogun examples you mean?
 blackburn	yes
@sonney2k	blackburn, go go :)
 blackburn	I fixed a great bug with tapkee
@sonney2k	not sure if there is anything like a 'great' bug :)
@sonney2k	horrible maybe?
 blackburn	well all linear methods weren't working
 blackburn	that's just great
@sonney2k	great == cool
 blackburn	really?
 blackburn	:)
@sonney2k	yeah
@sonney2k	doesn't mean big
 blackburn	*sarcasm*
 blackburn	:D
@sonney2k	yeah sarcasm would work for great bug :D
 blackburn	thanks for pointing this out!
 blackburn	okay one more fix
@sonney2k	heiko1, blackburn btw if n4nd0 pops up - I like the http://iglesiashogun.alwaysdata.net/# draft and want it for the main site!
@sonney2k	I have to repair my bike now
 blackburn	I don't mind and don't understand how to put it on
 heiko1	I can only see the menu
 blackburn	sonney2k: that's *great* time to do that
 blackburn	february night :D
@sonney2k	heiko1, yeah it is a mockup
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 538ee43 / src/shogun/lib/tapkee/tapkee_methods.hpp: https://github.com/shogun-toolbox/shogun/commit/538ee431c9d1c5a08526e4a95515187a69c6a3c7
 shogun-notifier-	shogun: Commented out unused projecting functions to avoid unhandled memory
 blackburn	oh another great bug
 shogun-notifier-	shogun: Sergey Lisitsyn :master * 6cbe6de / src/shogun/converter/LinearLocalTangentSpaceAlignment.cpp: https://github.com/shogun-toolbox/shogun/commit/6cbe6de109f1fc2beca0906b036bb6231b5fd579
 shogun-notifier-	shogun: Fixed lost nullspace shift in LLTSA
* sonney2k watches a youtube howto do bicycle gearing
 blackburn	sonney2k: gearing like?
@sonney2k	like switching gears
@sonney2k	from bevel to bevel
 blackburn	sonney2k: which part do you switch?
 blackburn	uh! that appears to be hard to speak about these mechanisms in english hah
@sonney2k	alright time to get hands dirty
-!- flxb [~flx@e179034251.adsl.alicedsl.de] has joined #shogun
 shogun-buildbot_	build #216 of rpm1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/rpm1%20-%20libshogun/builds/216  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	wish me luck
-!- in3xes [~in3xes@122.174.121.230] has quit [Ping timeout: 255 seconds]
 shogun-notifier-	shogun: Heiko Strathmann :master * afc7499 / tests/unit/features/ (2 files): https://github.com/shogun-toolbox/shogun/commit/afc74996818241677d2bd1f8153135b94890392e
 shogun-notifier-	shogun: renamed test
 shogun-notifier-	shogun: Heiko Strathmann :master * 4a6b977 / tests/unit/statistics/ (5 files): https://github.com/shogun-toolbox/shogun/commit/4a6b9772de47ea58e12500cb5f8c642998164714
 shogun-notifier-	shogun: unit tests for kernel selection
 shogun-notifier-	shogun: Heiko Strathmann :master * 6e4af9c / tests/unit/ (7 files): https://github.com/shogun-toolbox/shogun/commit/6e4af9c75e5654671127062684be9e6988ce565c
 shogun-notifier-	shogun: Merge branch 'mmd_kernel_selection'
 shogun-notifier-	shogun: Heiko Strathmann :master * 0ab4a45 / tests/unit/ (7 files): https://github.com/shogun-toolbox/shogun/commit/0ab4a45d7e60a2bc16af3b8286b2c6af42bec37f
 shogun-notifier-	shogun: Merge pull request #879 from karlnapf/master
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: unit tests for kernel selection
@sonney2k	blackburn, I didn't know that my bike's gear can be switched that smoothly!
* sonney2k is happy
 blackburn	sonney2k: so you mean gears like say 1/2/3 and 1/2/3/4/5/6/7?
@sonney2k	yes
 blackburn	so what did you do with it?
@sonney2k	just fine tune it
 blackburn	ah yeah that's a good thing
@sonney2k	I could only use 3/7 gears
@sonney2k	3 of 7
@sonney2k	and these were stuttering
@sonney2k	I mean switching between them was horrible
 blackburn	huh that's not normal
@sonney2k	now it is totally smooth
 blackburn	when I ride bike I switch them pretty often I think
 blackburn	sonney2k: do you ride bike already?
 blackburn	as I can see it is +2 in berlin
@sonney2k	makes a lot of sense to keep the pace/energy requirements consistent and just switching gears to adjust
@sonney2k	blackburn, every day I do!
 blackburn	sonney2k: well in general I prefer to keep them at something normal (3/3 for me)
 blackburn	but when road gets smooth (it happens 30% of time in russia :D)..
 blackburn	sonney2k: isn't that a little cold to ride a bike now? :)
--- Log closed Sun Feb 17 00:00:39 2013
