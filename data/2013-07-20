--- Log opened Sat Jul 20 00:00:35 2013
--- Day changed Sat Jul 20 2013
 thoralf	Hey iglesiasg
@lisitsyn	iglesiasg: okay I succeed with dvi!
@iglesiasg	lisitsyn: good job!
@lisitsyn	iglesiasg: I re-rendered pics
@lisitsyn	so they are now pure eps with no ugly convertation
@iglesiasg	lisitsyn: aham! so the problem was passing them from pdf to ps?
@lisitsyn	no idea but pdfs are not encouraged as we can see
@iglesiasg	I understand
@lisitsyn	iglesiasg: dvi looks very ugly but that's ok I guess
@lisitsyn	iglesiasg: yeah ps looks much better
@lisitsyn	though we have some issue with citations
@lisitsyn	iglesiasg: https://dl.dropboxusercontent.com/u/10139213/share/t/lisitsyn13a.ps
@iglesiasg	checking...
@iglesiasg	lisitsyn: my viewers get stuck trying to open it
@lisitsyn	iglesiasg: hmm it is ok here
@iglesiasg	lisitsyn: damn OS
@lisitsyn	iglesiasg: alright I resolved it!
@lisitsyn	iglesiasg: okay tomorrow's morning I'll scan things and then we can send
@iglesiasg	lisitsyn: that sounds pretty good
-!- HeikoS [~heiko@nat-177-148.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
 thoralf	sonney2k: Ping?
@iglesiasg	good night people
-!- iglesiasg [~Fernando@c83-251-227-64.bredband.comhem.se] has quit [Quit: Leaving]
-!- nube [~rho@49.244.67.162] has joined #shogun
-!- nube [~rho@49.244.67.162] has quit [Client Quit]
 shogun-buildbot	build #398 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/398
-!- foulwall [~user@2001:da8:215:503:9007:bf2c:83a4:58f3] has joined #shogun
-!- Yanglittle [b74040fc@gateway/web/freenode/ip.183.64.64.252] has joined #shogun
 Yanglittle	excuse me.
-!- thoralf [~thoralf@37-5-32-132-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- Yanglittle [b74040fc@gateway/web/freenode/ip.183.64.64.252] has quit [Ping timeout: 250 seconds]
 shogun-buildbot	build #463 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/463
-!- foulwall` [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has joined #shogun
-!- foulwall [~user@2001:da8:215:503:9007:bf2c:83a4:58f3] has quit [Ping timeout: 245 seconds]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
-!- foulwall` [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has quit [Read error: Connection reset by peer]
-!- foulwall` [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has joined #shogun
-!- gsomix_ [~gsomix@80.234.28.235] has joined #shogun
-!- gsomix [~gsomix@109.169.233.216] has quit [Ping timeout: 264 seconds]
-!- foulwall` [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has quit [Remote host closed the connection]
-!- foulwall [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has joined #shogun
-!- thoralf_ [~thoralf@37-5-32-132-dynip.superkabel.de] has joined #shogun
 thoralf_	Good morning.
-!- thoralf_ is now known as thoralf
-!- lambday [67157d37@gateway/web/freenode/ip.103.21.125.55] has joined #shogun
-!- thoralf_ [~thoralf@37-5-32-132-dynip.superkabel.de] has joined #shogun
-!- zxtx_ [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
-!- gsomix__ [~gsomix@80.234.28.235] has joined #shogun
-!- Netsplit *.net <-> *.split quits: thoralf, gsomix_, zxtx
-!- Netsplit *.net <-> *.split quits: @sonney2k, @lisitsyn, gsomix__
-!- Netsplit over, joins: gsomix__, @lisitsyn, @sonney2k
-!- sonney2k_ [~shogun@7nn.de] has joined #shogun
-!- Netsplit *.net <-> *.split quits: @sonney2k
-!- iglesiasg [~Fernando@c83-251-227-64.bredband.comhem.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@iglesiasg	hi guys
 thoralf_	Hey.
 thoralf_	:)
-!- thoralf_ [~thoralf@37-5-32-132-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- sonney2k_ is now known as sonney2k
-!- mode/#shogun [+o sonney2k] by ChanServ
@sonney2k	foulwall, gsomix any Q's ?
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has joined #shogun
-!- gsomix__ [~gsomix@80.234.28.235] has quit [Remote host closed the connection]
-!- Netsplit *.net <-> *.split quits: van51
-!- Netsplit over, joins: van51
-!- foulwall [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has quit [Ping timeout: 245 seconds]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * bf51d1d / doc/ipython-notebooks/classification/svm_binary_classification.ipynb: https://github.com/shogun-toolbox/shogun/commit/bf51d1d73b6e51a3ba6c7801af63dd26316e53ab
 shogun-notifier-	shogun: add beautified svm notebook from talk
 shogun-buildbot	build #1484 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1484  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- nube [~rho@49.244.36.125] has joined #shogun
-!- nube [~rho@49.244.36.125] has quit [Client Quit]
-!- travis-ci [~travis-ci@ec2-54-226-120-242.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9296944
-!- travis-ci [~travis-ci@ec2-54-226-120-242.compute-1.amazonaws.com] has left #shogun []
 van51	sonney2k: hey
-!- foulwall [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has joined #shogun
-!- nube [~rho@49.244.36.125] has joined #shogun
 foulwall	sonney2k: cant came up with a good solution for Ai.py
-!- Avasz [~Avash@unaffiliated/avasz] has joined #shogun
-!- gsomix [~gsomix@80.234.28.235] has joined #shogun
-!- foulwall [~user@2001:da8:215:503:a8e5:5b82:ed61:9640] has quit [Remote host closed the connection]
-!- van51 [~van51@athedsl-399972.home.otenet.gr] has quit [Quit: Leaving.]
-!- nube [~rho@49.244.36.125] has quit [Quit: Leaving.]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- lambday [67157d37@gateway/web/freenode/ip.103.21.125.55] has quit []
-!- thoralf [~thoralf@37-5-32-132-dynip.superkabel.de] has joined #shogun
 thoralf	Hey.
 thoralf	sonney2k: I just read your comment about the check-examples PR.  If you think the changes are "okay", then I could apply them to the other interfaces as well.
-!- Avasz [~Avash@unaffiliated/avasz] has left #shogun ["ban-kai"]
-!- thoralf [~thoralf@37-5-32-132-dynip.superkabel.de] has quit [Quit: Konversation terminated!]
-!- foulwall [~user@2001:da8:215:c252:4d94:a3ff:4e13:e516] has joined #shogun
-!- iglesiasg [~Fernando@c83-251-227-64.bredband.comhem.se] has quit [Quit: Leaving]
-!- gsomix [~gsomix@80.234.28.235] has quit [Ping timeout: 248 seconds]
-!- foulwall [~user@2001:da8:215:c252:4d94:a3ff:4e13:e516] has quit [Remote host closed the connection]
-!- gsomix [~gsomix@80.234.28.235] has joined #shogun
-!- gsomix [~gsomix@80.234.28.235] has quit [Read error: Connection reset by peer]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
@sonney2k	lisitsyn, do you know how much memory using an object inside another object takes?
@lisitsyn	sonney2k: what do you mean by using?
@lisitsyn	like member?
@sonney2k	lisitsyn, yes
@lisitsyn	sonney2k: with a pointer or?
@lisitsyn	sonney2k: iirc just sizeof(...) but I am not sure what you mean then
@sonney2k	lisitsyn, I will commit and then show you
@lisitsyn	alright
-!- gsomix [~gsomix@80.234.28.235] has joined #shogun
 gsomix	good evening
 gsomix	this day was hard - many work at home
 gsomix	so, unit-tests time now. :)
-!- hoijui [~hoijui@dslb-092-078-032-175.pools.arcor-ip.net] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 209a17c / src/shogun/ (12 files): https://github.com/shogun-toolbox/shogun/commit/209a17c55e897e9b8118f293ff1311fd80a234ac
 shogun-notifier-	shogun: introduce CLock object
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: - do pthread etc based locking using CLock from CMap, SGObject, Random
@sonney2k	lisitsyn, finally
@sonney2k	please have a look at SGReferencedData's
@sonney2k	RefCount type
@sonney2k	I have a CLock class in there now
@sonney2k	if we could do this w/o the lock object - would be even better
@sonney2k	if a type like atomic int in java did exist we should rather use that
@lisitsyn	sonney2k: why to avoid it?
@lisitsyn	well C++11 has atomic
@lisitsyn	sonney2k: just check sizeof(CLock)
@lisitsyn	I wouldn't expect more than 4 or 8 IDK
@sonney2k	lisitsyn, what is the size of atomic<int> ? issue is that this is inside of SGReferencedData
@sonney2k	and every byte counts there
@lisitsyn	I wouldn't count bytes here
@lisitsyn	it is just a few bytes that's ok I think
@lisitsyn	I don't know about atomic but it should be quite similar to what we have now
@sonney2k	lisitsyn, if we have *many* 2d-vectors of bytes
@sonney2k	we have sth like factor 8 overhead
@sonney2k	so any byte counts
@lisitsyn	sonney2k: ain't 2d a bit strange case/
@lisitsyn	?
@lisitsyn	sonney2k: anyway why did you hack it btw?
@lisitsyn	I mean any trouble with it?
 shogun-buildbot	build #1485 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1485  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-107-21-158-112.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/9307462
-!- travis-ci [~travis-ci@ec2-107-21-158-112.compute-1.amazonaws.com] has left #shogun []
@sonney2k	lisitsyn, I want to get rid of pthread in headers
@sonney2k	same holds for other libs btw
@lisitsyn	sonney2k: good idea
@sonney2k	besides it is much cleaner code to have a single Lock class than all the time doing pthread_init / destroy lock /unlick
@sonney2k	lock
@sonney2k	lisitsyn, an atomic int seems like the solution to this - it requires just 4 bytes (like an int)
@sonney2k	no need for any memory overhead
@sonney2k	at least on x86_64
@lisitsyn	sonney2k: uh that's interesting
@lisitsyn	it is a structure still right?
@lisitsyn	I guess they have no virtual things here (even destructor)
@lisitsyn	this makes it easier to optimize everything out
@sonney2k	lisitsyn, try https://gist.github.com/sonney2k/6046308
@sonney2k	lisitsyn, yeah nothing can be virtual in there
@sonney2k	problem is I have to compile with -std=c++11
@lisitsyn	hah well
@lisitsyn	you can steal atomic
@lisitsyn	sonney2k: the output is
@lisitsyn	0 4
@lisitsyn	just out of curiosity
@sonney2k	yeah
@sonney2k	so 0 overhead
@sonney2k	that is actually pretty neat
@lisitsyn	sonney2k: structure with only one int field
@lisitsyn	is 4 bytes too
@sonney2k	well ok there willb e sync overhead
@sonney2k	but not memory
@sonney2k	which is what counts here
@lisitsyn	sonney2k: this load method should go as asm op directly
@lisitsyn	I mean that's atomic operation in x86
@lisitsyn	so it is barely any overhead from any point of view
@sonney2k	the processor has to do some syncing underneath
@lisitsyn	I mean it can't be any better
@sonney2k	yes sure
@sonney2k	it is like 5 times slower than a normal int
@sonney2k	lisitsyn, https://gist.github.com/sonney2k/6046331
@sonney2k	takes 0.2 vs 1 sec here
@lisitsyn	sonney2k: 5 times is rather surprisingly good
@sonney2k	lisitsyn, hmmhh I would love to use it...
@lisitsyn	sonney2k: steal it
@lisitsyn	;)
@lisitsyn	sonney2k: I just checked the sources
@lisitsyn	sonney2k: it is a bit C++11y
@lisitsyn	but we may patch it
@lisitsyn	I'd actually use C++11 already haha
@sonney2k	lisitsyn, do we even have it on our buildbots?
@lisitsyn	sonney2k: what gcc version?
@lisitsyn	4.6 has it
@sonney2k	no idea
@sonney2k	hmmhh 4.4 is the oldes
@sonney2k	t
@lisitsyn	4.4 has no atomic I think
@sonney2k	redhat also has only 4.4
@sonney2k	*sigh*
@sonney2k	lisitsyn, I think we have to do a fallback thing
@sonney2k	lisitsyn, sth like if c++11 is available
@sonney2k	we use atomic
@sonney2k	otherwise CLock + whatever overhead
@lisitsyn	sonney2k: yeah as usual
@sonney2k	sig_atomic_t?
@lisitsyn	sonney2k: sig?
-!- hoijui [~hoijui@dslb-092-078-032-175.pools.arcor-ip.net] has quit [Quit: Leaving]
@lisitsyn	what is the type you are talking about?
@sonney2k	To avoid uncertainty about interrupting access to a variable, you can use a particular data type for which access is always atomic: sig_atomic_t. Reading and writing this data type is guaranteed to happen in a single instruction, so there's no way for a handler to run "in the middle" of an access.
@sonney2k	The type sig_atomic_t is always an integer data type, but which one it is, and how many bits it contains, may vary from machine to machine.
@lisitsyn	oh didn't know about that
@lisitsyn	sonney2k: that's compiler level stuff already as I can see
@lisitsyn	so strictly forces to use some -std=..
@sonney2k	I would prefer the c++11 one though
@lisitsyn	sonney2k: yeah we are in C++ not C
@sonney2k	lisitsyn, so I would add at test for C++11 in configure and then use it in my Lock class and also SGReferencedData
@lisitsyn	sonney2k: oh that's only beginning then :D
@lisitsyn	we have some more places to use 11
@sonney2k	atomic you mean?
@sonney2k	or C++11?
@lisitsyn	no other features
@sonney2k	which?
@lisitsyn	well I'd have to recall what ideas I had
@sonney2k	and recall that we need to be working w/o C++11 still :/
@lisitsyn	yes
@lisitsyn	sonney2k: nullptr is a nice thing
@lisitsyn	sonney2k: shared_ptr again
@sonney2k	what gain gives us nullptr?
@lisitsyn	sonney2k: just safety
@sonney2k	wrt what?
@lisitsyn	sonney2k: you can't assign a pointer with 0
@sonney2k	I mean the compiler complains already if there are 0 vs NULL mixups
@lisitsyn	well NULL is still 0 right?
@lisitsyn	nullptr is just a structure
@lisitsyn	so harder to put something wrong
@sonney2k	lisitsyn, but will then sth like if (!ptr) { } be valid still
@sonney2k	?
@lisitsyn	sonney2k: yes sure
@lisitsyn	it is impossible to change
@lisitsyn	sonney2k: just assignment issue
@sonney2k	btw I read the remaining nips papers today
@sonney2k	all crap
@lisitsyn	sonney2k: ahh one more thing
@sonney2k	but now I am to tired to write the reviews
@lisitsyn	sonney2k: nullptr is better for functions that accept pointers
@sonney2k	and for some reason my kids don't want to sleep early
@lisitsyn	like f(int*) and f(int)
@sonney2k	ahh ok
@lisitsyn	sonney2k: have you accepted a paper?
@sonney2k	no
@sonney2k	don't ask me how many I accepted
@sonney2k	not many...
@sonney2k	I did reviews for 40 journals/conferences since I am doing this
@sonney2k	so I am totally lost
@lisitsyn	sonney2k: well I think I understand why it is so
@sonney2k	?
@lisitsyn	the progress is usually slight
@sonney2k	that is not it but papers have some flaws
@sonney2k	as in experiments hide sth that is troublesome
@sonney2k	or are wrong
@sonney2k	etc
@lisitsyn	sonney2k: what is this year nips about?
@lisitsyn	still deep learning? :D
@sonney2k	heh I guess so
@sonney2k	this trend is there since 2009 or so
@sonney2k	and I remember that LeCun's deep learning workshop got rejected back then
@lisitsyn	sonney2k: I am curious what is next
@sonney2k	kernel machines :D
@lisitsyn	again?
@sonney2k	well NN's are not exactly new aren't they?
@sonney2k	alright
@lisitsyn	sonney2k: haha yes a bit old
@sonney2k	sleep time
@sonney2k	cu
@lisitsyn	pickle27: hey just noticed you are here
@lisitsyn	;)
 pickle27	yeah I actually just got up from a nap
 pickle27	left the comp on
 pickle27	lisitsyn: did you see my PR what do you think of it now?
@lisitsyn	pickle27: ohh sorry let me check
@lisitsyn	pickle27: got it! so diago is diag orthogonalization?
 pickle27	yeah
 pickle27	I didn'
 pickle27	t really get that until Andres pointed it out
-!- lisitsyn1 [~lisitsyn@92-240-133-94.clients.tlt.100megabit.ru] has joined #shogun
 lisitsyn1	hmm something got wrong
-!- lisitsyn [~lisitsyn@92-240-133-94.clients.tlt.100megabit.ru] has quit [Read error: No route to host]
 lisitsyn1	okay
-!- lisitsyn1 is now known as lisitsyn
 lisitsyn	pickle27: did you receive my last message?
 lisitsyn	on LeftRotStack
 lisitsyn	etc
 pickle27	nope
 lisitsyn	pickle27: could you please rename that stuff too
 pickle27	with underscore?
 lisitsyn	yeah
 pickle27	okay
 lisitsyn	just to follow the naming
 pickle27	sounds good
 pickle27	I wasn't sure if you intended that or not
 pickle27	lisitsyn: any other comments?
 lisitsyn	pickle27: no lets merge if it is done
 pickle27	its done!
 lisitsyn	good thanks
 shogun-notifier-	shogun: Kevin :develop * 2fcc7b6 / src/shogun/ (12 files): https://github.com/shogun-toolbox/shogun/commit/2fcc7b6c7086e6e428dfa70caca8965cd0163f03
 shogun-notifier-	shogun: added the proper JointDiago method for Jade, cleaned up the includes in AJD and fixed a typo
 shogun-notifier-	shogun: Kevin :develop * 22dd91a / / (2 files): https://github.com/shogun-toolbox/shogun/commit/22dd91ae4e909601f5b92daacea7ebd4fb02c975
 shogun-notifier-	shogun: fixed Jade unit test and made some updates to JointDiago
 shogun-notifier-	shogun: Kevin :develop * 26be32a / src/shogun/mathematics/ajd/UWedge.cpp,src/shogun/mathematics/ajd/UWedge.h: https://github.com/shogun-toolbox/shogun/commit/26be32af63d4318b803f6c25ca956c68317d9328
 shogun-notifier-	shogun: changed eps for UWedge and sorted the eigenvectors for V0
 shogun-notifier-	shogun: Kevin :develop * b37f799 / src/shogun/ (5 files): https://github.com/shogun-toolbox/shogun/commit/b37f799c7f4b340d33754d8c48d71265d3f1e828
 shogun-notifier-	shogun: updated name of JointDiago to JADiagOrth
 shogun-notifier-	shogun: Kevin :develop * fa9f83b / src/shogun/mathematics/ajd/JADiagOrth.cpp: https://github.com/shogun-toolbox/shogun/commit/fa9f83b504070e179e96d76efdb45e75c43480c2
 shogun-notifier-	shogun: renamed JADiagOrth inner functions
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * 1d76616 / / (13 files): https://github.com/shogun-toolbox/shogun/commit/1d7661608630112739a2e64d928bfcfb9a85f22a
 shogun-notifier-	shogun: Merge pull request #1269 from pickle27/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: added the proper JointDiago method for Jade, cleaned up the includes in ...
 lisitsyn	pickle27: about a demo
 lisitsyn	so what are we going to implement?
 pickle27	lisitsyn: yeah Im planning to start on the audio demo this week
 pickle27	should be fairly similar to the example in python_modular/graphical only with audio and playback
 lisitsyn	pickle27: I'll try to check how to do that with d3.js
 pickle27	then I'd like to go web but I need to look at foulwalls stuff to see what to do
 lisitsyn	pickle27: would be nice to see some graph
 lisitsyn	how does it called
 pickle27	yeah sort of like what sound cloud has
 pickle27	I have no idea
 lisitsyn	yes yes
 lisitsyn	there should be some name
 lisitsyn	:D
 pickle27	I was going to google js+soundcloud+playback
 pickle27	hmm maybe I could even pull songs from sound cloud
 lisitsyn	why not
 shogun-buildbot	build #1486 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1486  blamelist: Kevin <kevinhughes27@gmail.com>
 pickle27	anyways this week I'll work on an offline audio example and then start looking into making it web the later in the week and next
 pickle27	also hmmm
 lisitsyn	pickle27: just plot it some way you find convenient
 lisitsyn	later we can convert
 pickle27	I can not for the life of me figure why the Jade unit test fails
 lisitsyn	haha
 pickle27	I run the exact same code not in the unit test framework and it runs
 pickle27	I was hoping it would clear up on the build bot
 lisitsyn	pickle27: well everything is broken with clone
 lisitsyn	I have to check again
 pickle27	I will keep tabs on it
 pickle27	but yeah I wouldn't mind waiting to fix it until everything else settles unit test wise
 lisitsyn	that'd be better
 pickle27	anyways Im out, catch you later!
 lisitsyn	see you
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
 shogun-buildbot	build #1487 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1487  blamelist: Kevin <kevinhughes27@gmail.com>
 shogun-buildbot	build #1488 of deb1 - libshogun is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/1488  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>, Kevin <kevinhughes27@gmail.com>
 lisitsyn	haha build 14 88
--- Log closed Sun Jul 21 00:00:40 2013
