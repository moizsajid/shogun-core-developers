--- Log opened Sat Dec 06 00:00:39 2014
-!- rujmeister [3200beca@gateway/web/freenode/ip.50.0.190.202] has joined #shogun
 rujmeister	hello. what path should I add to environment variables so that Windows can find the cmake file? I'm trying to install shogun with the python interface. Here are the instructions from the install file: $ mkdir build && cd build   $ cmake -DPythonModular=ON ..
-!- Floatingman [~Floatingm@c-68-52-34-232.hsd1.tn.comcast.net] has quit [Read error: Connection reset by peer]
-!- Floatingman [~Floatingm@c-68-52-34-232.hsd1.tn.comcast.net] has joined #shogun
-!- sanuj [~sanuj@117.196.246.167] has joined #shogun
-!- sanuj [~sanuj@117.196.246.167] has quit [Client Quit]
-!- rajul [~rajul@59.89.129.177] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has left #shogun []
-!- rujmeister [3200beca@gateway/web/freenode/ip.50.0.190.202] has quit [Ping timeout: 246 seconds]
-!- sanuj [~sanuj@117.220.60.238] has joined #shogun
-!- sanuj [~sanuj@117.220.60.238] has quit [Ping timeout: 272 seconds]
-!- sanuj [~sanuj@117.220.56.119] has joined #shogun
-!- rajul [~rajul@59.89.129.177] has quit [Ping timeout: 244 seconds]
-!- rajul [~rajul@59.89.128.245] has joined #shogun
-!- sanuj [~sanuj@117.220.56.119] has quit [Ping timeout: 244 seconds]
-!- sanuj [~sanuj@117.220.56.119] has joined #shogun
-!- sanuj [~sanuj@117.220.56.119] has quit [Ping timeout: 256 seconds]
-!- rajul [~rajul@59.89.128.245] has quit [Ping timeout: 264 seconds]
-!- besser82 [~besser82@2a02:8108:8840:1e00:f2de:f1ff:fe89:42d4] has joined #shogun
-!- besser82 [~besser82@2a02:8108:8840:1e00:f2de:f1ff:fe89:42d4] has quit [Changing host]
-!- besser82 [~besser82@fedora/besser82] has joined #shogun
-!- mode/#shogun [+o besser82] by ChanServ
-!- rajul [~rajul@117.199.159.14] has joined #shogun
-!- besser82 [~besser82@fedora/besser82] has quit [Ping timeout: 260 seconds]
-!- sanuj [~sanuj@117.220.56.119] has joined #shogun
-!- sanuj [~sanuj@117.220.56.119] has quit [Ping timeout: 256 seconds]
-!- sanuj [~sanuj@117.196.238.254] has joined #shogun
-!- sanuj [~sanuj@117.196.238.254] has quit [Ping timeout: 255 seconds]
-!- sanuj [~sanuj@117.196.248.88] has joined #shogun
-!- sanuj [~sanuj@117.196.248.88] has quit [Ping timeout: 245 seconds]
-!- sanuj [~sanuj@117.196.244.238] has joined #shogun
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has joined #shogun
-!- sanuj [~sanuj@117.196.244.238] has quit [Ping timeout: 265 seconds]
-!- sanuj [~sanuj@117.196.237.221] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has quit [Quit: WeeChat 1.0.1]
-!- vin-ivar [~vinit@122.170.93.140] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has quit [Client Quit]
-!- vin-ivar [~vinit@122.170.93.140] has joined #shogun
-!- sanuj [~sanuj@117.196.237.221] has quit [Quit: Leaving]
-!- vin-ivar [~vinit@122.170.93.140] has left #shogun ["WeeChat 1.0.1"]
-!- rajul [~rajul@117.199.159.14] has quit [Ping timeout: 264 seconds]
-!- kcm_ [~kcm@122.177.143.226] has quit [Ping timeout: 258 seconds]
-!- Floatingman [~Floatingm@c-68-52-34-232.hsd1.tn.comcast.net] has quit [Remote host closed the connection]
-!- vin-ivar [~vinit@122.170.93.140] has joined #shogun
-!- Floatingman [~Floatingm@c-68-52-34-232.hsd1.tn.comcast.net] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has quit [Ping timeout: 265 seconds]
-!- vin-ivar [~vinit@122.170.93.140] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has quit [Quit: WeeChat 1.0.1]
-!- vin-ivar [~vinit@122.170.93.140] has joined #shogun
-!- vin-ivar [~vinit@122.170.93.140] has left #shogun ["WeeChat 1.0.1"]
-!- Larmona [6bbc181a@gateway/web/freenode/ip.107.188.24.26] has joined #shogun
 Larmona	Hello is any here? I'm sorry to bother but I had a question on the CommStringKernel, in particular the significance of the gap and start parameter... there seems to be no documentation on the website for what these do, and i'm having a hard time infering the significance from directly looking at the C++ code
@lisitsyn	Larmona: hey
@lisitsyn	may be I can try to help you
 Larmona	yay!
 Larmona	do you follow my question or should I explain more?
@lisitsyn	Larmona: I'd have to look up the code
 Larmona	http://www.shogun-toolbox.org/doc/en/3.0.0/Alphabet_8cpp_source.html
 Larmona	lisitsyn: its at line 836
@lisitsyn	Larmona: wow that's really legacy code :D
 Larmona	oh is it old? I'm using shogun 3.2, but the documentation on the website pointed me to that. is there maybe another source with more up-to-date?
@lisitsyn	Larmona: no actually no
@lisitsyn	I mean it is written like years years before ;)
@lisitsyn	okay so actually from what I can see
@lisitsyn	start is here just to shift that obs array
@lisitsyn	but that's pretty straightforward
@lisitsyn	as for gap I am looking at it
 Larmona	hmmm as in to start from the ith index of the sequence where start = i? that's odd, because in all the example code for CommString it initializes start to be order - 1, but why would that be the default? it seems odd to me to ignore the first (order-1) members of the sequence
@lisitsyn	I have to be honest I have no idea what this code is about :D let me check the example
@lisitsyn	I guess you're working with some bio sequences
 Larmona	I'm working with text documents and trying to classify them using SSK
@lisitsyn	ah
@lisitsyn	good to know someone is not using neural nets still :D
 Larmona	haha
@lisitsyn	Larmona: could you please guide me to the example you are referring?
@lisitsyn	is it in cpp examples? can't find it yet
 Larmona	k give me a sec i'll get it
 Larmona	so I'm currently using R modular and this is the example i've been referencing
 Larmona	http://www.shogun-toolbox.org/doc/en/3.0.0/r_modular_examples.html
 Larmona	../examples/documented/r_modular/kernel_comm_ulong_string_modular.R
 Larmona	^^^ thats the title
@lisitsyn	ok cool
 Larmona	the python and other examples for this kernel look identical
@lisitsyn	obtain_from_char(...)
@lisitsyn	Larmona: right?
 Larmona	right
 Larmona	which itself calls translate_from_single_order
@lisitsyn	Larmona: okay just a simple guess I have yet is that such start=order-1 thing makes it consistent with the order
@lisitsyn	I mean you'd have to get 'order' elements before
@lisitsyn	but for first elements it is not possible
@lisitsyn	just a guess yet
 Larmona	lisitsyn: I'm not quite sure I follow. why would you not be able to search for 'order'-grams that begin in the first 'order' elements ?
@lisitsyn	Larmona: I mean it would be like indices of -1, -2 etc
 Larmona	ah ok I see
@lisitsyn	Larmona: but that's just a guess yet
 Larmona	so moving start to, say, order + 1, would be if you wanted to ignore first two elements of sequence?
@lisitsyn	Larmona: yeah probably
 Larmona	gotcha
@lisitsyn	Larmona: I am not sure if this is true though :)
 Larmona	lisitsyn: won't hold you to it
@lisitsyn	Larmona: as I can see start is always start+gap
@lisitsyn	so start is just to enable you to use your string from some position
@lisitsyn	but it always adds the gap
@lisitsyn	and then it shifts it back
@lisitsyn	oh that's really complex should be documented
 Larmona	hmmm... not quite sure I follow in that what would be the purpose of modifying gap=0? in the context of feature mapping?
@lisitsyn	  840     const int32_t start_gap=(p_order-gap)/2;
@lisitsyn	  841     const int32_t end_gap=start_gap+gap;
@lisitsyn	Larmona: ^ according to that thing it skips first gap elements and don't handle last gap elements
 Larmona	so sort of like start, but trimming sequence at both ends?
@lisitsyn	Larmona: looks like
 Larmona	gotcha
 Larmona	well that is very helpful
 Larmona	initially i thought/hoped it was maybe a parameter to handle gaps in sequences (i.e. non-contiguous sequences)
@lisitsyn	Larmona: it looks like it handles all elements without gaps
 Larmona	yeah
 Larmona	there's no kernel that looks for non-contiguous sequences in shogun is there?
@lisitsyn	Larmona: cant' remember any - you mean you have some positions you want to skip?
 Larmona	no as in there are published kernels that consider matching non-contiguous subsequences, which then penalizes them according to there length
 Larmona	so for example if the subsequence I'm looking for is CAT
 Larmona	and the string in question is CART
 Larmona	it counts as a match by skipping R but them penalizes the similarity measure by some parameter
 Larmona	The idea is its basically a more robust SSK kernel because if there are either misspellings or something like that it could still catch the similarity
@lisitsyn	ahh
@lisitsyn	let me check
 Larmona	there's actually a package in R that implements it called kernlab... but it performs terrible and crashed my R session everytime
@lisitsyn	Larmona: I am pretty sure some kernel should do this job, checking
 Larmona	lisitsyn:thanks
@lisitsyn	Larmona: oh I think I know a list with proper description
@lisitsyn	Larmona: it is sonney2k's thesis :D
@lisitsyn	Larmona: http://sonnenburgs.de/soeren/publications/Son08.pdf page 15
 Larmona	yes I think you are right I have read quite a few of his papers
 Larmona	actually the kernel im referencing is from '03 but the  mismatch one does get at the spirit of it
@lisitsyn	Larmona: these kernels are like specialized for these AGCT guys
 Larmona	ah I see
@lisitsyn	I have no idea whether there is some simpler approach for regular text
@lisitsyn	Larmona: but I remember some recommendation I was given about WD kernel
@lisitsyn	so maybe you could give it a try
 Larmona	yeah WD seemed to touch on the idea because it allows for shifts I think
@lisitsyn	thought it is going to catch char by char similarity
@lisitsyn	I mean it won't be like bag of words because if your shift is big you'd get not really informative kernel
@lisitsyn	in other words sounds like it is very 'positional'
 Larmona	but nonetheless this was very helpful! you wouldn't happen to be familiar with any other powerful string kernel libraries out there would you? from my research shogun seemed to be the best by a margin
 Larmona	yeah positional would not be helpful for my classification problem
@lisitsyn	Larmona: I guess spectrum kernel would be better for regular text
 Larmona	here is the kernel I was referencing fyi
 Larmona	http://www.infoautoclassification.org/public/articles/Lodhi-et.-al._Text-Classification-using-String-Kernels.pdf
@lisitsyn	as for your question about other libs - I know basically nothing :)
 Larmona	haha alrighty
@lisitsyn	Larmona: I'd suggest you to give spectrum kernel a try
@lisitsyn	it just counts number of matching n-grams
 Larmona	yeah thats what I've been using
 Larmona	well thank you very much for the help lisitsyn! I really appreciate it. I'm off to grind on this project now. Have a good day!
@lisitsyn	I see
@lisitsyn	you are welcome :)
 Larmona	ciao
-!- Larmona [6bbc181a@gateway/web/freenode/ip.107.188.24.26] has quit [Quit: Page closed]
-!- rujmeister [3200beca@gateway/web/freenode/ip.50.0.190.202] has joined #shogun
--- Log closed Sun Dec 07 00:00:40 2014
