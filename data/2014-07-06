--- Log opened Sun Jul 06 00:00:02 2014
-!- rajul_ [~rajul@182.68.180.70] has quit [Ping timeout: 260 seconds]
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- rajul [~rajul@180.151.18.31] has quit [Quit: Leaving]
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- rajul [~rajul@180.151.18.31] has quit [Client Quit]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
 shogun-buildbot	build #745 of nightly_none is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_none/builds/745
 shogun-buildbot	build #740 of nightly_all is complete: Failure [failed compile test]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_all/builds/740  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, lambday <heavensdevil6909@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>, khalednasr <k.nasr92@gmail.com>
-!- khalednasr [~k.nasr92@41.69.213.175] has joined #shogun
 shogun-buildbot	build #844 of nightly_default is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/844
-!- khalednasr [~k.nasr92@41.69.213.175] has quit [Ping timeout: 252 seconds]
-!- rajul [~rajul@182.68.240.221] has joined #shogun
-!- rajul_ [~rajul@180.151.18.31] has joined #shogun
-!- rajul [~rajul@182.68.240.221] has quit [Ping timeout: 272 seconds]
-!- rajul_ [~rajul@180.151.18.31] has quit [Quit: Leaving]
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- hushell [~hushell@c-71-237-222-49.hsd1.or.comcast.net] has quit [Ping timeout: 240 seconds]
-!- kislay [~Abhijeet@103.240.205.244] has joined #shogun
-!- kislay [~Abhijeet@103.240.205.244] has quit [Ping timeout: 252 seconds]
-!- khalednasr [~k.nasr92@41.69.164.234] has joined #shogun
-!- kislay [~Abhijeet@27.116.52.192] has joined #shogun
-!- khalednasr [~k.nasr92@41.69.164.234] has quit [Quit: Leaving]
 shogun-buildbot	build #169 of osx2 - python is complete: Failure [failed test python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20python/builds/169  blamelist: Parijat Mazumdar <mazumdarparijat@gmail.com>
-!- kislay [~Abhijeet@27.116.52.192] has quit [Ping timeout: 240 seconds]
 shogun-buildbot	build #170 of osx2 - python is complete: Failure [failed examples and unit tests]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20python/builds/170  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Sergey Lisitsyn <lisitsyn.s.o@gmail.com>, Fernando Iglesias <fernando.iglesiasg@gmail.com>, khalednasr <k.nasr92@gmail.com>
-!- kislay [~Abhijeet@103.240.205.174] has joined #shogun
-!- rajul [~rajul@180.151.18.31] has quit [Ping timeout: 272 seconds]
-!- witness___ [uid10044@gateway/web/irccloud.com/x-gdaigpteywxptahz] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: khalednasr :feature/linalg * 42829d4 / / (7 files): https://github.com/shogun-toolbox/shogun/commit/42829d43c2e625fcf2da82d665268b3b39f1664d
 shogun-notifier-	shogun: refactored linalg's dot product
 shogun-notifier-	shogun: Soumyajit De :feature/linalg * c14ff65 / / (7 files): https://github.com/shogun-toolbox/shogun/commit/c14ff651e56f9ab2d7a0aa0c1d2aabd51d07cf2f
 shogun-notifier-	shogun: Merge pull request #2367 from khalednasr/feature/linalg
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: refactored linalg's dot product
-!- kislay [~Abhijeet@103.240.205.174] has quit [Ping timeout: 255 seconds]
-!- PirosB3 [~pirosb3@91-64-37-165-dynip.superkabel.de] has joined #shogun
-!- kislay [~Abhijeet@103.240.205.186] has joined #shogun
-!- PirosB3 [~pirosb3@91-64-37-165-dynip.superkabel.de] has quit [Quit: PirosB3]
-!- rajul [~rajul@182.68.102.194] has joined #shogun
-!- PirosB3 [~pirosb3@91-64-37-165-dynip.superkabel.de] has joined #shogun
 shogun-notifier-	shogun: Abhijeet :develop * fe6e8c6 / src/shogun/preprocessor/FisherLDA.cpp,src/shogun/preprocessor/FisherLDA.h: https://github.com/shogun-toolbox/shogun/commit/fe6e8c67e4dcd642cef82c74104399f4441f620d
 shogun-notifier-	shogun: FisherLDA coverty defects fixed
 shogun-notifier-	shogun: Fernando Iglesias :develop * 352b606 / src/shogun/preprocessor/FisherLDA.cpp,src/shogun/preprocessor/FisherLDA.h: https://github.com/shogun-toolbox/shogun/commit/352b60635d07c8468e526e7c684ba5a52ec5ccca
 shogun-notifier-	shogun: Merge pull request #2369 from kislayabhi/fisher_dafects
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: FisherLDA coverty defects fixed
 shogun-buildbot	build #171 of osx2 - python is complete: Failure [failed test python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20python/builds/171  blamelist: Abhijeet <abhijeetkislay@gmail.com>
 shogun-buildbot	build #172 of osx2 - python is complete: Failure [failed test python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/osx2%20-%20python/builds/172  blamelist: Fernando Iglesias <fernando.iglesiasg@gmail.com>
-!- travis-ci [~travis-ci@ec2-54-81-195-230.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Fernando Iglesias's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/29241552
-!- travis-ci [~travis-ci@ec2-54-81-195-230.compute-1.amazonaws.com] has left #shogun []
-!- PirosB3 [~pirosb3@91-64-37-165-dynip.superkabel.de] has quit [Read error: No route to host]
-!- PirosB3 [~pirosb3@91-64-37-165-dynip.superkabel.de] has joined #shogun
-!- PirosB3 [~pirosb3@91-64-37-165-dynip.superkabel.de] has quit [Quit: PirosB3]
-!- lisitsyn [~qdrgsm@80.252.20.67] has joined #shogun
-!- HeikoS [~heiko@chy77-1-88-183-41-61.fbx.proxad.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 shogun-notifier-	shogun-data: Abhijeet :master * ca0adc5 / testsuite/python2-tests/ (2 files): https://github.com/shogun-toolbox/shogun-data/commit/ca0adc53a5d25cb4a47f94ced95abf0b9caaf92e
 shogun-notifier-	shogun-data: added data files for LDA.cpp integration
 shogun-notifier-	shogun-data: Heiko Strathmann :master * 527e601 / testsuite/python2-tests/ (2 files): https://github.com/shogun-toolbox/shogun-data/commit/527e6018d99652cacfd07cc05e0ad93ef08943dc
 shogun-notifier-	shogun-data: Merge pull request #61 from kislayabhi/master
 shogun-notifier-	shogun-data:
 shogun-notifier-	shogun-data: added data files for LDA.cpp integration
 shogun-notifier-	shogun-demo: Saurabh :master * 456a8ae / / (4 files): https://github.com/shogun-toolbox/shogun-demo/commit/456a8aeac4c203af2272ee6c5264effe53588480
 shogun-notifier-	shogun-demo: add predictive plot
 shogun-notifier-	shogun-demo: Heiko Strathmann :master * a4795ee / / (4 files): https://github.com/shogun-toolbox/shogun-demo/commit/a4795eeac63d75d121accd60c9e61ed84a33cc7d
 shogun-notifier-	shogun-demo: Merge pull request #51 from Saurabh7/predictive
 shogun-notifier-	shogun-demo:
 shogun-notifier-	shogun-demo: add predictive plot
-!- HeikoS [~heiko@chy77-1-88-183-41-61.fbx.proxad.net] has quit [Ping timeout: 260 seconds]
-!- hushell [~hushell@c-71-237-222-49.hsd1.or.comcast.net] has joined #shogun
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- witness___ [uid10044@gateway/web/irccloud.com/x-gdaigpteywxptahz] has quit [Quit: Connection closed for inactivity]
-!- khalednasr [~k.nasr92@41.69.241.215] has joined #shogun
-!- lambday [67157e4c@gateway/web/freenode/ip.103.21.126.76] has joined #shogun
 lambday	khalednasr: hi
 khalednasr	lambday, hi
-!- rajul_ [~rajul@182.68.113.105] has joined #shogun
 lambday	khalednasr: could you please explain the issue with returning a new matrix for gpu?
 lambday	khalednasr: sorry but I just want to understand :D'
-!- rajul [~rajul@182.68.102.194] has quit [Ping timeout: 248 seconds]
 khalednasr	lambday, If you have the square method always returning an SGMatrix, it'll do the computation on the gpu, create a new matrix on gpu memory and then create another matrix on cpu memory and copy the data
 khalednasr	lambday, which would take a while :)
 lambday	khalednasr: ah I see!
 lambday	khalednasr: great catch!
 lambday	khalednasr: so you're suggesting that if we use gpu backend to compute something
 lambday	then we should better stick with gpu memory instead and continue the rest of the work with that
 khalednasr	yup
 lambday	khalednasr: what I am wondering is that, how often would we actually use a gpu backend for non gpu matrices...
-!- witness___ [uid10044@gateway/web/irccloud.com/x-dggkmmlzocjcxfox] has joined #shogun
 khalednasr	I'm not sure, the overhead of copying data back and forth between gpu and cpu is quite large
 lambday	khalednasr: I am just thinking that creating the result matrix in my code and then passing it to the method is too much work :(
 lambday	khalednasr: plus, I gotta do it this way... square(SGMatrix.... a, GPUMatrix.... b)
 lambday	right?
 lambday	result goes into b
 khalednasr	yeah, If we add another template parameter for the return type
 khalednasr	for the result*
 lambday	yeah
 lambday	but I guess more often than not, when someone is *knowingly* working with gpu backend, he'd be using gpu matrices
-!- rajul_ is now known as rajul
 khalednasr	lambday, yeah
 khalednasr	so another template parameter for the result is probably not necessary
 lambday	khalednasr: I am just wondering if we need to do it this way for backend independent cases..
 lambday	I mean, yes, technically its possible to set global backend to be viennacl
 lambday	in that case any method using global backend is doomed
 lambday	but if in my code I want to use with *only* gpu matrices, then maybe in the code I should use explicit backend and use gpu matrices
 lambday	which is safe no matter what global backend is set
 khalednasr	lambday, yup, make making it possible to select backends for invidiual algorithms would be better
 khalednasr	maybe making it possible*
 lambday	khalednasr: that's always possible.. for each method
 lambday	linalg::foo<Backend::VIENNACL>(a,b);
 khalednasr	yeah, I mean on the user side
 lambday	the developer just has to be concerned about the gpu-ness of a and b :D
 khalednasr	like, the user should be able select which backend neural nets run on, an so on
 lambday	khalednasr: you mean module wise backend setup?
 lambday	I mean module-wise global backend setup?
 khalednasr	lambday, yeah
 lambday	khalednasr: my main concern is this - say, we're using eigen3 matrix for example... and I have a SGMatrix... so I want the result to be SG, not Eigen::Matrix
 lambday	I mean the non gpu cases shouldn't suffer
 khalednasr	lambday, ah I see
 lambday	khalednasr: if I understood your concern correctly, then you want to avoid data copy back and forth from cpu <--> gpu.. which is possible if we use in our code CGPUMatrix and explicit backend for the methods we call on them
 lambday	but the module-wise global backend setup for those methods won't work!.. we can't use CUDA for that, for example
 lambday	hmm
 khalednasr	lambday, yeah, the main problem is with the return type
 lambday	khalednasr: if we do things explictly then there's no problem though, right?
 lambday	I pass a gpu matrix, use gpu backend to compute things which constructs a new matrix in gpu,... and it returns a gpu matrix only
 khalednasr	yeah, but we have to pick a return type for the wrapper method
 lambday	khalednasr: if we use the same matrix type then what's the problem? when I am passing CGPUMatrix then return type is also CGPUMatrix in which case we're steering clear of the data copy thing
 khalednasr	lambday, ahh I see, sorry I was confused about something
 khalednasr	lambday, yeah there won't be a problem
 lambday	maybe we need to rethink this a bit... using another namespace to separete things as wiking suggested...
 lambday	haha happens all the time :D
 khalednasr	lambday, but we should probably have another wrapper methods that uses a pre-allocated result matrix
 lambday	so I guess it should be mentioned in a SG_INFO that data copy is a disaster
 lambday	khalednasr: yeah that's fine
 lambday	khalednasr: in those operators/copy constructors where you copy cpu <-----> gpu... could you please put a SG_INFO in there?
 khalednasr	lambday, yeah sure
 lambday	SG_INFO("Caution: You're laptop's gonna curse you in 3...2...1... BOOM!");
 lambday	:D
 khalednasr	haha :D
 khalednasr	lambday, another thing: in the Block struct, the matrix is copied into a struct member
 lambday	khalednasr: I think no.. :/
 lambday	block just carries indices
 lambday	let me check
 lambday	if I did that then I'm stupid
 lambday	khalednasr: block just wraps around the matrix
 lambday	memory is allocated via pointer to that ptr is copied not the data
 khalednasr	yeah that's the case for SGMatrix and GPUMatrix
 khalednasr	but eigen3 does deep copies
 lambday	khalednasr: err.. we should use const&
 khalednasr	lambday, yeah
 lambday	khalednasr: you're a lifesavor
 khalednasr	lambday, haha :)
 lambday	khalednasr: if you add a new module, please make appropriate changes in the cmake also :)
 khalednasr	lambday, sure
 lambday	I'm psyched about getting feature/linalg merged with develop...
 khalednasr	lambday, me too, can't wait to crash my computer's gpu with a huge neural net :D
 lambday	khalednasr: haha... my poor laptop can't now run viennacl.. I am using pocl
 lambday	it shows pocl error : unimplemented opencl method with your new stuffs :(
 khalednasr	lambday, oh, what should we call the new module? I don't think Util is very suitable
 lambday	I am the last person to ask about names :(
 lambday	you suggest
 lambday	Ideally we want general stuffs to be there... matrix matrix multiplications, etc
 lambday	matrixfunctions?
 lambday	nah
-!- rajul [~rajul@182.68.113.105] has quit [Ping timeout: 248 seconds]
 lambday	argh
 khalednasr	I hate naming stuff too
 lambday	I always turn to heiko about names :(
 lambday	lisitsyn: SOS
 khalednasr	maybe Core? or Basic?
 lambday	basic yeha
 lambday	core sounds good too
 lambday	let us steal names from eigen3
 khalednasr	lambday, good idea :)
 khalednasr	brb
 lambday	oki
-!- lisitsyn [~qdrgsm@80.252.20.67] has quit [Ping timeout: 252 seconds]
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-aamotnusdfjjathv] has joined #shogun
 khalednasr	lambday, back
 lambday	khalednasr: wb
 khalednasr	lambday, seems like Eigen3 has that stuff in their Core module
 lambday	khalednasr: do you know if we can use ccache with clang?
 lambday	khalednasr: yeha... and many more things
 lambday	core is literally the core module there :/
 khalednasr	lambday, nope, no idea
 lambday	basic is cool
 lambday	no advanced stuffs... just basic things :D
 khalednasr	lambday, cool :)
 lambday	khalednasr: later when you send the PR then maybe we can ask peers to suggest names
-!- pickle27 [~pickle27@192-0-136-118.cpe.teksavvy.com] has quit [Remote host closed the connection]
 khalednasr	lambday, yeah
-!- Jiaolong [9e6d09e4@gateway/web/freenode/ip.158.109.9.228] has quit []
-!- lambday [67157e4c@gateway/web/freenode/ip.103.21.126.76] has quit [Quit: Page closed]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
-!- kislay [~Abhijeet@103.240.205.186] has quit [Quit: Leaving]
-!- rajul [~rajul@182.68.160.237] has joined #shogun
-!- jiaolong [9e6d1f01@gateway/web/freenode/ip.158.109.31.1] has joined #shogun
-!- lisitsyn [~qdrgsm@80.252.20.67] has joined #shogun
 lisitsyn	oops
 lisitsyn	lambday: khalednasr: I am back :D
 lisitsyn	anything I can help with?
 khalednasr	lisitsyn, hey :)
 khalednasr	lisitsyn, we were talking about what we should name a module in linalg that contains matrix mulitplications, additions and elementwise operations, etc
 lisitsyn	khalednasr: uhmm and what were suggestions?
 khalednasr	lisitsyn, core, basic, util, got any others?
 lisitsyn	doesn't sound util
 lisitsyn	core seems to be ok
 khalednasr	yeah, I agree
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 246 seconds]
-!- rajul [~rajul@182.68.160.237] has quit [Quit: Leaving]
-!- thoralf_ [~thoralf@91-65-140-81-dynip.superkabel.de] has joined #shogun
 thoralf_	Heho.
--- Log closed Mon Jul 07 00:00:04 2014
