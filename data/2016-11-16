--- Log opened Wed Nov 16 00:00:18 2016
-!- abhinav_ [~quassel@103.211.53.167] has joined #shogun
-!- abhinav_ [~quassel@103.211.53.167] has quit [Ping timeout: 268 seconds]
-!- abhinav_ [~quassel@103.211.53.167] has joined #shogun
-!- abhinav_ [~quassel@103.211.53.167] has quit [Ping timeout: 256 seconds]
-!- abhinav_ [~quassel@103.211.53.167] has joined #shogun
-!- sonne|work [~sonnenbu@88.134.176.135] has joined #shogun
-!- praisethemoon [~praisethe@41.230.52.174] has joined #shogun
-!- praisethemoon [~praisethe@41.230.52.174] has quit [Changing host]
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has joined #shogun
-!- abhinav_ [~quassel@103.211.53.167] has quit [Read error: Connection reset by peer]
-!- abhinav_ [~quassel@103.211.53.167] has joined #shogun
 lisitsyn	wiking: pluskid wrote a paper with hardt bengio et al
 lisitsyn	impressive :)
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has quit [Ping timeout: 268 seconds]
-!- praisethemoon [~praisethe@41.230.52.174] has joined #shogun
-!- praisethemoon [~praisethe@41.230.52.174] has quit [Ping timeout: 268 seconds]
-!- praisethemoon_ [~praisethe@41.226.248.123] has joined #shogun
-!- praisethemoon_ is now known as praisethemoon
-!- praisethemoon [~praisethe@41.226.248.123] has quit [Changing host]
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has joined #shogun
 sonne|work	lisitsyn: did you expect anything less?
 lisitsyn	sonne|work: didn't like the paper tho
 lisitsyn	he attacks holy vapnik
 sonne|work	lisitsyn: do you have the url/pdf ?
 lisitsyn	sure
 lisitsyn	http://openreview.net/pdf?id=Sy8gdB9xx
 sonne|work	lisitsyn: attacking a god smells like immediate punishment ;)
 lisitsyn	sonne|work: you can't just attack the dark emperor
 lisitsyn	it's careless
 sonne|work	it is
 lisitsyn	sonne|work: tldr: neural nets overfit like crazy on random data and VC and Rademacher have no idea why it doesn't overfit when data is real
 lisitsyn	the section 5 is really strange
 lisitsyn	they reinvent KRR and say it works
 lisitsyn	UHMM OK :D
 praisethemoon	Hello everyone
 praisethemoon	I have been having a look at shogun lately, and seems very interesting :)
 praisethemoon	You guys are doing great job.
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has quit [Quit: Leaving]
-!- praisethemoon [~praisethe@41.230.52.174] has joined #shogun
-!- praisethemoon [~praisethe@41.230.52.174] has quit [Changing host]
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has joined #shogun
 sonne|work	lisitsyn: maybe because rademacher and VC only draw conclusions for all distributions not ones of natural property..
 sonne|work	anyways even SVMs with gaussian kernels have VCdim == infty so...
-!- abhinav_ [~quassel@103.211.53.167] has quit [Ping timeout: 250 seconds]
-!- praisethemoon_ [~praisethe@41.230.52.174] has joined #shogun
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has quit [Ping timeout: 265 seconds]
-!- praisethemoon_ is now known as praisethemoon
-!- praisethemoon [~praisethe@41.230.52.174] has quit [Changing host]
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has joined #shogun
-!- abhinav_ [~quassel@103.211.53.167] has joined #shogun
-!- Hieronymous [~sudarshan@122.169.172.64] has joined #shogun
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	wiking: jo!
-!- Hieronymous [~sudarshan@122.169.172.64] has quit [Remote host closed the connection]
-!- Hieronymous [~sudarshan@122.169.172.64] has joined #shogun
 Hieronymous	HeikoS: jo!
@HeikoS	jo
 Hieronymous	I am going through the PCA notebook.
 Hieronymous	But how to I create the cookbook ? I did read the docs, but its different for each type of learning problem.
@HeikoS	I dont understand your question
 Hieronymous	HeikoS: Never mind, I got it. Any C++ beginner task available ?
 Hieronymous	Perhaps something in linalg ? I read the wiki, it is a bit "nascent".
@HeikoS	Yeah you could remove some warnings
@HeikoS	check our buildbot page
@HeikoS	and the warnings for libshogun
@HeikoS	need to be all resolved ;)
@HeikoS	same for python
@HeikoS	but I mean there is tons
@HeikoS	check entrance tasks on our issues list
@HeikoS	there is quite a few c++ ones
@HeikoS	linalg needs more operations in the feature branch
@HeikoS	check the commit history of the feature branch to get a feeling
@HeikoS	eventially we want all operations in SGVector to be in linalg
 Hieronymous	Yeah, I am actually browsing through the entrance tasks. Nice I have something to research then. Great.
-!- abhinav_ [~quassel@103.211.53.167] has quit [Remote host closed the connection]
@HeikoS	Hieronymous: yeah I mean there is so much stuff
@HeikoS	just really pick anything that makes sense to you
@HeikoS	the 5.1 milestone are the most pressing ones
@HeikoS	there is some entrance ones in there as well
 Hieronymous	HeikoS: There are two feature branches for linalg , linalg_refactor and linalg_second_take. Which one should I be checking ?
@HeikoS	refactor I think
@HeikoS	the one OXPHOS has been active on
@HeikoS	check the pull requests for that branch
@HeikoS	they give you an idea of what is has gone through
@HeikoS	but that is messy
@HeikoS	rather wait a bit with that :)
-!- lambday [6a331336@gateway/web/freenode/ip.106.51.19.54] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
@lambday	HeikoS: yo
@HeikoS	lambday: jo man!
@HeikoS	good to see you here :)
@lambday	HeikoS: yeah :)
@lambday	HeikoS: will spend some time on bigtesting now
@HeikoS	cool
-!- abhinav [~quassel@103.211.53.167] has joined #shogun
@lambday	HeikoS: BTW, the GPU kernels we have written may need revision
@lambday	was looking at sum max, etc..
@lambday	the max work group size is hardcoded.. it should be queried from the h/w
@lambday	anyway will do that later
@lambday	maybe Pan has some ideas
@lambday	for now, making bigtesting merge ready :)
@HeikoS	yep absolutely
@HeikoS	but have to do that *after* linalg is merged
@HeikoS	same as for bigtest :)
@HeikoS	currently, there is nothing
@HeikoS	before we do fancy things, we want at least something :)
@HeikoS	let me know how it goes and whether you need help
@lambday	HeikoS: so let me know if I miss anything in the task list (1) make supplying a custom kernel easier, get rid of the extra info message (2) pre-initialize things with DummeFeatures.. the user is not expected to supply dummy featureds when he's providing a custom kernel (3) anything else?
@lambday	will add the documentations next
@HeikoS	yeah thats good
@HeikoS	but (1) is: merge
@HeikoS	before any of this is addressed
@lambday	if some particular parameter is mandatory, it should be properly documented
@HeikoS	yeah true
@lambday	HeikoS: merge it today you mean?
@lambday	HeikoS: if you have some time to spare we can do that today
@HeikoS	no I mean merge before doing any of these points above
@lambday	I'll rebase
@HeikoS	I have
@lambday	yeah I got that
@HeikoS	the builds needs to pass
@lambday	okay let me rebase
@HeikoS	the notebook needs to work
@lambday	and check the build
@HeikoS	the hsic problem needs to be resolved
@HeikoS	then docs
@HeikoS	then merge
@HeikoS	then your list above :)
@lambday	added all to sticky notes
@lambday	:D
@HeikoS	nice one :)
@HeikoS	we can tweet that ;)
@lambday	HeikoS: shall I remove the HSIC files or just comment the whole thing out?
@HeikoS	lambday: remove them
@HeikoS	they are in the history
@lambday	HeikoS: cool
@sukey	Pull Request #3543 "Replace pointer and vlen with SGVector in QDA."  opened by sudk1896 - https://github.com/shogun-toolbox/shogun/pull/3543
@lambday	HeikoS: the entire dir "statistics" should go, right? we have things in a different directory now
@lambday	HeikoS: shall I merge this feature branch to my develop and then push changes?
@lambday	I mean after I check things
@HeikoS	nono
@sukey	Pull Request #3543 "Replace pointer and vlen with SGVector in QDA."  synchronized by sudk1896 - https://github.com/shogun-toolbox/shogun/pull/3543
@HeikoS	leave in feature branch in upstream
@HeikoS	just rebase there
@HeikoS	and polish there
@HeikoS	I will merge from there
@lambday	HeikoS: yeah but HSIC and those other things are not in that branch.. those have to be removed from develop itself
@HeikoS	I dont understand
@HeikoS	you have a branch that is rebased against develop
@HeikoS	where you removed hsic
@sukey	Pull Request #3543 "Replace pointer and vlen with SGVector in QDA." - https://github.com/shogun-toolbox/shogun/pull/3543
@HeikoS	if I merge this, hsic wil be deleted in develop
@lambday	HeikoS: yeah sorry I got confused
@lambday	HeikoS: so things are already deleted in my branch
@lambday	BAHSIC and all are taken care of, since it does compile
@HeikoS	remove all files/tests/folders/notebooks for that stuff as well
@HeikoS	and then all good
@lambday	HeikoS: hmm.. just tried rebasing now against develop.. got merge conflicts for two sample test notebook
@lambday	fixing
@HeikoS	yep that is since we had to clean things
@HeikoS	before release
@HeikoS	notebook was broken
@lambday	I can replace it with the one in upstream in feature/bigtest branch, right? that one works with the new interface (will check whether it does)
@lambday	nah it's not updated
@lambday	changing
@lambday	wow! github is broken
-!- sonne|work [~sonnenbu@88.134.176.135] has quit [Ping timeout: 256 seconds]
-!- sonne|work [~sonnenbu@ip5886b087.fixed.kabel-deutschland.de] has joined #shogun
@HeikoS	happens every now and then :)
@HeikoS	lambday: didnt get your question
@lambday	HeikoS: gotta fix the notebook since I got merge conflicts.. there were so many.. was wondering whether I can replace the entire notebook from somewhere manually and then make changes according to our new API by running that thing
@HeikoS	I think I updated the notebook quite a bit
@HeikoS	in feature branch
@HeikoS	to solve this is easy
@HeikoS	take the feature branch version
@HeikoS	and apply the latest changes from develop on top of it, they are in the history
@HeikoS	I think these are only very few so should be easy
@HeikoS	(i.e. change order of commits, dont rebase the notebook)
@HeikoS	lambday: ^
@lambday	HeikoS: okay let me try
@lambday	I took the feature branch version itself.. let me look at the latest commits in develop for that
@lambday	there is just one that you did during the last release.. will apply that patch
@HeikoS	exactly
@HeikoS	and these are very minor changes I did for the release
@lambday	HeikoS: umm.. it has 1,107 additions and 1,089 deletions.. if you fixed the develop one to make it work with the older code, then it might conflict with the one we have in our feature branch since the API changed
@HeikoS	it is the format
@HeikoS	you cannot apply the patch using git
@HeikoS	have to do by hand
@HeikoS	ah thats annoying
@HeikoS	so I suggest
@HeikoS	you check the changes I did for the release
@lambday	yeah
@HeikoS	which you cannot
@HeikoS	since i did not make a sep patch for the format change
@HeikoS	sigh
@HeikoS	my mistake
@HeikoS	so then, just discard my changes in develop
@HeikoS	just make sure, that the notebook runs
@HeikoS	(I did only that basically)
@HeikoS	so just take your feature branch version, and period
@lambday	HeikoS: cool.. just running the notebook
@lambday	HeikoS: [-   "version": "2.7.6"] [+   "version": "2.7.10"]
@lambday	is this the change I should do?
@lambday	umm
@sukey	Pull Request #3544 "Replace pointers with SGVector"  opened by souravsingh - https://github.com/shogun-toolbox/shogun/pull/3544
@HeikoS	lambday: no change
@HeikoS	discard my stuff
@HeikoS	it was only to make it executable again
@HeikoS	just open the notebook in your own jupyter  and run it
@lambday	HeikoS: okay cool..
@lambday	yeah
@HeikoS	(feeature branch version)
@lambday	the develop version will anyway get removed since it's a different file in a new dir it seems
@lambday	we removed it in feature branch
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has quit [Ping timeout: 268 seconds]
@HeikoS	lambday: what do you  mean?
@HeikoS	I thought you had conflicts
@lambday	HeikoS: conflicts for the location where the feature branch version exists (!) - maybe because it was git mv'ed?
@lambday	HeikoS: fixing this notebook now
@sukey	Pull Request #3543 "Replace pointer and vlen with SGVector in QDA." - https://github.com/shogun-toolbox/shogun/pull/3543
 Hieronymous	HeikoS: Take a look at the PR - > I cleaned up the QDA. Btw, tests passed.
@HeikoS	Hieronymous: cool thanks, will check later
-!- praisethemoon [~praisethe@41.226.248.123] has joined #shogun
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 258 seconds]
-!- praisethemoon [~praisethe@41.226.248.123] has quit [Quit: Leaving]
 Hieronymous	lamday: Hey!
 Hieronymous	lambday,
 Hieronymous	Hi
@lambday	Hieronymous: yo
 Hieronymous	Could you tell me how I could begin contrubuting to linalg ?
@lambday	oh dear
 Hieronymous	I see that it is very "nascent".
@lambday	umm.. we re-did all the internals and interfaces
 Hieronymous	Might be good for a noob such as myself.
@lambday	TBH I gotta have a look at the current state myself, but Pan did an awesome job porting all those existing methods into the new framework
@lambday	but still there are some left.. so that might be something you can look at
@lambday	Hieronymous: do you have experience in OpenCL and GPU programming?
 Hieronymous	lamday: Nope. I was reading up a bit about Eigen though.
 Hieronymous	That seemed "intuitive"
@lambday	Hieronymous: that's not a requirement, just curious cause we could have used your help :)
 Hieronymous	I am willing to learn new things. Shouldn't be a problem.
@lambday	Hieronymous: no worries.. so you can collaborate with Pan moving the existing methods to the new interface..
 Hieronymous	Where should I look for these "existing methods"
@lambday	but maybe wait a bit, cause some of her patches are not yet merged.. you don't really want to work on something that somebody else did already
 Hieronymous	I did read the wiki on linalg and the reasons behind its inception.
@lambday	Hieronymous: those are in the develop branch
@lambday	check inside mathematics/linalg/internals
@lambday	Hieronymous: Pan's changes are being merged into a feature branch linalg_refactor.. so that is another place to look at to know which methods are already there
 Hieronymous	lambday: great, seems like a good starting point. Thanks.
@lambday	Hieronymous: not at all :)
@sukey	New Commit "Fixed the two-sample test notebook with the latest API" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/6b09feb2f12c358bbb0ed1d471a07b4501b31139
 Hieronymous	lambday: OXPHOS is working on the cholseky decomposition.
 Hieronymous	If I had to add something like QR or SVD, any hints on how I should proceed ?
-!- abhinav [~quassel@103.211.53.167] has quit [Ping timeout: 250 seconds]
 Hieronymous	lambday: I actually checked OXPHOS's implementation of Cholesky. All of the operations are done using Eigen.
 Hieronymous	Any ideas on how I could begin ? Just general outline any resource or implementation I should model it on.
 Hieronymous	lambday: Like I said, just hints/guidelines :) Thanks.
@lambday	Hieronymous: you can add other factorization methods :)
@lambday	wait let me find you one issue on Github
 Hieronymous	Yeah QR/SVD. Actually there is - 2526
 Hieronymous	#2526
@lambday	https://github.com/shogun-toolbox/shogun/issues/2526
@lambday	exactly!~
 Hieronymous	that is. I looked at those, QR or SVD hasn't been attempted by anyone. I was looking at OXPHOS's implementation
 Hieronymous	of Cholesky in linalg.
@lambday	Hieronymous: yeah so you can add those two
 Hieronymous	I know all operations are done by Eigen anyway.
 Hieronymous	Just that I don't understand how I should actually begin ? I am new.
@lambday	Hieronymous: that's what we use for our CPU backend
@lambday	Hieronymous: no worries..
@lambday	maybe you can spend some time learning things about Eigen ?
@lambday	how to do these things properly
 Hieronymous	Actually I did. I installed Eigen and am playing around with the QR module.
 Hieronymous	I will do that then.
@lambday	and to know what each operation costs.. really important if you ask me
@lambday	QR can just be another method parallel to cholesky
@lambday	so you can add the new method by looking and following the same format
@lambday	should get you started smoothly :)
@lambday	Hieronymous: it's really important to have an idea about what exactly each operation does - how much additional memory it allocates etc etc.. whenever in doubt, write a small program like this shitty one - https://gist.github.com/lambday/2c67201d6e75c2aa8e10e5eb344df2b4
 Hieronymous	lambday: Thanks a ton! I will fiddle around with this.
@lambday	having an idea would help us prevent writing codes that are easy to write but shit when it comes to performance
 Hieronymous	lambday: So all the decomposition methods go into the backend specifically - >LinalgBackendEigen.h ?
@lambday	Hieronymous: for now, yes
@lambday	we will eventually add the GPU support
@lambday	but one thing at a time
@lambday	:)
 Hieronymous	lambday: I don't think I will be writing anything by hand. Eigen provides QR decomposition via a bunch of different methods.
 Hieronymous	I will have to research on them then.
 Hieronymous	I have gotten to know from the chat logs etc that you're the go to guy for linalg.
 Hieronymous	Hence these many questions.
@lambday	Hieronymous: yeah.. the suggestion was not only about QR in particular.. but about using any library methods
@lambday	Hieronymous: well, I am not the guy anymore :) but I'll try to help as much as I can
 Hieronymous	I will definitely research a bit. Although I would leave it in good faith that the guys who built Eigen, did their thorough research
 Hieronymous	And cut out some work for noobs like me.
@lambday	Hieronymous: if you really want to work on linalg, you should definitely have a chat with Pan (OXPHOS)
@lambday	collaborate
 Hieronymous	Yeah, Can't seem to catch her. I am more or less here the entire day. Except when I'm sleeping, of course.
@lambday	it was her project this summer.. she knows it better than I do :)
 Hieronymous	lambday: Thanks! Will do.
@lambday	Hieronymous: you can tag @OXPHOS on github if you have questions on linalg
@lambday	since GSoC is over, people (including me) are not online that often :(
 Hieronymous	I will do that on #2526 then. :)
@lambday	Hieronymous: cool! sounds like a plan!
@wiking	oh mqn
 Hieronymous	I understand work can eat a lot of time. I actually did my GSoC while I was interning at a diff place
@lambday	Hieronymous: and thanks for your interest on this.. linalg is an exciting endeavour
@wiking	we need to fix our 3.3.0 eigen integration Eigen 3.3 released!
@lambday	Hieronymous: yeha I know
@lambday	wiking: yo! how you doin' ? :D
@wiking	jetlag
@lambday	why I am not surprised
 lisitsyn	HO
@lambday	wiking: what's the fix required for that?
@wiking	mmm
@lambday	lisitsyn: yo!!!
@wiking	locode hax
 lisitsyn	hea
@wiking	*code hacks
@wiking	but yeah i'll have to see now
@wiking	as it has been released not long ago
@lambday	wiking: let me know if I can help with that
@wiking	and wondering which are the fixes they managed to get in
@lambday	wiking: BTW what happened with our Windows build?
@wiking	as there were some crazy bugs in 3.3 beta releases with iterators
@wiking	lambday, need to fix crossval
@lambday	lisitsyn: how have you been? I've been absent for a long time
@wiking	that's the major failing test that is failing
 lisitsyn	lambday: me too
 lisitsyn	:D
@lambday	wiking: that uses Eige!
@wiking	yeah it's not about 3.3
@wiking	as we bundle there the library
@wiking	i mean eigen
@lambday	so it always downloads the latest version?
@lambday	and it breaks the shit out
@lambday	:/
@wiking	noup
@wiking	when we bundle
@wiking	it's totally fixed
@wiking	which is the version being bundled
@wiking	3.2.whatever
@wiking	crossval is broken
@lambday	lisitsyn: :D I am back to the same fucking job :(
@lambday	wiking: oh!
 lisitsyn	lambday: how come?
@lambday	lisitsyn: well, for now.. deciding about applying for PhD
@lambday	since this job gives me enough personal time, so, good for now
@lambday	:D
@lambday	wiking: is there any unit test that I can try to reproduce this error?
@lambday	anything you noted?
@wiking	yeah
@wiking	the crossval unit test
@lambday	okay
@wiking	but the error only comes out on windo
@lambday	I'll have a look then
@wiking	ws
@lambday	argh!
@wiking	an as well
@wiking	ardkernel is broken on osx
@wiking	and you did some changes
@wiking	in gaussian kernels
@wiking	that totally fucked up the kernel normalizers
@wiking	:)
@wiking	so rather fix that part
@wiking	i think Heiko has opened an issue for that bug
@lambday	wiking: I see.. yeah I made the distance precomputable
@lambday	couldn't check on OSX
@wiking	yep and it does not comply with
@wiking	normalizers
@wiking	the normallizer thing
@wiking	is reproducable anywhere
@lambday	wiking: shall I look at our buildbots then?
@lambday	okay
@wiking	just check for the issue
@wiking	it'll explain what's the problem
@lambday	wiking: cool.. let me check
@wiking	https://github.com/shogun-toolbox/shogun/issues/3504
@lambday	https://github.com/shogun-toolbox/shogun/issues/3504
@lambday	haha
@lambday	wait let me read
@lambday	I am assigning it to myself
@lambday	will send a fix
@wiking	k
@wiking	thnx
@sukey	Issue #3504 "fix kernel normalisers for GaussianKernel" assigned to: lambday by lambday - https://github.com/shogun-toolbox/shogun/issues/3504
@lambday	wiking: when are we planning for 5.1?
@lambday	any dates?
@wiking	sooner the better
@wiking	but i think due to some serious bugs
@wiking	blocking us for osx release
@wiking	we are gonna have 5.0.1
@wiking	as soon as we have those fixes
@wiking	if everything goes ok that could be already during this weekend
@lambday	tell me about our versioning convention again.. x.0.1 is a bugfix release?
@lambday	x.1 is a major release?
@wiking	it's not our convension
@wiking	<major>.<minor>.<patch>
@wiking	http://semver.org/
@lambday	so bugfix is just a patch
@wiking	yep
@wiking	but this patch
@wiking	that you need to do
-!- travis-ci [~travis-ci@ec2-54-162-82-185.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's lambday's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/176453657
-!- travis-ci [~travis-ci@ec2-54-162-82-185.compute-1.amazonaws.com] has left #shogun []
@wiking	might need to be under major
@wiking	because the api should change
@wiking	as you should remove using friend
@wiking	i mean of course
@wiking	depends how you are planning to fix this whole story
@lambday	gotit
@lambday	wiking: I guess when we merge my bigtest feature branch, it should also go under a major release.. cause the API changed
@lambday	but we'll discuss that later
@wiking	yeah i mean around jan
@wiking	we'll have 6.0
@wiking	but first we wanna have a bugfix release
@wiking	5.1
@wiking	lambday, add to the milestone https://github.com/shogun-toolbox/shogun/milestone/11
@lambday	wiking: cool
@wiking	and here's the long list of bugs needs to be closed for 5.1
@wiking	https://github.com/shogun-toolbox/shogun/milestone/10
@lambday	crap I really have been off for a long time :(
@lambday	looks like the issues I was talking about are already added to the milestone
@lambday	wiking: did we make c++11 mandatory for 5 release already?
@wiking	noup
@wiking	that's 6.0
@lambday	should go on Jan release then
@lambday	yeah
* lambday going off
-!- lambday [6a331336@gateway/web/freenode/ip.106.51.19.54] has quit []
-!- Hieronymous [~sudarshan@122.169.172.64] has quit [Quit: Leaving]
-!- shogun-buildbot [~shogun-bu@7nn.de] has quit [Quit: buildmaster reconfigured: bot disconnecting]
-!- shogun-buildbot [~shogun-bu@7nn.de] has joined #shogun
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	HeikoS, new waldeck is good
@HeikoS	wiking: cool will check
@wiking	https://play.spotify.com/album/0YxXmh88Sl26u5plhL2cxC?play=true&utm_source=open.spotify.com&utm_medium=open
@HeikoS	wiking: hahaha :D
@wiking	HeikoS, here?
@HeikoS	yeah
@wiking	HeikoS, so they just relesed
@wiking	couple of days ago 3.3.0
@wiking	eigne
@wiking	eigen
@wiking	:)))
@HeikoS	ay
@wiking	so yeah
@wiking	now fixing all that shit
@HeikoS	with that thing in the changelog?
@wiking	:D
@wiking	but the iterator thing
@wiking	is fixed
@wiking	thnx god
@wiking	:)
@HeikoS	cool
@HeikoS	and the operator mess?
@wiking	i think is well
@HeikoS	cool
@wiking	but now i have to fix osx
@HeikoS	great
@wiking	so i will tell you once that's done
@HeikoS	I want to write a bit of dev docs
@wiking	because basically i have the eigen 3.3.0 locally
@HeikoS	I spend too much time epxlaining to the kids
@wiking	so i'm doing both at the same time
@wiking	yeah i see that
@wiking	:D
@wiking	let them write it
@wiking	FAQ
@HeikoS	no
@wiking	:)
@HeikoS	takes too much time
@HeikoS	proof reading and feedbacking it
@wiking	kk
@HeikoS	I will do very minimal
@HeikoS	since I agree with lisitsyn that docs are controversial as they outdate fast
@HeikoS	and wrong docs is even worse than no docs ;)
@HeikoS	but yeah will put some time into that
 lisitsyn	TRUE THAT
@wiking	:>
 lisitsyn	wiking: you know what?
 lisitsyn	I know you're python fan
@wiking	:>>>>>>>>>>>>>>>>>>>>>>>>
 lisitsyn	so well
@wiking	fuck YOU
@wiking	:D
@wiking	and fuck alllllllllllllll this z generation
@wiking	where this is the norm
@wiking	https://lh3.googleusercontent.com/-7UdlpIo6Qy8/WBrIGUShGcI/AAAAAAAB4iA/4FBjKS-UV9A0O3YuWBqYktnB4TBUCErnwCJoC/w639-h471/2016-11-02.gif
@wiking	lisitsyn, ^
@HeikoS	haha
@HeikoS	epic
@HeikoS	wiking: btw today i played a  bit with tensorflow
@wiking	yeah this is like the perfect picture of the state of the art
@HeikoS	it is so much nicer than theano
@HeikoS	yet very very slow if you just write down what you think it should be
@HeikoS	I might start a little mini lib for phd
@HeikoS	and then learn more about it that way
@HeikoS	so we can copy andor use good bits
 lisitsyn	wiking: soo
 lisitsyn	the thing is
 lisitsyn	a few weeks ago I wrote a mail here at my job
 lisitsyn	like lets start writing java
 lisitsyn	:D
@wiking	:DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
 lisitsyn	it was for team of ~20
 lisitsyn	and we actually started
 lisitsyn	and now I am constantly having fun
 lisitsyn	wiking: for example a few guys were making a mock
 lisitsyn	because they feel anxious about their code
 lisitsyn	failing in the night
 lisitsyn	because of typo
 lisitsyn	how fucking come we get there?
 lisitsyn	is it any sane :D
@wiking	yeah man
@wiking	that is fucking insane
@wiking	spelling error
@wiking	and maybe it's just in the catch part of the try block
@wiking	so it only gets there when there's the exception
 lisitsyn	yeah
 lisitsyn	except NameError
@wiking	and then suddenly like booom
 lisitsyn	ok ok it wokrs
 lisitsyn	:D
@wiking	no such variable
@wiking	:D
@wiking	because you actually did a spelling mistake or refactor mistake
@wiking	and did not change the variable part
@wiking	in the except part of the thing
@wiking	and then you are like
@wiking	WTF is this place?
@wiking	:D
@wiking	as a friend told me one day
@wiking	"i'm too old to learn dynamic languages"
@wiking	:)
 lisitsyn	so I am actually moving from
 lisitsyn	like getting used to python
@wiking	yeh me too
@wiking	i loved it
@wiking	like 3 years ago
 lisitsyn	to having fun of python people
@wiking	i was like this is great
@wiking	:)
@wiking	but now i'm like
@wiking	are you fucking serious:)
--- Log closed Thu Nov 17 00:00:01 2016
