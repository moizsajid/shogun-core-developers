--- Log opened Mon Feb 06 00:00:13 2017
@sukey	Pull Request #3608 "Clean up KNN"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3608
@sukey	Pull Request #3584 "LinalgRefactor - Apply"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3584
-!- mikeling [uid89706@gateway/web/irccloud.com/x-kznnvwkxtejgctvi] has joined #shogun
-!- praisethemoon [~praisethe@197.3.11.178] has joined #shogun
-!- praisethemoon [~praisethe@197.3.11.178] has quit [Ping timeout: 248 seconds]
-!- praisethemoon [~praisethe@197.3.11.178] has joined #shogun
-!- praisethemoon [~praisethe@197.3.11.178] has quit [Changing host]
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has joined #shogun
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has quit [Ping timeout: 245 seconds]
@wiking	lisitsyn, pppppppppuuuung
 lisitsyn	wiking: peng
@wiking	ok
@wiking	org.shogun-toolbox.* or ml.shogun.*
@wiking	as java pkgs?
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has quit [Ping timeout: 248 seconds]
 CaBa	wiking: heya
 CaBa	oh
 CaBa	HeikoS: hey, you happen to be around?
@HeikoS	CaBa: hi yes
 CaBa	HeikoS: remember when we were talking the other day about kernel functions that depend not only on something that cannot be plugged into a CFeature class, but for example index structures and things to speed up the computation of K(x_1, x_2)? And you said one solution would be to precalc the kernel matrix and use CCustomKernel but that that would not support e.g. normalizers?
@HeikoS	yes
@HeikoS	i remember
@wiking	CaBa, yes
@wiking	hi
@HeikoS	wiking:  my plan for today: write GSoc projects
@HeikoS	wiking: you got some bullet points on that?
@HeikoS	same projects as last year more or less? ;)
 CaBa	HeikoS: i know this is dirty, but would this work: use CDenseFeatures<size_t>, 1-dimensional, the size_t value actually being an index for a feature vector... then derive from CKernel, override ::compute(), which then performs lookups according to the size_t feature in the "real" kernel matrix and returns the value. that would be a fully functional kernel, wouldnt it? one that supports subsetting and therefor
 CaBa	e x-val, normalization during x-val, MKL, etc? no restrictions?
@HeikoS	yes that would work
@HeikoS	but it is a hack
@HeikoS	as your kernel would only work with this very specialized features
@HeikoS	generally, if you implement subsetting on kernel and features, then you can do anything you like and it will work
@HeikoS	"anything you like" as in override methods in a weird way
 CaBa	HeikoS: well the features wouldn't be visible to the user - just like in CCustomKernel. The kernel would just take a precomputed matrix in it's constructor.
@HeikoS	sure
 CaBa	HeikoS: it would be kind of a hacky replacement for CCustomKernel that supports normalization
@HeikoS	what I mean is that you have the inheritance diagram, and there two leafs (i.e. specialized classes) depend on one another
@HeikoS	which is against OOP paradigma
@HeikoS	but yeah
@HeikoS	I see your need for hacks ;)
@HeikoS	would be a cool thing to do as part of a GSoC project on x-validation and modelselection
 CaBa	my need for hacks? ^^
@HeikoS	you seem to have this complicated kernel
@HeikoS	btw did you ever think about just not normalising the x-validation kernel matrices?
@HeikoS	i.e. just normalise your precomputed kernel matrix?
 CaBa	sure, but it's a different thing
@HeikoS	or is it really crucial?
 CaBa	i don't know if it's relevant
@HeikoS	I could also btw imagine some on-the-fly normalisation that works with custom kernels
@wiking	HeikoS, ah man
@wiking	i have to remember all those good ideas
@wiking	we have in the parking lot
@wiking	:D
@HeikoS	wiking: yes that is what I am asking :)
@HeikoS	wiking: I have a few things
@HeikoS	but before I tell them, I wanted to ask to get more coverage
@wiking	HeikoS, btw we need to rename our java package... it's either org.shogun-toolbox.* or ml.shogun.*
@wiking	as we do not own org.shogun
@wiking	i mean shogun.org
@HeikoS	uh, nice
 CaBa	btw - do you know whether per-kernel sqrt-diag normalization is sufficient in MKL to get interpretable subkernel weights? or if other means of normalization are necessary?
@wiking	HeikoS, so we need to make a decision here...
@HeikoS	CaBa: for xvalidation, you dont need interpretable weights or do you?
@HeikoS	wiking: ml.shogun
@wiking	ok
@HeikoS	CaBa: or just with the final model
@wiking	i'll register
@wiking	lisitsyn, ^
@HeikoS	wiking: cool!
@HeikoS	CaBa: because if you just tune parameters using xvalidation, then maybe it is not that important
 CaBa	HeikoS: that's what i'm wondering - will i just get different betas if i normalize afterwards but the subkernel parameters remain optimal?
@HeikoS	CaBa: probably it is worth a try
@HeikoS	but I dont know much about MKL
@HeikoS	and sonney2k who is the only one who knows, is busy with life
 CaBa	HeikoS: life is a cool thing to be busy with ;)
@HeikoS	CaBa: so just to get you right
@HeikoS	CaBa: you want
@HeikoS	to use
@HeikoS	custom kernel + mkl + cross-validation + kernel normaliser
@HeikoS	maybe we can just make this an entrance task
@HeikoS	we got some students incoming for GSoC
@HeikoS	and this might be a nice non-trivial thing to work out
 CaBa	that sounds about right
@HeikoS	so what we need here is that the kernel normalisation works with the subsetting and the mkl, all on the fly
 CaBa	well... they hacky replacement for CCustomKernel I had in mind is a 30 min job I guess. But I'm sure you had something clean in mind :D
@HeikoS	yes sure, I mean for your purposes, the 30min hack might be ok
@HeikoS	but It is good for us to get such things done properly, in case somebody else also wants to use this kind of thing
 CaBa	The only ting CCustomKernel lacks in that respect might be the normalization. Last time we spoke you said x-val and mkl might just work.
 CaBa	But I didn't check that I must admit
 lisitsyn	wiking: ml.shogun if we don't lost it again
 lisitsyn	:)
@wiking	lisitsyn, i've bought it for 5 years :)
 lisitsyn	org.shogun-toolbox is impossible
 lisitsyn	would be
 lisitsyn	org.shogun_toolbox
 lisitsyn	superfuckingugly
@wiking	yes
 CaBa	SG_REF checks for nullptr, right?
@HeikoS	yes
@HeikoS	but best read the def
 CaBa	what's that deprecated info in the wiki? is there a replacement?
@HeikoS	?
@HeikoS	ah
@HeikoS	no :)
 CaBa	^^
@sukey	Pull Request #3608 "Clean up KNN"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3608
 mikeling	hi, i got a bunch of undocument warning and failed to build python modular https://pastebin.mozilla.org/8974089
-!- praisethemoon [~praisethe@197.3.11.178] has joined #shogun
 mikeling	wiking: ping
@wiking	pong
 mikeling	wiking: after I pull docker image, how could I use python interface?
 mikeling	on the image i mean
@wiking	 - docker run -t -d -P -e "JAVA_HOME=/usr/lib/jvm/java-8-oracle" -e "CC=$CC" -e "CXX=$CXX" --name devenv -v $PWD:/opt/shogun shogun/shogun-dev /bin/sh -c "mkdir /opt/shogun/build;bash"
@wiking	 - docker exec -t devenv /bin/sh -c "cd /opt/shogun/build; cmake -DCMAKE_INSTALL_PREFIX=$HOME/shogun-build -DENABLE_TESTING=ON $CMAKE_OPTIONS .."
@wiking	where CMAKE_OPTIONS="-DPythonModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
 mikeling	and pip install shogun-ml doesn't work, it looks like there is no package named  shogun-ml?
@wiking	pip install?
@wiking	why do you want pip install when you try a local development
 mikeling	i just see that on document and want to have a try
@wiking	ah forget it
@wiking	it needs further fixing
@wiking	hopefully 5.1.0 will have it
 mikeling	ok ;)
 mikeling	wiking: It says "CMake Error: The source directory "/opt/shogun" does not appear to contain CMakeLists.txt. Specify --help for usage, or press the help button on the CMake GUI."
@wiking	ok
@wiking	look i'll write this the one time
@wiking	docker run -t -i -v <the path to your checked out source>:/opt/shogun shogun/shogun-dev /bin/bash
@wiking	(now you are in docker)
@wiking	cd /opt/shogun
@wiking	mkdir build
@wiking	cd build
@wiking	cmake .... (all the stuff above)
@wiking	make
@HeikoS	mikeling: is there anything that is not documented?
 mikeling	HeikoS: yep, part of warning is in https://pastebin.mozilla.org/8974116
@HeikoS	I mean as in documented installation process on our website
@HeikoS	these are just warnings
 mikeling	HeikoS: oh, the pip install shogun-ml doesn't work
 mikeling	it seems like shogun package is missing
@HeikoS	mikeling: I think I dont understands what you are actually doing there. these were just 3 very unrelated things (docker, pip install, cmake)
 mikeling	HeikoS: because I would like to install the python interface of shogun, after I failed to build it from source code locally, I switch to the pip install but it looks like missing shogun-ml package for it
 mikeling	and now, I want to use docker to solver my problem
 mikeling	BTW, the error message is /bin/sh: line 1: 13156 Segmentation fault: 11  /usr/local/bin/doxygen modshogun.doxy when I build python interface locally
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 240 seconds]
 mikeling	And here is the Cmake I used " cmake -DPYTHON_INCLUDE_DIR=/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Headers  -DPYTHON_LIBRARY=/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/libpython2.7.dylib  -DPythonModular=ON ../"
@wiking	mikeling, ?
@wiking	wtf
@wiking	i told you how you can do it with the dokcer
@wiking	but you can do the same way on your osx
@wiking	cmake -DPythonModular=ON  ..
@wiking	make
@wiking	either way works
 mikeling	wiking: yeah, I can do the same thing on osx, but it doesn't work for me, at least it failed on locally without docker
@wiking	what's the failure?
@wiking	btw without your patches
@wiking	or with your patches?
 mikeling	without my pr
 mikeling	s /bin/sh: line 1: 13156 Segmentation fault: 11  /usr/local/bin/doxygen modshogun.doxy
 mikeling	without the "s", sorry
@wiking	brew info doxygen
 mikeling	doxygen: stable 1.8.13 (bottled), HEAD
@wiking	git git rev-parse HEAD
@wiking	?
@wiking	but in worst case you can disable doxygen and do it without that
 mikeling	you mean git rev-parse HEAD?
@wiking	yes
 mikeling	it's 9673755bdb345b3c10fe447425394e4813f06dd8
@wiking	mmm i've just ran on my osx
@wiking	and i dont get segfault
 mikeling	and here is my cmake output https://pastebin.mozilla.org/8974123
@wiking	-- Found NumPy: version "1.12.0" /usr/local/Cellar/matplotlib/2.0.0/libexec/lib/python2.7/site-packages/numpy/core/include?
@wiking	this doesn't look too good
 mikeling	hmmm, so you think it may case a segfault?
@wiking	noup
@wiking	bu ti dont understand
@wiking	why the numpy is part of matplotlib
@wiking	pip list|grep numpy
@wiking	?
 mikeling	it return numpy (1.12.0)
@wiking	pip show numpy
@wiking	?
 mikeling	do you think docker can help me solve that segfault?
@wiking	with docker you would get exactly the same thing
@wiking	what happens on travis
@wiking	as it's the same env
 mikeling	https://www.irccloud.com/pastebin/keyKp2ID/
@wiking	yeah i have no idea why it is landing in Location: /usr/local/Cellar/matplotlib/2.0.0/libexec/lib/python2.7/site-packages
@wiking	but ok...
 mikeling	so I just working around this segfault for whole day and no idea why it happened and how to fix it
@wiking	brew uninstall doxygen
@wiking	and try it w/o that
 mikeling	ok, let me have a try
 mikeling	wiking: Oh my mine, it works.......
 mikeling	after remove doxygen
 mikeling	thank you very much
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-ukivykjvzmoynhgd] has joined #shogun
@sukey	New branch feature/OutOfSource created on shogun-toolbox/shogun
@sukey	New Commit "Remove all none out of source patterns in build" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/922e3ab6494917b5767a1d6bb4e5740854c4216e
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has joined #shogun
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- travis-ci [~travis-ci@ec2-54-162-62-3.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/198887697
-!- travis-ci [~travis-ci@ec2-54-162-62-3.compute-1.amazonaws.com] has left #shogun []
-!- praisethemoon [~praisethe@197.3.11.178] has quit [Ping timeout: 248 seconds]
-!- mikeling [uid89706@gateway/web/irccloud.com/x-kznnvwkxtejgctvi] has quit [Quit: Connection closed for inactivity]
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 252 seconds]
--- Log closed Tue Feb 07 00:00:14 2017
