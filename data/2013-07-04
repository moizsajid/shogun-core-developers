--- Log opened Thu Jul 04 00:00:16 2013
@sonney2k	van51, might be that you dont' even need to write a copy constructor - the default copy constructor will just do a shallow copy anyway
@sonney2k	van51, ok I am off to bed now cool that you've found the issue so quickly
@sonney2k	cu
 van51	sonney2k: I wouldn't call it quickly :P
 van51	cya
@sonney2k	gsomix, I will look at your hopefully to be merged PR tomorrow morning!
 gsomix	sonney2k, yeah
 gsomix	sonney2k, I have fallen in problems with new interface, so now I try do it in easier way. :(
 gsomix	sonney2k, nite
-!- lambday [67157f4c@gateway/web/freenode/ip.103.21.127.76] has quit []
-!- zxtx [~zv@rrcs-74-62-200-195.west.biz.rr.com] has quit [Ping timeout: 245 seconds]
-!- zxtx [~zv@rrcs-76-79-81-162.west.biz.rr.com] has joined #shogun
-!- hushell [~hushell@8-92.ptpg.oregonstate.edu] has joined #shogun
 van51	sonney2k: I went with a clone approach after all.. hope you're not mad :p
 van51	sonney2k: it just seems easier that way, because it maintains the easy functionality of the Tokenizers and also avoids some hassle with the fact that CTokenizer is abstract
 van51	sonney2k: ofc it's not set in stone, we can discuss it tomorrow
 van51	sonney2k: I'll make a PR
 van51	cya guys
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Quit: Leaving.]
-!- hushell [~hushell@8-92.ptpg.oregonstate.edu] has quit [Ping timeout: 246 seconds]
 shogun-buildbot	build #390 of nightly_none is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/390
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has joined #shogun
 shogun-buildbot	build #382 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/382
-!- zxtx [~zv@rrcs-76-79-81-162.west.biz.rr.com] has quit [Ping timeout: 276 seconds]
 shogun-buildbot	build #447 of nightly_default is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/447
-!- nube [~rho@49.244.83.95] has quit [Quit: Leaving.]
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Ping timeout: 260 seconds]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- gsomix [~gsomix@109.188.124.219] has quit [Ping timeout: 246 seconds]
-!- gsomix [~gsomix@109.188.124.219] has joined #shogun
-!- nube [~rho@116.90.239.3] has quit [Quit: Leaving.]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: van51 :develop * bac4e76 / / (9 files): https://github.com/shogun-toolbox/shogun/commit/bac4e7648b9cb77e02351eb46b7d0c756fbcbcc7
 shogun-notifier-	shogun: Multi-threaded dense_dot in HashedDocDotFeatures
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * d14f7c8 / / (9 files): https://github.com/shogun-toolbox/shogun/commit/d14f7c828077129ce0ec623ff86ff76ed92aaa3e
 shogun-notifier-	shogun: Merge pull request #1207 from van51/feature/hashing
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Made HashedDocDotFeatures thread-safe (reentrant)
 shogun-buildbot	build #1183 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1183  blamelist: Soeren Sonnenburg <sonne@debian.org>
 gsomix	sonney2k, sonne|work around?
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8724003
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has left #shogun []
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has joined #shogun
 shogun-buildbot	build #1184 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1184  blamelist: van51 <vangelis_51@hotmail.com>
 gsomix	sonney2k, sonne|work I'm unhappy: there are some bugs in my code that uses Tokenizer. need little time to fix.
 sonne|work	gsomix: hey good morning
 gsomix	btw with Tokenizer reading empty string is not possible
 gsomix	is this necessary?
 sonne|work	gsomix: then we need to support it
-!- iglesiasg [~iglesias@s83-179-44-135.cust.tele2.se] has quit [Client Quit]
 sonne|work	gsomix: it may happen yes even though unlikely & stupid
 shogun-buildbot	build #1307 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1307  blamelist: Soeren Sonnenburg <sonne@debian.org>
 gsomix	sonne|work, didn't get. support what? Tokenizer of reading of empty strings?
 gsomix	*or
 sonne|work	empty strings
 gsomix	sonne|work, I don't know how. DelimiterTokenizer thinks ['\n','\n'] is one delimiter in, for example, ['a', '\n', '\n', 'b'] line
 gsomix	need to go at one-hour lecture about theoretical cs.  cu little later.
 sonne|work	gsomix: then we have to make it work with that - I can ask van51 to do that when he is back online
 shogun-buildbot	build #1308 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1308  blamelist: van51 <vangelis_51@hotmail.com>
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has left #shogun []
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
 van51	sonne|work: hey
 van51	sonne|work: I went with that approach because I had problems calling a copy constructor or doing the = thing, as it was saying that CTokenizer is abstract
 van51	sonne|work: and I figured that I would either have to take cases -depending on the subclass call the appropriate copy constr-
 sonne|work	van51: I see. If we figure out how to do it with a copy constructor later we should convert to that. Currently it is ok as is but it will confuse people.
 van51	sonne|work: ok, sure :)
 sonne|work	van51: btw gsomix just said taht DelimiterTokenizer thinks ['\n','\n'] is one delimiter in, for example, ['a', '\n', '\n', 'b'] line
 sonne|work	van51: so you cannot have empty lines - which we should support too
 van51	sonne|work: it was in the description that skips consecutive delimiters
 van51	sonne|work:  but I can change that
-!- nube1 [~rho@116.90.239.3] has joined #shogun
-!- nube [~rho@116.90.239.3] has quit [Read error: Connection reset by peer]
 sonne|work	yeah please don't skip
 van51	sonne|work: btw, how much should I expect a run on the webspam dataset to take?
 sonne|work	van51: think about you have a .csv file and empty entries
 van51	sonne|work: I used it on 5k examples last night
 sonne|work	van51: depends on a lot of factors, n-gram size, C, epsilon
 van51	sonne|work: and it took well over two hours
 sonne|work	van51: yeah these documents are long so using the converter here would be much faster
 sonne|work	van51: btw enable progress output then you will at least see sth
 van51	sonne|work: ok
 van51	sonne|work: I g2g for now
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has joined #shogun
 van51	sonne|work: I'll make the changes in the tokenizer when I get back
 sonne|work	van51: thanks
 van51	cya
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has left #shogun ["QUIT :Leaving."]
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has quit [Quit: WeeChat 0.3.7]
-!- iglesiasg [~iglesias@n131-p244.kthopen.kth.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- iglesiasg [~iglesias@n131-p244.kthopen.kth.se] has quit [Client Quit]
-!- iglesiasg_ [~iglesias@n131-p244.kthopen.kth.se] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- nube1 [~rho@116.90.239.3] has quit [Ping timeout: 256 seconds]
--- Log closed Thu Jul 04 11:27:02 2013
--- Log opened Thu Jul 04 11:27:11 2013
-!- shogun-t1olbox [~shogun@7nn.de] has joined #shogun
-!- Irssi: #shogun: Total of 16 nicks [1 ops, 0 halfops, 0 voices, 15 normal]
-!- Irssi: Join to #shogun was synced in 9 secs
-!- Netsplit *.net <-> *.split quits: wiking, shogun-toolbox
-!- HeikoS [~heiko@nat-178-25.internal.eduroam.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- nube [~rho@116.90.239.3] has joined #shogun
 sonne|work	gsomix: did you read the logs?
 sonne|work	wiking_: poing?
-!- lambday [67157c4d@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.124.77] has joined #shogun
 lambday	HeikoS: hi
@HeikoS	hi
 lambday	HeikoS: I am in the lab but I can talk a bit
@HeikoS	lambday: ok, :)
 lambday	HeikoS: it was necessary to remove C
@HeikoS	first question: why remove the C?
 lambday	wait let me show you
 lambday	and also regarding the IO/base param thing
 lambday	I made a small c++ code that shows it fails
 lambday	I'll paste it
 lambday	HeikoS: https://github.com/lambday/shogun/blob/feature/log_determinant/src/shogun/base/class_list.cpp.templ#L40
 lambday	here it searches for the classes
 lambday	the class_list, however, contains class names without the C
 lambday	so if I use C, it can't find anything and fails
 lambday	returns NULL
@HeikoS	lambday: why do the others work?
@HeikoS	lambday: I mean, why are only your classes failing?
 lambday	HeikoS: I am not sure
 lambday	:(
 lambday	but others too shouldn't... cause the class name doesn't contain C, if get_name returns the classname with C, it should fail
 lambday	class_name in class list I mean
@HeikoS	get_name never returns C
@HeikoS	I tried clone for some, it works
 lambday	that's what I made the mistake
 lambday	I didn't change the class name but just changed get_name returns
@HeikoS	explain
 lambday	what get_name return*
 lambday	umm..
@HeikoS	so get_name should always return the class name without the "C"
 lambday	CDenseMatrixOperator::get_name() const
 lambday	{
 lambday	....return "DenseMatrixOperator";
 lambday	}
 lambday	yes
@HeikoS	but every subclass of CSGObject should have a C prefix in the class name
 sonne|work	gsomix: read the logs?
 sonne|work	gsomix: van51 will take care of the multiple delimiter case
@HeikoS	sonne|work: maybe you can help out here?
@HeikoS	lambday: could you explain again the issue to sonne|work?
 sonne|work	HeikoS: hey! whats up?
 lambday	how the class_list is populated? reading the directories
 lambday	??
 sonne|work	it takes all classes with C prefix
 lambday	okay
 sonne|work	that are not Abstract
 sonne|work	as in it tries to detect virtual foo() = 0;
 lambday	but when I see class_list.cpp, if strips the C from the name
 lambday	:(
 sonne|work	yes but?
 lambday	that's why it fails
 lambday	:(
@HeikoS	lambday: explain the issue from the beginning, what the problem is
 lambday	alright
 sonne|work	sry going for lunch now.
 lambday	sonne|work: alright...
 sonne|work	explain it in the meantime I will read the logs
 lambday	okay :)
 lambday	so, CSGObject::clone() calls new_sgserializable.... takes class name and ptype as params... now, in that, it searches for class_list and tries to find the name that matches with it...
 lambday	since class_list strips "C", so it can't find it and returns NULL
 lambday	HeikoS: am I being able to explain it? :(
@HeikoS	lambday: I suggest the following: write a small program which calls clone on a different class, i.e. GaussianKernel (I know that this one works) and debug it to see what happens and why it works for that
 lambday	HeikoS: alright..
@HeikoS	lambday: should be just 5 lines or so
 lisitsyn	lambday: yes you need to have get_name returning name w/o C
 lambday	lisitsyn: yes that's what I figured
 lambday	but then why GaussianKernel works
 lambday	HeikoS: I'll check it soon... and regarding that c++ thing I was talking about.. please have a look at this - https://gist.github.com/lambday/5926529#file-inherit_prob-cpp-L48
 lambday	it explains the scenario that we have..
 lambday	if you uncomment that line, it doesn't compile
 lisitsyn	lambday: what is wrong with GaussianKernel?
 lambday	lisitsyn: its working right, that's wrong :D
 lambday	lisitsyn: wait I'm checking
 lambday	HeikoS: https://github.com/lambday/shogun/blob/feature/log_determinant/src/shogun/kernel/GaussianKernel.h#L102
 lambday	it returns without C
 lambday	lisitsyn: nothing is wrong apparently
@HeikoS	lambday, lisitsyn I am confused :D
 lambday	HeikoS: me too :-/
@HeikoS	are there any problems? if yes what are they? :)
 lambday	HeikoS: there are not... get_name should return the class name w/o "C" prefix
 lambday	otherwise it won't work
 lambday	GaussianKernel does that, so it works
@HeikoS	lambday: yep, but every class does that
@HeikoS	this is how it should be done
@HeikoS	wiking_: and this is why we need the clone unit tests! ;)
 lambday	HeikoS: I made a mistake and added "C" in its get_name, that was the mistake :(
 lambday	now I changed it
 gsomix	sonne|work, yeah, it's cool.
@HeikoS	lambday: I see
 lambday	in the PR
@HeikoS	lambday: but you also made some classes without the C
@HeikoS	-    return "CDenseExactLogJob";+    return "DenseExactLogJob";
@HeikoS	and others
@HeikoS	and if you do that, you do not have m_parameters anymore
 lambday	its the get_name only, right?
@HeikoS	yes
 lambday	I changed all the get_names where I used "C" prefix
@HeikoS	later on there will be more confusion
@HeikoS	when we add the modular interfaces
@HeikoS	lambday: in facts in my fault not spotting the C :)
@HeikoS	I will merge the PR now right?
@HeikoS	lambday:  ah wait
@HeikoS	do we really need this additional list in the clasS_list.py?
@HeikoS	I dont like that
 lambday	HeikoS: but all classes are supposed to return class names without "C", now I changed it for all... would it cause problem for modular interfaces?
 lambday	HeikoS: yes :(
 lambday	HeikoS: because..
@HeikoS	lambday: no modular interfaces are different
@HeikoS	lambday: also this here cannot be done:
@HeikoS	 CSGObject::m_parameters->add(&m_operator, "dense_matrix",
@HeikoS	ah wait
@HeikoS	thats the c++ issue right?
 lambday	HeikoS: yep
@HeikoS	so no problems with base class not there
 lambday	HeikoS: the gist I pasted
@HeikoS	it will still add the parmeters to the base class?
@HeikoS	we should think about that
@HeikoS	maybe our c++ guru has an idea
 lambday	:D
@HeikoS	lisitsyn: could you check this gist by lambday?
 lambday	lisitsyn: https://gist.github.com/lambday/5926529#file-inherit_prob-cpp-L48
 lambday	HeikoS: and about that class_list thing, yes its ugly but I couldn't find other ways :(
 lambday	and its required, since we need new_sgserializable to work for PT_COMPLEX64 too...
 lambday	earlier, it just returned NULL... (that I added cause std::complex doesn't overload all the operators that other ptypes can handle, therefore make fails)
 lambday	now that we need complex to work for these template classes, I don't want them to return NULL but rather create an object
 lambday	(lol I am confused how to explain it properly :( )
 lambday	so, for these particular classes, I create obj and for the rest return NULL...
 lambday	so, new_sgserializable works properly
 lambday	HeikoS: this is something that me and lisitsyn discussed last night..
 lambday	:-/
@HeikoS	lambday: but cant we change something else?
@HeikoS	I seems annoying to add all complex classes to this list in a secret python file
 lisitsyn	re
@HeikoS	ah guru
 lambday	HeikoS: I think there should be better way to handle that.. our script should be able to handle that
 lambday	oh no
 lambday	no it can't :-/
@HeikoS	lisitsyn: do you have any ideas how to solve this?
 lambday	we can't see if the any method of that classes uses +=, -= etc..
 lisitsyn	I am a bit lost
 lambday	(those are the main culprits why complex fails)
 lisitsyn	HeikoS: solve what?
@HeikoS	man I really hope nobody reads this discussion, no-one will ever again develop for shogun ;)
 lambday	HeikoS: :(
@HeikoS	lambday: could you elaborate again (you can do that better than me)
 lambday	HeikoS: :( :( okay I am trying again
 lisitsyn	just in a few words as I am bad in switching contexts :D
 lisitsyn	I see some gist
 lisitsyn	what's up with gist?
 lambday	lisitsyn: so its the class_list.cpp.py thing that we talked about last night
 lisitsyn	lambday: ok what's up with it?
 lambday	lisitsyn: I added a list of classes that we need new complex object in its _new_xxxx
 lisitsyn	yes
 lambday	but adding those classes manually to the script is ugly
 lambday	is there any alternative that's pretty :(
 lisitsyn	well you'd have to mark them some way
 lambday	point to note is that, complex fails only for +=, -=, /=, */
 lambday	if our script can handle that, then we can automate it
 lisitsyn	no I wouldn't go for that
 lambday	that's even uglier isn't it :(
 lisitsyn	lambday: you can add a dummy typedef here
 lisitsyn	and search for it
 lambday	lisitsyn: like?
 lisitsyn	typedef bool SupportsComplex;
 lisitsyn	inside class
 lambday	inside the clas?
 lambday	oh
 lisitsyn	yes
 lisitsyn	either way you can add a static field
 lisitsyn	static bool SupportsComplex;
 lisitsyn	like that
 lambday	then, how about CGSObject has that, and initializes to false by default, and its subclasses that support sets it to true
 lambday	CSG*
 lisitsyn	you don't need inheritance here
 lisitsyn	you don't call methods you just need to have some mark
 lambday	okay...
 lambday	and in the script?
 lambday	I just check if that name is there??
 lambday	that line
 lisitsyn	yes I think so
 lambday	ummm....
 lisitsyn	lambday: just add 'typedef bool supports_complex_tag;' inside your classes
 lisitsyn	and search for it
 lambday	okay then...
@HeikoS	guru has spoken :)
@HeikoS	thanks a lot, lisitsyn!
 lisitsyn	haha HeikoS
@HeikoS	sounds like this might work
 lambday	:D
 lisitsyn	lambday: other way you can do that with macroses
 lisitsyn	like IGNORE_IN_CLASSLIST
 lambday	yes...
 lambday	macro in this sense is better
 lisitsyn	but I like C++y things
 lisitsyn	:)
 lambday	#ifdef types
 lisitsyn	why?
 lisitsyn	it is less safe
 lambday	lisitsyn: umm.. why less safe?
 lisitsyn	macroses are defined in the whole compilation unit scope
 lisitsyn	so clashes may get it funny
 lambday	aha!
 lisitsyn	it is unlikely to get a clash with some internal typedef or internal structure definition
 lambday	lisitsyn: yes..
 lisitsyn	lambday: furthermore one can use it later in C++
 lisitsyn	through SFINAE for example
 lisitsyn	to check if class supports complex
 lisitsyn	lunch time be back in a bit
 lambday	lisitsyn: alright
 lambday	lisitsyn: thanks a lot :D
 lambday	HeikoS: this should work :D
@HeikoS	yep sounds reasonable
 lambday	alright... I'll change
 lambday	oh about the c++ issue..
 lambday	HeikoS: lisitsyn: if you uncomment this line it gives error : https://gist.github.com/lambday/5926529#file-inherit_prob-cpp-L49
 lambday	HeikoS: brb
-!- foulwall [~user@2001:da8:215:6100:79d6:1517:f4b8:d872] has joined #shogun
-!- iglesiasg_ [~iglesias@n131-p244.kthopen.kth.se] has quit [Quit: Ex-Chat]
-!- iglesiasg_ [~iglesias@2001:6b0:1:1041:7960:5f80:523d:4778] has joined #shogun
-!- iglesiasg_ is now known as iglesiasg
-!- mode/#shogun [+o iglesiasg] by ChanServ
 lambday	back
 sonne|work	lambday: good to see everything is fine :)
 lambday	sonne|work: yes :)
 lambday	HeikoS: lisitsyn sonne|work: I'll modify the script at night
@HeikoS	lambday: okay! thanks!
 lambday	HeikoS: man thanks for pointing out the clone thing :D otherwise I would never have found this bug
@HeikoS	lambday: I did not really do anything :)
 lambday	HeikoS: you're the guru for me :)
 foulwall	Hi sonne|work, I'm rewriting the toy data uploader in django's file upload model, the code now is a little ugly, and there's not any security measure, I'll add some limit to it.
 lambday	HeikoS: lisitsyn sonne|work see you at night
@HeikoS	lambday: see you! :)
-!- lambday [67157c4d@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.124.77] has quit [Quit: lambday]
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 264 seconds]
 sonne|work	foulwall: why do you do any data uploader?
 sonne|work	foulwall: just reading fixed data from a certain directory is all we want for demos
 foulwall	no, just hd5
 sonne|work	foulwall: not sure what you mean
 sonne|work	the idea was to just have a directory with .h5 files that one can select in the demo
 foulwall	Argh, I thought I need to implement a uploader. I got it.
 sonne|work	foulwall: no uploader at this stage no
 foulwall	ok. that's easy to roll back...
 sonne|work	foulwall: if we have time this can be done later
 foulwall	gotcha. I'll have a look at the data set list cheng suggests and make a convert.
 foulwall	:)
-!- nube [~rho@116.90.239.3] has joined #shogun
 sonne|work	foulwall: no just use this one data set that we have and make a list of files where just this one can be selected
 sonne|work	foulwall: once this basic infrastructure is there I can add reasonable files and we can extend examples
 foulwall	sonne|work: ah?  you mean shogun-data?
 sonne|work	foulwall: yeah this one .h5 data set in there
 foulwall	ok
 foulwall	sonne|work: still not quite catch you, there's only a australian.libsvm.h5 in shogun-data, is that one?
 sonne|work	yeah
-!- gsomix [~gsomix@109.188.124.219] has quit [Ping timeout: 256 seconds]
-!- foulwall [~user@2001:da8:215:6100:79d6:1517:f4b8:d872] has quit [Ping timeout: 264 seconds]
-!- foulwall` [~user@2001:da8:215:6100:2cc4:6e07:d549:4753] has joined #shogun
 foulwall`	oh, http://foulwall.com:8000/svr/entrance , I have did a simple
 foulwall`	            importer about one month ago, the data set seem not appropriate
 foulwall`	            for svr, I'll add a directory to store h5s and do some simple
 foulwall`	            refractoring.
-!- foulwall` [~user@2001:da8:215:6100:2cc4:6e07:d549:4753] has quit [Remote host closed the connection]
-!- iglesiasg_ [~iglesias@n131-p244.kthopen.kth.se] has joined #shogun
-!- iglesiasg_ [~iglesias@n131-p244.kthopen.kth.se] has quit [Client Quit]
-!- iglesiasg__ [~iglesias@2001:6b0:1:1041:7960:5f80:523d:4778] has joined #shogun
-!- iglesiasg [~iglesias@2001:6b0:1:1041:7960:5f80:523d:4778] has quit [Read error: Connection reset by peer]
-!- foulwall [~user@2001:da8:215:6100:6891:dc16:b54:6ea7] has joined #shogun
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 245 seconds]
-!- gsomix [~gsomix@109.188.125.165] has joined #shogun
 sonne|work	foulwall: yes it is not the best choice
 sonne|work	foulwall: but it is enough for proof of concept
-!- lambday [67157d4c@gateway/web/freenode/ip.103.21.125.76] has joined #shogun
-!- foulwall [~user@2001:da8:215:6100:6891:dc16:b54:6ea7] has quit [Ping timeout: 245 seconds]
 lambday	HeikoS: there?
-!- iglesiasg__ [~iglesias@2001:6b0:1:1041:7960:5f80:523d:4778] has quit [Quit: Ex-Chat]
-!- gsomix [~gsomix@109.188.125.165] has quit [Quit: Leaving]
-!- kevin_ [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- kevin_ is now known as pickle27_home
-!- pickle27_home [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Ping timeout: 246 seconds]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- pickle27_home [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
@HeikoS	lambday:  now
@HeikoS	sorry was in a meeting
 lambday	HeikoS: no problem... I am fixing the script
 lambday	HeikoS: by the way, for the unit-test for accuracy as per Hale's paper
 lambday	we have to do that for the operator function
 lambday	using trace samples we won't get that accuracy
 lambday	so,
 lambday	I should use const vectors for testing the accuracy, right
 lambday	?
@HeikoS	lambday: good point
@HeikoS	lambday: yes constant vectors, just extract the trace
@HeikoS	i.e. use all basis vectors
@HeikoS	once
 lambday	yes that's what I thought of :)
@HeikoS	lambday: good :)
@HeikoS	votjakovr: how is the logit going?
 votjakovr	HeikoS: hi, sorry, didn't send a PR yesterday (find some bugs) :(
-!- nube [~rho@49.244.93.13] has joined #shogun
@HeikoS	votjakovr: dont worry, just asking what the state is
@HeikoS	bugs are happening where?
 votjakovr	HeikoS: in evaluating of predictive mean and variance
 votjakovr	HeikoS: i do that not correctly
@HeikoS	votjakovr: ok, let me know if you have problems
 votjakovr	HeikoS: i mean i *did* that not correctly
@HeikoS	votjakovr: so its working now?
 votjakovr	HeikoS: nope, i'm fixing
 pickle27_home	lisitsyn: Im walking to the lab now so I'll be talking from my reg irc name in about 15 mins if you want to discuss my latest PR
-!- pickle27_home [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
@HeikoS	votjakovr: ok, keep me updated on those things, its good for me to know what you are currently doing ...
-!- foulwall [~user@2001:da8:215:c252:880e:eabd:c036:2b7] has joined #shogun
 votjakovr	HeikoS: btw since we have p(y*=1|x*) and apply_binary(x*) method returns y=-1 or 1 for each feature x*, so i did that this method returns y*=1 if p(y*=1|x*)>=0.5, and y*=-1 otherwise for each feature x*. Is it good?
@HeikoS	votjakovr: that is good
@HeikoS	but it is also possible to get the probability scores right?
@HeikoS	they should be stored in the results somewhere also
 votjakovr	HeikoS: sure, we can get predictive mean and predictive variance
 votjakovr	HeikoS: like in regression
@HeikoS	votjakovr: ok good then
@HeikoS	votjakovr: oh but does it work in the same way as the svm predictions?
@HeikoS	because that would be good
@HeikoS	svm's apply returns binary labels, which store the scores internally also
 votjakovr	HeikoS: for example: if we want to get scores, we call something like gpc.get_mean_vector(features); if we want to get labels, we call gpc.apply_binary(features)
@HeikoS	votjakovr: I know, that is good, however, if you call svm->apply() you get binary labels, which internally also store the scores of the SVM, the GPC should do the same
 votjakovr	HeikoS: and will get_mean_vector() return that scores?
@HeikoS	votjakovr: yes
 votjakovr	HeikoS: Ok :)
 van51	sonney2k, sonne|work: made a PR for the delimiter
-!- FSCV [~FSCV@50.7.50.60] has joined #shogun
 pickle27	lisitsyn: any comments on the latest JADiag PR?
 lisitsyn	pickle27: sorry got overloaded here
 lisitsyn	pickle27: I have seen you made a unit-test
 votjakovr	HeikoS: i've just sent a PR with log(normal_cdf(x)) function
 pickle27	lisitsyn: no worries, whenever you get a chance!
 pickle27	lisitsyn: looks like the unit test isn't totally perfect, it generates random data and its only working half the time
 votjakovr	HeikoS: i'm trying not to send big patches
 pickle27	lisitsyn: it should use a chi square dist but there wasn't an easy way to do so, so I stuck with reg gaussian which might be why
@HeikoS	votjakovr: cool Ill have a look
@HeikoS	votjakovr: thanks for the typo fixes :) they were my fault
 pickle27	lisitsyn: slash that travis fail is the only time I've seen it not work but I've only ran it a dozen or so times
@HeikoS	votjakovr: I have put two minor comments
@HeikoS	votjakovr: will merge anyway, please add them in the next PR :)
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Roman Votyakov :develop * 2d8d5a2 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/2d8d5a26f80cb930747227a8f4f427377e9e43c0
 shogun-notifier-	shogun: add log(normal_cdf(x)) function
 shogun-notifier-	shogun: Heiko Strathmann :develop * 7f3ea0a / / (3 files): https://github.com/shogun-toolbox/shogun/commit/7f3ea0a4cf3ccab5dda3b3919db7093c86df14c1
 shogun-notifier-	shogun: Merge pull request #1210 from votjakovr/feature/gp_binary_classification
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: add log(normal_cdf(x)) function
 votjakovr	HeikoS: Ok, i'll fix documentation
-!- foulwall [~user@2001:da8:215:c252:880e:eabd:c036:2b7] has quit [Ping timeout: 264 seconds]
 votjakovr	HeikoS: btw i think that we should have something for approximation of integral of one variable or use external library for that
@HeikoS	votjakovr: I agree
@HeikoS	very good point, this should be in statistics
@HeikoS	votjakovr: could you do that?
 lisitsyn	more code for the code god
@HeikoS	lisitsyn: all hail the code god :D
@HeikoS	votjakovr: maybe have a look around if you can find things for that, like alglib or so
 shogun-buildbot	build #1185 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1185  blamelist: Roman Votyakov <votjakovr@gmail.com>
@HeikoS	I would not use external libraries but rather copy/paste it, as it will be a very short fragment
@HeikoS	obviously depends
 votjakovr	HeikoS: ok, i'll try to find something :)
 shogun-buildbot	build #1186 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1186  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 shogun-buildbot	build #1309 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1309  blamelist: Roman Votyakov <votjakovr@gmail.com>
-!- iglesiasg [~iglesias@2001:6b0:1:1041:39c0:6b00:3982:6d7e] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8739743
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has left #shogun []
 lambday	HeikoS: I updated the PR
 lambday	please have a look.. I'll be back after dinner
 shogun-buildbot	build #1310 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1310  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
 lambday	HeikoS: back
@HeikoS	lambday: hi!
@HeikoS	lambday: looking at the pr
 lambday	HeikoS: let me know if the script looks okay
 lambday	:-/
@HeikoS	lambday:  looks good!
-!- iglesiasg [~iglesias@2001:6b0:1:1041:39c0:6b00:3982:6d7e] has quit [Quit: Ex-Chat]
 lambday	:)
@HeikoS	lambday: one last question: why is this necessary for complex and not for the others?
@HeikoS	sorry if I ask over an dover again, busy day, keep forgetting things ;)
 lambday	there are few more template classes that uses operators that std::complex doesn't support
@HeikoS	class operators?
@HeikoS	can you give an example?
 lambday	HeikoS: hehe don't worry about that :D I'll give you a tough competition about forgetting :D
 lambday	HeikoS: wait
 lambday	when I added it normally, many classes raised errors
@HeikoS	what operators are that?
 lambday	I gotta check.. I'm checking
 lambday	http://www.cplusplus.com/reference/complex/complex/operators/
 lambday	these are what complex supports
@HeikoS	but what do we need and from where is it needed?
 lambday	HeikoS: yes checking that
 shogun-notifier-	shogun: lambday :develop * 503af31 / / (41 files): https://github.com/shogun-toolbox/shogun/commit/503af31b774042554f60ffab962f57e5484728f1
 shogun-notifier-	shogun: bugfixes in log-det framework
 shogun-notifier-	shogun: Heiko Strathmann :develop * 218429e / / (41 files): https://github.com/shogun-toolbox/shogun/commit/218429e32aeb161b192ecae148c5e8656b530c55
 shogun-notifier-	shogun: Merge pull request #1208 from lambday/feature/log_determinant
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: bugfixes in log-det framework
@HeikoS	lambday: merging for now so that we can continue, if sonney2k is fine with those changes, we can leave it as it is
@HeikoS	lambday: what about those accuracy issues you talked about, are they gone now since memory errors are gone?
@HeikoS	votjakovr: how are things with the integration and the logit bugs?
 lambday	HeikoS: accuracy now shows the behavior as the paper says
@HeikoS	lambday: whooooo! :)
 lambday	increases with number of shifts and then becomes const
 lambday	I mean
@HeikoS	very very good, this is a major step then
 lambday	I gotta do more checks but so far it seems
 lambday	yes :)
@HeikoS	yes pls do intensive unit tests for that
 lambday	I'll add that unit-test (using base vectors) tonight only
@HeikoS	since we will rely on it
 lambday	will reveal many things
@HeikoS	good stuff
 lambday	yes yes! :D
@HeikoS	so next steps?
@HeikoS	cg methods? :)
@HeikoS	should be pretty interesting those
 lambday	cocg
 lambday	oh and sparse matrix op
 lambday	cocg_m should work for both
@HeikoS	oh yes
@HeikoS	ok
@HeikoS	I will go home soon
 lambday	HeikoS: okay :)
@HeikoS	lambday: checking back tomorrow :)
 lambday	HeikoS: see you :) good night :)
 lambday	HeikoS: I'll list the problem that I was facing with complex.. I need some time to figure out exactly what is causing that
 lambday	comment in the PR itself may be
@HeikoS	lambday: yeah ok, maybe sonney2k has some ideas, he wrote most of this stuff
 lambday	hmm
 votjakovr	HeikoS: i'm working on it (reading alglib)... i think will be ready tomorrow
@HeikoS	votjakovr: does alglib have things?
@HeikoS	if not you could also steal the gpml or gp_stuff code
 votjakovr	HeikoS: yep, but too hard to read it
@HeikoS	votjakovr: yeah alglib is horror
@HeikoS	votjakovr: I tool most functions in CStatistics from it
@HeikoS	votjakovr:  http://www.alglib.net/integration/gausskronrodquadratures.php
@HeikoS	it has gauss kronrod
@HeikoS	votjakovr: copying this stuff is a bit annoying:
@HeikoS	votjakovr: all ==, <, <=, etc  have to be replaces
@HeikoS	and the std math function calls
 votjakovr	HeikoS: yep, i'm already looking at gauss-kronrod implementation
 votjakovr	HeikoS: Ok
@HeikoS	votjakovr: have a look at the functions in CStatistics on how to do this
@HeikoS	votjakovr: ok then, good luck, let me know how it goes, will go home now, see you tomorrow!
 votjakovr	HeikoS: good night, see you ;)
-!- lisitsyn [~lisitsyn@46.20.65.245] has joined #shogun
 lisitsyn	pickle27: alright I'm back
 lisitsyn	lets see your pr
 pickle27	lisitsyn: sweet!
 lambday	HeikoS: found something! still here?
@HeikoS	lambday: yes half :)
 lambday	+= with complex and unsigned int
 lambday	for example
 shogun-buildbot	build #1187 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1187  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 lambday	CDenseFeatures.cpp
 lisitsyn	lambday: what's up?
 lambday	line 513
 shogun-notifier-	shogun: Kevin :develop * ffb662e / src/shogun/mathematics/ajd/ (2 files): https://github.com/shogun-toolbox/shogun/commit/ffb662eb4d8572b73e6ccd64aa3d2066db27f6dd
 shogun-notifier-	shogun: added base class for AJD and an example of a derived class header
 shogun-notifier-	shogun: Kevin :develop * 3c3592a / src/shogun/mathematics/ajd/ (3 files): https://github.com/shogun-toolbox/shogun/commit/3c3592ae10b782195e5f8983259a05285415e4b8
 shogun-notifier-	shogun: added JADiag.cpp and made some of the other suggested edits
 lambday	lisitsyn: it worked
 shogun-notifier-	shogun: Kevin :develop * 37cb7ba / src/shogun/mathematics/ajd/JADiag.cpp,src/shogun/mathematics/ajd/JADiag.h: https://github.com/shogun-toolbox/shogun/commit/37cb7ba3a8e423605ea3549163626e6458b6fd55
 shogun-notifier-	shogun: fixed some minor mistakes so that it builds
 shogun-notifier-	shogun: Kevin :develop * f0abf7e / src/shogun/mathematics/ajd/ (3 files): https://github.com/shogun-toolbox/shogun/commit/f0abf7e4a4e803d8d2d05e45f48eae9fe6ed28c4
 shogun-notifier-	shogun: swithed to cmath for machine eps and changed includes format
 shogun-notifier-	shogun: Kevin :develop * 8fb01ac / src/shogun/mathematics/ajd/ (3 files): https://github.com/shogun-toolbox/shogun/commit/8fb01accbf51ec1dcf10195b875494ce28a4e81d
 shogun-notifier-	shogun: changed pointer V0 to use an emtpy SGMatrix
 shogun-notifier-	shogun: Kevin :develop * cfb101a / / (4 files): https://github.com/shogun-toolbox/shogun/commit/cfb101a6811d805871350230bb66ee1106866c4b
 shogun-notifier-	shogun: added a unit test for JADiag and ifdefs for eigen3
 shogun-notifier-	shogun: Sergey Lisitsyn :develop * 2664590 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/26645905424e53272b20196fd623d66bcc076db3
 shogun-notifier-	shogun: Merge pull request #1205 from pickle27/develop
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: added base class for AJD and an example of a derived class header
-!- gsomix [~gsomix@109.188.126.210] has joined #shogun
 lisitsyn	pickle27: lets move on then ;)
 pickle27	lisitsyn: sweet!
 gsomix	van51, thanks for PR
 gsomix	good evening
 pickle27	lisitsyn: build bot might freak out for the next bit because I didn't have a chance to rebase before the merge
 lisitsyn	pickle27: oops
 lisitsyn	pickle27: let it be
 pickle27	lisitsyn: all righty
 van51	gsomix: np :)
 pickle27	lisitsyn: I've got a quick meeting with my supervisor, Im submitting my thesis tomorrow! then I'll be back
 lisitsyn	pickle27: sure take your time
 pickle27	lisitsyn: should have a PR for FFDiag pretty soon
@HeikoS	lambday:
@HeikoS	but that should be working not?
 lambday	https://gist.github.com/lambday/5929600
@HeikoS	these operators can be defined
@HeikoS	and then the error is gone without this complex busyness in class_list?
 shogun-buildbot	build #1188 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1188  blamelist: lambday <heavensdevil6909@gmail.com>
@HeikoS	lambday: or am I wrong?
-!- travis-ci [~travis-ci@ec2-54-224-215-138.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8742778
-!- travis-ci [~travis-ci@ec2-54-224-215-138.compute-1.amazonaws.com] has left #shogun []
 lambday	HeikoS: I didn't get you :(
@HeikoS	uint8 a=1; complex64_t b=(2,1); a+b should return complex64_t(3,1)
 lambday	yes
 lambday	but there is const
@HeikoS	lambday: so why not define these operators?
 lisitsyn	oh please not define such operators
 lambday	:-s
@HeikoS	lisitsyn: reasons?
@HeikoS	haha :D
@HeikoS	I am just asking and trying to understand whats going on
 lambday	we won't be needing that anyway :-s
 lambday	yes :D
 lisitsyn	HeikoS: everything that could be casted to uint8 and complex64_t here
 lisitsyn	will use it
@HeikoS	lisitsyn: so?
 lisitsyn	HeikoS: it may shoot ya leg ;)
@HeikoS	ok then
@HeikoS	already merged the class_list solution
 lisitsyn	struct p { p(int i) { ... } }
 lisitsyn	p operator+(const p& a, const p& b) { ... }
 lisitsyn	2 + 3
 lisitsyn	guess what may be called
 lisitsyn	:D
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Quit: Leaving.]
@HeikoS	lisitsyn: yep, good that I asked you ;)
 lisitsyn	HeikoS: not in case of 2 + 3
 lisitsyn	but in case of
 lisitsyn	int a = 2;
 lisitsyn	int b = 3;
 lisitsyn	IIRC it could really be called
 lisitsyn	because your overloaded thing has some priority indeed
 lisitsyn	and types are cast'able
 lisitsyn	so why not?
 lisitsyn	:D
* lambday faints
 lisitsyn	HeikoS: that's why such operators should be member functions
 lisitsyn	they are of much more limited scope
@HeikoS	I see, thanks! :)
 lisitsyn	HeikoS: but we can't extend complex64_t
 shogun-buildbot	build #1311 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1311  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
 lisitsyn	HeikoS: and it slows down compilation (may be) :)
@HeikoS	lisitsyn: you convinced me
 lisitsyn	HeikoS: hehe I am just thinking loudly
 shogun-buildbot	build #1176 of deb2 - static_interfaces is complete: Failure [failed compile libshogun]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/1176  blamelist: Kevin <kevinhughes27@gmail.com>
@HeikoS	ok guys, really going now :)
 lambday	HeikoS: see you :)
 lambday	I too am sleepy.. :(
@HeikoS	lambday: sleeping is important! :)
@HeikoS	bye!
 lambday	bye :)
-!- HeikoS [~heiko@nat-178-25.internal.eduroam.ucl.ac.uk] has quit [Quit: Leaving.]
 shogun-buildbot	build #1189 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1189  blamelist: Kevin <kevinhughes27@gmail.com>
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Sergey Lisitsyn's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8743155
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has left #shogun []
-!- lisitsyn [~lisitsyn@46.20.65.245] has left #shogun []
 shogun-buildbot	build #1190 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1190  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot	build #1313 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1313  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>, Kevin <kevinhughes27@gmail.com>
 shogun-buildbot	build #1312 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1312  blamelist: lambday <heavensdevil6909@gmail.com>
 shogun-buildbot	build #1177 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/1177
 shogun-notifier-	shogun: van51 :develop * 98dbd98 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/98dbd9853e72432b7ed5cf482170e981d71e0adb
 shogun-notifier-	shogun: Changed CDelimiterTokenizer behavior on consecutive delimiters
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * ded6e97 / / (3 files): https://github.com/shogun-toolbox/shogun/commit/ded6e973a11d4cb7b7e023cc80c90f6efc65810b
 shogun-notifier-	shogun: Merge pull request #1209 from van51/feature/hashing
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Changed CDelimiterTokenizer behavior on consecutive delimiters
@sonney2k	evening gents
@sonney2k	gsomix, all good?
@sonney2k	wiking_, around?
 shogun-buildbot	build #1178 of deb2 - static_interfaces is complete: Failure [failed test octave_static]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/1178  blamelist: Soeren Sonnenburg <sonne@debian.org>
 lambday	sonney2k: there?
 shogun-buildbot	build #1191 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1191  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	lambday, hey!
 lambday	sonney2k: hi :)
@sonney2k	lambday, I have to leave train soon
@sonney2k	wassup?
@sonney2k	lambday, no time to sleep?
 lambday	sonney2k: okay... could you please have a look at my last PR and check if the changes I made with class_list.cpp.py are okay
 lambday	sonney2k: yes apparently :(
 lambday	15-16 hours working daily :(
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 0ac043b / src/shogun/lib/external/libocas.cpp: https://github.com/shogun-toolbox/shogun/commit/0ac043b75386152ffca7e7ad985a86c1a6c9d905
 shogun-notifier-	shogun: don't use reserverd keyword _C
@sonney2k	lambday, checking
@sonney2k	lambday, don't kill yourself
 lambday	*sigh*
 lambday	my insti :'(
@sonney2k	lambday, where is your PR?
 lambday	its merged already
@sonney2k	lambday, very good!
 lambday	sonney2k: for complex, we needed to handle it separately
@sonney2k	lambday, shall I check nevertheless?
@sonney2k	lambday, what is wrong with complex
 lambday	so, I modified class_list
 lambday	sonney2k: few template classes use operators that complex doesn't support
@sonney2k	lambday, as in sgvector/matrix etc?
 lambday	so can't create new object for them for complex, I kept them as null.. and those that works, I added a typedef bool supports_compelx64_t,
 lambday	sonney2k: no, like DenseFeatures etc
@sonney2k	lambday, it is not possible to have densefeatures of complex?
@sonney2k	hmmhh
@sonney2k	that is pretty stupid then
@sonney2k	I think we have to find some solution for that to work at least long term wise
 lambday	sonney2k: what would be a better way to handle it?
@sonney2k	lambday, no idea I don't yet know what the problem is
@sonney2k	I guess dotfeatures?
 lambday	sonney2k: okay, if you're leaving then we can discuss it tomorrow in more detail may be?
@sonney2k	sitting outside already
@sonney2k	getting eaten by mosquitos alive
 lambday	errr...
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8744995
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has left #shogun []
 lambday	the problem is with a few operators.. complex doesn't overload them all, that other ptypes support
 lambday	so, either we have to add support for them like I did for SGMatrix etc... or leave it as it is
 lambday	cause currently if I try to create new CDenseFeature<complex64_t>, compiler complains
@sonney2k	lambday, IMHO it is rather a waste to not support the complex type in the C*Features
@sonney2k	even as sole data containers it makes sense
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@sonney2k	e.g. octave or so support complex data types too so
@sonney2k	lambday, but not urgent
 shogun-buildbot	build #1192 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1192  blamelist: van51 <vangelis_51@hotmail.com>
 lambday	sonney2k: so, I should add these supports later you're saying?
 lambday	and then we can get rid of this thing in class_list
@sonney2k	lambday, yeah - or SG_NOTIMPLEMENTED even
 lambday	yes at least it should compile
@sonney2k	lambday, maybe file a bug report so we don't forget
 lambday	alright.. I'll do it
 lambday	okay
 lambday	well, its not a bug :-/
 lambday	but yeah, I'll create an issue with it
@sonney2k	lambday, well lets call it a task then :)
 lambday	:)
 lambday	:D
@sonney2k	we should then also add typemaps to support complex i/o from python/octave/R etc
 lambday	sonney2k: yes.. that is also pending
@sonney2k	lambday, are you using any complex types that you want to pass around between languages?
 shogun-buildbot	build #1314 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1314  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	lambday, or do you need complex types just internally?
 lambday	its all internal for our project
@sonney2k	ok then it is not prime priority but some simple thing to do later
 lambday	alright :)
 shogun-buildbot	build #1179 of deb2 - static_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb2%20-%20static_interfaces/builds/1179
 gsomix	sonney2k, dunno. working.
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 7062837 / src/interfaces/modular/modshogun_ignores.i: https://github.com/shogun-toolbox/shogun/commit/7062837ed457c6765530e430620b2615549d0dfe
 shogun-notifier-	shogun: ignore evaluate_means to fix csharp compile error
@sonney2k	gsomix, ok I hope you are close to have this working with the delimitertokenizer? It would be great if we could move on tomorrow.
@sonney2k	alright out of battery
@sonney2k	brb
 shogun-buildbot	build #1315 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1315  blamelist: van51 <vangelis_51@hotmail.com>
 lambday	good night people
-!- lambday [67157d4c@gateway/web/freenode/ip.103.21.125.76] has quit []
@sonney2k	gsomix, re
 shogun-buildbot	build #1193 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1193  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8745367
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has left #shogun []
 gsomix	sonney2k, I'm close.
 shogun-buildbot	build #1194 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1194  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1316 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1316  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun ["Fallen asleep!"]
@sonney2k	gsomix, ok I am still wrestling with travis
* sonney2k wins
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * e726a47 / src/interfaces/modular/modshogun_ignores.i: https://github.com/shogun-toolbox/shogun/commit/e726a470fe9a9592fc6a8d6f1a74934027efcb32
 shogun-notifier-	shogun: blacklist also evaluate_variance
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * bceddcf / applications/ocr/data/ocr.svm.gz: https://github.com/shogun-toolbox/shogun/commit/bceddcf2fa3173b3cb5a2b3a1724d165e39413cb
 shogun-notifier-	shogun: update ocr example for new serializtion
 shogun-buildbot	build #1317 of deb3 - modular_interfaces is complete: Failure [failed compile csharp_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1317  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-54-224-215-138.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8745766
-!- travis-ci [~travis-ci@ec2-54-224-215-138.compute-1.amazonaws.com] has left #shogun []
 shogun-buildbot	build #1195 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1195  blamelist: Soeren Sonnenburg <sonne@debian.org>
@sonney2k	wiking_, I need the address for the videofeed otherwise I cannot announce it
 shogun-buildbot	build #1196 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1196  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8746955
-!- travis-ci [~travis-ci@ec2-184-73-0-135.compute-1.amazonaws.com] has left #shogun []
--- Log closed Fri Jul 05 00:00:18 2013
