--- Log opened Sat Aug 18 00:00:17 2012
-!- zxtx [~zv@c-76-121-51-43.hsd1.wa.comcast.net] has joined #shogun
 CIA-21	shogun: Sergey Lisitsyn master * r38642f1 / (3 files in 3 dirs): Fixed a few issues with feature blocked logit regression - http://git.io/As1TYg
-!- blackburn [~blackburn@62.106.106.114] has quit [Quit: Leaving.]
 shogun-buildbot_	build #385 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/385  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot_	build #58 of nightly_none is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_none/builds/58
 shogun-buildbot_	build #68 of nightly_default is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/68
 shogun-buildbot_	build #54 of nightly_all is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_all/builds/54
-!- emrecelikten [~emre@trir-5d800125.pool.mediaWays.net] has quit [Ping timeout: 244 seconds]
-!- emrecelikten [~emre@trir-5d800450.pool.mediaWays.net] has joined #shogun
 shogun-buildbot_	build #69 of nightly_default is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/69
-!- zxtx [~zv@c-76-121-51-43.hsd1.wa.comcast.net] has quit [Ping timeout: 246 seconds]
-!- zxtx [~zv@c-76-121-51-43.hsd1.wa.comcast.net] has joined #shogun
-!- gsomix [~gsomix@178.45.70.165] has joined #shogun
 gsomix	hi
-!- heiko [~heiko@host86-185-9-87.range86-185.btcentralplus.com] has joined #shogun
-!- heiko [~heiko@host86-185-9-87.range86-185.btcentralplus.com] has quit [Remote host closed the connection]
 CIA-21	shogun: Heiko Strathmann master * rcf6beaf / src/shogun/evaluation/CrossValidationMKLStorage.cpp : fixed memory bug when cross-validation was performed twice with different number of runs - http://git.io/fX837w
 CIA-21	shogun: Heiko Strathmann master * r8e8fff9 / examples/undocumented/libshogun/evaluation_cross_validation_mkl_weight_storage.cpp : added example for case that was failing before - http://git.io/fYRM5g
 CIA-21	shogun: Heiko Strathmann master * r7cfee21 / (2 files in 2 dirs): Merge pull request #738 from karlnapf/master - http://git.io/u4zt9Q
-!- heiko [~heiko@host86-185-9-87.range86-185.btcentralplus.com] has joined #shogun
-!- sr___ [u5548@gateway/web/irccloud.com/x-abthilurbjnvpfrb] has quit [Remote host closed the connection]
 shogun-buildbot_	build #386 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/386  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- heiko [~heiko@host86-185-9-87.range86-185.btcentralplus.com] has left #shogun []
-!- blackburn [~blackburn@62.106.106.114] has joined #shogun
 shogun-buildbot_	build #387 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/387  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- sr___ [u5548@gateway/web/irccloud.com/x-fgcntzhdfnowhati] has joined #shogun
-!- zxtx [~zv@c-76-121-51-43.hsd1.wa.comcast.net] has quit [Ping timeout: 246 seconds]
-!- yoo [575b08cb@gateway/web/freenode/ip.87.91.8.203] has joined #shogun
 yoo	hi all
 yoo	I got lots of warning at compilation
 yoo	related to the use of eigen3
 yoo	which version of eigen3 do you use ?
-!- yoo [575b08cb@gateway/web/freenode/ip.87.91.8.203] has quit [Quit: Page closed]
-!- n4nd0 [53b32c87@gateway/web/freenode/ip.83.179.44.135] has joined #shogun
 n4nd0	yoo: you can turn off the warnings produced by eigen
 n4nd0	yoo: just open your .config and substitute the -I of eigen for -isystem
-!- n4nd0 [53b32c87@gateway/web/freenode/ip.83.179.44.135] has quit [Quit: Page closed]
 CIA-21	shogun: Chiyuan Zhang master * reafbb83 / examples/undocumented/python_modular/graphical/regression_lars.py : use shogun built-in evaluation. - http://git.io/xBC_Zw
 CIA-21	shogun: Sergey Lisitsyn master * r13750d9 / examples/undocumented/python_modular/graphical/regression_lars.py : Merge pull request #739 from pluskid/multiclass - http://git.io/kE7_sQ
 shogun-buildbot_	build #388 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/388  blamelist: Chiyuan Zhang <pluskid@gmail.com>
 shogun-buildbot_	build #389 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/389  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- blackburn [~blackburn@62.106.106.114] has quit [Quit: Leaving.]
-!- blackburn [~blackburn@62.106.106.114] has joined #shogun
-!- zxtx [~zv@c-76-121-51-43.hsd1.wa.comcast.net] has joined #shogun
-!- zxtx [~zv@c-76-121-51-43.hsd1.wa.comcast.net] has quit [Ping timeout: 240 seconds]
 CIA-21	shogun: Sergey Lisitsyn master * r37d4ed6 / src/shogun/lib/slep/slep_solver.cpp : Removed redundant positive and negative weighting in slep solver - http://git.io/ZYGyKw
 CIA-21	shogun: Sergey Lisitsyn master * r63f32c9 / (2 files): Added tree regularized multiclass logistic regression - http://git.io/ssRU-Q
 shogun-buildbot_	build #380 of deb1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb1%20-%20libshogun/builds/380  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
 shogun-buildbot_	build #390 of deb3 - modular_interfaces is complete: Failure [failed compile java_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/390  blamelist: Sergey Lisitsyn <lisitsyn.s.o@gmail.com>
-!- gsomix [~gsomix@178.45.70.165] has quit [Ping timeout: 246 seconds]
-!- gsomix [~gsomix@178.45.39.145] has joined #shogun
@sonney2k	hey gsomix
 gsomix	sonney2k, hey
@sonney2k	what are you working on?
 gsomix	protocols for custom kernel
 gsomix	sonney2k, btw, I need to fix  typemap
 gsomix	'in' typemap for SGVector
@sonney2k	gsomix, wrt what?
@sonney2k	what's wrong?
 blackburn	does anybody remember by heart if dynamic object array should be ->reserve() before setting?
@sonney2k	???
@sonney2k	reserve?
 blackburn	yeah or sth like tha
 blackburn	ahhhh we have a check in set_machine
@sonney2k	it grows autmagically
 blackburn	yeah but it doesn't work like set(0) set(1)
 blackburn	but push back should be used
 gsomix	sonney2k, for directors. it's needed, because sometimes args in methods is actually SGVector's not numpy.arrays.
@sonney2k	gsomix, I still don't understand - you are talking about directorin typemaps?
 gsomix	nope, about 'in'
 gsomix	hm, what about directorin?
@sonney2k	gsomix, what do you want to 'fix' in in typemaps?
 gsomix	I want to add case where the arg is SGVector.
 gsomix	at now only numpy.arrays may be processed
@sonney2k	ahh - what do you want to do when arg is SGVector? shouldn't that work already?
 gsomix	if arg is SGVector => do nothing. :)
 gsomix	because this is actually SGVector
@sonney2k	gsomix, but swig should have wrapped SGVector already - so one should be able to pass SGVectors to functions
@sonney2k	gsomix, I think what is missing is some SGVector constructor that takes an SGVector as input - such that one can create an SGVector via a numpy array
 gsomix	sonney2k, awwww, it seems that I'm stupid and there is no problem.
@sonney2k	gsomix, will you bring the director examples back?
 gsomix	yep
@sonney2k	gsomix, so except for typemaps for model selection - what is missing now?
 blackburn	sonney2k: can't we avoid typemaps for modelselection but extend class for that?
@sonney2k	blackburn, I don't understand?
@sonney2k	what do you want to extend?
 gsomix	sonney2k, protocols for custom kernel and examples.
 blackburn	sonney2k: add python native constructor with all {'C' : ...} stuff
@sonney2k	blackburn, no - that is what typemaps are for
@sonney2k	gsomix, ok then do these first maybe we can still manage to do these modsel typemaps before 2.0 - but lets see
 gsomix	ok
 blackburn	sonney2k: I think handling that in C++ is a wrong way
 blackburn	what I suggest is a faster in means of development way to do the same
@sonney2k	blackburn, please explain more...
 blackburn	sonney2k: that {} map thing you were thinking of works only for python, right?
 blackburn	{'C' : {1,2,3} } or os?
 blackburn	so?
@sonney2k	for any language that supports stuff like this...
@sonney2k	but lets say only python - so now what?
 blackburn	this can be handled in python effectively
 blackburn	so it should be python native extension, like extended constructor
 blackburn	I see no reason to get hands dirty with that kind of parsing
 blackburn	this structure can be effectively parsed in python - just creating model selection parameters and setting childs
 blackburn	any C++ version will do the same with same performance but much harder to develop, debug and maintain
@sonney2k	blackburn, except one thing: you cannot directly pass this dictionary to the modsel routines
@sonney2k	you would have to call some function to get the C++ object
 blackburn	IIRC everything this dictionary does can be done in python
 blackburn	am I wrong?
@sonney2k	blackburn, the model selection itself runs in C++ in shogun - so you need to pass this 'modsel' object to libshogun
@sonney2k	so what you can do is create this object via python code
@sonney2k	but you cannot have the mapping dictionary -> 'modsel' object
@sonney2k	that is only possible via typemaps
 blackburn	sonney2k: how should that dictionary look like?
@sonney2k	gsomix, could you please forward blackburn my email with the syntax
 blackburn	what I suggest is
 blackburn	ModelSelectionParameters({'C': [0.1,0.2,0.3],'width': [1.0,5.0]})
 blackburn	sth like that
 blackburn	this can be done in python natively
@sonney2k	sure that would work
@sonney2k	but you could avoid the modelsectionparameters
@sonney2k	if this is done as typemap
 blackburn	how?
@sonney2k	blackburn, the same way we can pass numpy arrays...
 gsomix	sonney2k, I cannot find this letter. O_o bad
 blackburn	pass to modelselection?
@sonney2k	parse the python object - going through the dictionary/lists is not that much effort
 blackburn	well it is up to you :)
@sonney2k	forwarded
 gsomix	sonney2k, thanks!
 blackburn	sonney2k: can't that be done via modelselectionparameters(the-dictionary)?
@sonney2k	blackburn, sure but it can be done w/o the modelselectionparameters(the-dictionary) - just the-dictionary
 blackburn	I like the thing I suggested because it is like 1 md while typemapping can take a while
@sonney2k	blackburn, as I said parsing dictionary / list is not so much the issue .. much more creating the object
 blackburn	ok
 blackburn	sonney2k: we have an issue with eigen3 thing - one puffin444's class header uses it
@sonney2k	blackburn, hmmh can he avoid that?
 blackburn	I asked him he will do that
 blackburn	thanks to eigen authors we can easily map our matrices to eigen matrices
@sonney2k	yeah that sounds good
 blackburn	sonney2k: do you know how can we use -isystem instead of -I?
@sonney2k	blackburn, what does this mean?
@sonney2k	-isystem???
 blackburn	I mean we use pkg-config
 blackburn	-isystem is just -I but w/o warnings
@sonney2k	blackburn, you mean the include path?
 blackburn	yes
 blackburn	we use pkg-config and it produces -I
@sonney2k	blackburn, then simple sed magic - but do we want that?
 blackburn	yeah warnings are confusing
 blackburn	no idea if they will disappear at some point
@sonney2k	blackburn, so the assumption would be - eigen3 warnings are useless and what they did is ok right?
 blackburn	yes sure, we trust it
@sonney2k	gsomix, once you are done with the stuff you have on you todo - could you please try out parsing the dicts - I mean just to get an idea how difficult this is (w/o doing anything in shogun)
 gsomix	ok
 blackburn	sonney2k: can we unify preprocessors to support sparse somehow?
@sonney2k	blackburn, I don't think so ... even substracting mean will turn a sparse solution into a non-sparse one
@sonney2k	maybe for sparsity preserving operations?
 blackburn	sonney2k: hmm
--- Log closed Sun Aug 19 00:00:17 2012
