--- Log opened Thu Nov 24 00:00:29 2016
@wiking	mmm
@wiking	osx does not have openmp
@wiking	still
@wiking	i mean the official clang in it
@wiking	and i wonder when are we ever gonna get openmp support in the official osx clang
@sukey	Pull Request #3562 "LinalgRefactor - Matrix elementwise product"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3562
@sukey	Pull Request #3563 "LinalgRefactor - Remove old linalg::range_fill and linalg::max"  opened by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3563
-!- praisethemoon [~praisethe@41.226.248.123] has joined #shogun
-!- praisethemoon [~praisethe@41.226.248.123] has quit [Changing host]
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has joined #shogun
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has quit [Quit: Leaving]
-!- praisethemoon [~praisethe@41.226.248.123] has joined #shogun
-!- praisethemoon [~praisethe@41.226.248.123] has quit [Changing host]
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has joined #shogun
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 CaBa	wiking: still nothing with xcode 8 either?
@wiking	-
@wiking	nada
@wiking	HeikoS, ping
@HeikoS	wiking: pong
@wiking	just a sec
@HeikoS	CaBa: this weekend I will check the parpameter tree!
@HeikoS	wiking: I want to have another chat with you on video soon
@HeikoS	have some ideas about how to push the stuff we discussed with gunnar
@wiking	kk
@wiking	ping me anytime
@HeikoS	ok
@HeikoS	wiking: I mean basically
@HeikoS	this idea of pushing the framework one level higher
@HeikoS	in the sense that it simply offers an environment to *easily* write scientific code
@HeikoS	and offers all the help: math, data managment, modularity, interfaces, testing, build
 CaBa	wiking: is there still any correspondence between the apple llvm / clang releases and the upstream original version numbers?
@HeikoS	and then all the algos we have are simply plugins for that
 CaBa	so confusing...
 CaBa	HeikoS: oh, great, thanks!
@HeikoS	that is cool
@HeikoS	wiking:  it would also simplify the build etc
@HeikoS	wiking: but I want to discuss how to approach this
@HeikoS	wiking: because I have the feeling that it sounds like "rewrite" ;)
 CaBa	.oO(he said the r-word. now there's postapocalyptical silence...)
@wiking	HeikoS,
@wiking	so there are couple of amazing stuff
@wiking	:)
@wiking	get_kernel_matrix in kernel
@wiking	it seems we are lucky
@HeikoS	ah
@HeikoS	man
@wiking	that it's correct in linux
@HeikoS	this thing
@wiking	everywhere else that is incorrect
@HeikoS	haha
@wiking	i'm currently writing a unit test
@HeikoS	good!
@wiking	that make sure that it's correct
@wiking	and then change the implementation to use openmp
@HeikoS	wiking: do you have a bit time now for a chat?
@HeikoS	wiking: yep that sounds good
@HeikoS	wiking: like in 5-10 mins for say 15 mins
@HeikoS	just finishing a review
@wiking	skype hangout whatspapp?
@wiking	:)
@wiking	whatsapp has voice
@wiking	so we can do that
@wiking	but yeah i'm here
@wiking	so just ping me
@HeikoS	cool
@HeikoS	video maybe
@HeikoS	ill ping in 5
@HeikoS	wiking: ok now?
@wiking	y
@wiking	just gimme a link where
@wiking	:)
@HeikoS	hangout
@HeikoS	kk
@wiking	need a hangout link
@wiking	invite me to an event
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 245 seconds]
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 256 seconds]
 CaBa	wiking: ping
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	Pull Request #3563 "LinalgRefactor - Remove old linalg::range_fill and linalg::max"  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3563
@sukey	New Commit "Merge pull request #3563 from OXPHOS/linalg_rm_rangefill_and_max
@sukey	LinalgRefactor - Remove old linalg::range_fill and linalg::max" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/a26d89b95aa61dabdcd82f6090f8392513dd74b9
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 260 seconds]
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	Pull Request #3538 "temporary workaround for #3460"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3538
@sukey	Pull Request #3538 "fix for #3460" - https://github.com/shogun-toolbox/shogun/pull/3538
@sukey	Pull Request #3538 "fix for #3460"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3538
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 268 seconds]
@sukey	Pull Request #3534 "LinalgRefactor - Cholesky - CPU only"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3534
 CaBa	wiking: HeikoS mentioned changes regarding builds on os x recently. both my development and production systems are mac os systems (i7-2620M is my desktop, Xeon-X5675 the production system)
@sukey	Pull Request #3533 "LinalgRefactor - Remove old linalg::scale"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3533
 CaBa	wiking: the latter is currently much slower (!) on my small test dataset...
 CaBa	wiking: could there be any explanation for this within shogun?
-!- praisethemoon [~praisethe@unaffiliated/praisethemoon] has quit [Ping timeout: 250 seconds]
-!- HeikoS [~heiko@89.105.104.229] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	New branch feature/kernel_exp_family_base_measure created on shogun-toolbox/shogun
@sukey	New Commit "temp commit" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/938a006259b5a520cb29b4417e0ce65e8aceeda2
 CaBa	HeikoS: ping
 CaBa	17:37:11 < CaBa> wiking: HeikoS mentioned changes regarding builds on os x recently. both my development and production systems are mac os systems (i7-2620M is my desktop, Xeon-X5675 the production system)
 CaBa	17:37:41 < CaBa> wiking: the latter is currently much slower (!) on my small test dataset...
 CaBa	17:38:52 < CaBa> wiking: could there be any explanation for this within shogun?
 CaBa	HeikoS: this does not by any change ring a bell or so? just checking.
-!- HeikoS [~heiko@89.105.104.229] has quit [Ping timeout: 265 seconds]
@wiking	CaBa, mmm
@wiking	you use gcc for build no?
 CaBa	wiking: gcc-6 for both shogun and my application in the meantime. same versions on both systems (including stdlib). i had different versions of protobuf and hdf5 installed, but bumped that in sync also in the meantime. same effect.
 CaBa	wiking: it also doesn't depend where i build shogun and my program. if i move the lib + my bin to the other system, the performance changes
 CaBa	wiking: oh i think i know what this might be related to...
@wiking	mmm
@wiking	that is weird though
@wiking	xeon is slower?
@wiking	mmm
@wiking	shooulnd't that be faster? :D
 CaBa	wiking: i figured it out...
@wiking	what was it?
 CaBa	wiking: the xeon box has 24 cores... after running it through a profiler, i figured he was mostly busy with locks
@wiking	is it us
 CaBa	wiking: too many threads
@wiking	looooooooooocks
@wiking	which locks?
 CaBa	wiking: set_num_threads(4) -> now i have the same performance as on my laptop
@wiking	ah lol
@wiking	ok
@wiking	but fuck
@wiking	CaBa, i have some fixes
@wiking	i hate that you have to compile in order to change num threads
@wiking	(in case of c++
@wiking	so i have now a new env var
@wiking	SHOGUN_NUM_THREADS
 CaBa	oh, runtime
@wiking	will push to develop as soon as i have a fix for kernel.cpp
 CaBa	neat
@wiking	mmm btw
@wiking	when yo urun
@wiking	ctest
 CaBa	wiking: training / testing never uses more than 4fold cpu power for me... not even on my actual large datasets. maybe i should be turning that down to 4 in general...
@wiking	don't you have several tests failing?
 CaBa	wiking: never run that manually. is that part of the default build target?
@wiking	nono what i mean
@wiking	if you do this
@wiking	cmake -DENABLE_TESTING ....
@wiking	and then once compiled
@wiking	run ctest -R unit
@wiking	does all the test passes for you?
@wiking	btw what are you using for the depedency libraries
@wiking	?
 CaBa	i'll check, one moment
@wiking	brew?
 CaBa	yes
@wiking	ok so your eigen is already 3.3.0
 CaBa	/usr/local/Cellar/eigen/3.3.0 (484 files, 6.4M) *
 CaBa	yep
@wiking	yeah
@wiking	ok it's not that big a deal
@wiking	PCA will fail for you
@wiking	the unit test
@wiking	but it's just the test's fault
@wiking	as it does not consider that if EV is really an eigen vector
 CaBa	-DENABLE_TESTING is not the default?
@wiking	than -1.0*ev is an eigen vector as well
@wiking	noup
@wiking	i dont think so
 CaBa	ok, so i have to rerun
@wiking	yeah sorry
@wiking	btw
 CaBa	np, 24 cores :P
@wiking	well
@wiking	ld is 1 core
@wiking	:(
@wiking	and it'll take fucking 5 minutes
@wiking	to link the unit test
@wiking	:(
@wiking	i'm currently working on a fix for it
@wiking	but unfortunately i'm not sure if i can get the gcc part working as well
@wiking	the clang part is tested
 CaBa	i'm on 18204b2, is that enough?
@wiking	lemme check
@wiking	mmm i think i dont even have that locally
@wiking	:D
 CaBa	kk ;)
 CaBa	it's just 1 commit ago i just realized
 CaBa	not much changed the last 2 days
 CaBa	[ 99%] Built target shogun-unit-test
@wiking	yeah
@wiking	that'll be 5 minute
@wiking	s:)
 CaBa	;)
 CaBa	[ 99%] Built target python_doxy2swig
 CaBa	the evil 99%... almost like a good old microsoft progress bar ;)
@wiking	:>
@wiking	heheh
@wiking	check if build/tests/unit/shogun-unit-test exists
@wiking	if it is ok
@wiking	then in a separate shell
@wiking	cd build && ctest -R unit
 CaBa	The following tests FAILED: 84 - unit-PeriodicKernelTest (Failed)
@wiking	yep yep
@wiking	you'lll have a summary on the end
 CaBa	that's kinda the end
 CaBa	99% tests passed, 1 tests failed out of 271
 CaBa	Total Test time (real) =  10.20 sec
 CaBa	you mean that?
@wiking	mmmm
@wiking	on the end
@wiking	ctest should give you the failed ones
@wiking	a list of it
 CaBa	99% tests passed, 1 tests failed out of 271
 CaBa	Total Test time (real) =  10.20 sec
 CaBa	The following tests FAILED: 84 - unit-PeriodicKernelTest (Failed)
 CaBa	Errors while running CTest
 CaBa	that are the last lines.
@wiking	lol
@wiking	can you run it one more time?
@wiking	btw you use gcc to compile right?
 CaBa	yes, still ;)
 CaBa	i re-ran already
 CaBa	same output
@wiking	same error?
@wiking	can you do this then
 CaBa	there is a more detailed log thouth
@wiking	ctest -R unit-PeriodicKernelTest -V
@wiking	and pastebin it
 CaBa	wiking: https://gitlab.unique-internet.de/snippets/10/raw
@wiking	ok
@wiking	uname -a?
@wiking	for me it's
@wiking	Darwin rdr.local 16.1.0 Darwin Kernel Version 16.1.0: Thu Oct 13 21:26:57 PDT 2016; root:xnu-3789.21.3~60/RELEASE_X86_64 x86_64
 CaBa	Darwin systembio4.charite.de 15.6.0 Darwin Kernel Version 15.6.0: Thu Sep  1 15:01:16 PDT 2016; root:xnu-3248.60.11~2/RELEASE_X86_64 x86_64
 CaBa	no sierra yet
@wiking	k
@wiking	ok i'll need your help
@wiking	as soon as i think i'm ready with the fixes
 CaBa	shoot
@wiking	which would be another
@wiking	12 hours
@wiking	or so
 CaBa	what's the matter? what's different for you>?
@wiking	for me many other tests are failing
@wiking	:)
@wiking	can you try it on your laptop?
 CaBa	laptop is on el capitan as well
 CaBa	i keep them as sync as possible config wise ;)
 CaBa	btw
 CaBa	-DCMAKE_CXX_COMPILER=/usr/local/bin/g++-6 -DCMAKE_C_COMPILER=/usr/local/bin/gcc-6  -DCMAKE_INSTALL_PREFIX=~/RESEARCH/external/shogun-release -DCMAKE_BUILD_TYPE=Release -DENABLE_TESTING=ON -DPythonModular=ON -DBUILD_DASHBOARD_REPORTS=OFF -DBUILD_META_EXAMPLES=OFF -DENABLE_COLPACK=OFF -DENABLE_PROTOBUF=OFF
 CaBa	this is my cmake config
 CaBa	just in case this disables things that you are talking about
@wiking	mmm
@wiking	ok
@wiking	i'll have to check with gcc6
@wiking	as i've never tried to compile it
@wiking	anyhow the reason we couldnt upgrade
@wiking	shogun to 5.0.0 in brew
@wiking	because of some weird shit with
@wiking	with some of tests
 CaBa	ok
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	Pull Request #3538 "fix for #3460"  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3538
@sukey	New Commit "Merge pull request #3538 from karlnapf/bugfix/R_33_modular
@sukey	fix for #3460" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/48ee7ea13a4d9510164136bc2a6963f8ec1a7c35
@sukey	Issue #3460 "Rmodular cannot be built " closed by karlnapf - https://github.com/shogun-toolbox/shogun/issues/3460
@wiking	HeikoS, ping
@wiking	man
@HeikoS	wiking: pong
@wiking	i'm just testing our PRNG
@HeikoS	which one?
@wiking	any
@wiking	:)
@HeikoS	the Random
@HeikoS	?
@HeikoS	ok
@wiking	CRadom
@wiking	and comparing it to std::
@wiking	(c++11
@HeikoS	ah yes
@wiking	dunno what to do with this shit
@wiking	because that prng is good for
@wiking	vectors
@wiking	but we never use fill array
@wiking	always
@HeikoS	ah we loop
@wiking	for (int i = 0;....
@wiking	but my biggest problem
@wiking	that lets say i remove
@wiking	the thing and start using c++111
@wiking	that is not threadsafe
@wiking	so we need to box it with a mutex
@wiking	which is even shittier
@wiking	so i'm wondering wtf with this whole random
@HeikoS	mmmh
@HeikoS	so mutexing it, is it really that bad?
@HeikoS	mmmmh
@wiking	well fuck
@wiking	i mean not that bad
@wiking	but why would we do it
@wiking	i mean i'm not so sure if we should create wrappers at all
@wiking	c++11 has a very nice interface
@wiking	for randome
@wiking	*random
@HeikoS	if it is part if the language itself
@HeikoS	I think we can use it
@HeikoS	it is just
@HeikoS	if we want to change once a cool lib comes out,
@wiking	mmm yeah
@wiking	true
@wiking	interfaces
@wiking	:)))
@HeikoS	though to be fair that is mostly for external libs
@HeikoS	not for c++ stuff
@HeikoS	I would also use the STL more heavily these days :)
@wiking	heheh yeah
@HeikoS	and get rid of DynArray
@wiking	anyhow i still wanna compare
@HeikoS	fuck
@HeikoS	yeah sure
@wiking	hahaha DynArray
@wiking	so lemme try to write a unit tests
@HeikoS	Ill write some dev docs now
@HeikoS	have a bit of time
@wiking	to std_normal_distro
@wiking	k
@HeikoS	cool
@HeikoS	I merged the R fix btw
@HeikoS	manual speaks clear langauge
@HeikoS	no R includes from external C
@HeikoS	I  mean the whole sg_print_functions.cpp business is a bit outdated anyways
@HeikoS	but no priority
@wiking	yes
@wiking	btw
@wiking	this whole shit with
@wiking	Cmath
@wiking	should go into a toilet
@wiking	especially the random part
@wiking	we should put all that to deprecated
@wiking	aaaaaaaaaand
@wiking	start adding acutally optimal implementation
@wiking	of log, exp etc
@wiking	since we have actually a wrapper for it in CMath
@HeikoS	yep
@HeikoS	make it issues
@HeikoS	and put them to a milestone
@wiking	hahahah
@sukey	New Commit "Merge pull request #3533 from OXPHOS/linalg_scale_remove
@sukey	LinalgRefactor - Remove old linalg::scale" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/71828bd8b4bb750a04d92fa42c245a3baadfdf00
@sukey	Pull Request #3533 "LinalgRefactor - Remove old linalg::scale"  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3533
@HeikoS	wiking: I am serious
@wiking	i mean nono
@wiking	i know
@wiking	but
@wiking	this is fucking scary
@wiking	look at this
@wiking	./examples/undocumented/libshogun/basic_random 1000000
@wiking	35.8699 ms
@HeikoS	ouch
@wiking	~/a.out 1000000 std
@wiking	140.559 ms
@wiking	so
@wiking	actually
@wiking	:)))
@wiking	we are not tHAT bad
@wiking	:>
@wiking	a.out - c++11
@HeikoS	do these things pass the same tests for randomness?
@wiking	what do you mean pass the same tests?
@wiking	i mean they are both std normal distrib
@wiking	do we have a test for this? or should i actually test it myself? :)
@wiking	like on a qq plot
@wiking	i mean i would presume c++11 has a true std normal distrib implemented :D
@HeikoS	c++11 will be correct
@HeikoS	but is ours?
@HeikoS	there are more sohpisticated tests than qq plot
@wiking	ok so can u just give me one
@wiking	:)
@wiking	i mean thi sis the random
@wiking	that we use like everywhere
@wiking	;))))
@wiking	jsut saying
@wiking	so if its not correct we are fucked anyways
@wiking	:)
@HeikoS	https://www.random.org/analysis/
@wiking	TEST(Random, random_std_normal_quantiles)
@wiking	we have this test
@wiking	actually implemented by u
@wiking	so that should assure that we are really generating a std normal distro
@wiking	no?
@HeikoS	no it is not enough
@wiking	:D
@HeikoS	just to do quick early alarms
@HeikoS	if something is terribly wrong
@HeikoS	but if we have code written by ourselves that generates random numbers
@wiking	yeah but ok
@HeikoS	we need to test for more subtle artifacts
@wiking	well it's not our own code
@wiking	it's DSFTM
@HeikoS	ah ok
@HeikoS	then ok
@wiking	and then on top we apply
@HeikoS	then the unit test is only for making sure the sign and scale is right
@wiking	i thnk w ehave a box muller transform implemented
@sukey	New Commit "Correct link to INTERFACES.md" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/a5449137a470fdfdbb254e79f31fb5575b0cb11f
@HeikoS	kk
@wiking	i have to check which implemntation we hae
@wiking	but basically we used the uniform distrib
@wiking	generated by DSFMT
@HeikoS	btw
@HeikoS	http://shogun.ml/cookbook/latest/index.html
@HeikoS	I need the index.html
@wiking	yes
@wiking	you needit
@wiking	:)
@HeikoS	that seems like I should change it?
@wiking	what?
@HeikoS	http://shogun.ml/cookbook/latest
@HeikoS	so that this is enough
@wiking	ah you need a redirect for that
@wiking	in the website
@HeikoS	shall I add?
@wiking	go ahead
@wiking	i mean
@wiking	honestly
@wiking	i wouldn't do a redirect
@wiking	just here
@HeikoS	ok
@HeikoS	so change links instead?
@HeikoS	to include the index.html?
@wiking	https://github.com/shogun-toolbox/shogun-web2/blob/master/shogun_web.py#L74
@wiking	here check the filename
@wiking	if it's ending on latest or current
@wiking	then need to append index.html
@wiking	else do whatever is there
@wiking	ok finally the first time i'm positively surprised about shogun in a long time
@wiking	:))))
@HeikoS	haha
@HeikoS	the rng stuff?
@wiking	yeah
@wiking	but i'm still wondering
@wiking	why dont we have like an array filler
@wiking	for random
@wiking	i'll make every random related stuff in CMath deprecated
@wiking	 [[deprecated]](C++14)
@wiking	[[deprecated("reason")]](C++14)
@wiking	:DDD
@wiking	c++14 feature
@wiking	amazing
@HeikoS	yes
@HeikoS	would be good to have a deprecated marker in shogun in fact
@HeikoS	but not sure how much that helps
@HeikoS	better fix things
@wiking	man
@wiking	you know how many palces
@wiking	we have CMath::random
@wiking	so i'lljust now put a deprecated shit
@wiking	everywhere
@wiking	and then change slowly
@wiking	mmm
@wiking	wonder where should i add the deprecated macro
@wiking	it goes into common.h
@wiking	:)
@wiking	i'm wondering whether we should depend on this https://github.com/foonathan/compatibility
@HeikoS	I am not sure about deprecated
@HeikoS	what does it help us marking these things?
@HeikoS	http://buildbot.shogun-toolbox.org/builders/shogun%20-%20website/builds/59/steps/shell/logs/stdio
@HeikoS	wiking: ^
@HeikoS	saw that guy?
@wiking	yes for the 2nd time
@wiking	ignore it
@wiking	:)
@wiking	:)
@HeikoS	kk
@HeikoS	mmh
@HeikoS	I broke the cookbooks with my redirect
@HeikoS	can you quickly press "examples" on website and tell me what causes that?
@HeikoS	http://shogun.ml/cookbook/latest/index.html
@HeikoS	vs
@HeikoS	http://shogun.ml/cookbook/latest
@HeikoS	maybe I revert and add back the index.html
@HeikoS	seems easier
@wiking	?
@wiking	didn't you test locally?
@HeikoS	I did
@wiking	the css seems to be fucked up
@wiking	btw
@wiking	http://shogun.ml/cookbook/latest/
@wiking	its 404
@wiking	and that shouldn't be
@HeikoS	yeah
@HeikoS	mmg
@HeikoS	I revert this one and leave index.html
@HeikoS	no nerves for this now
@wiking	why?
@HeikoS	locally I get http://127.0.0.1:8203/cookbook/latest
@HeikoS	so cannot test
@wiking	just fix it correctly
@wiking	    <link rel="stylesheet" href="_static/basic.css" type="text/css" />
@wiking	you have this
@wiking	it's not absolute but relative
@wiking	if you get http://shogun.ml/cookbook/latest -> http://shogun.ml/cookbook/latest/
@wiking	same for current
@wiking	and that's all
@wiking	pretty simple
@HeikoS	not sure I understand what you are saying, but thats because i actually dont know stuff about this :)
@HeikoS	so lets see
@wiking	but fuck
@wiking	 i mean
@wiking	 <link rel="stylesheet" href="_static/basic.css" type="text/css" />
@wiking	thi sshit referes
@wiking	to something that is relative path
@wiking	now if you have
@wiking	http://shogun.ml/cookbook/latest
@wiking	and then append _static/basic.css
@wiking	then you get
@wiking	http://shogun.ml/cookbook/latest_static/basic.css
@wiking	which is wrong obviously
@wiking	hence the shitty looking stuff now
@wiking	so if your url is
@wiking	.endswith('latest') or endswith('current')
@wiking	you should append a /
@wiking	to the url itself
@wiking	not to the file reading part
@wiking	but i mean
@wiking	the hillarious part is
@wiking	that this has been solved
@wiking	like 15 years ago
@wiking	in apache
@wiking	now fucking python shit fucking flask
@wiking	needed of course
@wiking	to reinvent the fucking wheel
@wiking	and here we are
@wiking	2016
@wiking	you have to deal with correct fucking URLs
@wiking	i wouldn't actually do a redirect
@wiking	for /examples
@wiking	because it's fucking stupid
@wiking	just add a new route on top of
@wiking	cookbook
@HeikoS	no idea
@HeikoS	I reverted the commit for now, easier to separate out what fucked up this way
@wiking	ok
@wiking	but then dont change things in future? :)
@HeikoS	I want it different
@HeikoS	but I have like one hour now that I wanted to write some docs
@HeikoS	and not deal with http links ;)
@wiking	yeah but fuck
@wiking	then why do you do it
@wiking	?
@HeikoS	wrong decision
--- Log closed Fri Nov 25 00:00:30 2016
