--- Log opened Sat Jul 12 00:00:11 2014
-!- jiaolong [9e6d1f01@gateway/web/freenode/ip.158.109.31.1] has quit []
-!- rajul [~rajul@182.68.152.170] has quit [Ping timeout: 256 seconds]
-!- khalednasr [~k.nasr92@41.69.228.210] has quit [Quit: Leaving]
-!- HeikoS [~heiko@dab-hlw1-h-1-2.dab.02.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	heya
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: abinashpanda :develop * 2318579 / doc/ipython-notebooks/structure/multilabel_structured_prediction.ipynb: https://github.com/shogun-toolbox/shogun/commit/2318579d304cecb4921f3bec4213554f199d7b37
 shogun-notifier-	shogun: Modified multilabel_structured_prediction.ipynb according to the shogun template
 shogun-notifier-	shogun: Heiko Strathmann :develop * 15d5dac / doc/ipython-notebooks/structure/multilabel_structured_prediction.ipynb: https://github.com/shogun-toolbox/shogun/commit/15d5dacf085c181bf59b3ff2ee5c5d40a92c33d5
 shogun-notifier-	shogun: Merge pull request #2378 from abinashpanda/notebook
 shogun-notifier-	shogun:
 shogun-notifier-	shogun: Modified multilabel_structured_prediction.ipynb
 shogun-buildbot	build #3086 of deb1 - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb1%20-%20libshogun/builds/3086
 shogun-buildbot	build #2423 of bsd1 - libshogun is complete: Failure [failed compile test]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/2423  blamelist: abinashpanda <abinash.panda.ece10@itbhu.ac.in>
 shogun-buildbot	build #2424 of bsd1 - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/bsd1%20-%20libshogun/builds/2424  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>
-!- HeikoS [~heiko@dab-hlw1-h-1-2.dab.02.net] has quit [Ping timeout: 240 seconds]
 shogun-buildbot	build #402 of deb4 - python3 is complete: Failure [failed test python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb4%20-%20python3/builds/402  blamelist: abinashpanda <abinash.panda.ece10@itbhu.ac.in>
 shogun-buildbot	build #2409 of deb3 - modular_interfaces is complete: Failure [failed python modular]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb3%20-%20modular_interfaces/builds/2409  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, abinashpanda <abinash.panda.ece10@itbhu.ac.in>
 shogun-buildbot	build #403 of deb4 - python3 is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/deb4%20-%20python3/builds/403
-!- zxtx_ [~zv@173.164.89.193] has quit [Ping timeout: 240 seconds]
 shogun-buildbot	build #745 of nightly_all is complete: Failure [failed compile test]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_all/builds/745  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, abinashpanda <abinash.panda.ece10@itbhu.ac.in>, Saurabh <saurabh.mahindre@gmail.com>
 shogun-buildbot	build #849 of nightly_default is complete: Failure [failed compile]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/849  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, abinashpanda <abinash.panda.ece10@itbhu.ac.in>, Saurabh <saurabh.mahindre@gmail.com>
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-lyvzgcjepjeamjmu] has quit [Quit: Connection closed for inactivity]
-!- rajul [~rajul@182.68.139.21] has joined #shogun
-!- zxtx_ [~zv@67.51.233.200] has joined #shogun
-!- rajul [~rajul@182.68.139.21] has quit [Ping timeout: 240 seconds]
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- zxtx_ [~zv@67.51.233.200] has quit [Ping timeout: 240 seconds]
-!- rajul [~rajul@180.151.18.31] has quit [Ping timeout: 240 seconds]
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- rajul [~rajul@180.151.18.31] has quit [Read error: Connection reset by peer]
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
-!- HeikoS [~heiko@dab-glb1-h-1-5.dab.02.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun-data: Saurabh :master * 1f9ebc1 / toy/ionosphere.data: https://github.com/shogun-toolbox/shogun-data/commit/1f9ebc120eec62fe2a3d976603aec64d169c1e76
 shogun-notifier-	shogun-data: add ionosphere dataset
 shogun-notifier-	shogun-data: Heiko Strathmann :master * 0e5cebf / toy/ionosphere.data: https://github.com/shogun-toolbox/shogun-data/commit/0e5cebf0e366fdd0d1a7c36cb2a3ceb4875c3d2a
 shogun-notifier-	shogun-data: Merge pull request #62 from Saurabh7/master
 shogun-notifier-	shogun-data:
 shogun-notifier-	shogun-data: add ionosphere dataset
-!- rajul [~rajul@180.151.18.31] has quit [Read error: Connection reset by peer]
-!- HeikoS [~heiko@dab-glb1-h-1-5.dab.02.net] has quit [Ping timeout: 240 seconds]
-!- soumyaC [uid15286@gateway/web/irccloud.com/x-jamthzogebzdmkvp] has joined #shogun
-!- Netsplit *.net <-> *.split quits: shogun-notifier-
-!- Netsplit *.net <-> *.split quits: naywhayare, @ChanServ
-!- Netsplit *.net <-> *.split quits: shogun-buildbot, zxtx
-!- Netsplit over, joins: shogun-notifier-, @ChanServ, zxtx, shogun-buildbot, naywhayare
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 246 seconds]
-!- jiaolong [9e6d1f01@gateway/web/freenode/ip.158.109.31.1] has joined #shogun
-!- HeikoS [~heiko@82.132.219.146] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- kislay [~Abhijeet@103.240.205.23] has joined #shogun
 kislay	hey HeikoS
@HeikoS	kislay: hey
@HeikoS	how are things?
 kislay	HeikoS, been busy with ANPR lately
@HeikoS	kislay: whats that?
 kislay	sorry for being inactive..
 kislay	oh..
 kislay	automatic no. plate recognition :)
 kislay	A notebook basically.
@HeikoS	i see
@HeikoS	kislay: cool, looking forward to see the result
 kislay	yup.
@HeikoS	kislay: the lda thing is almost ready to go
@HeikoS	just one integration test failing
 kislay	yeah..I am rechecking it now
-!- HeikoS [~heiko@82.132.219.146] has quit [Ping timeout: 240 seconds]
-!- kislay [~Abhijeet@103.240.205.23] has quit [Ping timeout: 240 seconds]
-!- kislay [~Abhijeet@103.240.205.23] has joined #shogun
-!- lisitsyn [~qdrgsm@80.252.20.67] has quit [Quit: Leaving.]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has joined #shogun
-!- HeikoS [~heiko@dab-ntm1-h-30-7.dab.02.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 lambday	HeikoS: hey
@HeikoS	lambday: hi
 lambday	HeikoS: hi!
 lambday	HeikoS: libshogun tests are taking long time on travis!
@HeikoS	lambday: yes, annoying
@HeikoS	lambday: what to do=?
 lambday	HeikoS: integration test failure is expected
 lambday	HeikoS: I am trying out with develop branch to compare locally how much is the difference
@HeikoS	lambday: since we have to update things?
 lambday	but with blocksize 4 for linear time mmd
@HeikoS	lambday: okay
 lambday	there shouldn't be so much difference
 lambday	except for the extra overhead for recomputing things with shuffling
 lambday	for variance
 lambday	maybe I can set WITHIN_BLOCK_DIRECT as default for those ttests
 lambday	that might be faster
 lambday	HeikoS: I have been overly occupied lately with release from insti and relocating to a new place :( couldn't be active lately... will try my best to make up for it in coming days :(
@HeikoS	lambday: we should aim to test everything in the end
@HeikoS	lambday: maybe we can disable some tests on the travis
@HeikoS	lambday: and let buildbot take care of it
 lambday	HeikoS: tests with large number of samples can be disabled
 lambday	maybe some flag magic as you suggested
@HeikoS	lambday: dont worry
@HeikoS	lambday: where are you moving to?
@HeikoS	bangalore ? :D
 lambday	HeikoS: to Bangalore...
 lambday	HeikoS: haha yes...
@HeikoS	lambday: when are you doing your internship at ucl ? ;)
 lambday	HeikoS: but ran into some problem.. my thesis here isn't complete... so will have to come back to Mumbai to finish my degree
 lambday	HeikoS: just as soon as I get enough money to leave Oracle
 lambday	:D
@HeikoS	lambday: i see :)
@HeikoS	lambday: you are welcome to come here for a while, just let me know and i bring you in touch with the right people
 lambday	HeikoS: my prof changed my topic lately... because earlier the problem I was working on was very open ended research problem... couldn't do much on that
@HeikoS	lambday: will you be able to use the hsic based feature selection for your thesis?
@HeikoS	lambday: i see
 lambday	HeikoS: with this new topic - I don't know... currently I am working on feature induction on relation data with relational kernels (kLog to be exact)
@HeikoS	wow, no idea about that stuff
@HeikoS	lambday: good luck :D
@HeikoS	lambday: so but back to the tests ...
 lambday	earlier attempt didn't yield correct results
 lambday	yes
@HeikoS	lambday: so if we disable the tests for now globally, maybe we can ask viktor to do something that we ignore certain tests on travis
@HeikoS	lambday: that should be fine
@HeikoS	lambday: then we still cover all the things we want (also when people run locally)
@HeikoS	lambday: but travis doesnt need to test all that stuff always
@HeikoS	lambday: not optimal, but still better than just dropping them
@HeikoS	wiking: ^
 lambday	HeikoS: yeah... that's the way to go.... I didn't know travis runs it on a vm with just 1 cpu
 lambday	with multithreaded applications like sum methods for kernels, that's limiting
@HeikoS	lambday: yeah, but well, what can we do
@HeikoS	lambday: not a too serious problem
@HeikoS	we just need to give the unit tests a flag on travis
@HeikoS	that makes shogun ignore them
 lambday	HeikoS: yeah..
 lambday	HeikoS: regarding the plots, they seem to recreate the plots for B-test on the paper..
 lambday	which is good
 lambday	btw, on another topic, do we have support vector clustering in shogun? just wondering.. I have to do something related to this for thesis...
@HeikoS	lambday: yes, the plots look good
@HeikoS	lambday: cool that we can reproduce this
@HeikoS	lambday: no sv clustering
@HeikoS	lambday: i dont even know what that is
 lambday	HeikoS: neither do I... just started to figure it out... apparently it uses one class svm or something to draw clusters... we don't have to give the number of clusters beforehand like kmeans or knn
@HeikoS	lambday: i would rather clean up the kmeans, and gmm
 lambday	HeikoS: regarding the tests, I am trying locally with WITHIN_BLOCK_DIRECT and checking it that saves us any time on travis
@HeikoS	lambday: and then implement the VB-GMM first
@HeikoS	lambday: thats good, but we want everything to be tested eventiually
@HeikoS	lambday: all combinations
 lambday	HeikoS: hmm :( but testing on travis is not equivalent to testing overall :( due to time limit :( we do need some magic to disable some tests on travis and leave on the buildbot
 lambday	VB-GMM - now I'm lost :D
@HeikoS	lambday: just write all the tests we need, and make sure they pass locally when you do stuff, then disable them before commit
@HeikoS	lambday: _DISABLE    in test name does that
@HeikoS	lambday: and then we ask wiking to offer us an option to disable only on trabis
@HeikoS	travis
 lambday	HeikoS: do you know how do I disable libshogun tests?
@HeikoS	lambday: yes via the disable in capital letters in the name
@HeikoS	lambday: try it :)
 lambday	in what name? for unit-tests I tried that :(
@HeikoS	lambday: VB-GMM = variational bayes gaussian mixture models     - allows to do gmm and learn the number of clusters from data
@HeikoS	lambday: in the unit test name
@HeikoS	lambday: they will be not run then
@HeikoS	lambday: and googletest says "you have n disabled tests"
 lambday	HeikoS: umm the problem here is caused by two libshogun tests (not unit-tests - they take long but eventually passes on travis)
 lambday	in examples/undocumented/libshogun
@HeikoS	lambday: you meran not unit tests but examples?
@HeikoS	lambday: i see
@HeikoS	lambday: sorry
 lambday	yeah
@HeikoS	lambday: these are not really tests
@HeikoS	lambday: in that case,  i suggest to make them unit tests
@HeikoS	lambday: since the examples should just demonstrate API
 lambday	libshogun_statistic_linear_time_mmd.cpp and libshogun_mmd_kernel_selection.cpp
 lambday	HeikoS: alright..
@HeikoS	lambday: i just did that back then since we did not hav eunit tests
 lambday	HeikoS: then I guess these tests already exist as unit-tests... in libshogun examples we just use larges number of samples
@HeikoS	lambday: just api examples that show how to use each feature are enough
@HeikoS	lambday: and then unit tests do the rest
@HeikoS	lambday: and notebooks exmplain things
@HeikoS	lambday: then add the unit tests with large number of samples, and maybe disable for now until wiking figured out how to exclude in travis?
@HeikoS	lambday: does that make any sense?
 lambday	HeikoS: okay... alright! so removing these two tests from libshogun - adding them as unit-tests... and in case they cause trouble, disabling them currently
 lambday	HeikoS: haha same pinch! :D ye I got it
@HeikoS	lambday: http://scikit-learn.org/stable/modules/generated/sklearn.mixture.VBGMM.html
@HeikoS	lambday: btw
@HeikoS	lambday: its also all described in bishops book
 lambday	HeikoS: wow man I can try that too for thesis... but its not any kernel based approach... my prof is obsessed with kernels
@HeikoS	lambday: ok, mmmh
 lambday	HeikoS: cool stuff!
@HeikoS	lambday: ah funny, see this
@HeikoS	http://www.cs.ubc.ca/~murphyk/Software/VBEMGMM/index.html
@HeikoS	lambday: written by emt, the variational gp learning gsopc mentor :)
@HeikoS	back 7 years ago
 lambday	ubc :D
 lambday	wow!
 lambday	checking
@HeikoS	lambday: he did his msc in bangalore
@HeikoS	haha did an intern at xerox before doing phd in the states
 lambday	HeikoS: wow!... and I know one of my college senior who did Ms in UBC... emt might be knowing him :D
@HeikoS	lambday: yeah probably, everyone knows everyone anyways
@HeikoS	small cummunity :)
 lambday	haha :D
@HeikoS	lambday:  http://en.wikipedia.org/wiki/Spectral_clustering
 lambday	HeikoS: the domain I am working on is interesting btw.. relational data is kind of like a prolog knowledge base
@HeikoS	lambday: cool stuff!
 lambday	so the idea is... to cluster the examples in the knowledge base.... learn features... learn rules... classify
@HeikoS	lambday: kernel kmeans might also be cool to have
@HeikoS	lambday: i see
@HeikoS	lambday: interesting
 lambday	but since the use of relational model in the data... we need some method that can handle these sort of feature mapping
 lambday	like : movie_superhit:- is_directed_by(Christopher_Nolam), acted_in(Heath_Leger), music_by(Hans_Zimmer) ..
-!- khalednasr [~k.nasr92@41.69.170.139] has joined #shogun
 lambday	we learn these sort of rules.. and use them as features in svm
 lambday	HeikoS: I wonder whether VB-GMM sort of idea can be applied to relational data... maybe worth exploring
 lambday	HeikoS: if I work on kernel based k-means I'll add this to shogun... maybe an interface to handle relational data can also be cool!
 lambday	khalednasr: hi!
 khalednasr	lambday, hi
 lambday	khalednasr: sorry for my long absence :( ran into some problems
 lambday	khalednasr: what's the status update on linalg?
 khalednasr	lambday, I'm addressing the issues we talked about earlier, gonna update the PR later today
 lambday	khalednasr: so you're going ahead with the idea that's discussed on the PR discussion thread, right? did you update anything in the design?
 khalednasr	lambday, which one do you mean? the backend-dependent matrix?
 lambday	khalednasr: really cool that you thought this all the way through... performance compromising is the last thing we wanna do (y)
 lambday	khalednasr: yes... lisitsyn said that you had some more ideas
 lambday	khalednasr: if I understood the issues correctly, then using your idea eventually solves the problem of data-transfer from cpu <--> gpu when using different bakcends, right?
 khalednasr	lambday, yeah
 khalednasr	lambday, the library doesn't even need to know about that matrix class
 lambday	khalednasr: great! :) that's, IMO, is the ideal solution! unifying all matrix/vector classes under one common shed
 khalednasr	lambday, It might be useful as a return type though
 lambday	khalednasr: what do you mean?
 lambday	khalednasr: using these new classes, we don't have to pass things as arguments?
 lambday	as preallocated matrices/vectors?
 khalednasr	using it as a return type in the colwise_sum() method would solve that issue
 lambday	super cool then!
 khalednasr	GPU overloads will return the GPU version of that matrix
 lambday	awesome!
 khalednasr	and likewise for the CPU backends
 lambday	since we dont expose things to other interfaces and these are all internals, this is the ideal solution
 lambday	preallocating is old school if we talk about style :(
 khalednasr	what should we call that class though? :)
 lambday	khalednasr: how about Matrix and Vector :D
 khalednasr	lambday, yeah but it's more efficient
 lambday	khalednasr: is it possible to define these under linalg namespace, so that we can later differentiate?
 lambday	shogun::linalg::Matrix
 khalednasr	lambday, yeah, but won't we get name clashes with the template argument names?
 lambday	khalednasr: err...
 lambday	DMatrix DVector (D=dense) :-/
* lambday showing off his worst naming skills
 khalednasr	lambday, yeah, that sounds good :)
 lambday	khalednasr: let's start with matrix.. vector then would be easy
 lambday	matrix thing we can test with linalg::square
 khalednasr	lambday, I'm gonna do the other modification first, then send another PR with that class
 khalednasr	modifications*
 lambday	khalednasr: alright... just reorder the tasks as suitable for ease of testing things iteratively :)
 khalednasr	lambday, alright
-!- HeikoS [~heiko@dab-ntm1-h-30-7.dab.02.net] has quit [Quit: Leaving.]
 lambday	anyone watching football?
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- HeikoS [~heiko@82.132.230.184] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	lambday: i have no idea about relational features, but i guess one can represent all that as graphs ;)
 lambday	HeikoS: yes that's pretty much the idea - and then use graph kernels :D
@HeikoS	lambday: cool
@HeikoS	lambday: would be nice to have graph kernels in shogun
@HeikoS	lambday: in fact i am thinking of doing a two sample test example using a graph kernel with dino
 lambday	HeikoS: yeah! I have been checking out kLog which does just that!
 lambday	HeikoS: really!!
@HeikoS	lambday: yeah for the big testing paper
@HeikoS	lambday: some protein networks or so
@HeikoS	samples are graphs
 lambday	HeikoS: btw there is this characteristic kernel properly that the kernel function should satisfy in order to be used in these tests
@HeikoS	lambday: doesnt have to
@HeikoS	lambday: only tell if this is true then mmd=0 iff p=q
 lambday	HeikoS: cool!... then we can use number of string kernels as well
@HeikoS	lambday: totally
@HeikoS	lambday: if you could code up a toy example for the noteobok report, that would be in fact amazing
 lambday	HeikoS: just out of nowhere, can one thing about using these tests to detect plagiarism ?
@HeikoS	like two distributions of strings
 lambday	think**
@HeikoS	which each have a discrete distribution for the letters
@HeikoS	lambday: that is hard i think
@HeikoS	but you could do the following example for independence
@HeikoS	lambday: one distribution is a distribution of words, the other distribution is in the real numbers
@HeikoS	lambday: you generate the dataset like this
@HeikoS	lambday: pick some random number r
@HeikoS	do x=sin(r*const)
@HeikoS	and b=cos(r*const2) and then the sign of b selects one of two topics of words, from which you sample one
@HeikoS	then you have a dependence between words and numbers
@HeikoS	i have some matlab code to generate this somewhere
@HeikoS	let me send it to you
 lambday	HeikoS: alright.. this would be cool for the notebook!
@HeikoS	lambday: exactly
@HeikoS	lambday: nice notebook example
@HeikoS	lambday: and for two sample, just come up with a distribution of strings
@HeikoS	lambday: where a histogram would look the same for each distribution
@HeikoS	lambday: (histogram over letters)
@HeikoS	lambday: but some structure in the letters is different
 lambday	HeikoS: alright
@HeikoS	lambday: we could also do a two sample test on images of cats and dogs and a description of cats and dogs
 lambday	HeikoS: the matlab code is for this two-sample test it seems...
@HeikoS	if x_1 is an image of a dog, y_1 is a description of a dog
@HeikoS	lambday: no its for kernel correlation, called COCO
@HeikoS	lambday: thats a preliminary version of hsic
@HeikoS	lambday: forgot the other file
 lambday	HeikoS: okies...  what group_dataset does?
 lambday	HeikoS: oh :D
@HeikoS	lambday: yes
@HeikoS	lambday: note this code is very ugly ;)
@HeikoS	but the idea is nice
@HeikoS	dependence is not obvious
@HeikoS	from looking at the data
@HeikoS	lambday: where one is in the circle tells you the topic where the string is from
 lambday	HeikoS: alright... getting it a bit
@HeikoS	lambday: getting food see you later :)
-!- HeikoS [~heiko@82.132.230.184] has quit [Quit: Leaving.]
 lambday	HeikoS: alright... ciao :)
 khalednasr	lambday, quick question:
 khalednasr	lambday, the DMatrix class would be defined as: template <class T, Backend backend> class DMatrix
 khalednasr	lambday, the default value for backend should probably be the global backend
 lambday	khalednasr: yes
 khalednasr	lambday, can that be accessed?
 lambday	khalednasr: let me check
 lambday	khalednasr: linalg_traits<Redux>::backend
 lambday	(or, appropriate module-name instead of Redux)
 khalednasr	lambday, but that's just for the redux module
-!- rajul [~rajul@180.151.18.31] has quit [Read error: Connection reset by peer]
 lambday	khalednasr: other modules are are supposed to define it the same way
 lambday	please check https://github.com/shogun-toolbox/shogun/blob/feature/linalg/src/shogun/mathematics/linalg/linalg.h
 khalednasr	but the matrix class should default to the backend defined for a specific module
 khalednasr	shouldn't*
 khalednasr	it doesn't make sense to define it as: template <class T, Backend backend=linalg_traits<Redux>::backend> class DMatrix
 lambday	khalednasr: checking if there is currently a way to do thsi
 lambday	khalednasr: maybe  we should use a module here (https://github.com/shogun-toolbox/shogun/blob/feature/linalg/src/shogun/mathematics/linalg/linalg.h#L101) that applies for all modules
 khalednasr	lambday, so a GLOBAL or DEFAULT module maybe?
 lambday	khalednasr: GLOBAL sounds good..
 lambday	DEFAULT is something else
 khalednasr	lambday, cool, thanks
 lambday	khalednasr: maybe define this GLOBAL and add it here https://github.com/shogun-toolbox/shogun/blob/feature/linalg/src/shogun/mathematics/linalg/linalg.h#L115
 lambday	then we can do linalg_traits<Global>::backend
 khalednasr	lambday, so: SET_MODULE_BACKEND(Global, BACKEND)
 lambday	khalednasr: yep!
 lambday	this will solve it right>
 khalednasr	lambday, yeah
 khalednasr	lambday, what if neither USE_EIGEN3 or USE_VIENNACL is defined?
 lambday	khalednasr: haha then we're doomed... HAVE_LINALG_LIB is not defined then and the whole linalg is missing
 khalednasr	lambday, one of them has to be defined?
 lambday	khalednasr: the idea was, we *got* to have at least one supported linalg backend
 lambday	khalednasr: we're not a linalg library on our own and its not possible for us to provide native implementation for all linalg operations
 lambday	so at least one of them *has* to be here
 khalednasr	lambday, then why the #else here? https://github.com/shogun-toolbox/shogun/blob/feature/linalg/src/shogun/mathematics/linalg/linalg.h#L126
 lambday	USE_EIGEN3 == use eigen3 for *ALL* modules
 lambday	USE_VIENNACL = use viennacl for *ALL* modules
 lambday	USE_EIGEN3_REDUX = use eigen3 for redux modules
 lambday	and so
 lambday	HAVE_LINALG_LIB == HAVE_EIGEN3 | HAVE_VIENNACL
 lambday	that's something else
 lambday	khalednasr: does it make sense?
 khalednasr	lambday, what I mean is, we added this: SET_MODULE_BACKEND(Global, BACKEND) to SET_GLOBAL_BACKEND
 lambday	khalednasr: yes...
 khalednasr	lambday, which is only called if USE_EIGEN3 or USE_VIENNACL is defined
 lambday	khalednasr: yes but how does that work for module specific setups?
 lambday	umm gotta rethink this a bit :/
 lambday	sorry for the mess up! not everything is on the top of my head right now :(
-!- rajul [~rajul@182.68.184.120] has joined #shogun
 khalednasr	lambday, it's alright
 khalednasr	lambday, how about: SET_MODULE_BACKEND(Global, Eigen3) in the #else?
 lambday	khalednasr: does this solve the issue?
 lambday	how about we have eigen3 module backend set for redux and viennacl backend set for some other module
 lambday	?
 khalednasr	lambday, I'm not sure
 lambday	Global then would be set as per the last one in the code which is unpredictable
-!- lisitsyn [~qdrgsm@80.252.20.67] has joined #shogun
 lambday	or worse - compilation error
 lambday	khalednasr: is it necessary that we provide default template arg?
 lisitsyn	lambday: khalednasr: aha!
 lisitsyn	discussing gpu things here
 lisitsyn	;)
 khalednasr	lambday, yup, or we'd go back to the same problem of the developer having to specify a backend
 lambday	lisitsyn: worse - discussing API changes here :(
 lambday	khalednasr: yes I see the point
 lambday	ummm....
* lambday thinking
 lambday	so lets lay down the requirements
 lambday	we want the matrix class to be GPU when *ALL* modules use GPU
 lambday	right?
 lambday	but that's bad
 khalednasr	I'm not sure..
 lambday	khalednasr: how about, we use a backend *AND* module specific matrix class?
 lambday	3 template args
 lambday	is that possible?
 khalednasr	lambday, I'm not sure I get what you mean
 lambday	khalednasr: template<typename Scalar, enum Backend, class Module> DMatrix
 lambday	if backend for redux module is set as GPU, the matrix class for redux should inherit from CGPUMatrix
 lambday	is it possible?
 khalednasr	lambday, seems too complicated
 lambday	khalednasr: yes... but if we *don't* use module specific matrix, then module specific cpu/gpu settings would lead to a massive overhead :(
 lambday	maybe there is an easier solution out there
 lambday	khalednasr: do you see the point? I mean, in compile-time, our DMatrix is set to inherit from CGPUMatrix, but in all the modules we use CPU things using cmake option
 khalednasr	lambday, ahh I see
 khalednasr	lambday, but if we make it module-backend dependent, what exactly should happen when a developer declares DMatrix<float64_t> in their algorithm?
 khalednasr	which class will it derive from?
 lambday	khalednasr: we *got* to have a global module for default things... and it should work if global backend settings are specified using cmake via USE_EIGEN3 or USE_VIENNACL... but there should be a way via which a user can specify this
 lambday	so, using DMatrix<float64_t> would inherit that linalg_traits<Global>::backend depends on...
 lambday	but it can also do DMatrix<float64_t, NeuralNets> which inherits from the backend specified for NeuralNets module
 khalednasr	lambday, ahh, that makes sense
 lambday	khalednasr: I am just saying - unless I myself can code this thing I am never sure if it can be done :(
 lambday	ah 3 mins and netherlands scored a goal
 khalednasr	lambday, yeah it's getting really messy
 lambday	khalednasr: ok taking a short break... may be some new ideas pop up in our heads
 khalednasr	lambday, good idea :)
 lambday	khalednasr: you're always the best in terms of finding out awesome solutions to these problems.. :D so let's think a bit
 khalednasr	lambday, haha :)
-!- lisitsyn [~qdrgsm@80.252.20.67] has quit [Quit: Leaving.]
 lambday	khalednasr: how about we put these under linalg_traits? as in, inside our code we'd just be using linalg_traits<Module>::DMatrix...
 lambday	which then would mean to inherit from the appropriate base matrix class (SGMatrix/CGPUMatrix) based on the module specific backend
 lambday	inside the struct Module we use a typedef for that
 lambday	possible?
 lambday	there would always be a linalg_traits<Global>::DMatrix ....
 khalednasr	lambday, inside which code?  the algorithms?
 lambday	khalednasr: yeah
 lambday	I mean, having the complex definition for module specific setups, just hide it from the API via linalg_traits thing
 khalednasr	and when one declares a matrix in some algorithm, what would that look like?
 khalednasr	linalg_traits<Redux>::DMatrix ?
 lambday	khalednasr: yeah... in each module, we write code for DMatrix defined for that module via this traits thing
 lambday	then when cmake option is set for that module, it by default chooses to inherit from the necessary base
 lambday	and using typedefs as much as we can to make the code readable
 lambday	I mean, I cannot think of any other solution except having these matrix/vector classes set module specific :( because otherwise we're back to square one
 khalednasr	lambday, seems like this could work. I'm just not sure if it won't cause some unforeseen problems later
 lambday	khalednasr: neither can I... so I'd rather do a small prototype of this... just a small snippet of code that works with this... so that we can get a sense of what problems might be hidden in disguise
 lambday	because many many problems actually reveals at the time of implementing it
 khalednasr	yeah
-!- rajul [~rajul@182.68.184.120] has quit [Ping timeout: 240 seconds]
-!- lisitsyn [~lisitsyn@37.139.2.75] has joined #shogun
-!- lisitsyn1 [~qdrgsm@80.252.20.67] has joined #shogun
-!- lisitsyn1 [~qdrgsm@80.252.20.67] has left #shogun []
-!- rajul [~rajul@180.151.18.31] has joined #shogun
-!- lisitsyn [~lisitsyn@37.139.2.75] has quit [Quit: ZNC - http://znc.in]
-!- lisitsyn [~lisitsyn@37.139.2.75] has joined #shogun
-!- mode/#shogun [+o lisitsyn] by ChanServ
-!- kislay [~Abhijeet@103.240.205.23] has quit [Quit: Leaving]
-!- lambday [67157f4f@gateway/web/freenode/ip.103.21.127.79] has quit [Ping timeout: 246 seconds]
-!- jiaolong [9e6d1f01@gateway/web/freenode/ip.158.109.31.1] has quit [Quit: Page closed]
--- Log closed Sun Jul 13 00:00:12 2014
