--- Log opened Tue Jun 25 00:00:03 2013
@iglesiasg	good night my friends
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has quit [Quit: leaving]
 shogun-buildbot	build #971 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/971  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1139 of bsd1 - libshogun is complete: Failure [failed test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1139  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #1261 of deb3 - modular_interfaces is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1261
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- foulwall` [~user@2001:da8:215:503:4fa:3f4c:6816:3fe8] has joined #shogun
-!- linus_ [b612b18a@gateway/web/freenode/ip.182.18.177.138] has joined #shogun
-!- travis-ci [~travis-ci@ec2-54-226-106-169.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8400237
-!- travis-ci [~travis-ci@ec2-54-226-106-169.compute-1.amazonaws.com] has left #shogun []
-!- nube [~rho@49.244.71.235] has quit [Ping timeout: 248 seconds]
-!- foulwall` [~user@2001:da8:215:503:4fa:3f4c:6816:3fe8] has quit [Ping timeout: 245 seconds]
-!- linus_ [b612b18a@gateway/web/freenode/ip.182.18.177.138] has quit [Quit: Page closed]
-!- foulwall` [~user@2001:da8:215:503:61fb:3cf5:6e5b:5a35] has joined #shogun
-!- zxtx [~zv@12.231.120.253] has quit [Ping timeout: 246 seconds]
-!- foulwall` [~user@2001:da8:215:503:61fb:3cf5:6e5b:5a35] has quit [Ping timeout: 245 seconds]
-!- mode/#shogun [+o sonney2k] by ChanServ
-!- travis-ci [~travis-ci@ec2-54-234-65-138.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8400770
-!- travis-ci [~travis-ci@ec2-54-234-65-138.compute-1.amazonaws.com] has left #shogun []
-!- foulwall` [~user@2001:da8:215:6901:14c1:888e:6755:f0f] has joined #shogun
 shogun-buildbot	build #438 of nightly_default is complete: Success [build successful]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/438
-!- travis-ci [~travis-ci@ec2-54-234-65-138.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8401128
-!- travis-ci [~travis-ci@ec2-54-234-65-138.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-23-22-205-184.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8402692
-!- travis-ci [~travis-ci@ec2-23-22-205-184.compute-1.amazonaws.com] has left #shogun []
-!- foulwall` [~user@2001:da8:215:6901:14c1:888e:6755:f0f] has quit [Ping timeout: 245 seconds]
-!- travis-ci [~travis-ci@ec2-23-22-205-184.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8402861
-!- travis-ci [~travis-ci@ec2-23-22-205-184.compute-1.amazonaws.com] has left #shogun []
-!- travis-ci [~travis-ci@ec2-54-226-106-169.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8403906
-!- travis-ci [~travis-ci@ec2-54-226-106-169.compute-1.amazonaws.com] has left #shogun []
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 240 seconds]
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- hushell [~hushell@c-67-160-139-116.hsd1.or.comcast.net] has joined #shogun
@sonney2k	good morning hushell!
 hushell	hi sonney2k
 hushell	wiking: So you think the StructuredOutputMachine::set_labels() should be removed?
 hushell	wiking: regarding another question about risk(), you still think putting risk() in StructuredModel better than in StructuredOutputMachine?
 hushell	wiking: Thanks for participating the discussion, it's really hard to optimize the code by my own ...
-!- lambday [67157f4f@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.127.79] has joined #shogun
 lambday	sonney2k: good morning... you're back :D
 lambday	wiking: saw your comment... I'll change it :)
@wiking	lambday: thnx
 lambday	I didn't SG_ADD the parameters.. will add it too and sent the PR..
 lambday	so, all classes need to have this init, right?
@wiking	hushell: just woke up :)
@wiking	hushell: i'm happy to discuss but in 30 mins or so
 hushell	wiking: short discussion is more than enough
 hushell	wiking: okay. We got 3 issues. Let me list here:
 hushell	1) about labels, so we keep it a member var in StructuredModel, right? and remove the set_labels() in SOMachine
 hushell	2) for risk(), I'd like to have like this: risk(ENUM_Objective_formulation) as a router, and there are implmentations like risk_nslack_margin_rescaling() etc.
-!- gsomix [~Miranda@46.20.65.164] has quit [Quit: Miranda IM! Smaller, Faster, Easier. http://miranda-im.org]
 hushell	3) the libqp functions need the risk(), if we put this in StructuredModel, then is the original design. But I'd like to see it becomes independent of the model, so I want to put it in SOMachine, so now I pass a CDualLibQPMachine* to libqp to call the risk()
@wiking	hushell: just a sec i'm reading it
 hushell	wiking: No hurries :)
 hushell	Acutually my other part of GSOC is independent of the SSVM stuff. I don't mind if we need more discussion before the refinement
 hushell	For a little bit more clear, you may want to look at this paper, which lists the 4 basic opt problems: http://tfinley.net/research/joachims_etal_09a.pdf
@wiking	1) yes i would to that, as although it's not strictly model dependent but you need those for being able to train....
@wiking	although one could argue of course that it's totally model independent, but then you would need to remove both Features and Labels from the StructuredModel's ctor
 hushell	yes, indeed. and we need to access m_labels for implementing argmax() etc
 hushell	keep m_features and m_labels in StructuredModel make life easier
@wiking	so in this case i would remove the labels part from the machine and maybe just keep reference to it, if it's inevitable to have it in the machine as well
 hushell	in machine, it has a reference to model, so during training m_features and m_labels can be obtained
@wiking	2) i'll put some code up today for latentSOMachine, and you'll see there some enum magic for choosing SOSVM solver... this way maybe we can avoid having more enums...
 hushell	Happy to learn this! :D
@wiking	3) i know why you need to pass CDualLibQPMachine* (reference to risk() function) but i feel it that semantically it's totally misleading :(
@wiking	sonney2k: ping
 hushell	because the libqp is kind of C code
 hushell	We need pass the class pointer to access the risk()
@wiking	hushell: it's not kind of ;) it is ansi c code :P
 hushell	:)
@wiking	hushell: let's try to think of a better alternative for 3)
 hushell	before it calls like this: model->risk()
@wiking	hushell: although i have currently no better idea... :P
@wiking	hushell: you'll see from latentSOSVM hacks how it's done.... as obviously the risk() is a bit different in case of latentSOSVM
 hushell	I was thinking put all libqp functions into DualLibQPSOSVM
@wiking	hushell: noup do do that... libqp should be separate
@wiking	hushell: as it's totally independent...
 hushell	okay
@wiking	hushell: i mean libqp is an external lib that we keep on updating when libqp itself is being updated
 hushell	another way maybe change the arguments of risk()
 hushell	so move risk() out of any class
 hushell	and pass a StructuredModel pointer to risk()
 hushell	so it can access m_features m_labels and StructuredModel::argmax()
@wiking	hushell: we might have troubles with swig interfaces when passing around function pointers..
@wiking	ah that way
@wiking	risk(StructedModel*, ...)
@wiking	?
 hushell	yes
@wiking	and where would risk be implemented?
 hushell	a little bit strange anyway
@wiking	it'd be still part of DualLibQPSOSVM?
@wiking	mmm have to think about this a bit
 hushell	Patrick like to see it be a part of LinearSOMachine
@wiking	why exactly LinearSOMachine ? :))))
 hushell	because for online solver also need this
 hushell	the subgradient ...
 hushell	maybe StructuredMachine?
 hushell	I mean in StructuredMachine
@wiking	yeah i would actually put it on the top of the hierarch
 hushell	It's hard to incorporate C and C++ !!!
@wiking	no not that much :P
@wiking	both of them is C :>
 hushell	not very compatible
 hushell	so why do you think BmrmStatistics svm_bmrm_solver(                                                                                        |||     get_col [shogun]
 hushell	        CDualLibQPBMSOSVM  *machine
 hushell	it's not good?
@wiking	because basically u are passing the solver itself
@wiking	svm_bmrm_solver  is the BMRM solver (one of them)
@wiking	and you are passing CDualLibQPBMSOSVM
@wiking	to it which is actually just the wrapper class for the BMRM solver itself...
 hushell	yes, you mean inside DualLibQPSOSVM, svm_bmrm_solver being called?
 hushell	yes, semantically, it's wierd
@wiking	i mean because CDualLibQPBMSOSVM is just a wrapper c++ class for the different BMRM solvers...
 hushell	In my opinion, the best way is letting svm_bmrm_solver etc be member functions
 hushell	but now we cant
 hushell	so maybe passing CDual* is not bad
@wiking	mmm i'm strongly against this approach :)
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
 hushell	Well, I don't have a preference here, so keep risk() in StructuredModel seems the only solution
 hushell	we don't have other classes to put this function
@wiking	hushell: let's ask the others as well ;)
 hushell	okay, I will copy and paste our discussion and email to Patrick and Fernando, is there anybody else know this well?
 sonne|work	wiking: how come you are awake?
@wiking	sonne|work: dunno man....
@wiking	sonne|work: we need a factory of Features ;)
 sonne|work	wiking: oki then back to wrk!
-!- gsomix [~Miranda@46.20.65.164] has joined #shogun
 gsomix	hi
 hushell	wiking: okay, I sent a long email :)
@wiking	cool thnx
-!- nube [~rho@116.90.239.3] has quit [Ping timeout: 276 seconds]
-!- foulwall` [~user@2001:da8:215:c252:2c89:bf3f:5f7a:c953] has joined #shogun
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- foulwall` [~user@2001:da8:215:c252:2c89:bf3f:5f7a:c953] has quit [Ping timeout: 245 seconds]
 sonne|work	lambday: hey there!
 lambday	sonne|work: hey :D
 lambday	where were you? :-o
 sonne|work	lambday: just an update - the json serialization issue you found was actually a bug in the lib json-c 0.10.0
 sonne|work	upgrading to 0.11.0 helped
 sonne|work	don't ask how long it took me to figure that out
 lambday	:-s okay not asking!! but it got fixed yayy
 lambday	is the failing unit-tests for pythom_modular also due to this?
 sonne|work	lambday: so please add the tests back
 sonne|work	lambday: failing unit test?
 sonne|work	nothing should fail currently
 sonne|work	yes all good http://shogun-toolbox.org/buildbot/waterfall
 sonne|work	only wiking needs to update json-c on his bsd1 bot
 lambday	awesome! so travis will go green again :)
 lambday	I'll check the tests..
 sonne|work	wiking: we also need to require newer json-c on travis...
-!- nube [~rho@116.90.239.3] has joined #shogun
-!- foulwall` [~user@2001:da8:215:c252:8c3c:7aac:23e9:fb11] has joined #shogun
 sonne|work	hey foulwall`!
 sonne|work	I hope I manage to have a current version of the demo running soon on nn.7nn.de
 lambday	sonne|work: the initialize we're talking about is for precomputing some stuffs that will be needed by other methods later... what would be a good name for that?
 sonne|work	precompute_*
 lambday	sonne|work: and also, shall I change the "init" to "register_params" now?
 lambday	sonne|work: alright :)
 sonne|work	lambday: the init() rename is a big effort I guess best done with some eclipse style UI
 sonne|work	so rather no not now but we should really do this
 sonne|work	init() is such a useless name
@wiking	sonne|work: mmmm well there's the package that comes with ubuntu... if that's not good enough then we can have the wget hack as we have for gmock
 lambday	sonne|work: okay.. yes I use vim so big trouble for me
 sonne|work	wiking: there is a newer one in debian
 sonne|work	wiking: http://packages.qa.debian.org/j/json-c.html
@wiking	sonne|work: or that ;)
 sonne|work	wiking: in any case please do - otherwise travis won't go back to green
@wiking	sonne|work: don't we have a detect for json version in ./configure?: )
 sonne|work	yes we do but ?
 sonne|work	tests need them
@wiking	but that's stupid
@wiking	if json is not found because of being too old
@wiking	test based on json
@wiking	shouldn't be ran at all
 sonne|work	then we will never know if we break sth in json
 sonne|work	we should have all deps installed on the buildbots
@wiking	ic
 lisitsyn	sonne|work: I was thinking about a way to provide casts for interfaces automatic way
 sonne|work	lisitsyn: like gsomix did you mean?
 lisitsyn	one way is CRTP but I am not sure you'd like it
 lisitsyn	sonne|work: yes obtain_from_generic
 lisitsyn	sonne|work: this makes SGObject template
 lisitsyn	and all derived classes are inherited this way:
 lisitsyn	class MyClass: public SGObject<MyClass>
 lisitsyn	then we can get static polymorphism for these casts
 sonne|work	lisitsyn: how would you do that with swig then?
 lisitsyn	sonne|work: I didn't try but is there any problem?
 sonne|work	well you need to assign a name to each templated class
 lisitsyn	derived classes are not templated
 sonne|work	so SGObject<MyClass> needs to be e.g. MyCLassSGObject
 sonne|work	yeah but SGObject ones
 lisitsyn	what happens when we don't rename it?
 lisitsyn	one other issue is that it needs some fancier thing for SGObject -> A -> B  case
 lisitsyn	class B : public SGObject<B,A>
 lisitsyn	class A : public SGObject<A,Empty>
 lisitsyn	like that
 lisitsyn	sonne|work: I am afraid of that way too
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has left #shogun ["normal"]
 lisitsyn	but these manually tinkered obtain_from_generic are wrong indeed
 sonne|work	I think swig will say that the base class is unknown
 lisitsyn	argh okay discard then
 sonne|work	lisitsyn: or we have a templated function doing A -> B
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
 lisitsyn	sonne|work: what do you mean?
 sonne|work	I don't see how to do that automatically but we could have a *single* templated obtain_from_generic function to convert A -> B
 sonne|work	at least in C++. in swig we again have the issue that we need to use %template
-!- foulwall` [~user@2001:da8:215:c252:8c3c:7aac:23e9:fb11] has quit [Ping timeout: 245 seconds]
-!- thoralf [~thoralf@enki.zib.de] has joined #shogun
 thoralf	Hey.
 lisitsyn	sonne|work: no it has to be defined everywhere
 lisitsyn	sonne|work: what matters is return type
 lisitsyn	so no place for templates here
 lisitsyn	sonne|work: would be nice to *always* convert to real type
@wiking	sonne|work lisitsyn do we support mixed features, i.e. real and string features mixed?
 sonne|work	wiking: sure
@wiking	sonne|work: which featuretype is that?
 sonne|work	combinedfeatures / combineddotfeatures
@wiking	mmm
 sonne|work	mmm?
@wiking	checking the api
 sonne|work	wiking: just check out the examples...
 sonne|work	you can stack together dense/sparse/byte/float/whatever/stringfeatures
 lambday	wiking: using CRamdon::std_normal_distrib(), the unit-tests fails.. with a large margin :(
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
 lambday	wiking:  may be I am using it wrong :-/ I'm pushing to my fork may be you can take a look?
@iglesiasg	is it normal to get like a thousand txt, json, hdf5, and xml files after running make in tests/unit?
@iglesiasg	ok maybe not a thousand :)
@iglesiasg	wow I just got my GSoC package!
 lambday	iglesiasg: congrats :) I haven't got mine yet :(
 lambday	iglesiasg: regarding unit-tests, yes, those things I did :(
@iglesiasg	hehe ok
@iglesiasg	lambday: let's just add them to gitignore
 lambday	iglesiasg:  okay.. :)
-!- foulwall` [~user@2001:da8:215:c252:6c33:cca0:7f6e:f184] has joined #shogun
 lambday	wiking: https://github.com/lambday/shogun/commit/a6d4a82ff8d8949d3d4a6a52523f441a0ad7a4ec#L16R46
-!- foulwall` [~user@2001:da8:215:c252:6c33:cca0:7f6e:f184] has quit [Ping timeout: 245 seconds]
 lambday	iglesiasg: added..
@iglesiasg	thank you
 thoralf	Given a SVMLight file with binary labels in first column - is there an easy way to load only the labels into an BinaryLabels?
 thoralf	Without writing plenty of boiler plate code? :)
-!- nube [~rho@116.90.239.3] has quit [Quit: Leaving.]
@iglesiasg	lisitsyn, sonne|work : I should set the doodle for the next GSoC meeting, so when do you think it should be?
@iglesiasg	before workshop?
@iglesiasg	after workshop and before midterm?
-!- vgorbati [~vgorbati@212.2.159.34] has joined #shogun
-!- vgorbati_ [~vgorbati@212.2.159.34] has joined #shogun
-!- vgorbati [~vgorbati@212.2.159.34] has quit [Ping timeout: 248 seconds]
-!- vgorbati_ is now known as vgorbati
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has joined #shogun
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has quit [Read error: Operation timed out]
 lambday	got my welcome package yahoo!
 lambday	oops! got my welcome package google!
-!- gsomix [~Miranda@46.20.65.164] has quit [Read error: Connection reset by peer]
-!- gsomix [~Miranda@46.20.65.164] has joined #shogun
 gsomix	lambday: huh, congrats.
 lambday	gsomix: ty ty :D
-!- foulwall` [~user@2001:da8:215:6100:5d2a:4700:d2a9:32e7] has joined #shogun
@wiking	lambday: ok checking
@wiking	lambday: oh nooo not good
 lambday	wiking: how to use it then?
@wiking	lambday: see comments
 lambday	wiking: alright.. yes got it.. thanks
 lambday	I'm checking and will let you know
@wiking	ok cool
 lambday	wiking: thanks.. it works :) but log-det sample unit-test needs to draw more samples to pass 0.1 precision test it seems..
 lambday	checking...
 lambday	wiking: works! :D, raised it to 10,000 from 1,000 and it passes
-!- nube [~rho@49.244.126.8] has joined #shogun
-!- votjakovr [~votjakovr@host-46-241-3-209.bbcustomer.zsttk.net] has quit [Quit: ERC Version 5.3 (IRC client for Emacs)]
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 9ccdc30 / src/shogun/multiclass/KNN.h: https://github.com/shogun-toolbox/shogun/commit/9ccdc3094289093631cf2a5ea710935e3c52c6ec
 shogun-notifier-	shogun: remove commented out function
 vgorbati	sonney2k: hello, are you here?
 sonne|work	vgorbati: yes!
 vgorbati	@sonne|work: I've started some work on implementing NN's, and since they should be inherited from 'CMachine', and thus implement 'train' method, I have a question: how do you usually handle a case, when there are multiple suitable training algorithms?
 sonne|work	vgorbati: multiple machines!
 sonne|work	vgorbati: e.g. libsvm, svmlight, ...
 vgorbati	@sonne|work: so, different class for each training method, right?
 sonne|work	yes with a common base class (e.g. CSVM)
 shogun-buildbot	build #1140 of bsd1 - libshogun is complete: Failure [failed test test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1140  blamelist: Soeren Sonnenburg <sonne@debian.org>
 shogun-buildbot	build #972 of cyg1 - libshogun is complete: Failure [failed compile]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/972  blamelist: Soeren Sonnenburg <sonne@debian.org>
 vgorbati	@sonne|work: that doesn't sound sensible for NN's.. I mean, for one architecture - say multilayered perceptron, you can use quite a lot of training algorithms - one reaches global minimum, but it is slower, another reaches local, but is much faster, the third one is randomized and so on. And it makes no sense to me to name a class like 'BackpropagationMultilayeredPerceptron' or 'LevenbergMarquardtMultilayeredPerceptron')
 vgorbati	@sonne|work: but anyway, if it a preferred way:)
 vgorbati	@sonne|work: *it is a preferred way
-!- FSCV [~FSCV@187.210.54.166] has joined #shogun
 sonne|work	vgorbati: well it is the same with svms.
 sonne|work	vgorbati: however, we have other algorithms like liblinear that internally can handle various loss functions
-!- FSCV_ [~FSCV@50.7.50.60] has joined #shogun
 sonne|work	so another option is to set the training algorithm
-!- FSCV [~FSCV@187.210.54.166] has quit [Ping timeout: 255 seconds]
 vgorbati	@sonne|work: you mean, like some field, say 'm_TrainingAlgorithm', of a neural network class?
-!- FSCV_ [~FSCV@50.7.50.60] has quit [Quit: Leaving]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Quit: Leaving.]
 sonne|work	vgorbati: yes but recall all lowercase and _ separated
 shogun-buildbot	build #1263 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1263  blamelist: Soeren Sonnenburg <sonne@debian.org>
 vgorbati	@sonne|work: okay, just to make sure I got everything right: 1. Add a base class 'CTrainer'. All concrete training algorithm will inherit from it. 2. Add a field 'CTrainer m_trainer' to the base neural network class. 3. The method NeuralNetwork.train(data) will just call m_trainer.train(this, data).
 sonne|work	or if you have certain re-occurring patterns your CTrainer just defines a few functions that are used in the NN's train method and can be overridden
 vgorbati	@sonne|work: got it, thanks
-!- foulwall` [~user@2001:da8:215:6100:5d2a:4700:d2a9:32e7] has quit [Ping timeout: 245 seconds]
-!- vgorbati [~vgorbati@212.2.159.34] has quit [Ping timeout: 268 seconds]
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- vgorbati [~vgorbati@37.19.160.111] has joined #shogun
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Read error: Connection reset by peer]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- hushell [~hushell@c-67-160-139-116.hsd1.or.comcast.net] has quit [Ping timeout: 246 seconds]
-!- vgorbati [~vgorbati@37.19.160.111] has quit [Quit: vgorbati]
-!- travis-ci [~travis-ci@ec2-23-22-205-184.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8422417
-!- travis-ci [~travis-ci@ec2-23-22-205-184.compute-1.amazonaws.com] has left #shogun []
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- hushell [~hushell@67.23.197.94] has joined #shogun
-!- kevin_ [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Ping timeout: 264 seconds]
-!- lambday [67157f4f@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.127.79] has quit [Ping timeout: 264 seconds]
-!- FSCV [~FSCV@187.210.54.166] has joined #shogun
-!- kevin_ [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
-!- gsomix_ [~Miranda@46.20.65.164] has joined #shogun
-!- lisitsyn [~lisitsyn@46.20.65.164] has joined #shogun
-!- zxtx [~zv@cpe-66-68-190-37.austin.res.rr.com] has joined #shogun
-!- Netsplit *.net <-> *.split quits: gsomix, nube
-!- vgorbati [~vgorbati@212.2.159.34] has joined #shogun
-!- Netsplit over, joins: nube
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has joined #shogun
 lisitsyn	pickle27: hey there
 lisitsyn	how is it going?
 pickle27	hey good!
-!- vgorbati [~vgorbati@212.2.159.34] has quit [Ping timeout: 260 seconds]
-!- vgorbati_ [~vgorbati@212.2.159.34] has joined #shogun
-!- vgorbati_ [~vgorbati@212.2.159.34] has quit [Client Quit]
-!- hushell [~hushell@67.23.197.94] has quit [Ping timeout: 245 seconds]
-!- hushell [~hushell@67.23.197.94] has joined #shogun
-!- hushell [~hushell@67.23.197.94] has quit [Ping timeout: 260 seconds]
@sonney2k	lisitsyn, wiking we got the rooms for the post workshop hands on session :D
 lisitsyn	sonney2k: c-base?
@sonney2k	lisitsyn, tu berlin
 lisitsyn	sonney2k: oh nice
@sonney2k	for 2 days
 lisitsyn	sonney2k: what should we do here though.. :D
 lisitsyn	sonney2k: my visa is ready btw
@sonney2k	lisitsyn, hack shogun of course!
@sonney2k	make plans and talk to each other
 lisitsyn	sonney2k: you are going to be away, richtig?
@sonney2k	yeah on holidays
 lisitsyn	sonney2k: schlecht!
@sonney2k	why?
 lisitsyn	sonney2k: we will be missing you ;)
@sonney2k	it is ok if you miss me but you are all grown ups
@sonney2k	and yes I will miss you too :D
-!- vgorbati [~vgorbati@212.2.159.34] has joined #shogun
@wiking	jesus fuck
@wiking	sonney2k: ah ok
@wiking	sonney2k: cool how long we can stay in c-basE?
@wiking	i.e. the real hacking time... ?:)
-!- iglesiasg [~nando@s83-179-44-135.cust.tele2.se] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- lambday [67157d4f@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.79] has joined #shogun
@iglesiasg	hey lisitsyn, how are you doing?
 lisitsyn	iglesiasg: hey, mostly fine what about you?
@iglesiasg	lisitsyn: fine too :)
@iglesiasg	lisitsyn: let me ask you, how do you want we take care of my PRs for the metric learning project?
@iglesiasg	should I take care of merging them myself or are you going to review them?
 lisitsyn	iglesiasg: oops sorry I forgot to comment it
 lisitsyn	iglesiasg: I am mostly ok with everything here
@iglesiasg	lisitsyn: ok, just tell me in github what should I change
@iglesiasg	no need to be now, when you find some time ;)
 lisitsyn	iglesiasg: I think nothing so far
@iglesiasg	any clue why serialization_complex crashes?
@iglesiasg	lisitsyn: what about the next meeting btw? before or after workshop?
 lisitsyn	iglesiasg: I'd choose before, lets see what sonney2k thinks
@iglesiasg	lisitsyn: ok, I'd say before mid-term is enough -- so after workshop, before mid-term
@iglesiasg	but yeah, let's see
@iglesiasg	hey lambday
@iglesiasg	how are you doing?
 lambday	iglesiasg: good :) how're you doing? :)
@iglesiasg	lambday: fine!
 lambday	iglesiasg: I couldn't set the PIN of the debit card tonight
@iglesiasg	lambday: aham! why so?
 lambday	called the number up that they had given, but couldn't hear clearly what the voice was saying :-/
 lambday	iglesiasg: how did you do it?
@sonney2k	wiking, we have the workshop on the 12 (friday) and the hands on session at TU on saturday & sunday 12/13
@sonney2k	so real hacking time is the whole weekend
@iglesiasg	lambday: haven't do it for the one I got today
@iglesiasg	lambday: last year I just called from skype and talked to them, I got no trouble
@iglesiasg	lambday: try later again, maybe it gets better with another speaker
 lambday	like, talked to people or just recorded IVRS stuffs :-/
@iglesiasg	lambday: BTW, it seems NormalSampler unit test fails on travis, have you seen? https://travis-ci.org/shogun-toolbox/shogun/jobs/8418573
 lambday	iglesiasg: let me check
@iglesiasg	around line 2842 in the log above
@sonney2k	iglesiasg, lisitsyn I won't have time anyway so just do it as you can
@iglesiasg	sonney2k: all right
@iglesiasg	lisitsyn: I guess I could fit both before or after workshop, so why do you prefer before?
 lambday	iglesiasg: oh no! yeah I'll make it 100,000 then :-/ no idea why it works on my system and fails on travis!
 lisitsyn	iglesiasg: my preference is not that strong
 lambday	or make the precision less
@iglesiasg	lisitsyn: so my point is that we have to make it before the mid-term to talk about it
 lisitsyn	iglesiasg: did you book a flight? ;)
@iglesiasg	provided that, I think the closer to the mid-term the better
@iglesiasg	lisitsyn: still lot of places left in the plane to get the type of ticket I like
@iglesiasg	economy one :P
@iglesiasg	haha
 lisitsyn	iglesiasg: ho(s)tel?
@iglesiasg	neither
@iglesiasg	I checked available places two days ago, seems to be no trouble either ;)
-!- vgorbati [~vgorbati@212.2.159.34] has quit [Ping timeout: 240 seconds]
 lisitsyn	iglesiasg: one friend of mine choosed one let me find
@iglesiasg	lisitsyn: oh thanks!
 lisitsyn	http://www.hostel-anlema.de/englisch/home/
@iglesiasg	lisitsyn: it seems very nice! thanks
@iglesiasg	lisitsyn: is your friend coming to the workshop too?
 lisitsyn	iglesiasg: yes from cz
@iglesiasg	lisitsyn: cool
 lisitsyn	iglesiasg: guy from my city
 lisitsyn	:D
@iglesiasg	I like the prices very much, best ones I see so far
 lisitsyn	russians all around the globe
@iglesiasg	lisitsyn: ah what did you mean with cz then?
 lisitsyn	iglesiasg: czech republic
@iglesiasg	yeah sure
 lisitsyn	iglesiasg: he is from my city but studies here and I expect will never come back :D
@iglesiasg	I just got confused when you said from your city, later I got it with the Russians around the globe
@iglesiasg	hehe
 lambday	iglesiasg: sonney2k lisitsyn: in one PR it some method works and in another it doesn't :( https://travis-ci.org/shogun-toolbox/shogun/builds/8421937
 pickle27	lisitsyn: got a question
 lambday	its because its random isn't it
 lisitsyn	pickle27: yes?
 pickle27	well two actually
 pickle27	in the end are we going to include all of the ADJ methods in shogun or just the best one?
 pickle27	trying to decide how much effort I should put into cleaning up JADE right now vs moving onto FFdiag
 lisitsyn	pickle27: is there the best one?
 pickle27	and second
@iglesiasg	lambday: it should be due to randomness indeed
 pickle27	lisitsyn: I don't think there is a clear best one but JADE is old, like 1993
 lambday	iglesiasg: its really tough to set any bounds to those unit-tests :-/
@iglesiasg	I can imagine
 lambday	oh btw your PR fails for my old code, right? in the next PR I changed its implementation to use CRandom::std_normal_distrib instead of CMath::randn_double... may be that will solve it :-/
 lambday	increased the number of samples too
 lambday	1000 to 5000
 lambday	once it gets merged I mean
 pickle27	Andreas said JADE is like a standard Im just wondering how we wanted this to look in the end
@iglesiasg	lambday: aham! when was it merge?
@iglesiasg	merged*
 lisitsyn	pickle27: oh then we should have it I think
 lisitsyn	pickle27: SVM is quite near to 1993  too ;)
 lambday	iglesiasg: sunday, I think
 lisitsyn	well closer to 1970s :D
@iglesiasg	lambday: mmm I updated this morning before I did the PR so your new code should be there
 pickle27	lisitsyn: okay, because I have the R version ported and working but it isn't the easiest to re-work
 lambday	I sent a PR today which contains the changes.. which is not merged yet
 lisitsyn	pickle27: ported to C++?
 pickle27	lisitsyn: the author of JADE posted a C implementation which is broken down better
 lambday	iglesiasg:  no no today's code isn't merged yet :-(
 pickle27	yeah the R package had a C function for the inner loop processing
 lambday	sorry for the confusion :(
@iglesiasg	lambday: aham! no problem :)
 pickle27	its the inner loop function that does most the work but its really hard to follow what its doing and I didn't have to touch this function for the port
 pickle27	so if we want JADE in Shogun I think I might re-work it from the Author's C release
 pickle27	because from that angle I'll be able to produce a more readable algorihtm
 pickle27	also
 pickle27	a related question
 lisitsyn	pickle27: if the code is changeable go for it sure
@iglesiasg	lambday: I guess we should wait for Heiko to review your PR and merge them
 pickle27	because I am working separately from Shogun at the moment how should I share code for the time being?
 lambday	iglesiasg: yes... because travis passed for this new PR... I hope it will pass
@iglesiasg	it probably will :)
 pickle27	lisitsyn: this will probably help explain the situation http://pastebin.com/gvHxCTFV
 pickle27	lisitsyn: I wrote the top function but the second function is directly from the R package
 pickle27	I just think it would be quite difficult to redo jadiagw using Eigen etc because the code isn't really commented at all
 pickle27	so it depends what we want, because it works its just not readable. So if we want to include I think it would be best if I ported the authors code and used Eigen3
 pickle27	or maybe its not as bad as I think and I just need to spend some more time looking at the code
 lisitsyn	pickle27: no I think there is no need to rewire jadiagw
 pickle27	lisitsyn: okay then I will leave it
 lisitsyn	rewrite*
 pickle27	lisitsyn: then I'll focus on double checking that my result matches the jointDiag package before continuing onto FFdiag
 lisitsyn	pickle27: yes makes sense to me
 pickle27	lisitsyn: any thoughts on what I should do about making my code available before its ready to merge in?
 pickle27	pickle27: I mean I can keep making pastes when I want to discuss something
 lisitsyn	pickle27: do you have some test in mind?
 lisitsyn	pickle27: same thing as PR is better
 lisitsyn	as others can comment too and no need to say 'line XXX: something'
 pickle27	okay so make PRs to shogun
 pickle27	lisitsyn: as for the test yes I have something worked out. Its a synthetic example from the R package
 lisitsyn	pickle27: I'd say that code is quite simple though :D
 lisitsyn	pickle27: I integrated the SLEP library last gsoc
 lisitsyn	that was much more crazy C code
 lisitsyn	that's why I am unsure it works :D
 lisitsyn	well I compared matrices and numbers and so on
 lisitsyn	but one never knows what the code works in all the cases
 pickle27	lisitsyn: yeah i mean its not that bad but it would take time to convert to eigen if thats what was wanted
 pickle27	but if you think its okay as loops then Im okay with it
 lisitsyn	pickle27: as far as I can see it won't be much better with eigen
 pickle27	lisitsyn: I was kind of thinking that too
 pickle27	but I wouldn't mind a few more comments
 lisitsyn	I don't really imagine how such code is written
 pickle27	anyways
 pickle27	for the test I have a synth example but it is randomly generated each time
 pickle27	so I need to save the input case to disk so I can run the C++ code and the R package on the same data
-!- lambday [67157d4f@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.79] has quit [Quit: http://www.kiwiirc.com/ - A hand crafted IRC client]
 pickle27	make sure they get the same result
 lisitsyn	please keep that test too
 pickle27	lisitsyn: of course!
 pickle27	its bascially a unit test as is
 lisitsyn	pickle27: heiko has an idea about that like comparing with libraries
 lisitsyn	yes though we can't really compare R and C++ in our unit-tests
 pickle27	oh the test itself is self contained
 pickle27	because in the end you can test if the matrix is a permutation matrix
 pickle27	so if it is then the test passes
@sonney2k	iglesiasg, why do you need a custommahalanobis distance?
 pickle27	otherwise fail
 pickle27	its the same self contained test in both R and C++ but they each gen new data each time
 pickle27	its just a one time check to make sure they give the same result
 lisitsyn	pickle27: I see
@iglesiasg	sonney2k: I didn't find any other distance which allowed me to compute (x_i - x_j)^T M (x_i - x_j) for a given matrix M
 lisitsyn	sonney2k: do you mean to allow custom matrices in mahalanobis?
 pickle27	lisitsyn: okay I have to head out for a bit now
 pickle27	I'll be back later
 lisitsyn	pickle27: see you!
-!- pickle27 [~Kevin@d67-193-243-174.home3.cgocable.net] has quit [Quit: Leaving]
@sonney2k	lisitsyn, it basically is the CMahalanobisdistance with a custom icov
 lisitsyn	sonney2k: yes
@sonney2k	quite some code duplication
@iglesiasg	sonney2k: yes, that is exactly the idea, the custom icov not to duplicate code :)
@sonney2k	can't we generalize mahalanobisdistance to learn icov
@iglesiasg	it sounds pretty reasonable
@sonney2k	I don't mind it getting the eigen3 treat btw
 lisitsyn	sonney2k: oh I need your opinion on changing a bit in our io
 lisitsyn	sonney2k: https://github.com/lisitsyn/formatting I can change shogun to use it
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :develop * 29e2882 / src/.version.sh: https://github.com/shogun-toolbox/shogun/commit/29e2882cac5c3c6de8e569c697daebc60d75a232
 shogun-notifier-	shogun: use the current branch as merge base when creating version strings
 lisitsyn	{} instead of %d %s %i et
 lisitsyn	etc
@sonney2k	lisitsyn, what will it do with pointers and what with SGObjects?
 lisitsyn	sonney2k: currently prints what lies under the pointer
 lisitsyn	easy to specialize for SGObjects
 lisitsyn	with ->name()
-!- hushell [~hushell@67.23.197.94] has joined #shogun
@sonney2k	how can I print the pointer itself for an SGObject?
 lisitsyn	sonney2k: static_cast<void*>(obj) could do that
 lisitsyn	is that usual case?
 lisitsyn	sonney2k: it has implementation class which is specialized so I think we can tune it if we go for that
 lisitsyn	when generic it just << the object/value
@sonney2k	shouldn't appear to often - we use it when printing objects (memory debugging IIRC Combined* etc)
 lisitsyn	sonney2k: other way would be to add an adapter like
@sonney2k	and how do you do formatting - I mean saying you want two digits for a double etc?
 lisitsyn	sonney2k: that's more difficult question
 lisitsyn	I didn't come with good solution so far
@sonney2k	or print a hex insteaf of an int?
 lisitsyn	sonney2k: I would do that through adapters like that
@sonney2k	I mean I don't like our SGIO* but it probably is not the biggest issue we have atm
 lisitsyn	format("{}", hex(3));
 lisitsyn	sonney2k: no that was just my experiment
@sonney2k	lisitsyn, would be cool to have your modelselection syntax
@sonney2k	anyway no more time cu
 lisitsyn	sonney2k: see you
@iglesiasg	good night
 lisitsyn	mod.sel. is on the way but I don't like some thing
 lisitsyn	iglesiasg: what do you think about string keys?
 lisitsyn	obj.parameter("width")
@iglesiasg	I don't see it, tell me more
 lisitsyn	iglesiasg: I hate getters and setters
 lisitsyn	that's it :D
 lisitsyn	I mean writing them all around
 lisitsyn	that's terrible thing I always feel pain right in my ass
 lisitsyn	and that's not the medical issue :D
@iglesiasg	:D yeah I also feel quite stupid when doing them
 lisitsyn	I spend my days writing getters in java
 lisitsyn	I would be younger and happier w/o them
 lisitsyn	and now I am 73 and I am still writing them
@iglesiasg	well eclipse helps you quite a bit in java with them right?
@iglesiasg	hehe
 lisitsyn	iglesiasg: oh no eclipse, idea
 lisitsyn	idea is much much better
 lisitsyn	iglesiasg: I wish there was such an ide for C++ :D
@iglesiasg	yeah I wish it too sometimes
 shogun-buildbot	build #973 of cyg1 - libshogun is complete: Failure [failed configure]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/cyg1%20-%20libshogun/builds/973  blamelist: Soeren Sonnenburg <sonne@debian.org>
@iglesiasg	on the other hand, I sometimes thinks it helps too much
-!- hushell [~hushell@67.23.197.94] has quit [Ping timeout: 264 seconds]
 shogun-buildbot	build #1141 of bsd1 - libshogun is complete: Failure [failed test test_1]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/bsd1%20-%20libshogun/builds/1141  blamelist: Soeren Sonnenburg <sonne@debian.org>
-!- hushell [~hushell@67.23.197.94] has joined #shogun
-!- travis-ci [~travis-ci@ec2-54-226-106-169.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/8440044
-!- travis-ci [~travis-ci@ec2-54-226-106-169.compute-1.amazonaws.com] has left #shogun []
-!- hushell [~hushell@67.23.197.94] has quit [Ping timeout: 276 seconds]
 shogun-buildbot	build #1264 of deb3 - modular_interfaces is complete: Failure [failed test python_modular]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/deb3%20-%20modular_interfaces/builds/1264  blamelist: Soeren Sonnenburg <sonne@debian.org>
--- Log closed Wed Jun 26 00:00:05 2013
