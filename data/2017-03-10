--- Log opened Fri Mar 10 00:00:58 2017
-!- wudayoda_ [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Read error: Connection reset by peer]
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 256 seconds]
-!- rads23 [8984030c@gateway/web/freenode/ip.137.132.3.12] has joined #shogun
-!- rads23 [8984030c@gateway/web/freenode/ip.137.132.3.12] has quit [Ping timeout: 260 seconds]
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-rezivwilyytbgaks] has joined #shogun
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- ashu [616375c8@gateway/web/freenode/ip.97.99.117.200] has joined #shogun
-!- ashu [616375c8@gateway/web/freenode/ip.97.99.117.200] has quit [Client Quit]
-!- rads23 [8984030a@gateway/web/freenode/ip.137.132.3.10] has joined #shogun
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-rezivwilyytbgaks] has quit [Quit: Connection closed for inactivity]
-!- rads23 [8984030a@gateway/web/freenode/ip.137.132.3.10] has quit [Quit: Page closed]
 CaBa	wiking: how was the presentation?
@wiking	good
@wiking	i should share the presentation somewhere
@wiking	;)
-!- geektoni [~Mutter@93-34-234-212.ip52.fastwebnet.it] has joined #shogun
-!- geektoni [~Mutter@93-34-234-212.ip52.fastwebnet.it] has quit [Client Quit]
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has quit [Read error: Connection reset by peer]
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has joined #shogun
@wiking	HeikoS, y0
@HeikoS	jojo
@HeikoS	wiking:  how are things?
@wiking	tired
@wiking	but good
@HeikoS	good :D
@wiking	lemme know what is the expected number of people
@HeikoS	30
@wiking	look into that stuff
@wiking	ohohoooo
@wiking	when?
@HeikoS	tuesday
@wiking	kk
@wiking	no problemo
@wiking	btw
@HeikoS	can we test this somehow?
@wiking	what?
@HeikoS	would be a bit nervous not doing that
@wiking	i mean there's that
@HeikoS	30 ppl logging on
@HeikoS	and running stuff
@wiking	ah well u have 30 github accounts? :D
@HeikoS	no
@wiking	k
@wiking	then no
@wiking	but i mean
@wiking	it is simple
@wiking	just there are some stuff
@wiking	u should clarify
@wiking	a) is there any special stuff u need on shogun feature wise?
@HeikoS	I will finish the notebook on the weekend
@wiking	b) other then some notebooks do you wanna change the docker container's content
@HeikoS	what happens if I do need to push something to develop and that needs to be in there?
@wiking	c) how much resources one would need for running that stuff?
@HeikoS	ressources are minimal, like a laptop powered thing per person
@HeikoS	(same computing power)
@wiking	HeikoS, nono
@wiking	define
@wiking	:D
@wiking	not like some vague shit
@wiking	define
@wiking	vpcu
@wiking	*vcpu
@wiking	and ram
@HeikoS	how can I?
@wiking	https://github.com/shogun-toolbox/docs/pull/5
@wiking	this is what happens when u push shit into develop
@wiking	we have nightly debian packages
@HeikoS	ah cool will review
@HeikoS	ok then
@wiking	of course i can update them faster
@wiking	than nightly
@wiking	i mean anytime
@HeikoS	if I push on Monday, is that in there Tuesday?
@wiking	on demand :)
@HeikoS	cool
@wiking	man
@wiking	shogun-buildbot dance
@wiking	shogun-buildbot: dance
 shogun-buildbot	<(^.^<)
 shogun-buildbot	<(^.^)>
 shogun-buildbot	(>^.^)>
 shogun-buildbot	(7^.^)7
@HeikoS	good
 shogun-buildbot	(>^.^<)
@wiking	so yeah he will dance when you want
@HeikoS	ok so ressources
@wiking	and generate package when u instruct it
@wiking	but by default it's nightly
@HeikoS	I think 4GB ram and 2cpu per person for the afternoon
@HeikoS	thats way more than is needed but a good guideline
@HeikoS	is that good?
-!- mikeling [uid89706@gateway/web/irccloud.com/x-clbrxoaqgcvnoeqc] has joined #shogun
@wiking	HeikoS, you know
@wiking	i dont  :)
@HeikoS	wiking: I mean as in is that specified enough?
@HeikoS	the ressources will be enough
@wiking	k
@HeikoS	wiking: and re the saving stuff
@wiking	?
@HeikoS	so you said that will all go then, i.e. people's notebook will be saved under their "account"
@HeikoS	?
@HeikoS	wiking: another question: what happens if there is a problem (i.e. the service doenst work or so)
@wiking	what do yo umean?
@wiking	i mean what happens usually when a service is down? :D
@HeikoS	wiking: I meant: can I call you? :D
@wiking	HeikoS, well yeah the saving thing i have a solution... just currenlty it's too slow
@wiking	that's why it's now as it is
@HeikoS	ok
@wiking	but i'll try to fix this over the weekend
@HeikoS	cool
@wiking	if the service goes down
@wiking	u can call me
@HeikoS	wiking: whats you opinion on dataset, we usually have them on some server and people download them by hand
@wiking	?
@wiking	it's there
@wiking	now
@HeikoS	http://www.gatsby.ucl.ac.uk/~gretton/adaptModel/ShortCourseLab.pdf
@wiking	we can do it the same way
@wiking	just mount it in
@wiking	read only
@wiking	btw
@HeikoS	okok
@wiking	we need a different domain
@wiking	btw
@wiking	just to be clear
@wiking	that shogun
@wiking	has no svmlight
@HeikoS	yes
@HeikoS	no worries
@wiking	you are aware of it right?
@HeikoS	just need any kernel svm
@wiking	k
@HeikoS	and naive bayes should work, but I will check that
@wiking	kk
@wiking	i mean go through the thing
@wiking	if u need 2vcpu + 4 gis of ram
@wiking	that is
@wiking	60 cores and 120 gig ram
@wiking	right
@wiking	?
@HeikoS	but that is auto allocated right?
@HeikoS	yes
@HeikoS	I dont know *exact* number of people, but this will be more that sufficient
@wiking	what is auto located/
@wiking	?
@HeikoS	the number of instances
@HeikoS	running
@wiking	in what sense?
@wiking	yeah they should scale
@HeikoS	like if only 10 people show up
@wiking	but it takes some time to scale up an instance
@HeikoS	we dont run 60 cores the while time?
@wiking	like 2 minutes or so
@HeikoS	okok
@wiking	so it's better have some stuff already running there
@HeikoS	I understand
@HeikoS	will it turn itself off after a while if not used?
@wiking	yes it should downscale
@HeikoS	ok cool
@HeikoS	this will be pretty awesome
@HeikoS	see all the mex shit in the pdf?
@wiking	btw
@wiking	yes
@wiking	that is ugly
@wiking	so
@wiking	do u think
@wiking	we should do a benchmark on this: https://aws.amazon.com/ec2/instance-types/x1/
@wiking	:)
@wiking	x1.32xlarge = 1,952 Gb of ram
@HeikoS	oh wow
@wiking	it'd be cool to do a test with http://labs.criteo.com/2013/12/download-terabyte-click-logs/
@wiking	it's 13 usd/h
@HeikoS	we have lots of funds still right? :)
@wiking	yes
@wiking	we cannot index that amount of data though :)
@wiking	i have BigInput branch
@wiking	it's a lot of fucking replace for int32_t -> index_t
@wiking	but would be cool to have a benchmark
@HeikoS	agreed
@wiking	to see not only accuracy
@wiking	but time
@wiking	:)
@wiking	compared to other horizontally scalable stuff
@HeikoS	wiking: btw
@HeikoS	what do we need to release ? :D
@wiking	mmm
@wiking	fix for cloud
@wiking	and there are all the read shit
@wiking	*red shit
@wiking	in the buildbot
@wiking	nightlies are failing
@wiking	PRs are failing
@wiking	documentations are failing
@HeikoS	okok
@HeikoS	will fix some of that
@HeikoS	what do you think about opencv notebook?
@HeikoS	needs some installation update
@HeikoS	of opencv as they split some things out of the lib
@HeikoS	and cmake newer version for PRE
@HeikoS	PR
@wiking	ah
@wiking	and still have no idea
@wiking	what to do with octave
@wiking	and we still hve some stuff going on
@wiking	with CV
@HeikoS	yeah
@HeikoS	tests pass
@wiking	http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/60/steps/test/logs/stdio
@wiking	here they dont
@HeikoS	oh wow didnt realise
@wiking	and there's omething
@wiking	with nihgtly_none
@HeikoS	well ok that needs fi
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has left #shogun []
@wiking	that rahul was working on
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	wiking: tweet about the cloud when done! :)
@wiking	yeye
@wiking	i deliberately didn't
@wiking	till it's all nice and good
@wiking	btw
@wiking	what is the plan
@wiking	shouldn't we have like
@wiking	R, java, scala and maybe c++ kernels
@wiking	for jupyter?
@wiking	all in one? :)
@HeikoS	yeah that would be cool
@HeikoS	so cool in fact
@HeikoS	though we dont have notebook demos yet
@HeikoS	but well
@HeikoS	still cool to run shogun
@wiking	yes
@wiking	somebody should test
@wiking	whether it's possible to have
@wiking	multiple kernels
@wiking	i know you can have
@wiking	python2 and 3
@HeikoS	yes that definitely
@HeikoS	I dont know much aobut jupyter and the other kernels
@HeikoS	meta notebooks would be so cool
@wiking	https://github.com/michhar/rpy2_sample_notebooks/blob/master/TestingRpy2.ipynb
@wiking	but this is not really
@wiking	i mean i dont want to mix
@wiking	language in one notebook
@wiking	just to have the option
@wiking	of different language
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has left #shogun []
@wiking	in different notebook
@wiking	s
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 240 seconds]
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	HeikoS, y0
@HeikoS	jo
@wiking	what do u think we should be more mem heavy
@wiking	or cpu heavy?
@wiking	with the instances?
@HeikoS	mem wont be too large
@wiking	in general
@wiking	not about
@HeikoS	in general
@HeikoS	phew
@HeikoS	not sure
@wiking	the course
@wiking	currenlty
@wiking	u get
@wiking	1 vpcu
@HeikoS	it doesnt need to be super fast
@wiking	and 3 gigs of ram
@HeikoS	yeah thats fine I think
@HeikoS	we can adjust later
@HeikoS	if people complain?
@wiking	mmm of course
@wiking	the problem is this
@wiking	https://aws.amazon.com/ec2/instance-types/
@wiking	currenlty i use m4.xlarge
@wiking	but maybe we should be using c4.xlarge
@wiking	see what i mean?
@wiking	because m4.xlarge = 4 people roughly....
@HeikoS	yeah I see
@HeikoS	I think we cannot really decide this now
@wiking	nono
@wiking	we can
@wiking	later
@wiking	how this is devided up
@wiking	divided
@wiking	that's another story
@wiking	but i have a fealing
@wiking	*feeling
@wiking	that we are too heavy per instance
@wiking	on memory
@wiking	it's not being used
@wiking	while cpu is .......well not enough
@HeikoS	yeah
@HeikoS	true
@HeikoS	model selection and stuff
@HeikoS	people wont do huge datasets in there
@HeikoS	so agreed
@wiking	i have an arm64 at hom atm
@wiking	should try to get shogun running on it :)
@wiking	i wonder if it works
@HeikoS	phew :)
@HeikoS	maybe a good idea
@HeikoS	though I wonder about priorities :D
@HeikoS	probably wont work
@HeikoS	haha
@HeikoS	but I love more architechtures and OS
@wiking	HeikoS, why not?
@wiking	i mean
@wiking	on fedora
@wiking	i think we have all that compiled
@wiking	https://koji.fedoraproject.org/koji/buildinfo?buildID=859779
@wiking	there
@wiking	shogun-5.0.0-0.5.fc26.aarch64.rpm
@wiking	:)
@HeikoS	wiking: jo
@wiking	po
@HeikoS	wiking:  just talked to arthur a bit
@HeikoS	about getting some $$$ to shogun for setting up the cloud for the course
@wiking	good :)
@wiking	i should write the blog post soon
@HeikoS	if you can estimate number of hours
@wiking	about the whole story
@wiking	mmm
@HeikoS	you did
@wiking	we can do the accounting
@HeikoS	and me too
@wiking	aaah
@HeikoS	there is two ways
@wiking	noo it's ok
@wiking	i can give you the aws accoutning
@HeikoS	one is: we write an invoice over numfocus (in the future)
@HeikoS	other option is: we are hired by UCL CS department
@wiking	mmmm look
@HeikoS	(thats how I am paid for the course stuff I do)
@wiking	for me it's only thing is
@HeikoS	and then can donate to shogun account
@HeikoS	point is to get something for it
@wiking	that i would like to have this for future shit for shogun
@wiking	liek
@wiking	sonney2k, have u reimbursed
@HeikoS	yeah I see, just sayintg it is a nice side effect
@wiking	my fossasia stuff? :D
@wiking	i guess i should ping him via email/faceboko
@HeikoS	so we can definitely do that via ucl human ressources and then each of us donates
@wiking	mmm
@wiking	if  they can hold up with shit
@HeikoS	and even cooler would be if ucl donates to shogun for that
@wiking	then lets wait till april
@HeikoS	yeah agreed
@wiking	and by then
@HeikoS	just wanted to share
@wiking	we know something about numfocus
@HeikoS	since I just discussed
@HeikoS	sure sure
@wiking	kk
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
@lambday	HeikoS: yo
@lambday	HeikoS: agreed on reallocation.. removing that...
@lambday	should fail if not enough memory is there
@HeikoS	lambday: jojo
@HeikoS	lambday: just check num rows columns
@HeikoS	caller responsibility
@lambday	 yeah
@lambday	this one is way too flexible.. inviting callers to screw things up :D
@HeikoS	REQUIRE can help
@lambday	BTW did you notice that this patch reduced the number of memallocs from N to 1?
@HeikoS	I mean if somebody gives a matrix with less memory allocated than in num_cols they deserve a segfault
@HeikoS	nope, can you poiunt me to it
@lambday	the way it worked before... you allocate the total memory once.. then copy the current.... then copy the return values of the get_feature_matrix() of other features.. which themselves did one memalloc extra...
@lambday	now, since you can pass pre-allocated things, the other features don't alloc those matrices, rather uses the pre-allocated one, with column offset :)
@lambday	HeikoS: https://github.com/lambday/shogun/blob/221cdcac33b7b08899322f3060e692b248f768c0/src/shogun/features/DenseFeatures.cpp#L1061
@HeikoS	lambday: jojo
@HeikoS	lambday: hey I have a question
@HeikoS	or more like wiking has
@lambday	HeikoS: yeah
@HeikoS	he wants to showcase some of the fast testing speed stuff at a talk next week
@HeikoS	so we was asking for code to reproduce the plots in the paper
@HeikoS	so the code for that is kinda messed up / not in a state to share(/reproduce
@lambday	HeikoS: it's on gatsby's machine
@HeikoS	but maybe you can point viktor to the script that does the comparisons?
@lambday	yeah
@HeikoS	lambday: like especially comparing old shogun vs new shogun
@lambday	HeikoS: alright.. maybe we can have a separate script for that one.. which takes two libshogun.so as params...
@lambday	so, the speed-up with number of threads won't help.. he needs something that he can compare on single core..
@lambday	otherwise it's not just to the old code
@HeikoS	lambday: so optimal world: you clean up the scripts so that there is a single clean one that reproduces the plots
@wiking	mmm
@HeikoS	lambday: and then wiking can take this script and modify it to generate some cool vis for the presentation
@wiking	if possible
@wiking	just a string of data
@wiking	is much better
@wiking	no need for the graph
@wiking	:D
@wiking	just tell me what's axis x and y
@wiking	and the data points
@wiking	:D
@wiking	after that i can generate the graphs
@lambday	 haha lovely :D
@wiking	of course
@wiking	i'm happy to modify the sciprt as well
@HeikoS	lambday: we need these scripts anyways
@wiking	whichever is the easiest atm
@lambday	HeikoS: I agree.. but remember we wanted to do it using pandas
@HeikoS	lambday: in dougals git
@wiking	pandas
@wiking	fuck python
@HeikoS	lambday: nah, text file stuff is ok
@wiking	:D
@HeikoS	lambday: just no piping :)
@HeikoS	just a script that generates the data for the plot
@HeikoS	can take a while is OK
@HeikoS	but just reproduce
@HeikoS	should be minimal effort no?
@lambday	gotta see.. do I still have the login? :P
@HeikoS	dougal also wanted to re-create the plot for camera ready version
@HeikoS	lambday: you do
@lambday	HeikoS: cool then.. will clean things up
@HeikoS	if you could put the stuff on your github somewhere? Then we could copy it
@HeikoS	cool man thx
@lambday	HeikoS: yeah sure
@lambday	HeikoS: u435a was it?
@HeikoS	lambday: doesnt matter filesystem is the same
@HeikoS	i am on sperry
@lambday	no but if I wanted to run..
@HeikoS	u435a is the machine you used
@HeikoS	sperry then
@lambday	HeikoS: cool let me try loggin in
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-tptznqwnhoqaakye] has joined #shogun
@HeikoS	lambday: let me know if you need help or something
@lambday	HeikoS: working
@lambday	HeikoS: sure
@HeikoS	cool
@lambday	HeikoS: shall I merge the patch first, once I rename the method and remove the reallocation feature?
@lambday	HeikoS: also, should we really make this method public?
@lambday	I have kept it protected
@HeikoS	lambday: why?
@HeikoS	ah
@HeikoS	yeah why not
@HeikoS	might be useful to copy out the subsetted matrix
@HeikoS	but
@HeikoS	maybe only the one that doesnt accept pre-aloocated
@HeikoS	otherwise messy
@HeikoS	or hide from SWIG
@HeikoS	or just leave protected
@lambday	HeikoS: wonder how the typemap works for SGMatrix.. does it use the same memory that, say, numpy passes or reallocates and copies in SGMatrix
@HeikoS	nono
@HeikoS	copy
@HeikoS	so definitely no SWIG for this one
@lambday	HeikoS: yeah so it will be messy
@HeikoS	only for a wrapper that allocates new mem
@lambday	yeah
@HeikoS	leave protected
@lambday	cool
@lambday	HeikoS: BTW the point I was talking about reducing the number of memalloc : https://github.com/lambday/shogun/blob/221cdcac33b7b08899322f3060e692b248f768c0/src/shogun/features/DenseFeatures.cpp#L1061
@HeikoS	I see
@HeikoS	I mean you can do that
@HeikoS	but pls make it a sep method
@HeikoS	sep. of concerns
@HeikoS	and then call it explicitly in the loop
@lambday	 HeikoS nono this one does not require realloc.. that's the point
@HeikoS	I see
@lambday	even if I remove realloc, this method works
@HeikoS	ok then
@lambday	cause it is called on the "other" features
@lambday	which re-uses the pre-allocated matrix
@lambday	earlier, each of those "other" features was allocating one matrix for itself...
@lambday	see what I mean/
@HeikoS	I get it
@HeikoS	nice one
@wiking	ok
@wiking	people
@lambday	wiking: we, the people?
@lambday	;)
@wiking	yes
@wiking	so i'm tired
@wiking	and crashing
@wiking	but could you just drop me
@wiking	an email
@wiking	about the stuff
@wiking	?
@wiking	would appreciate
@lambday	wiking: yeah.. sure
@lambday	brb.. my laptop is fucked up..
@HeikoS	good night
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has quit []
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
@HeikoS	lambday: you followed the team list?
@lambday	HeikoS: yo.. there is already a method named copy_feature_matrix.. which copies the matrix arg to "this" one
@lambday	HeikoS: yeah
@lambday	HeikoS: umm what do you mean?
@lambday	HeikoS: how about renaming the existing one to "use_feature_matrix" .... it is asking the class to "use" the matrix that it provides..
@lambday	HeikoS: then "copy_feature_matrix" could mean it copies the existing one
@lambday	https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/features/DenseFeatures.h#L272
@lambday	why is it virtual
@lambday	:/
@lambday	not being overridden anywhere
@HeikoS	lambday: well ....
@HeikoS	bad SE
@HeikoS	we should fix things
@HeikoS	but maybe in sep patches
@HeikoS	so issue these things
@lambday	HeikoS: tell me a good name for this method
@lambday	can't use copy_feature_matrix anymore
@HeikoS	I see
@lambday	:(
@HeikoS	use_feature_matrix for the other one seems better
@HeikoS	or even: set_feature_matrix
@lambday	yeah
@lambday	yeah set
@HeikoS	but that needs a separate PR
@lambday	so natural
@HeikoS	and then a rebase
@HeikoS	in your one
@lambday	err
@HeikoS	I mean such API changes should be separated from your changes
@lambday	HeikoS: well, actually it doesn't really "set"... it clones it first
@HeikoS	see what I mean?
@HeikoS	ah I  see
@lambday	HeikoS: so, set would convey something different
@HeikoS	ah such a method doesnt even make sense
@HeikoS	right?
@HeikoS	why would one want such function
@lambday	HeikoS: let me check whether it is being used anywhere
@HeikoS	caller can copy itself and then set
@HeikoS	sounds like I added this shit :D
@HeikoS	but yeah good to check
@lambday	Kmeans
@HeikoS	and overloading doesnt do it?
@lambday	that's the only one place
@HeikoS	lambday: ok then what about a PR that fixes that
@lambday	HeikoS: well, with overloading, you lose the default argument value for column_offset = 0
@HeikoS	and then you name it copy_*
@HeikoS	okok
@HeikoS	then I think it is OK to change
@lambday	HeikoS: change it to "use_feature_matrix" ?
@HeikoS	no
@HeikoS	caller clones matrix and then calls set
@lambday	makes sense
@HeikoS	or whatever
@HeikoS	just a setter
@lambday	yeah
@lambday	why clone I don't really understand :D
@lambday	anyway
@lambday	maybe it was required
@lambday	ah multithreaded
@HeikoS	lambday: I think it is good to check that
@HeikoS	and then fix :D
@lambday	yeah... so caller calls clone..
@lambday	makes zero sense to clone it within densefeature
@lambday	yeah just checked
@lambday	it's used within a openmp for
@lambday	we shouldn't accept such patches in the first place
@HeikoS	lambday: there you go :D
@HeikoS	I agree
@HeikoS	but things slip through
@HeikoS	so just fixing
@HeikoS	just read only saves the day there
@HeikoS	but the const stuff can be fixed later
@lambday	HeikoS: read only for which case?
@HeikoS	to avoid cloning data
@HeikoS	openmp
@HeikoS	features rarely are modified
@HeikoS	so read only views are needed
@lambday	HeikoS: but the algorithm is updating the matrix over and over.... I wonder why
@HeikoS	ah it is
@HeikoS	ok then
@HeikoS	well leave it
@HeikoS	as it is
@HeikoS	just refactor
@lambday	I mean, do we really need it to be a dense feature
@lambday	let me check
@HeikoS	probably not
@lambday	ah man this code
@HeikoS	hahaha
@lambday	only set would suffice.. no clone required
@HeikoS	yes
@lambday	as far as I can see
@HeikoS	no threading issues?
@lambday	let me change that, this method was added recently.. should be unit-tested properly
@HeikoS	cool,
@lambday	HeikoS: nah.. within the openmp multithreaded zone, the features object is not even used.. only the matrix
@HeikoS	new pr
@HeikoS	kk
@lambday	HeikoS: yeah new pr..
@lambday	:(
@HeikoS	cool
@HeikoS	I like PRs where code gets better
@HeikoS	rather than more bloated
@lambday	yeah.. when I was looking at our dense feature code.. I was feeling like changing most of it.. to make it more readable
@lambday	there was this book which says somewhere "always leave the code in a better state than it was whenever you touch it".. guess it applies nicely if we want things to be manageable ..
@lambday	have to be strict with our merging policies.. all of the current changes in my pr is happening because you didn't let me merge in the first place :D
-!- mikeling [uid89706@gateway/web/irccloud.com/x-clbrxoaqgcvnoeqc] has quit [Quit: Connection closed for inactivity]
@HeikoS	wiking: I invited the lab
@HeikoS	but cannot see anything where ppl log on
@HeikoS	how many etc
@sukey	Issue #3683 "Memcheck KMeans" opened by lambday - https://github.com/shogun-toolbox/shogun/issues/3683
@sukey	Issue #3683 "Memcheck KMeans" lambday added label: "bugfixing" - https://github.com/shogun-toolbox/shogun/issues/3683
@sukey	Issue #3683 "Memcheck KMeans" lambday added label: "entrance" - https://github.com/shogun-toolbox/shogun/issues/3683
@sukey	Issue #3683 "Memcheck KMeans" lambday added label: "Cleanups" - https://github.com/shogun-toolbox/shogun/issues/3683
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has joined #shogun
@HeikoS	lambday: memcheck?
@HeikoS	errors? :D
@sukey	Issue #3683 "Memcheck KMeans"- https://github.com/shogun-toolbox/shogun/issues/3683
@lambday	HeikoS: first I thought I introduced it.. then checked it with old code.. still got the same error..
@HeikoS	cool
@HeikoS	sigh
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has quit [Ping timeout: 260 seconds]
@sukey	Pull Request #3684 "Removed copy_feature_matrix method from DenseFeatures"  opened by lambday - https://github.com/shogun-toolbox/shogun/pull/3684
@sukey	Pull Request #3684 "Removed copy_feature_matrix method from DenseFeatures" - https://github.com/shogun-toolbox/shogun/pull/3684
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has quit [Ping timeout: 260 seconds]
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has joined #shogun
-!- deshalb [58e9944a@gateway/web/freenode/ip.88.233.148.74] has joined #shogun
-!- deshalb [58e9944a@gateway/web/freenode/ip.88.233.148.74] has left #shogun []
@sukey	Pull Request #3564 "Temp"  closed by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3564
-!- OXPHOS [92bd305b@gateway/web/freenode/ip.146.189.48.91] has joined #shogun
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 240 seconds]
 tj_	Hi, I am trying to resolve issue https://github.com/shogun-toolbox/shogun/issues/3663. As far as I have understood, InputParser uses the ParseBuffer(which is a ring buffer) to hold the data and does the parsing(with the help of Streaming*File classes) in a separate thread when started. Now the Streaming*Features fetches example objects one by one through a InputParser object.
 tj_	 So there is only one parsing thread(producer) and only one streaming*feature thread(consumer) at all times? Not multiple producer/multiple consumer?
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has quit [Quit: Page closed]
--- Log closed Sat Mar 11 00:00:59 2017
