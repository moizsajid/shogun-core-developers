--- Log opened Fri Mar 10 00:00:58 2017
-!- wudayoda_ [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Read error: Connection reset by peer]	00:45
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	00:46
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]	01:41
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	02:23
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]	03:06
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	03:47
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]	03:52
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	04:40
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]	04:49
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	06:46
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]	06:50
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	06:59
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 256 seconds]	07:04
-!- rads23 [8984030c@gateway/web/freenode/ip.137.132.3.12] has joined #shogun	07:41
-!- rads23 [8984030c@gateway/web/freenode/ip.137.132.3.12] has quit [Ping timeout: 260 seconds]	07:50
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-rezivwilyytbgaks] has joined #shogun	07:51
-!- wudayoda [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun	09:00
-!- ashu [616375c8@gateway/web/freenode/ip.97.99.117.200] has joined #shogun	09:56
-!- ashu [616375c8@gateway/web/freenode/ip.97.99.117.200] has quit [Client Quit]	09:57
-!- rads23 [8984030a@gateway/web/freenode/ip.137.132.3.10] has joined #shogun	10:14
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-rezivwilyytbgaks] has quit [Quit: Connection closed for inactivity]	10:16
-!- rads23 [8984030a@gateway/web/freenode/ip.137.132.3.10] has quit [Quit: Page closed]	10:39
CaBa	wiking: how was the presentation?	11:06
@wiking	good	11:06
@wiking	i should share the presentation somewhere	11:10
@wiking	;)	11:10
-!- geektoni [~Mutter@93-34-234-212.ip52.fastwebnet.it] has joined #shogun	11:32
-!- geektoni [~Mutter@93-34-234-212.ip52.fastwebnet.it] has quit [Client Quit]	11:35
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has quit [Read error: Connection reset by peer]	12:00
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun	12:02
-!- mode/#shogun [+o HeikoS] by ChanServ	12:02
-!- ShellcatZero [~ShellcatZ@cpe-76-93-136-67.san.res.rr.com] has joined #shogun	12:03
@wiking	HeikoS, y0	12:03
@HeikoS	jojo	12:03
@HeikoS	wiking:  how are things?	12:03
@wiking	tired	12:03
@wiking	but good	12:04
@HeikoS	good :D	12:04
@wiking	lemme know what is the expected number of people	12:04
@HeikoS	30	12:04
@wiking	look into that stuff	12:04
@wiking	ohohoooo	12:04
@wiking	when?	12:04
@HeikoS	tuesday	12:04
@wiking	kk	12:04
@wiking	no problemo	12:04
@wiking	btw	12:04
@HeikoS	can we test this somehow?	12:04
@wiking	what?	12:04
@HeikoS	would be a bit nervous not doing that	12:04
@wiking	i mean there's that	12:04
@HeikoS	30 ppl logging on	12:04
@HeikoS	and running stuff	12:05
@wiking	ah well u have 30 github accounts? :D	12:05
@HeikoS	no	12:05
@wiking	k	12:05
@wiking	then no	12:05
@wiking	but i mean	12:05
@wiking	it is simple	12:05
@wiking	just there are some stuff	12:05
@wiking	u should clarify	12:05
@wiking	a) is there any special stuff u need on shogun feature wise?	12:05
@HeikoS	I will finish the notebook on the weekend	12:05
@wiking	b) other then some notebooks do you wanna change the docker container's content	12:05
@HeikoS	what happens if I do need to push something to develop and that needs to be in there?	12:06
@wiking	c) how much resources one would need for running that stuff?	12:06
@HeikoS	ressources are minimal, like a laptop powered thing per person	12:06
@HeikoS	(same computing power)	12:06
@wiking	HeikoS, nono	12:06
@wiking	define	12:06
@wiking	:D	12:06
@wiking	not like some vague shit	12:06
@wiking	define	12:06
@wiking	vpcu	12:06
@wiking	*vcpu	12:06
@wiking	and ram	12:06
@HeikoS	how can I?	12:06
@wiking	https://github.com/shogun-toolbox/docs/pull/5	12:06
@wiking	this is what happens when u push shit into develop	12:07
@wiking	we have nightly debian packages	12:07
@HeikoS	ah cool will review	12:07
@HeikoS	ok then	12:07
@wiking	of course i can update them faster	12:07
@wiking	than nightly	12:07
@wiking	i mean anytime	12:07
@HeikoS	if I push on Monday, is that in there Tuesday?	12:07
@wiking	on demand :)	12:07
@HeikoS	cool	12:07
@wiking	man	12:07
@wiking	shogun-buildbot dance	12:07
@wiking	shogun-buildbot: dance	12:07
shogun-buildbot	<(^.^<)	12:07
shogun-buildbot	<(^.^)>	12:07
shogun-buildbot	(>^.^)>	12:07
shogun-buildbot	(7^.^)7	12:07
@HeikoS	good	12:07
shogun-buildbot	(>^.^<)	12:07
@wiking	so yeah he will dance when you want	12:07
@HeikoS	ok so ressources	12:07
@wiking	and generate package when u instruct it	12:08
@wiking	but by default it's nightly	12:08
@HeikoS	I think 4GB ram and 2cpu per person for the afternoon	12:08
@HeikoS	thats way more than is needed but a good guideline	12:08
@HeikoS	is that good?	12:08
-!- mikeling [uid89706@gateway/web/irccloud.com/x-clbrxoaqgcvnoeqc] has joined #shogun	12:09
@wiking	HeikoS, you know	12:10
@wiking	i dont  :)	12:10
@HeikoS	wiking: I mean as in is that specified enough?	12:11
@HeikoS	the ressources will be enough	12:12
@wiking	k	12:12
@HeikoS	wiking: and re the saving stuff	12:12
@wiking	?	12:14
@HeikoS	so you said that will all go then, i.e. people's notebook will be saved under their "account"	12:15
@HeikoS	?	12:15
@HeikoS	wiking: another question: what happens if there is a problem (i.e. the service doenst work or so)	12:15
@wiking	what do yo umean?	12:18
@wiking	i mean what happens usually when a service is down? :D	12:18
@HeikoS	wiking: I meant: can I call you? :D	12:18
@wiking	HeikoS, well yeah the saving thing i have a solution... just currenlty it's too slow	12:18
@wiking	that's why it's now as it is	12:18
@HeikoS	ok	12:18
@wiking	but i'll try to fix this over the weekend	12:19
@HeikoS	cool	12:19
@wiking	if the service goes down	12:19
@wiking	u can call me	12:19
@HeikoS	wiking: whats you opinion on dataset, we usually have them on some server and people download them by hand	12:19
@wiking	?	12:19
@wiking	it's there	12:19
@wiking	now	12:19
@HeikoS	http://www.gatsby.ucl.ac.uk/~gretton/adaptModel/ShortCourseLab.pdf	12:19
@wiking	we can do it the same way	12:20
@wiking	just mount it in	12:20
@wiking	read only	12:20
@wiking	btw	12:20
@HeikoS	okok	12:20
@wiking	we need a different domain	12:20
@wiking	btw	12:20
@wiking	just to be clear	12:20
@wiking	that shogun	12:20
@wiking	has no svmlight	12:20
@HeikoS	yes	12:21
@HeikoS	no worries	12:21
@wiking	you are aware of it right?	12:21
@HeikoS	just need any kernel svm	12:21
@wiking	k	12:21
@HeikoS	and naive bayes should work, but I will check that	12:21
@wiking	kk	12:21
@wiking	i mean go through the thing	12:21
@wiking	if u need 2vcpu + 4 gis of ram	12:22
@wiking	that is	12:22
@wiking	60 cores and 120 gig ram	12:22
@wiking	right	12:22
@wiking	?	12:22
@HeikoS	but that is auto allocated right?	12:22
@HeikoS	yes	12:22
@HeikoS	I dont know *exact* number of people, but this will be more that sufficient	12:22
@wiking	what is auto located/	12:22
@wiking	?	12:22
@HeikoS	the number of instances	12:22
@HeikoS	running	12:22
@wiking	in what sense?	12:22
@wiking	yeah they should scale	12:22
@HeikoS	like if only 10 people show up	12:22
@wiking	but it takes some time to scale up an instance	12:23
@HeikoS	we dont run 60 cores the while time?	12:23
@wiking	like 2 minutes or so	12:23
@HeikoS	okok	12:23
@wiking	so it's better have some stuff already running there	12:23
@HeikoS	I understand	12:23
@HeikoS	will it turn itself off after a while if not used?	12:23
@wiking	yes it should downscale	12:23
@HeikoS	ok cool	12:26
@HeikoS	this will be pretty awesome	12:26
@HeikoS	see all the mex shit in the pdf?	12:26
@wiking	btw	12:26
@wiking	yes	12:26
@wiking	that is ugly	12:26
@wiking	so	12:26
@wiking	do u think	12:26
@wiking	we should do a benchmark on this: https://aws.amazon.com/ec2/instance-types/x1/	12:26
@wiking	:)	12:26
@wiking	x1.32xlarge = 1,952 Gb of ram	12:27
@HeikoS	oh wow	12:27
@wiking	it'd be cool to do a test with http://labs.criteo.com/2013/12/download-terabyte-click-logs/	12:27
@wiking	it's 13 usd/h	12:27
@HeikoS	we have lots of funds still right? :)	12:27
@wiking	yes	12:28
@wiking	we cannot index that amount of data though :)	12:28
@wiking	i have BigInput branch	12:28
@wiking	it's a lot of fucking replace for int32_t -> index_t	12:28
@wiking	but would be cool to have a benchmark	12:28
@HeikoS	agreed	12:28
@wiking	to see not only accuracy	12:29
@wiking	but time	12:29
@wiking	:)	12:29
@wiking	compared to other horizontally scalable stuff	12:29
@HeikoS	wiking: btw	12:30
@HeikoS	what do we need to release ? :D	12:30
@wiking	mmm	12:30
@wiking	fix for cloud	12:30
@wiking	and there are all the read shit	12:31
@wiking	*red shit	12:31
@wiking	in the buildbot	12:31
@wiking	nightlies are failing	12:31
@wiking	PRs are failing	12:31
@wiking	documentations are failing	12:31
@HeikoS	okok	12:31
@HeikoS	will fix some of that	12:31
@HeikoS	what do you think about opencv notebook?	12:31
@HeikoS	needs some installation update	12:31
@HeikoS	of opencv as they split some things out of the lib	12:31
@HeikoS	and cmake newer version for PRE	12:31
@HeikoS	PR	12:31
@wiking	ah	12:32
@wiking	and still have no idea	12:32
@wiking	what to do with octave	12:32
@wiking	and we still hve some stuff going on	12:32
@wiking	with CV	12:32
@HeikoS	yeah	12:32
@HeikoS	tests pass	12:32
@wiking	http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/60/steps/test/logs/stdio	12:32
@wiking	here they dont	12:33
@HeikoS	oh wow didnt realise	12:33
@wiking	and there's omething	12:33
@wiking	with nihgtly_none	12:33
@HeikoS	well ok that needs fi	12:33
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has left #shogun []	12:33
@wiking	that rahul was working on	12:33
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun	12:33
-!- mode/#shogun [+o HeikoS] by ChanServ	12:33
@HeikoS	wiking: tweet about the cloud when done! :)	12:37
@wiking	yeye	12:38
@wiking	i deliberately didn't	12:38
@wiking	till it's all nice and good	12:38
@wiking	btw	12:38
@wiking	what is the plan	12:38
@wiking	shouldn't we have like	12:38
@wiking	R, java, scala and maybe c++ kernels	12:38
@wiking	for jupyter?	12:38
@wiking	all in one? :)	12:38
@HeikoS	yeah that would be cool	12:38
@HeikoS	so cool in fact	12:38
@HeikoS	though we dont have notebook demos yet	12:39
@HeikoS	but well	12:39
@HeikoS	still cool to run shogun	12:39
@wiking	yes	12:39
@wiking	somebody should test	12:39
@wiking	whether it's possible to have	12:39
@wiking	multiple kernels	12:39
@wiking	i know you can have	12:39
@wiking	python2 and 3	12:39
@HeikoS	yes that definitely	12:39
@HeikoS	I dont know much aobut jupyter and the other kernels	12:40
@HeikoS	meta notebooks would be so cool	12:40
@wiking	https://github.com/michhar/rpy2_sample_notebooks/blob/master/TestingRpy2.ipynb	12:41
@wiking	but this is not really	12:41
@wiking	i mean i dont want to mix	12:41
@wiking	language in one notebook	12:42
@wiking	just to have the option	12:42
@wiking	of different language	12:42
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has left #shogun []	12:42
@wiking	in different notebook	12:42
@wiking	s	12:42
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun	12:42
-!- mode/#shogun [+o HeikoS] by ChanServ	12:42
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf	12:47
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 240 seconds]	12:55
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun	12:58
-!- mode/#shogun [+o HeikoS] by ChanServ	12:58
@wiking	HeikoS, y0	13:59
@HeikoS	jo	13:59
@wiking	what do u think we should be more mem heavy	13:59
@wiking	or cpu heavy?	13:59
@wiking	with the instances?	13:59
@HeikoS	mem wont be too large	13:59
@wiking	in general	13:59
@wiking	not about	13:59
@HeikoS	in general	13:59
@HeikoS	phew	13:59
@HeikoS	not sure	13:59
@wiking	the course	13:59
@wiking	currenlty	14:00
@wiking	u get	14:00
@wiking	1 vpcu	14:00
@HeikoS	it doesnt need to be super fast	14:00
@wiking	and 3 gigs of ram	14:00
@HeikoS	yeah thats fine I think	14:00
@HeikoS	we can adjust later	14:00
@HeikoS	if people complain?	14:00
@wiking	mmm of course	14:00
@wiking	the problem is this	14:00
@wiking	https://aws.amazon.com/ec2/instance-types/	14:00
@wiking	currenlty i use m4.xlarge	14:01
@wiking	but maybe we should be using c4.xlarge	14:01
@wiking	see what i mean?	14:02
@wiking	because m4.xlarge = 4 people roughly....	14:02
@HeikoS	yeah I see	14:02
@HeikoS	I think we cannot really decide this now	14:02
@wiking	nono	14:02
@wiking	we can	14:02
@wiking	later	14:02
@wiking	how this is devided up	14:02
@wiking	divided	14:02
@wiking	that's another story	14:03
@wiking	but i have a fealing	14:03
@wiking	*feeling	14:03
@wiking	that we are too heavy per instance	14:03
@wiking	on memory	14:03
@wiking	it's not being used	14:03
@wiking	while cpu is .......well not enough	14:03
@HeikoS	yeah	14:04
@HeikoS	true	14:04
@HeikoS	model selection and stuff	14:04
@HeikoS	people wont do huge datasets in there	14:04
@HeikoS	so agreed	14:04
@wiking	i have an arm64 at hom atm	14:12
@wiking	should try to get shogun running on it :)	14:12
@wiking	i wonder if it works	14:12
@HeikoS	phew :)	14:21
@HeikoS	maybe a good idea	14:21
@HeikoS	though I wonder about priorities :D	14:21
@HeikoS	probably wont work	14:21
@HeikoS	haha	14:21
@HeikoS	but I love more architechtures and OS	14:21
@wiking	HeikoS, why not?	14:27
@wiking	i mean	14:27
@wiking	on fedora	14:28
@wiking	i think we have all that compiled	14:28
@wiking	https://koji.fedoraproject.org/koji/buildinfo?buildID=859779	14:29
@wiking	there	14:29
@wiking	shogun-5.0.0-0.5.fc26.aarch64.rpm	14:30
@wiking	:)	14:30
@HeikoS	wiking: jo	14:57
@wiking	po	14:58
@HeikoS	wiking:  just talked to arthur a bit	14:58
@HeikoS	about getting some $$$ to shogun for setting up the cloud for the course	14:58
@wiking	good :)	14:58
@wiking	i should write the blog post soon	14:58
@HeikoS	if you can estimate number of hours	14:58
@wiking	about the whole story	14:58
@wiking	mmm	14:58
@HeikoS	you did	14:58
@wiking	we can do the accounting	14:58
@HeikoS	and me too	14:58
@wiking	aaah	14:58
@HeikoS	there is two ways	14:58
@wiking	noo it's ok	14:58
@wiking	i can give you the aws accoutning	14:58
@HeikoS	one is: we write an invoice over numfocus (in the future)	14:58
@HeikoS	other option is: we are hired by UCL CS department	14:59
@wiking	mmmm look	14:59
@HeikoS	(thats how I am paid for the course stuff I do)	14:59
@wiking	for me it's only thing is	14:59
@HeikoS	and then can donate to shogun account	14:59
@HeikoS	point is to get something for it	14:59
@wiking	that i would like to have this for future shit for shogun	14:59
@wiking	liek	14:59
@wiking	sonney2k, have u reimbursed	14:59
@HeikoS	yeah I see, just sayintg it is a nice side effect	14:59
@wiking	my fossasia stuff? :D	14:59
@wiking	i guess i should ping him via email/faceboko	15:00
@HeikoS	so we can definitely do that via ucl human ressources and then each of us donates	15:00
@wiking	mmm	15:00
@wiking	if  they can hold up with shit	15:00
@HeikoS	and even cooler would be if ucl donates to shogun for that	15:00
@wiking	then lets wait till april	15:00
@HeikoS	yeah agreed	15:00
@wiking	and by then	15:00
@HeikoS	just wanted to share	15:00
@wiking	we know something about numfocus	15:00
@HeikoS	since I just discussed	15:00
@HeikoS	sure sure	15:00
@wiking	kk	15:00
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has joined #shogun	15:13
-!- mode/#shogun [+o lambday] by ChanServ	15:13
@lambday	HeikoS: yo	15:13
@lambday	HeikoS: agreed on reallocation.. removing that...	15:14
@lambday	should fail if not enough memory is there	15:14
@HeikoS	lambday: jojo	15:15
@HeikoS	lambday: just check num rows columns	15:15
@HeikoS	caller responsibility	15:15
@lambday	yeah	15:15
@lambday	this one is way too flexible.. inviting callers to screw things up :D	15:16
@HeikoS	REQUIRE can help	15:16
@lambday	BTW did you notice that this patch reduced the number of memallocs from N to 1?	15:16
@HeikoS	I mean if somebody gives a matrix with less memory allocated than in num_cols they deserve a segfault	15:16
@HeikoS	nope, can you poiunt me to it	15:17
@lambday	the way it worked before... you allocate the total memory once.. then copy the current.... then copy the return values of the get_feature_matrix() of other features.. which themselves did one memalloc extra...	15:18
@lambday	now, since you can pass pre-allocated things, the other features don't alloc those matrices, rather uses the pre-allocated one, with column offset :)	15:19
@lambday	HeikoS: https://github.com/lambday/shogun/blob/221cdcac33b7b08899322f3060e692b248f768c0/src/shogun/features/DenseFeatures.cpp#L1061	15:19
@HeikoS	lambday: jojo	15:25
@HeikoS	lambday: hey I have a question	15:25
@HeikoS	or more like wiking has	15:26
@lambday	HeikoS: yeah	15:26
@HeikoS	he wants to showcase some of the fast testing speed stuff at a talk next week	15:26
@HeikoS	so we was asking for code to reproduce the plots in the paper	15:26
@HeikoS	so the code for that is kinda messed up / not in a state to share(/reproduce	15:26
@lambday	HeikoS: it's on gatsby's machine	15:26
@HeikoS	but maybe you can point viktor to the script that does the comparisons?	15:26
@lambday	yeah	15:26
@HeikoS	lambday: like especially comparing old shogun vs new shogun	15:27
@lambday	HeikoS: alright.. maybe we can have a separate script for that one.. which takes two libshogun.so as params...	15:27
@lambday	so, the speed-up with number of threads won't help.. he needs something that he can compare on single core..	15:28
@lambday	otherwise it's not just to the old code	15:28
@HeikoS	lambday: so optimal world: you clean up the scripts so that there is a single clean one that reproduces the plots	15:30
@wiking	mmm	15:30
@HeikoS	lambday: and then wiking can take this script and modify it to generate some cool vis for the presentation	15:30
@wiking	if possible	15:30
@wiking	just a string of data	15:31
@wiking	is much better	15:31
@wiking	no need for the graph	15:31
@wiking	:D	15:31
@wiking	just tell me what's axis x and y	15:31
@wiking	and the data points	15:31
@wiking	:D	15:31
@wiking	after that i can generate the graphs	15:31
@lambday	haha lovely :D	15:31
@wiking	of course	15:31
@wiking	i'm happy to modify the sciprt as well	15:31
@HeikoS	lambday: we need these scripts anyways	15:31
@wiking	whichever is the easiest atm	15:31
@lambday	HeikoS: I agree.. but remember we wanted to do it using pandas	15:31
@HeikoS	lambday: in dougals git	15:31
@wiking	pandas	15:32
@wiking	fuck python	15:32
@HeikoS	lambday: nah, text file stuff is ok	15:32
@wiking	:D	15:32
@HeikoS	lambday: just no piping :)	15:32
@HeikoS	just a script that generates the data for the plot	15:32
@HeikoS	can take a while is OK	15:32
@HeikoS	but just reproduce	15:32
@HeikoS	should be minimal effort no?	15:32
@lambday	gotta see.. do I still have the login? :P	15:32
@HeikoS	dougal also wanted to re-create the plot for camera ready version	15:32
@HeikoS	lambday: you do	15:32
@lambday	HeikoS: cool then.. will clean things up	15:33
@HeikoS	if you could put the stuff on your github somewhere? Then we could copy it	15:33
@HeikoS	cool man thx	15:33
@lambday	HeikoS: yeah sure	15:33
@lambday	HeikoS: u435a was it?	15:33
@HeikoS	lambday: doesnt matter filesystem is the same	15:33
@HeikoS	i am on sperry	15:33
@lambday	no but if I wanted to run..	15:34
@HeikoS	u435a is the machine you used	15:34
@HeikoS	sperry then	15:34
@lambday	HeikoS: cool let me try loggin in	15:34
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-tptznqwnhoqaakye] has joined #shogun	15:34
@HeikoS	lambday: let me know if you need help or something	15:35
@lambday	HeikoS: working	15:35
@lambday	HeikoS: sure	15:35
@HeikoS	cool	15:35
@lambday	HeikoS: shall I merge the patch first, once I rename the method and remove the reallocation feature?	15:36
@lambday	HeikoS: also, should we really make this method public?	15:36
@lambday	I have kept it protected	15:36
@HeikoS	lambday: why?	15:36
@HeikoS	ah	15:36
@HeikoS	yeah why not	15:36
@HeikoS	might be useful to copy out the subsetted matrix	15:36
@HeikoS	but	15:37
@HeikoS	maybe only the one that doesnt accept pre-aloocated	15:37
@HeikoS	otherwise messy	15:37
@HeikoS	or hide from SWIG	15:37
@HeikoS	or just leave protected	15:37
@lambday	HeikoS: wonder how the typemap works for SGMatrix.. does it use the same memory that, say, numpy passes or reallocates and copies in SGMatrix	15:37
@HeikoS	nono	15:37
@HeikoS	copy	15:37
@HeikoS	so definitely no SWIG for this one	15:37
@lambday	HeikoS: yeah so it will be messy	15:37
@HeikoS	only for a wrapper that allocates new mem	15:37
@lambday	yeah	15:38
@HeikoS	leave protected	15:38
@lambday	cool	15:38
@lambday	HeikoS: BTW the point I was talking about reducing the number of memalloc : https://github.com/lambday/shogun/blob/221cdcac33b7b08899322f3060e692b248f768c0/src/shogun/features/DenseFeatures.cpp#L1061	15:38
@HeikoS	I see	15:39
@HeikoS	I mean you can do that	15:39
@HeikoS	but pls make it a sep method	15:39
@HeikoS	sep. of concerns	15:39
@HeikoS	and then call it explicitly in the loop	15:39
@lambday	HeikoS nono this one does not require realloc.. that's the point	15:39
@HeikoS	I see	15:39
@lambday	even if I remove realloc, this method works	15:39
@HeikoS	ok then	15:39
@lambday	cause it is called on the "other" features	15:40
@lambday	which re-uses the pre-allocated matrix	15:40
@lambday	earlier, each of those "other" features was allocating one matrix for itself...	15:40
@lambday	see what I mean/	15:40
@HeikoS	I get it	15:42
@HeikoS	nice one	15:43
@wiking	ok	15:44
@wiking	people	15:44
@lambday	wiking: we, the people?	15:44
@lambday	;)	15:44
@wiking	yes	15:45
@wiking	so i'm tired	15:45
@wiking	and crashing	15:45
@wiking	but could you just drop me	15:45
@wiking	an email	15:45
@wiking	about the stuff	15:46
@wiking	?	15:46
@wiking	would appreciate	15:46
@lambday	wiking: yeah.. sure	15:46
@lambday	brb.. my laptop is fucked up..	15:47
@HeikoS	good night	15:47
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has quit []	15:47
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has joined #shogun	15:53
-!- mode/#shogun [+o lambday] by ChanServ	15:53
@HeikoS	lambday: you followed the team list?	15:54
@lambday	HeikoS: yo.. there is already a method named copy_feature_matrix.. which copies the matrix arg to "this" one	15:58
@lambday	HeikoS: yeah	15:58
@lambday	HeikoS: umm what do you mean?	15:58
@lambday	HeikoS: how about renaming the existing one to "use_feature_matrix" .... it is asking the class to "use" the matrix that it provides..	15:59
@lambday	HeikoS: then "copy_feature_matrix" could mean it copies the existing one	16:00
@lambday	https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/features/DenseFeatures.h#L272	16:02
@lambday	why is it virtual	16:03
@lambday	:/	16:03
@lambday	not being overridden anywhere	16:03
@HeikoS	lambday: well ....	16:05
@HeikoS	bad SE	16:05
@HeikoS	we should fix things	16:05
@HeikoS	but maybe in sep patches	16:05
@HeikoS	so issue these things	16:05
@lambday	HeikoS: tell me a good name for this method	16:05
@lambday	can't use copy_feature_matrix anymore	16:05
@HeikoS	I see	16:05
@lambday	:(	16:05
@HeikoS	use_feature_matrix for the other one seems better	16:06
@HeikoS	or even: set_feature_matrix	16:06
@lambday	yeah	16:06
@lambday	yeah set	16:06
@HeikoS	but that needs a separate PR	16:06
@lambday	so natural	16:06
@HeikoS	and then a rebase	16:06
@HeikoS	in your one	16:06
@lambday	err	16:06
@HeikoS	I mean such API changes should be separated from your changes	16:06
@lambday	HeikoS: well, actually it doesn't really "set"... it clones it first	16:06
@HeikoS	see what I mean?	16:06
@HeikoS	ah I  see	16:07
@lambday	HeikoS: so, set would convey something different	16:07
@HeikoS	ah such a method doesnt even make sense	16:07
@HeikoS	right?	16:07
@HeikoS	why would one want such function	16:07
@lambday	HeikoS: let me check whether it is being used anywhere	16:07
@HeikoS	caller can copy itself and then set	16:07
@HeikoS	sounds like I added this shit :D	16:07
@HeikoS	but yeah good to check	16:07
@lambday	Kmeans	16:07
@HeikoS	and overloading doesnt do it?	16:07
@lambday	that's the only one place	16:07
@HeikoS	lambday: ok then what about a PR that fixes that	16:08
@lambday	HeikoS: well, with overloading, you lose the default argument value for column_offset = 0	16:08
@HeikoS	and then you name it copy_*	16:08
@HeikoS	okok	16:08
@HeikoS	then I think it is OK to change	16:08
@lambday	HeikoS: change it to "use_feature_matrix" ?	16:08
@HeikoS	no	16:08
@HeikoS	caller clones matrix and then calls set	16:09
@lambday	makes sense	16:09
@HeikoS	or whatever	16:09
@HeikoS	just a setter	16:09
@lambday	yeah	16:09
@lambday	why clone I don't really understand :D	16:09
@lambday	anyway	16:09
@lambday	maybe it was required	16:09
@lambday	ah multithreaded	16:10
@HeikoS	lambday: I think it is good to check that	16:10
@HeikoS	and then fix :D	16:10
@lambday	yeah... so caller calls clone..	16:10
@lambday	makes zero sense to clone it within densefeature	16:10
@lambday	yeah just checked	16:11
@lambday	it's used within a openmp for	16:11
@lambday	we shouldn't accept such patches in the first place	16:11
@HeikoS	lambday: there you go :D	16:11
@HeikoS	I agree	16:11
@HeikoS	but things slip through	16:11
@HeikoS	so just fixing	16:11
@HeikoS	just read only saves the day there	16:12
@HeikoS	but the const stuff can be fixed later	16:12
@lambday	HeikoS: read only for which case?	16:12
@HeikoS	to avoid cloning data	16:12
@HeikoS	openmp	16:12
@HeikoS	features rarely are modified	16:12
@HeikoS	so read only views are needed	16:13
@lambday	HeikoS: but the algorithm is updating the matrix over and over.... I wonder why	16:13
@HeikoS	ah it is	16:13
@HeikoS	ok then	16:13
@HeikoS	well leave it	16:13
@HeikoS	as it is	16:13
@HeikoS	just refactor	16:13
@lambday	I mean, do we really need it to be a dense feature	16:13
@lambday	let me check	16:13
@HeikoS	probably not	16:14
@lambday	ah man this code	16:14
@HeikoS	hahaha	16:16
@lambday	only set would suffice.. no clone required	16:16
@HeikoS	yes	16:16
@lambday	as far as I can see	16:16
@HeikoS	no threading issues?	16:16
@lambday	let me change that, this method was added recently.. should be unit-tested properly	16:17
@HeikoS	cool,	16:17
@lambday	HeikoS: nah.. within the openmp multithreaded zone, the features object is not even used.. only the matrix	16:17
@HeikoS	new pr	16:17
@HeikoS	kk	16:17
@lambday	HeikoS: yeah new pr..	16:18
@lambday	:(	16:18
@HeikoS	cool	16:19
@HeikoS	I like PRs where code gets better	16:19
@HeikoS	rather than more bloated	16:19
@lambday	yeah.. when I was looking at our dense feature code.. I was feeling like changing most of it.. to make it more readable	16:25
@lambday	there was this book which says somewhere "always leave the code in a better state than it was whenever you touch it".. guess it applies nicely if we want things to be manageable ..	16:26
@lambday	have to be strict with our merging policies.. all of the current changes in my pr is happening because you didn't let me merge in the first place :D	16:27
-!- mikeling [uid89706@gateway/web/irccloud.com/x-clbrxoaqgcvnoeqc] has quit [Quit: Connection closed for inactivity]	16:30
@HeikoS	wiking: I invited the lab	17:19
@HeikoS	but cannot see anything where ppl log on	17:19
@HeikoS	how many etc	17:19
@sukey	Issue #3683 "Memcheck KMeans" opened by lambday - https://github.com/shogun-toolbox/shogun/issues/3683	17:23
@sukey	Issue #3683 "Memcheck KMeans" lambday added label: "bugfixing" - https://github.com/shogun-toolbox/shogun/issues/3683	17:23
@sukey	Issue #3683 "Memcheck KMeans" lambday added label: "entrance" - https://github.com/shogun-toolbox/shogun/issues/3683	17:23
@sukey	Issue #3683 "Memcheck KMeans" lambday added label: "Cleanups" - https://github.com/shogun-toolbox/shogun/issues/3683	17:23
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has joined #shogun	17:28
@HeikoS	lambday: memcheck?	17:28
@HeikoS	errors? :D	17:28
@sukey	Issue #3683 "Memcheck KMeans"- https://github.com/shogun-toolbox/shogun/issues/3683	17:29
@lambday	HeikoS: first I thought I introduced it.. then checked it with old code.. still got the same error..	17:29
@HeikoS	cool	17:30
@HeikoS	sigh	17:30
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has quit [Ping timeout: 260 seconds]	17:35
@sukey	Pull Request #3684 "Removed copy_feature_matrix method from DenseFeatures"  opened by lambday - https://github.com/shogun-toolbox/shogun/pull/3684	17:38
@sukey	Pull Request #3684 "Removed copy_feature_matrix method from DenseFeatures" - https://github.com/shogun-toolbox/shogun/pull/3684	17:43
-!- lambday [6a3311c5@gateway/web/freenode/ip.106.51.17.197] has quit [Ping timeout: 260 seconds]	18:14
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has joined #shogun	18:16
-!- deshalb [58e9944a@gateway/web/freenode/ip.88.233.148.74] has joined #shogun	18:45
-!- deshalb [58e9944a@gateway/web/freenode/ip.88.233.148.74] has left #shogun []	18:47
@sukey	Pull Request #3564 "Temp"  closed by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3564	19:01
-!- OXPHOS [92bd305b@gateway/web/freenode/ip.146.189.48.91] has joined #shogun	19:55
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 240 seconds]	20:26
tj_	Hi, I am trying to resolve issue https://github.com/shogun-toolbox/shogun/issues/3663. As far as I have understood, InputParser uses the ParseBuffer(which is a ring buffer) to hold the data and does the parsing(with the help of Streaming*File classes) in a separate thread when started. Now the Streaming*Features fetches example objects one by one through a InputParser object.	20:36
tj_	So there is only one parsing thread(producer) and only one streaming*feature thread(consumer) at all times? Not multiple producer/multiple consumer?	20:37
-!- tj_ [67e3630c@gateway/web/freenode/ip.103.227.99.12] has quit [Quit: Page closed]	20:54
--- Log closed Sat Mar 11 00:00:59 2017