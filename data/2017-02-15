--- Log opened Wed Feb 15 00:00:25 2017
@sukey	Issue #3609 "Linking errors with ATLAS library" closed by vigsterkr - https://github.com/shogun-toolbox/shogun/issues/3609
@sukey	Pull Request #3622 "Add Scala to DockerFile"  merged by vigsterkr - https://github.com/shogun-toolbox/shogun/pull/3622
@sukey	New Commit "Merge pull request #3622 from abhinavrai44/docker
@sukey	Add Scala to DockerFile" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/2fab5f1e8d5a2fd9b6a086a146dee19390d1c284
 shogun-buildbot	build #88 of trusty - libshogun is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun/builds/88  blamelist: Viktor Gal <vigsterkr@gmail.com>, abhinavrai44 <abhinavrai44@gmail.com>
@sukey	Pull Request #3610 "Java meta examples only re-compile when dependencies change."  synchronized by geektoni - https://github.com/shogun-toolbox/shogun/pull/3610
-!- suhas2go [uid201652@gateway/web/irccloud.com/x-ikvklnosjejkcxcu] has quit [Quit: Connection closed for inactivity]
-!- travis-ci [~travis-ci@ec2-54-80-142-4.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/201694848
-!- travis-ci [~travis-ci@ec2-54-80-142-4.compute-1.amazonaws.com] has left #shogun []
@sukey	Pull Request #3610 "Java meta examples only re-compile when dependencies change."  merged by vigsterkr - https://github.com/shogun-toolbox/shogun/pull/3610
@sukey	New Commit "Merge pull request #3610 from geektoni/patch-2
@sukey	Java meta examples only re-compile when dependencies change." to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/df30e2b4bc4a0d42986df6cda3c74fe24ee4555e
@sukey	Issue #3626 "Add " opened by vigsterkr - https://github.com/shogun-toolbox/shogun/issues/3626
@sukey	Issue #3626 "Add " vigsterkr added label: "entrance" - https://github.com/shogun-toolbox/shogun/issues/3626
@sukey	Issue #3626 "Add " vigsterkr added label: "Cleanups" - https://github.com/shogun-toolbox/shogun/issues/3626
@sukey	Issue #3626 "Add "- https://github.com/shogun-toolbox/shogun/issues/3626
@sukey	Issue #3556 "`make build_java_meta_examples` always re-compiles all java examples" closed by vigsterkr - https://github.com/shogun-toolbox/shogun/issues/3556
@sukey	Issue #3557 "`make build_csharp_meta_examples` always re-compiles all java examples" closed by vigsterkr - https://github.com/shogun-toolbox/shogun/issues/3557
@sukey	Pull Request #3606 "Add CMake to Detect Scala"  merged by vigsterkr - https://github.com/shogun-toolbox/shogun/pull/3606
@sukey	New Commit "Merge pull request #3606 from abhinavrai44/dev
@sukey	Add CMake to Detect Scala" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/44f13ae7bbdc2f195b5d4312d15ed52f819d26c5
 shogun-buildbot	build #89 of trusty - libshogun is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun/builds/89
@sukey	Pull Request #3593 "Port existing BrayCurtis Distance example to meta"  merged by vigsterkr - https://github.com/shogun-toolbox/shogun/pull/3593
@sukey	New Commit "Merge pull request #3593 from abhinavrai44/abhi
@sukey	Port existing BrayCurtis Distance example to meta" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/308d300461088ead48aabdcbe55c67b1fa30eb63
@sukey	New Commit "fix LTO status message
@sukey	and fix shogun-data" to shogun-toolbox/shogun by vigsterkr: https://github.com/shogun-toolbox/shogun/commit/e8cb1e8efc4bf071b5b8f5276549965ef5172a4d
 shogun-buildbot	build #123 of trusty - libshogun - viennacl is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun%20-%20viennacl/builds/123  blamelist: Viktor Gal <vigsterkr@gmail.com>, abhinavrai44 <abhinavrai44@gmail.com>
 shogun-buildbot	build #124 of trusty - libshogun - viennacl is complete: Success [build successful]  Build details are at http://buildbot.shogun-toolbox.org/builders/trusty%20-%20libshogun%20-%20viennacl/builds/124
@sukey	Issue #3605 "port parallel code using pthread"- https://github.com/shogun-toolbox/shogun/issues/3605
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- mikeling [uid89706@gateway/web/irccloud.com/x-dajmozufoyahcrni] has joined #shogun
@sukey	Pull Request #3608 "Clean up KNN"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3608
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 276 seconds]
@sukey	Pull Request #3608 "Clean up KNN"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3608
-!- travis-ci [~travis-ci@ec2-54-91-71-85.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/201720442
-!- travis-ci [~travis-ci@ec2-54-91-71-85.compute-1.amazonaws.com] has left #shogun []
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- travis-ci [~travis-ci@ec2-54-90-247-33.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/201721411
-!- travis-ci [~travis-ci@ec2-54-90-247-33.compute-1.amazonaws.com] has left #shogun []
-!- tctara_ [~quassel@128.199.61.169] has joined #shogun
-!- tctara [~quassel@128.199.61.169] has quit [Ping timeout: 255 seconds]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 268 seconds]
-!- travis-ci [~travis-ci@ec2-54-90-247-33.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/201721961
-!- travis-ci [~travis-ci@ec2-54-90-247-33.compute-1.amazonaws.com] has left #shogun []
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
@sukey	Pull Request #3623 "Add Scala to .travis.yml"  closed by abhinavrai44 - https://github.com/shogun-toolbox/shogun/pull/3623
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 255 seconds]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Ping timeout: 240 seconds]
-!- praisethemoon [~praisethe@197.3.11.178] has joined #shogun
@sukey	Pull Request #3627 "Make meta_examples depend on python generator and language files."  opened by geektoni - https://github.com/shogun-toolbox/shogun/pull/3627
@sukey	Pull Request #3597 "Add Scala Interface"  synchronized by abhinavrai44 - https://github.com/shogun-toolbox/shogun/pull/3597
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@sukey	Pull Request #3597 "Add Scala Interface"  synchronized by abhinavrai44 - https://github.com/shogun-toolbox/shogun/pull/3597
@sukey	Pull Request #3611 "Enable meta examples when ENABLE_TESTING is OFF."  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3611
@sukey	New Commit "Merge pull request #3611 from geektoni/patch-3
@sukey	Enable meta examples when ENABLE_TESTING is OFF." to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/3130c158861b1999ef7a27546384b4a1c5cac089
@sukey	Pull Request #3619 "LinalgRefactor - Enable matrix block elementwise product"  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3619
@sukey	New Commit "Merge pull request #3619 from OXPHOS/linalg_element_square
@sukey	LinalgRefactor - Enable matrix block elementwise product" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/2beda114e7ec42be3be7b15598e025d2bffda0f8
@wiking	HeikoS, h0
@wiking	y0
@HeikoS	wiking: jojo
@wiking	ok things are rolling :)
@HeikoS	they are :)
@HeikoS	fingers crossed about our gsoc application
@wiking	ah yeah
@wiking	so 2 things
@wiking	a) Gunnar
@wiking	b) joining an umbrella org
@wiking	and c) i've prepared a draft for the new release
@wiking	https://github.com/shogun-toolbox/shogun/releases
@wiking	for the release actually i need to fix 2 things
@wiking	1) modular octave force 1 thread
@HeikoS	wiking: looks good
@HeikoS	wiking: you are on fire ;)
@wiking	2) fix all the failing stuff that are caused in the analytics
@HeikoS	yes I saw the email
@wiking	build jobs
@wiking	ah and the last thing
@wiking	i need to look at the notebooks
@wiking	ipython
@wiking	i reckon they are now not being all generated
@wiking	ah and fuck
@wiking	the notebook jobs
@wiking	:<
@wiking	that actually is required for the PR job as well
@wiking	fucking old cmake on 7nn.de sonney2k !
@wiking	so yeah there are like 5 more tasks
@wiking	but after that
@wiking	it's releasable
@wiking	:DDDDD
@HeikoS	hehe
@sukey	Pull Request #3608 "Clean up KNN"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3608
@HeikoS	wiking: so what about merginng linalg soon?
@sukey	Pull Request #3627 "Make meta_examples depend on python generator and language files."  synchronized by geektoni - https://github.com/shogun-toolbox/shogun/pull/3627
@sukey	Pull Request #3627 "Make meta_examples depend on python generator and language files."  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3627
@sukey	New Commit "Merge pull request #3627 from geektoni/patch-5
@sukey	Make meta_examples depend on python generator and language files." to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/618a2989e3a0b0412bd196856f410c9fd93c09bb
@wiking	yeah that shit should go
@wiking	but we should get
@HeikoS	wiking: to get rid of all the cmake fuck
@HeikoS	for linalg
@wiking	Pan to fix the multithreading/atomicity stuff done
@HeikoS	ah yes
@wiking	i can try rebasing
@wiking	the feature branch
@HeikoS	wiking: I mean it is not yet used in develop a lot
@HeikoS	wiking: yeah good idea
@wiking	ah and there i think
@wiking	we should actually use the new feature of cmake 3.1
@wiking	https://cmake.org/cmake/help/v3.1/variable/CMAKE_CXX_STANDARD.html
@wiking	so you can just do this
@wiking	set(CMAKE_CXX_STANDARD 11)
@wiking	:>
@HeikoS	thats cool!
@HeikoS	wiking: ah man sweet with the python ppa
@HeikoS	Ill add to the website readme I guess?
@wiking	yeah and the full restruct of cmake
@wiking	makes things much much more cleaner
@wiking	yeah we should
@wiking	now i'm working on the jupytherhub
@wiking	:)
@wiking	that should fucking kill it :)
@wiking	jupyterhub + aws
@wiking	and then we blog a bit about it
@HeikoS	wiking: so the python module is in the existing ppa, the same package
@HeikoS	wiking: yeah man
@wiking	yes
@HeikoS	actually
@wiking	so just add-apt-repository
@wiking	and then
@HeikoS	maybe lea can write that, she wanted to do something
@wiking	apt-get install python-shogun
@wiking	yeah that'd be huge help
@wiking	and
@wiking	we should put there the credz for AWS
@wiking	for giving us this
@HeikoS	yep yep yep
@wiking	so maybe we could get creds this year as well
@wiking	because you know
@HeikoS	yep absolutely
@wiking	that our fundings are running low in may
@wiking	and man
@wiking	we barely used 1k
@HeikoS	good timing because we need to reapply for credits
@wiking	but they are gonna be liek
@wiking	"wtf u asked for 15k
@wiking	u used 1k
@wiking	:D
@HeikoS	man its going well :)
@HeikoS	just doiscussing with lea the post
@HeikoS	brb
@wiking	HeikoS, $1,199.80
@wiking	:)
@wiking	used creds
 lisitsyn	hey
@wiking	sup?
 lisitsyn	what's going on
 lisitsyn	:)
@wiking	lisitsyn, idk if you realised but i've just merged the other day commits of yours from 2015
@wiking	:)
 lisitsyn	really
 lisitsyn	which ones?
 lisitsyn	oh
 lisitsyn	oh god IT WAS 2015
 lisitsyn	crazyiest shietz
@wiking	:>
@wiking	but yeah gut stuff
@wiking	man
@wiking	wanted to ask you
@wiking	but now i cannot recall wtf
 lisitsyn	haha
 lisitsyn	wiking: so what are you thoughts on bazel or stuff like that?
@wiking	mmm good shit
@wiking	but man
@wiking	i dont wanna do it
@wiking	you know how shitty it is
@wiking	...
@wiking	fuck
 lisitsyn	yeah it's like shitload of work
@wiking	no fucking way
@wiking	actually now
@wiking	cmake is in a very very good state
@wiking	it's almost totally devided
@wiking	into subprojects
 lisitsyn	yeah true
@wiking	libshogun, python
 lisitsyn	no need to bother
@wiking	everything
@wiking	i removed a lot of shit from the main cmakelists.txt
@wiking	(the one in the root)
 lisitsyn	one other thought I have
 lisitsyn	we may store our basic stuff in protos
@wiking	now you can actually build separately modular interfaces from libshogun
 lisitsyn	I mean it may be some logic over protobufs
@wiking	yeah
@wiking	i'm totally ++ for that
 lisitsyn	this way people can introspect anything
@wiking	makes things very clean
@wiking	and yeah exactly
 lisitsyn	ok glad you like it
@wiking	you dont care about for swig interface at that time
@wiking	you just get the generated code
@wiking	and fuck all
@wiking	you use that directly
@wiking	there are couple of things i head in mind actuall
@wiking	y
 lisitsyn	are you talking about protobuf interfaces?
 lisitsyn	that's even better
@wiking	yes
@wiking	i would totally use
@wiking	.proto
@wiking	for defining interface
@wiking	why not?
 lisitsyn	yeah sure
@wiking	then you can even rpc
 lisitsyn	it is good as well
@wiking	and then all that shit
@wiking	is totally transparent for you
@wiking	is it called locally
@wiking	is it called on the moon
@wiking	you dont fucking care
 lisitsyn	not always good but
 lisitsyn	still
 lisitsyn	but again not only that
 lisitsyn	but
 lisitsyn	another thing
 lisitsyn	we may store everything in protos
@wiking	but what do you mean by storing?
 lisitsyn	this way you may easily hack any classifier
 lisitsyn	well
 lisitsyn	say some state of classifier
 lisitsyn	weights etc
 lisitsyn	make it exposable
@wiking	ah and u use proto for that?
 lisitsyn	yes
@wiking	sure
@wiking	that sounds very reasonable for me
@wiking	:)
 lisitsyn	so it is like some code operating on protobufs
@wiking	yeah
 lisitsyn	sounds like google
@wiking	let's have like
@wiking	JIT for proto
@wiking	right?
@wiking	 :D
 lisitsyn	haha
 lisitsyn	why
@wiking	i mean you can totally do that btw
@wiking	nativeJIT + protoc
@wiking	and fuck all
@wiking	:)
 lisitsyn	not sure what are advantages
 lisitsyn	just to speed it up?
@wiking	ha well
@wiking	if you do autodiff
@sukey	Pull Request #3608 "Clean up KNN"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3608
@wiking	or anything where you actually need some sort of codegen
@wiking	right?
@HeikoS	re
@wiking	in runtime
-!- praisethemoon [~praisethe@197.3.11.178] has quit [Ping timeout: 268 seconds]
 lisitsyn	ahh ok
@wiking	btw so i was wondering if we wanna look at this YOLO project https://arrow.apache.org/
@wiking	for interoperable memory storage
 lisitsyn	I am not sure this should go into shogun
 lisitsyn	I mean there are dozens of them
 lisitsyn	we'd better make it interoperable with all that stuff
@wiking	yteah thats' what i meant
 lisitsyn	no idea how though
@wiking	yeah that is a good question
@wiking	i mean now i'm looking into thrill
@wiking	and wondering how we could use like making batch models with shogun
@wiking	and then aggregate for example
@wiking	ah and one more thing i had in mind
@wiking	remember the other day
@wiking	i was wishing i would have reflection in c++
@wiking	so now that whenever in the distance future
@wiking	we manage to get this modularization done
@wiking	it'd be cool to have a tool as well
@wiking	that would help you to create pipelines
@wiking	of these modules
@HeikoS	wiking: first step, being able to serialize our models :)
 lisitsyn	what reflection do you need?
@wiking	where the execution is actually a just a config file
@wiking	not code
@wiking	so wha ti meant is say
@HeikoS	wiking: you got a link to that openmp patch you mentioned earlier, cannot find it somehow
@wiking	- CSVFileread
@wiking	   - input: "file.csv"
@wiking	- Label
@wiking	  - labels: input[0]
@wiking	etc etc.
@HeikoS	ah got it
@wiking	oh cool
@wiking	lisitsyn, see what i mean?
@sukey	Wiki page: GSoC_2017_project_fundamental_usual_suspects edited on shogun-toolbox/shogun by karlnapf
 lisitsyn	wiking: yeah
@wiking	but for that
@wiking	i need a way to do reflection right?
 lisitsyn	ahh
 lisitsyn	ok
@wiking	i mean with our sgserialization (class_list.cpp)
@wiking	we have our class factory
@wiking	so that's cool
@wiking	but then
@wiking	how do i know that i can call Label.set_labels(...)
@wiking	see what i mean?
@wiking	without reflection
@wiking	or fuckthis shit and jsut do this in a language that has reflection? :D
@sukey	Wiki page: GSoC_2017_detox edited on shogun-toolbox/shogun by karlnapf
@wiking	i mean the great stuff with tags
@wiking	that at least with that
@wiking	doing something like
@wiking	- CSVM:
@wiking	   - param1: value
@wiking	  - param2: value
@wiking	  - param3: value
@wiking	would be possible easily
@wiking	right?
@wiking	as that is just translated into
@wiking	obj.set(key, value)
@wiking	but when you wanna call a function with the right args
@wiking	things gets messy
@wiking	but yeah i dont see the reason why couldn't we have like a scripting language or something
@wiking	where we could create these pipelines
@wiking	because this would help easy prototyping
@wiking	and actually
@wiking	the good stuff with your idea of protos
@wiking	that you could use those interfaces to define these pipelines :)
@sukey	Issue #3628 "Surpress "unused variable" warnings in compiled meta examples" opened by karlnapf - https://github.com/shogun-toolbox/shogun/issues/3628
@sukey	Issue #3628 "Surpress "unused variable" warnings in compiled meta examples" karlnapf added label: "Cleanups" - https://github.com/shogun-toolbox/shogun/issues/3628
@sukey	Issue #3628 "Surpress "unused variable" warnings in compiled meta examples" karlnapf added label: "entrance" - https://github.com/shogun-toolbox/shogun/issues/3628
-!- abhinav [~abhinav@103.211.52.154] has joined #shogun
@sukey	Issue #3628 "Surpress "unused variable" warnings in compiled meta examples"- https://github.com/shogun-toolbox/shogun/issues/3628
-!- HeikoS [~heiko@host-92-0-178-129.as43234.net] has quit [Ping timeout: 260 seconds]
-!- abhinav [~abhinav@103.211.52.154] has quit [Quit: Leaving]
 lisitsyn	wiking: ok got it
@wiking	lisitsyn, and what's your opinion? :)
@sukey	Pull Request #3620 "Add time comparison for KNN_KDTREE"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3620
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@wiking	lol
@wiking	https://github.com/search?utf8=%E2%9C%93&q=remove+password&type=Commits&ref=searchresults
@wiking	:>>
@sukey	Wiki page: Google-Summer-of-Code-2017-Projects edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_detox edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_low_hanging_fruit created on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_low_hanging_fruit edited on shogun-toolbox/shogun by karlnapf
 CaBa_	wiking: yeah, since this was on reddits especially the page 1 hits get commented on their commits ^^
 CaBa_	*reddit
@wiking	:)
@sukey	Issue #3612 "Stratified Cross Validation with Combined Kernels using Custom Kernels"- https://github.com/shogun-toolbox/shogun/issues/3612
 CaBa_	wiking: "I'm a bit disappointed now that putting 'protected' in front of the password doesn't protect it ;)"
@wiking	:>>>>>>>>>>>>
@wiking	HeikoS, btw i think
@wiking	we should try re-revert
@wiking	the commit for the multithreaded xval
@wiking	:D
@HeikoS	wiking: hehe :)
@HeikoS	yeah
@HeikoS	do it! :)
@HeikoS	or hsall I?
@HeikoS	wiking: btw had a cool idea for another gsoc project
@HeikoS	potentially a joint one where everyone has to participate
@wiking	self-driving cars? :D
@HeikoS	wiking: The low hanging fruit (TM)
@HeikoS	will put it in wiki later today
@wiking	cool
@HeikoS	wiking: btw for release
@HeikoS	I guess we put all issues in the 5.1 milestone to 5.2
@wiking	mmmmmmmm
@wiking	i would do a 6.0
@wiking	or here goes a scary question
@wiking	when do we add c++11 required?
@HeikoS	linalg merge
@wiking	and that wold be 5.2?
@wiking	*would
@HeikoS	yeah
@wiking	no
@wiking	then go 6.0
@HeikoS	also good
@wiking	because that's a big change
@wiking	different libc++ dependency
@wiking	etc
@HeikoS	I guess once we merge linalg, tags, and bigtest
@HeikoS	then we can do it for that
@HeikoS	I want to do these 3 before gsoc starts
@HeikoS	and maybe even bsd
@HeikoS	then 6.0 would be bsd
@wiking	mmm we can do
@wiking	6.0 with c++11
@wiking	7.0 with bsd
@wiking	no problem
@wiking	:D
@wiking	come on
@HeikoS	also good :)
@HeikoS	I know
@wiking	chrome is like
@wiking	what
@wiking	4 years old
@wiking	or 7
@wiking	and it's 5x. now
@wiking	:)
@HeikoS	hehe
@wiking	lol
@wiking	The browser was first publicly released on September 2, 2008
@wiking	so 9 years
@wiking	so yeah i would maybe force more major ++
@wiking	wouldn't hurt
@HeikoS	yeah good from my sidfe
@wiking	cool
@wiking	so who and when
@wiking	rebases
@wiking	linalg feature branch
@HeikoS	I can rebase linalg
@wiking	with current develop?
@wiking	can u?
@wiking	becaue then
@HeikoS	I can, just not today maybe
@wiking	after you fixed the rebase stuff
@wiking	add on top
@HeikoS	icml deadline next week aaaaah
@wiking	a commit
@wiking	that requires c++11
@wiking	the way i said
@wiking	and drop all that fucking c++11 feature tester in the cmake dir
@wiking	:D
@wiking	or just rebase
@wiking	and ping me
@HeikoS	wiking: shall we do that in linalg branch?
@wiking	and i can help
@HeikoS	yeah
@HeikoS	ok
@wiking	yeyey
@wiking	because linalg is fully c++11
@wiking	anyways no?
@HeikoS	wiking: shall I way for the lock thing?
@wiking	well rebase
@wiking	and then we'll see
@HeikoS	yeah true
@wiking	when pan comes up with the multithreading
@HeikoS	wiking: I think Pan is almost done with porting all the calls we had
@wiking	cool
@wiking	let's just have that thread-safe
@wiking	and we are good
@wiking	but i reckon
@HeikoS	kool!
@wiking	rebasing is not gonna be straightforward
@wiking	:)))
@HeikoS	dont konw
@wiking	lisitsyn, buuuuuuuujaaaaaaaaa
@HeikoS	I mean we didnt change too much in there
@HeikoS	more like adding/removing
@HeikoS	so lets see
@wiking	lisitsyn, with tags, how do you imagine api documentation? :D
@HeikoS	I can give it a go
@HeikoS	wiking: discussed that with him acutally
@HeikoS	but I forgot :)
@HeikoS	we had like a two layer thing
@HeikoS	core API docs
@HeikoS	and then one can have things for plugins documented by example
 lisitsyn	uhm
 lisitsyn	its dynamic
@wiking	yeah i know
@HeikoS	shogun goes python
@wiking	but man
@HeikoS	no more member variables
@wiking	we need a way to document it
@wiking	:)
@HeikoS	dynamic docs
@HeikoS	haha
@wiking	i mean what
@wiking	you
@wiking	say
@wiking	try any fucking combination
@wiking	?
@wiking	and see what sticks?
@wiking	:D
@HeikoS	I think first step is the SWIG interface docs for the core API
@HeikoS	that should be really polished
@HeikoS	and thats aside any algorithm implementations
@HeikoS	doxygen
@HeikoS	static
@HeikoS	and then for the implementations, we can either document the possibilities by example (thats minimal thing)
@HeikoS	or the thing can tell you what it does
@HeikoS	at runtime
@HeikoS	lisitsyn: thats kind of what we had in mind last time right?
@wiking	yeah but still
@HeikoS	wiking: dont like it? :D I would have guessed that
@wiking	nono
@wiking	what i mean is
@wiking	i dont fucking care of swig now
@wiking	api docs for it
@wiking	how do you create documentation
@wiking	for the c api?
@wiking	i mean dont tell me that you dont need it
@wiking	because then wtf?
@wiking	how do you write code for it?
@HeikoS	yeah true
@HeikoS	nono you need it
@HeikoS	all the stuff that is not exposed via swig but that you might want to use still, right?
@wiking	no i mean even the tags
@wiking	how do you know
@wiking	in the c++
@wiking	which tag is valid?
@HeikoS	which members are there?
@wiking	i mean vlid you will know
@wiking	by trial and error i guess
@wiking	but isn't there a better way? :D
@HeikoS	with the tag system we have, you cannot know that as they are generated at runtime
@wiking	and then what
@HeikoS	I mean we can have methods that give you the tags
@wiking	how do you know what are the params
@wiking	for CSVM?
@HeikoS	but not sure how to generate docs
@HeikoS	how is that problem solved in python docs?
@wiking	mmm define them in the docstrings
@wiking	afaik
@wiking	but then again
@wiking	you can just do that
@wiking	for vars that are func args
@wiking	dunno if you can actually define dynamically added
@wiking	member args
@wiking	and btw
@wiking	how the hell you validate
@wiking	that you have set all the vars
@wiking	for the model
@wiking	you'll have a validate tags? :d
@wiking	and even better i might add
@HeikoS	wiking: the model will default value all things of course
@wiking	how do you enforce in this case the type?
@HeikoS	and then you can change if wanted
@wiking	HeikoS, and then if you try to set
@wiking	set("C1", "adfg")
@wiking	then what happens?
@wiking	is it exception because not the right type?
@HeikoS	set is type safe at runtime
@HeikoS	yes
@wiking	or is it set to a string?
@wiking	?
@HeikoS	nono
@HeikoS	first
@HeikoS	because
@HeikoS	C1 is set in constructor
@HeikoS	so the type is fixed then
 CaBa_	you two with your same nicklength... really tough to read through your conversations O.O
-!- CaBa_ [~Diu7saig@lounge.imp.fu-berlin.de] has quit [Quit: Changing server]
-!- CaBa [~Diu7saig@unaffiliated/caba] has joined #shogun
 lisitsyn	HeikoS: wiking well
 lisitsyn	we can extract it from code
 lisitsyn	not a big deal
 lisitsyn	if you're talking about easiest way
 lisitsyn	no idea yet
 lisitsyn	I am not a big fan of docs
 lisitsyn	in python you try things at runtime
@wiking	and then what
@wiking	we encourage to use cling? :)
-!- travis-ci [~travis-ci@ec2-54-92-224-73.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/201852987
-!- travis-ci [~travis-ci@ec2-54-92-224-73.compute-1.amazonaws.com] has left #shogun []
@HeikoS	I am actually not a big fan of docs either, apart from a very stable set of base API docs
@wiking	and then what
@wiking	trial and erro?
@wiking	i mean come on guys
@wiking	lets be a bit more serious
@wiking	;0
@wiking	anyhow
@wiking	i need to sleep
@wiking	:)
@wiking	ttyl
@wiking	one more thing
@wiking	can we move the site (website) somewhere else?
@wiking	otherwise this story with the cookbook
@wiking	is a mess
@HeikoS	wiking: move somewhere else as in server?
@HeikoS	wiking: I mean yeah whatever helps
@HeikoS	wiking: lets discuss this doc thing again
@HeikoS	maybe its a good one for the hackathon
-!- mikeling [uid89706@gateway/web/irccloud.com/x-dajmozufoyahcrni] has quit [Quit: Connection closed for inactivity]
@sukey	Issue #1415 "Static interfaces support needed in cmake" closed by karlnapf - https://github.com/shogun-toolbox/shogun/issues/1415
@sukey	Wiki page: GSoC_2017_low_hanging_fruit edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: GSoC_2017_low_hanging_fruit edited on shogun-toolbox/shogun by karlnapf
@HeikoS	lisitsyn:
@HeikoS	jo!
@HeikoS	still around?
@sukey	Wiki page: GSoC_2017_low_hanging_fruit edited on shogun-toolbox/shogun by karlnapf
@HeikoS	https://github.com/shogun-toolbox/shogun/wiki/GSoC_2017_low_hanging_fruit
@HeikoS	feel free to add things
@sukey	Wiki page: GSoC_2017_low_hanging_fruit edited on shogun-toolbox/shogun by karlnapf
@sukey	Wiki page: Getting-involved edited on shogun-toolbox/shogun by karlnapf
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
@sukey	New Commit "bump to latest version" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/eceda2dc3a5ed163e834e3ca2f70d038f2a99f9b
@sukey	Wiki page: Getting-involved edited on shogun-toolbox/shogun by lgoetz
@sukey	Wiki page: Getting-involved edited on shogun-toolbox/shogun by lgoetz
@sukey	Wiki page: Getting-involved edited on shogun-toolbox/shogun by lgoetz
 lisitsyn	HeikoS: yes
 lisitsyn	back
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 240 seconds]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has quit [Remote host closed the connection]
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- travis-ci [~travis-ci@ec2-54-90-247-33.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/201982436
-!- travis-ci [~travis-ci@ec2-54-90-247-33.compute-1.amazonaws.com] has left #shogun []
 CaBa	wiking: ping
--- Log closed Thu Feb 16 00:00:27 2017
