--- Log opened Mon Feb 20 00:00:32 2017
@sukey	Pull Request #3399 "LinalgRefactor - Add sum_symmetric and Rm old sum methods" - https://github.com/shogun-toolbox/shogun/pull/3399
@wiking	CaBa, yes if you want to have proper clone-able object you need to have the params registered
-!- goksinen_ [~goksinen@2604:2000:c591:8400:3420:31fb:5538:73fd] has joined #shogun
@sukey	Issue #3644 "New Linalg library cannot compile with Eigen 3.3.x" opened by OXPHOS - https://github.com/shogun-toolbox/shogun/issues/3644
-!- IRCFrEAK [~gk.1wm.su@2a03:4a80:3:43d:43d:23b:2e38:2839] has joined #shogun
-!- IRCFrEAK [~gk.1wm.su@2a03:4a80:3:43d:43d:23b:2e38:2839] has left #shogun []
@sukey	Pull Request #3641 "add tests for KNN and fix an error in KDTree solver"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3641
-!- goksinen_ [~goksinen@2604:2000:c591:8400:3420:31fb:5538:73fd] has quit [Remote host closed the connection]
@sukey	Pull Request #3641 "add tests for KNN and fix an error in KDTree solver"  synchronized by MikeLing - https://github.com/shogun-toolbox/shogun/pull/3641
@sukey	Pull Request #3635 "LinalgRefactor - Memory Transfer Mutex"  synchronized by OXPHOS - https://github.com/shogun-toolbox/shogun/pull/3635
-!- madgoat [~gk.1wm.su@2a03:4a80:5:41e:41e:efdd:c10d:1c12] has joined #shogun
-!- madgoat [~gk.1wm.su@2a03:4a80:5:41e:41e:efdd:c10d:1c12] has left #shogun []
 shogun-buildbot	build #53 of nightly_default is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_default/builds/53  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Soumyajit De <heavensdevil6909@gmail.com>, Tiramisu 1993 <sabergeass@gmail.com>
 shogun-buildbot	build #31 of nightly_all is complete: Failure [failed test]  Build details are at http://buildbot.shogun-toolbox.org/builders/nightly_all/builds/31  blamelist: Heiko Strathmann <heiko.strathmann@gmail.com>, Soumyajit De <heavensdevil6909@gmail.com>, Tiramisu 1993 <sabergeass@gmail.com>
@sukey	New Commit "Update NEWS" to shogun-toolbox/shogun by lambday: https://github.com/shogun-toolbox/shogun/commit/142ba6b916e623f75c393799598b1d91332687b1
@sukey	Issue #3625 "Installation failed"- https://github.com/shogun-toolbox/shogun/issues/3625
-!- travis-ci [~travis-ci@ec2-54-91-162-115.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Soumyajit De's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203355835
-!- travis-ci [~travis-ci@ec2-54-91-162-115.compute-1.amazonaws.com] has left #shogun []
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 CaBa	HeikoS: heya
 CaBa	wiking: thanks for the info
 CaBa	https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/base/class_list.cpp.templ <- what dark magic is this?
@wiking	CaBa, generates a factory clas
@wiking	class
@wiking	for the swig interface
 CaBa	wiking: my class still fails to clone, apparently in there
 CaBa	wiking: do i have to "register" it somewhere?
@wiking	then i suppose the way you defined the class
@wiking	is having some issue
 CaBa	wiking: well my class get_name() value is not in the class_list i suppose
@HeikoS	wiking: jojo
@HeikoS	CaBa: might well be some cache thing
@HeikoS	there is build bugs when you add classes after the class_list has been generated
 CaBa	HeikoS: my kernel is not in shogun. i have it in my application, which links against shogun
@HeikoS	then you shouldnt need this
 CaBa	HeikoS: well my kernel won't ::clone() otherwise
@wiking	HeikoS, so not true
@wiking	HeikoS, please update yourself with some of the latest development of
@wiking	shogun
@wiking	:)
 CaBa	lol
@wiking	like CLock
@wiking	and this class_list.cpp
@HeikoS	wiking: ?
@wiking	i worked on this
@wiking	quite extensively
@wiking	2 weeknds ago
@HeikoS	worked on what?
@wiking	both clock and class_list.cpp
@HeikoS	ah i see
@HeikoS	cool then
 CaBa	wiking: so what do i need to do for my outside-of-shogun kernel then? write my own clone()?
@HeikoS	what about this? https://github.com/shogun-toolbox/shogun/issues/2934
@wiking	mmm but wait
@wiking	CaBa, you wanna write
@wiking	a class that is not part of the library
@wiking	say a new kernel
@wiking	and then have clone? :)
@wiking	mmmmmm
 CaBa	yeah i actually have quite a few CKernel derivatives in my application
@wiking	it might work on some level
@wiking	but for sure not for swig
@wiking	:(
@wiking	which i know is a shit
 CaBa	i use c++ only
@wiking	but this is what is it
@wiking	CaBa, and what's your error?
@wiking	when you call kernel->clone()
@wiking	?
 CaBa	wiking: shogun::new_sgserializable returns NULL
@wiking	doh
@wiking	:D
 CaBa	wiking: since it doesn't find my class name in it's list
@wiking	yeah
@wiking	so here we go
@wiking	another shit
@wiking	:D
@wiking	so actually then
@wiking	it doesn't work at all
@wiking	if it's not part of the library
@wiking	which makes everything fucking crazy
@wiking	:)
@wiking	because to be able to extend your library
@wiking	i mean the library
@wiking	you actually have to make your code
@wiking	part of the library
@wiking	:(
@wiking	HeikoS, you wrote clone no?
@HeikoS	yep
@HeikoS	but this sg_serializable thing not
@wiking	HeikoS, caef78db (Heiko Strathmann 2013-06-11 14:49:26 +0100 747) CSGObject* CSGObject::clone()
@HeikoS	the clone is based on that
@wiking	ok but the way you do it
@wiking	is to call the factory object
@wiking	?
@wiking	i.e. class_list.h's sg_ser?
@HeikoS	I would have to check, but I think yes
@wiking	ye yep
@wiking	ok so this is major shit
@wiking	:D
@HeikoS	https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/base/SGObject.cpp#L752
@wiking	i wonder how tags will help us here
 CaBa	well... overriding ::clone() could be a workaround, right? the requirements aren't that complex, i just have to return a pointer to a copy... i can even call ::clone() for all upstream shogun member variables...
@wiking	yeah
@wiking	lemme see if you can actually override
 CaBa	yes its virtual
@wiking	virtual CSGObject* clone();
@wiking	luckly
@wiking	;)
@wiking	ok so then you can implement your own clone method
@wiking	but
@wiking	still this we need to fix urgently
@wiking	HeikoS, ^
 CaBa	i already override that before :P since i have non-SGobject members :P
 CaBa	but then in the override i called SGObject::clone() for the rest
@wiking	i see
@wiking	well then you cannor rely obviously
@HeikoS	wiking: how would you create the new instance?
@wiking	HeikoS, yeah i'm just wondering if we could create at least a helper method
@wiking	that CaBa would need
@HeikoS	if we just used cereal, then all good
@HeikoS	serialize to memory
@HeikoS	de-serialize
@wiking	memory?
@wiking	uffofff
@wiking	that's very brute force
@wiking	what about just cutting out the part
@wiking	where we copy the registered params
@wiking	https://github.com/shogun-toolbox/shogun/blob/develop/src/shogun/base/SGObject.cpp#L761
@wiking	and add that as
@wiking	a helper method
@wiking	(protected?)
@wiking	to the SGObj
@HeikoS	I see
@HeikoS	yeah thats an option
@wiking	and i wonder
@wiking	instead of
@wiking	CSGObject* copy=new_sgserializable(get_name(), this->m_generic);
@wiking	why can't we just call
@wiking	the default ctor of the obj?
@wiking	i mean that shit i think you can do
@wiking	with type
@wiking	in c++11
@wiking	and once linalg is in
@wiking	c++11 is in
@wiking	right?
@HeikoS	yep
@wiking	because now it's a bit shit i woudl say
@wiking	or?
@wiking	and then i wonder
@wiking	if we could get rid of the whole class_list.cpp hack
@wiking	let's see where else new_sgserializable is being used
@wiking	:)
@wiking	src/shogun/base/Parameter.cpp:  *param = new_sgserializable(sgserializable_name, generic);
@wiking	src/shogun/base/SGObject.cpp:   CSGObject* copy=new_sgserializable(get_name(), this->m_generic);
@wiking	tests/unit/base/DynamicObjectArray_unittest.cc.jinja2:          array1->push_back(new_sgserializable(class_name, PT_NOT_GENERIC));
@wiking	tests/unit/base/DynamicObjectArray_unittest.cc.jinja2:          array1->push_back(new_sgserializable(class_name, {{type}}));
@wiking	ok
@wiking	this is doable
@wiking	no?
@wiking	:)
@HeikoS	de-serialization
@HeikoS	also needs default ctor objects
@HeikoS	but thats all in fact
@HeikoS	so yeah much nicer
@wiking	i mean then we dont need
@wiking	the classlist hack
@wiking	so let's see
@wiking	i'll make a feature branch
@wiking	and see if it's possible
@wiking	and make it like that
@wiking	that if c++11 available
@wiking	it'll rather use that
@wiking	than class_list
@wiking	so later it is easy to cut out the code
@HeikoS	yes
@HeikoS	good
@HeikoS	wiking: just saw you changed location of shogun.unit-test
@HeikoS	changed any others?
@wiking	?
@wiking	you mean bin?
@wiking	that has moved a long time ago
@wiking	(with windows feature)
@HeikoS	kk
@HeikoS	any other thing? just realised readme is outdated ...
@wiking	mmm
@wiking	yeah cmake readme i'll have to update
@wiking	before release
@wiking	because now every feature has
@wiking	ENABLE_<package> flag
@wiking	so even if it's detected
@wiking	you can turn it off
@wiking	say
@wiking	-DENABLE_ZLIB=OFF
@wiking	etc.
@wiking	and yeah the strings to change linalg backend
@wiking	changed as well
@wiking	had to
@wiking	the copy paste code
@wiking	was a mess
@HeikoS	ok then i wont update the readme submodule for now
@HeikoS	just patched developing.md
@wiking	yeah that needs fixing
@wiking	but lets get first things into releaseable state
@wiking	which we are quite off now from
@wiking	(many failing builds again)
@sukey	New Commit "disable failing linear time mmd unit tests" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/1560b3b39e214be4cd066c6ca4005496dc9a3354
@wiking	is this the solution? :)
@HeikoS	no
@wiking	why are they failing?
@HeikoS	I have no idea
@wiking	ok why dont we let Rahul fix it?
@wiking	he said he'll fix it
@HeikoS	yeah
@wiking	so ?
 CaBa	hmmm... it's not so trivial to clone the CKernel components of my kernel, right? unfortunately, CKernel also doesn't offer a copy ctor...
@HeikoS	I want travis green
@wiking	for?
@wiking	it's already red
@wiking	see octave
@HeikoS	wiking: things not slipping through even more
@HeikoS	I know
@HeikoS	these tests are for like weird parts anyways ...
@HeikoS	so they could even be deleted, they are old
@HeikoS	and testing non-interpretable stuff
@HeikoS	but yeah Ill leave it
@wiking	ok then why not delete it?
@HeikoS	rahul promised that hell do the guarding today
@wiking	i mean iether just chuck it out
@wiking	if it's really not necessary
@wiking	the guarding is a totally different story
@wiking	i dont even know how that not raised any concerns
 CaBa	how about
 CaBa	https://github.com/auchenberg/volkswagen
 CaBa	?
 CaBa	:-)
@HeikoS	hahaha
@HeikoS	nic eone
@wiking	:)
@wiking	HeikoS, when's that course starting?
@HeikoS	sooo
@HeikoS	we decided to not use cloud for the march one
@HeikoS	but for the may one
@HeikoS	there are two
@wiking	why not?
@HeikoS	each year
@wiking	i mean the problem is
@wiking	that in may
@wiking	probably
@HeikoS	because we would have to develop the material now
@wiking	you wont be able to use it anymore
@wiking	(the cloud)
@wiking	note: the credits are out in may
@HeikoS	uh I see
@HeikoS	we need to get new ones then :)
@wiking	and for being able to get new ones
@wiking	one would need to demonstrate
@wiking	that the previously got credits were used in a constructive manner
@wiking	i suppose :)
@HeikoS	nah I am sure we can get more via the usual channels
@wiking	but yeah
@wiking	if you wanna get more
@HeikoS	I mean I can sneak some things in
@HeikoS	in march
@wiking	make sure you dont forget
@wiking	to remind gunnar about this
@wiking	latest around end of march
@HeikoS	yeah we talk soon right
@wiking	as you remember it took a while
@wiking	to get those credits
@HeikoS	I can put some demo things in
@HeikoS	but the course also needs re-writing
@wiking	Your promotion is valid for 12 months and will expire on May 31, 2017 or when credits are fully depleted, whatever comes first
@wiking	just checked
@HeikoS	and arthur was hesitant to do that yet as the cloud is not yet workintg
@HeikoS	and the old material software works
@wiking	?
@wiking	but for the cloud
@wiking	you
@wiking	or who ever
@wiking	just needs to create a docker image
@wiking	nothing else
@wiking	i mean if you have the notebooks?
@wiking	then it's super easy
@wiking	if you dont have any notebook
@wiking	and you have to write the notebooks
@wiking	then i understand
@wiking	"old material software" =?
@wiking	written in?
@HeikoS	we will only start putting time into that once the thing is working on the aws
@wiking	lolface
@HeikoS	that is how it goes here, unfortunately
@wiking	i mean lolface
@wiking	i'm sorry
@wiking	this is way too mcuh man
@HeikoS	there is many people involved I am not to decide
@wiking	ok look
@wiking	i dont give a damn
@wiking	it's just very fucking disappointing
@HeikoS	old material is matlab stuff and SVMLight ;D
@wiking	when somebody works
@wiking	hours and hours
@wiking	and you get this shit
@wiking	but hey
@wiking	yeah
@wiking	sure
@HeikoS	we will use it in may
@wiking	i mean the question
@wiking	if we had an agreement
@HeikoS	its way before 31st
@wiking	that we are gonna do this
@HeikoS	so all good with the credits
@wiking	in march
@wiking	and i held up to my end
@wiking	i wonder
@wiking	why do i get this now?
@wiking	"[18:20]  <HeikoS> we will only start putting time into that once the thing is working on the aws
@wiking	"
@wiking	it's a bit
@wiking	let's say
@wiking	awkward
@HeikoS	I cant convince anyone in relying on the cloud thing before it works
@wiking	again
@HeikoS	you see?
@wiking	if we have
@HeikoS	I say: lets do it
@wiking	an agreement
@wiking	that we do this
@HeikoS	they say: well it doesnt work, lets wait until it works
@wiking	in march 17
@wiking	and i say let's do it
@wiking	then ok i do my part
@wiking	you gusy do your part
@wiking	if you say
@HeikoS	there is more than just us
@HeikoS	arthur also has to re-work the course
@wiking	that when there's cloud
@wiking	we wil think about doing it
@wiking	ok that's acceptable as well
@wiking	and all good
@wiking	but that's another story
@wiking	see what i mean?
@wiking	i was calculating with this being set in stone
@wiking	now i'm being told
@wiking	'when ready we'll see'
@wiking	ok
@HeikoS	not we will see
@HeikoS	we want to do it
@wiking	[18:22]  <HeikoS> they say: well it doesnt work, lets wait until it works
@wiking	it is we'll see once it's ready
@wiking	i mean ready = cloud working
@wiking	then after that t
@wiking	things gonna get rolling on your end
@wiking	and dont get me wrong
@HeikoS	yes arthur will do the course after:
@HeikoS	-the cloud works
@wiking	it's not your fault or anything
@HeikoS	-i wrote some coursework
@wiking	but please next time
@wiking	be more specific when you write
@wiking	'lets have march course thing'
@HeikoS	and it needs time
@wiking	because i was counting on this
@wiking	now it's a disappointment from my side
@wiking	because i really wasted a lot of fucking time on this
@wiking	whereas if you start
@wiking	lets do it in may
@wiking	then i might have done it in different phase
@wiking	that's all
@HeikoS	lets do it now
@wiking	yeah i told you
@wiking	prepare the notebooks
@HeikoS	I am
@HeikoS	thats why i merged bigtest
@wiking	that's all is needed
@wiking	is it working from python?
@wiking	or what notebook you want?
@wiking	c++
@wiking	java?
@HeikoS	nono python is ok
@wiking	R?
@wiking	ok have you guys tested
@HeikoS	octave maybe
@wiking	the python interface
@wiking	of the bigtest?
@HeikoS	yes
@wiking	if there's c+111
@wiking	it works i guess
@wiking	ok so then why dont you prepare the notebooks?
@wiking	and give me a location where i can download them
@wiking	same for the data
@wiking	it requires
@wiking	and currently the way the authentication works for the notebooks is github
@wiking	but it can be anything from this list
@wiking	https://github.com/jupyterhub/oauthenticator
@wiking	or you can develop your own authenticator if you wanna use something else
@HeikoS	kk
@HeikoS	so one more thing
@HeikoS	the course in march will be on svm, the one in may on testing
@HeikoS	so if i write things for svm, that only makes sense if the thing works then
@wiking	but man
@HeikoS	if I write for kernel testing, it is all a bit more relaxed as we want to change it to that anyways
@wiking	this is ready
@wiking	the cloud
@wiking	it is FUCKING READY
@wiking	i'm now just wanking
@wiking	to add extra support
@wiking	to be nice and easy
@wiking	with dcos
@wiking	but on the other hand functionally it was ready last week wednesday
@wiking	i just want to have it liekt hat
@wiking	that i dont need to touch it
@HeikoS	if I had a link, I could go to arthur and say: here it is done, lets change the course, that would be best
@wiking	if suddenly
@wiking	100+ people registers
@wiking	and start using it
 CaBa	https://gitlab.unique-internet.de/snippets/11 <- can i have a quick opinion on the idea of this clone hack? i guess it leaks mem, but i'm not quit sure how to go around that...
@wiking	i.e. the whole shit autoscales
@HeikoS	wiking: is there something I can show?
@HeikoS	that would help immensely to push stuff here
@wiking	please
@wiking	find a docker image
@wiking	that has something in it
@wiking	does't fucking matter what now
@wiking	that would help
@wiking	or prepare one
@wiking	doesn't even have to be shogun
@wiking	https://hub.docker.com/r/jupyter/singleuser/
@wiking	i'm currenlty starting this
@wiking	but it has no notebook example in it
@wiking	https://hub.docker.com/r/jupyterhub/singleuser/
@wiking	this one
@wiking	i mean
@wiking	there's two options
@wiking	if you can show him something now in the next 2 hours
@wiking	or 5
@wiking	then i can get it back manually
@wiking	and then you demo it
@HeikoS	doesnt need to be in next hours
@HeikoS	just this week
-!- goksinen [~goksinen@cpe-74-71-4-175.nyc.res.rr.com] has joined #shogun
@wiking	if not then i want to finsh this whole thing nicely
@wiking	so that really we can reproduce
@wiking	the whole environment
@wiking	any time
@wiking	anywhere
@wiking	without
@wiking	doing fucking devops
@wiking	for days
@HeikoS	yes ok
@wiking	http://en.cppreference.com/w/cpp/types#Runtime_type_identification
@wiking	it'll be at cloud.shogun.ml
@wiking	and github auth
@HeikoS	wiking: cool, so let me reproduce the coursework stuff then
@wiking	what i'm gonna be working on later
@wiking	is to prepare
@wiking	the old cloud image
@wiking	i.e. all the notebooks in it
@wiking	with the data
@wiking	that's another docker image
@wiking	but the nice thing with this jupytherhub is
@wiking	that we can have multiple instance of it
@wiking	so one for cloud.shogun.m
@wiking	.ml
@wiking	and one for
@wiking	<whatever course>shogun.ml
@wiking	:)
@wiking	and it runs different instances
@wiking	with differnet content in it
@wiking	HeikoS, note that since this is jupyterhub
@wiking	we could even prepare a cloud.shogun.ml image
@wiking	such
@wiking	that we chuck into it all the fucking metaexamples as well
@wiking	in all the languages
@wiking	and since it's jupytherhub
@wiking	i mean jupyter
@wiking	they can play with any of those languages
@sukey	Issue #3645 "replace `sg_newserializable` with c++11 magic" karlnapf added label: "Cleanups" - https://github.com/shogun-toolbox/shogun/issues/3645
@sukey	Issue #3645 "replace `sg_newserializable` with c++11 magic" opened by karlnapf - https://github.com/shogun-toolbox/shogun/issues/3645
@sukey	Issue #3645 "replace `sg_newserializable` with c++11 magic" karlnapf added label: "entrance" - https://github.com/shogun-toolbox/shogun/issues/3645
@HeikoS	https://github.com/shogun-toolbox/shogun/issues/3645
@HeikoS	put any comments you have in there, maybe somebody picks it up as a nice entrance task
-!- goksinen [~goksinen@cpe-74-71-4-175.nyc.res.rr.com] has quit [Ping timeout: 240 seconds]
@HeikoS	wiking: yeah thats great with the courses in the link
@HeikoS	wiking: and love the idea on putting all the meta stuff in
@HeikoS	wiking: would be nice to maybe at some point develop some meta notebooks with plots
@wiking	yeah
@wiking	that is a bit more shitty
@HeikoS	wiking: thats a nice one to get funding for in fact
@wiking	well
@wiking	we could
@wiking	reach out to jupyter people
@wiking	no?
@HeikoS	its not really part of shogun
@HeikoS	yeah
@wiking	show them the meta stuff we have now
@wiking	show them the ipython notebooks
@wiking	that are actually nice imo
@wiking	and then tell that that we wanna merge the 2
@sukey	Issue #3645 "replace `sg_newserializable` with c++11 magic"- https://github.com/shogun-toolbox/shogun/issues/3645
@wiking	meta-notebooks
@HeikoS	wiking: yep
@wiking	does Lea care to write up such a letter
@wiking	?
@wiking	and then we just add the link to the cloud.shogun.ml
@wiking	and once everything is in place
@wiking	we send it to jupyter
@wiking	maybe internally they are having some effort for this
@wiking	who knows
@wiking	would be good to know
@wiking	i totally fucking accidentally saw this story with juptyerhub
@HeikoS	wiking: yes I had that in mind already
@HeikoS	it would be great to use that to get some funding
@HeikoS	its kinds of a self contained project
@HeikoS	and maybe juypter can support as well
@wiking	btw i dont think yo urealise
@wiking	what sorts of shit
@wiking	is being done for the cloud  ;P
@HeikoS	and then we can pay someone in summer to do that or something
@wiking	i think i should demo it to you once
@HeikoS	wiking: I guess you are right
@wiking	it is very nice
@wiking	i learnt from our past mistakes
@wiking	with using custom hacks
@wiking	now it's all easily reproducable
@wiking	easily maintainable
@sukey	Issue #3645 "replace `sg_newserializable` with c++11 magic"- https://github.com/shogun-toolbox/shogun/issues/3645
@HeikoS	wiking: we should have some video session or so and you walk me through it
@HeikoS	as for now, you are the only one who knows whats going on there
@wiking	mm it's all code
@wiking	and will be publicly available
@wiking	just the custom proprietary settings
@HeikoS	I know, but the things you were refering to earlier
@wiking	are gonna be in shogun-infra
@HeikoS	you ever saw that before? https://travis-ci.org/shogun-toolbox/shogun/jobs/203383958#L6308
@wiking	never
@wiking	but
@wiking	travis is acting weird lately
@wiking	sometimes i see clang jobs
@wiking	exit 0
@wiking	but still travis marks them as failed
@HeikoS	yep saw that
@wiking	mmm fuck
@wiking	let's see if this works
@wiking	fingers fucking crossed
@sukey	Pull Request #3399 "LinalgRefactor - Add sum_symmetric and Rm old sum methods"  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3399
@sukey	New Commit "Merge pull request #3399 from OXPHOS/linalg_sum_remove
@sukey	LinalgRefactor - Add sum_symmetric and Rm old sum methods" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/53150efb68b7d04c56d733a03e4e393221d33421
@HeikoS	whooo random 10s ubuntu freeze without any cpu load
-!- travis-ci [~travis-ci@ec2-54-91-162-115.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203383957
-!- travis-ci [~travis-ci@ec2-54-91-162-115.compute-1.amazonaws.com] has left #shogun []
@wiking	CaBa, lemme check
 CaBa	wiking: it's crap
 CaBa	wiking: there's no way i can use CKernel::clone() for the CKernel members only...
 CaBa	i think
@wiking	CaBa, i seriously think
@wiking	that adding that patch for you
@wiking	in sgobject
@wiking	would solve your problem faster
@wiking	:)))
 CaBa	wiking: what patch?
@wiking	for clone
@wiking	get ride of sg_newserializable
@wiking	see this bug
@wiking	 https://github.com/shogun-toolbox/shogun/issues/3645
@HeikoS	wiking: even easier is the pulling the parameter cloning out
@HeikoS	so people can just instantiate themselves and then call the method
@wiking	HeikoS, yeah or that
@wiking	either is fine
@wiking	and then you dont need these hacky stsuff
@wiking	:)
@HeikoS	CaBa: so if you just cut out the loop over the parameters, and put that into a protected helper method and call it from clone
@wiking	it's really not more than a couple of line of diffs
@HeikoS	CaBa: then you can call that in your class
 CaBa	HeikoS: ok, lemme see
@wiking	HeikoS, yeah and the inner part of the clone could be a big
@wiking	ifdef have_cxx11
@wiking	else
@wiking	and once we are c++11 then we can get ride of class_listcpp
@wiking	CaBa, if you do it
@wiking	then could you do it
@wiking	in a way
@wiking	that if c++11 available
@wiking	you use the tag
@wiking	system
@wiking	:D
@wiking	HeikoS, ^ ?
@HeikoS	wiking: yes, but thats not for CaBa to do, as tags doesnt work yet
@wiking	ok
@HeikoS	otherwise agreed
@wiking	then CaBa forget it
@wiking	just do that cut put
 CaBa	^^
@wiking	and that's all
@wiking	move the for loop into a protected function
@HeikoS	CaBa: I can do it for you
@wiking	and call that from the clone
@HeikoS	give me a min
@wiking	or HeikoS will do it for ya
 CaBa	HeikoS: thank you!
 CaBa	so that clone_params() or however you call it will get the new ptr passed?
@HeikoS	bool CSGObject::clone_parameters(CSGObject* other)
@HeikoS	thats the signature
 lisitsyn	uhm I don't think https://github.com/shogun-toolbox/shogun/issues/3645
-!- goksinen [~goksinen@2604:2000:c591:8400:3420:31fb:5538:73fd] has joined #shogun
 lisitsyn	HeikoS: it would be replaced by plugins
 lisitsyn	and stuff
@HeikoS	/* Iteratively clones all parameters of the provided instance into this instance.
@HeikoS	 * This will fail if the objects have different sets of registered parameters,
@HeikoS	 * or if they have a different type as defined by get_name().
@HeikoS	 *
@HeikoS	 * @param other other object whose parameters are to be cloned
@HeikoS	 * @return True if cloning was successful
@HeikoS	 */
@HeikoS	lisitsyn: what do you mean?
 lisitsyn	HeikoS: I just mean it is not an entrance task
@HeikoS	why not?
@HeikoS	before tags is used
 lisitsyn	well defines a lot
 lisitsyn	like architecture of shogun
@HeikoS	no it is just about creating empty instances
 lisitsyn	I am terrible but it is a task for me
 lisitsyn	:D
@HeikoS	and the current way only allows this for class_list ojects
@HeikoS	lisitsyn: yeah do it :)
 lisitsyn	yeah ok :)
-!- goksinen [~goksinen@2604:2000:c591:8400:3420:31fb:5538:73fd] has quit [Ping timeout: 240 seconds]
@wiking	yeah do it
@wiking	:)
@wiking	because CaBa needs it
@wiking	and i need it
@wiking	:)
@wiking	<3
@HeikoS	you know whats shiat
@HeikoS	that I have to recompile all of shogun whenever I change docs of SGObject.h
@HeikoS	and it takes time
@HeikoS	and yes the ccache is on
 lisitsyn	uhm that's not going to be fixed
 CaBa	HeikoS: do you push that clone_parameter() directly to develop?
@HeikoS	CaBa: I might
@HeikoS	CaBa: but maybe prefer a PR
@HeikoS	since travis can have a look then
@HeikoS	so CaBa
@HeikoS	once it is merged, you can just create an empty instance of your kernel
@HeikoS	and then call the method providing another one
 CaBa	cool
@wiking	HeikoS, yeah sgobject touches everything
@wiking	;)
-!- travis-ci [~travis-ci@ec2-54-90-131-18.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203394836
-!- travis-ci [~travis-ci@ec2-54-90-131-18.compute-1.amazonaws.com] has left #shogun []
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  opened by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
@HeikoS	CaBa: https://github.com/shogun-toolbox/shogun/pull/3646
@HeikoS	lets see what travis says
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
@HeikoS	gnaa
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
@HeikoS	ok lunch time
 CaBa	tjanks
-!- CaBa [~Diu7saig@unaffiliated/caba] has left #shogun []
-!- CaBa [~Diu7saig@unaffiliated/caba] has joined #shogun
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
-!- goksinen [~goksinen@2604:2000:c591:8400:3420:31fb:5538:73fd] has joined #shogun
-!- goksinen [~goksinen@2604:2000:c591:8400:3420:31fb:5538:73fd] has quit [Ping timeout: 240 seconds]
 CaBa	HeikoS: seems broken unfortunately
 CaBa	just a sec
 CaBa	might be me... my feature class is also self baked :P
@wiking	HeikoS, here?
@wiking	so here's our infra for cloud
@wiking	lisitsyn, HeikoS https://github.com/shogun-toolbox/shogun-cloud/tree/master/backend/aws
@wiking	:)
-!- goksinen [~goksinen@2604:2000:f64b:c700:3067:a1ec:ec57:e5c6] has joined #shogun
-!- goksinen [~goksinen@2604:2000:f64b:c700:3067:a1ec:ec57:e5c6] has quit [Ping timeout: 240 seconds]
@HeikoS	wiking: now
@HeikoS	CaBa: no it is broken, fixing
@wiking	HeikoS, there's the cloud :)
@HeikoS	wiking: nice
@HeikoS	so I just talked to Arthur
@HeikoS	we will use it
@HeikoS	in march already
@HeikoS	wiking: i need to actually check out what you did there
@HeikoS	this is some framework import
@wiking	yes
 CaBa	HeikoS: yeah i also ran into more trouble with it...
 CaBa	some memory access... didnt really figure out where it comes from though
@HeikoS	CaBa: yeah I got the order of the copy wrong
 CaBa	HeikoS: ah :)
@HeikoS	so copying uninitialised memory into the one that I wanted rather than the other way around
 CaBa	HeikoS: i also commented some minor stuff on the diff
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 240 seconds]
@wiking	getting there https://hub.docker.com/r/shogun/jupyterhub/
@wiking	:)
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
-!- HeikoS [~heiko@eduroam-int-pat-8-27.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
 CaBa	HeikoS: looks better now
@HeikoS	yeah it might work now
@HeikoS	will still wait for travis ok?
 CaBa	HeikoS: sure, i cherry picked to my own temp branch until then
 CaBa	which is based on develop from last october *duck* :P
@HeikoS	lol
@HeikoS	where are you based btw?
 CaBa	HeikoS: berlin
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  synchronized by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
@HeikoS	we should oeganise another workshop there
@HeikoS	did we ever meet?
@HeikoS	wiking, lisitsyn we need to have some kind of systematic testing for our REQUIRE etc
@HeikoS	I bet there is lots of null pointer de-referencing, and other bad stuff
@HeikoS	its currently never tested that methods throw exceptions on certain inputs
 CaBa	HeikoS: nope, at least not that i'm aware of :) another student from my grad school visited one of your workshops though iirc, matt
@HeikoS	ah yeah
@HeikoS	he fixed R back then
 CaBa	yep
@HeikoS	hail the berlin hackers ;)
 CaBa	;)
 CaBa	hmhm... now i'm stuck with mem errors again. but this time it seems related to the parallel x-val code i took back in... in combination with my own kernel class
@HeikoS	the parallel xval can be re-introduced I think
@HeikoS	as wiking fixed stuff that was causing problems
@wiking	yeah hopefully
@wiking	try it
 CaBa	i'm trying it and i get bad_access here [1] when it reaches my own kernel...https://github.com/lkuchenb/shogun/blob/production/src/shogun/kernel/CombinedKernel.cpp#L240
 CaBa	i'm trying it and i get bad_access here [1] when it reaches my own kernel...
 CaBa	[1] https://github.com/lkuchenb/shogun/blob/production/src/shogun/kernel/CombinedKernel.cpp#L240
 CaBa	apparently the k pointer is no longer valid
 CaBa	*sigh*
 CaBa	i think i have tortured shogun with too much hackery O.O
@HeikoS	hehe ;)
-!- goksinen [~goksinen@2604:2000:f64b:c700:3067:a1ec:ec57:e5c6] has joined #shogun
-!- goksinen [~goksinen@2604:2000:f64b:c700:3067:a1ec:ec57:e5c6] has quit [Ping timeout: 240 seconds]
-!- HeikoS [~heiko@eduroam-int-pat-8-27.ucl.ac.uk] has quit [Quit: Leaving.]
-!- OXPHOS [401e476d@gateway/web/freenode/ip.64.30.71.109] has joined #shogun
-!- goksinen [~goksinen@2604:2000:f64b:c700:3067:a1ec:ec57:e5c6] has joined #shogun
-!- lambday [31cf349d@gateway/web/freenode/ip.49.207.52.157] has joined #shogun
-!- mode/#shogun [+o lambday] by ChanServ
-!- goksinen [~goksinen@2604:2000:f64b:c700:3067:a1ec:ec57:e5c6] has quit [Ping timeout: 240 seconds]
 CaBa	wiking: i guess i should move forward from my october 2016 shogun if i want to use the parallel x-val code? i'm running into mem issues, but those were fixed in the backend in the meantime you said?
 CaBa	hm, i'm even in december with my codebase. so maybe those are already included and not the cause :(
@wiking	mmm
@wiking	what do you mean meamleaks?
@wiking	and yeah there are may shit fixed
@wiking	in the last 1 month
@wiking	so rebase with upstream/develop is encouraged
@wiking	if u can
 CaBa	i'll work my way through the rebase first and check if it's still a problem
@sukey	Pull Request #3646 "pull cloning all parameterers out to a seperate method"  merged by karlnapf - https://github.com/shogun-toolbox/shogun/pull/3646
@sukey	New Commit "Merge pull request #3646 from karlnapf/feature/clone_refactor
@sukey	pull cloning all parameterers out to a seperate method" to shogun-toolbox/shogun by karlnapf: https://github.com/shogun-toolbox/shogun/commit/ce652852c504edfad450a68e8b664702fcbd0b9c
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has joined #shogun
-!- mode/#shogun [+o HeikoS] by ChanServ
@HeikoS	CaBa: merged it
-!- goksinen [~goksinen@rrcs-50-75-193-138.nyc.biz.rr.com] has joined #shogun
-!- travis-ci [~travis-ci@ec2-54-90-131-18.compute-1.amazonaws.com] has joined #shogun
 travis-ci	it's Heiko Strathmann's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: https://travis-ci.org/shogun-toolbox/shogun/builds/203510088
-!- travis-ci [~travis-ci@ec2-54-90-131-18.compute-1.amazonaws.com] has left #shogun []
 CaBa	HeikoS: neat
 CaBa	HeikoS: shogun won't build, at least for me...
 CaBa	In file included from /Users/lk/RESEARCH/external/shogun/src/shogun/statistical_testing/MultiKernelQuadraticTimeMMD.cpp:41:0:
 CaBa	/Users/lk/RESEARCH/external/shogun/src/shogun/statistical_testing/internals/mmd/ComputeMMD.h: In member function 'shogun::SGVector<double> shogun::internal::mmd::ComputeMMD::operator()(const shogun::internal::KernelManager&) const':
 CaBa	/Users/lk/RESEARCH/external/shogun/src/shogun/statistical_testing/internals/mmd/ComputeMMD.h:132:10: error: ambiguous overload for 'operator[]' (operand types are 'shogun::SGVector<double>' and 'std::size_t {aka long unsigned int}') result[k]=compute(terms[k]);
 CaBa	does that ring a bell to either of you?
 CaBa	wiking: anything special, mac-wise lately?
 CaBa	building with GCC 6.3
-!- lambday [31cf349d@gateway/web/freenode/ip.49.207.52.157] has quit [Ping timeout: 260 seconds]
@HeikoS	CaBa: thats a recent feature branch
@HeikoS	that has been merged
@HeikoS	we need to fix that
@HeikoS	can you post the error on an issue and poke @lamday
@HeikoS	he is fixing things for that atm
-!- OXPHOS [401e476d@gateway/web/freenode/ip.64.30.71.109] has quit [Ping timeout: 260 seconds]
 CaBa	HeikoS: what branch was that?
@sukey	Issue #3647 "Build fails" opened by lkuchenb - https://github.com/shogun-toolbox/shogun/issues/3647
@sukey	Issue #3647 "Build fails"- https://github.com/shogun-toolbox/shogun/issues/3647
 CaBa	HeikoS: so how far do i have to go back to get a build through?
@HeikoS	before sunday
-!- HeikoS [~heiko@untrust-out.swc.ucl.ac.uk] has quit [Ping timeout: 260 seconds]
 CaBa	wiking: ping
 CaBa	wiking: do you build against colpack on mac os>?
 CaBa	wiking: you have killed my 'ENABLE_COLPACK' :P
 CaBa	wiking: actually it's protbuf that is causing my trouble. anyways - have all the options disappeard?
 CaBa	*dissappeared?
 CaBa	.oO(i'll give up spelling that correctly)
--- Log closed Tue Feb 21 00:00:34 2017
