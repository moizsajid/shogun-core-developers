--- Log opened Mon Jun 10 00:00:38 2013
 gsomix	this is not funny, but now I know one more term in German - "eich-invarianz".
 gsomix	thanks to my book of classical electrodynamics.
 gsomix	procrastination time!
-!- gsomix [~gsomix@83.234.54.9] has quit [Ping timeout: 245 seconds]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has left #shogun ["QUIT :Leaving."]
-!- FSCV [~FSCV@189.139.252.135] has quit [Quit: Leaving]
-!- pickle27 [~kevin@70-36-138-146.dsl.dynamic.sonic.net] has joined #shogun
-!- nube [~rho@49.244.41.114] has quit [Quit: Leaving.]
 shogun-buildbot	build #423 of nightly_default is complete: Failure [failed test]  Build details are at http://www.shogun-toolbox.org/buildbot/builders/nightly_default/builds/423
-!- pickle27 [~kevin@70-36-138-146.dsl.dynamic.sonic.net] has quit [Quit: Leaving]
-!- lisitsyn [~lisitsyn@109-226-114-235.clients.tlt.100megabit.ru] has quit [Quit: Leaving.]
-!- gsomix [~gsomix@83.234.169.56] has joined #shogun
 gsomix	good morning
-!- foulwall [~foulwall@2001:da8:215:c252:aced:801f:4a14:f26c] has joined #shogun
-!- foulwall [~foulwall@2001:da8:215:c252:aced:801f:4a14:f26c] has quit [Remote host closed the connection]
-!- lisitsyn [~lisitsin@mxs.kg.ru] has joined #shogun
-!- mode/#shogun [+o lisitsyn] by ChanServ
 gsomix	not interesting
 gsomix	exam is automagically passed
-!- gsomix [~gsomix@83.234.169.56] has quit [Quit: Leaving]
-!- gsomix [~Miranda@83.234.169.56] has joined #shogun
-!- sonne|work [~sonnenbu@sams-office-nat.tomtomgroup.com] has joined #shogun
 gsomix	sonne|work: hey
 sonne|work	ho
 sonne|work	gsomix: not in exam?
 gsomix	sonne|work: passed
 sonne|work	hah very good :)
-!- gsomix [~Miranda@83.234.169.56] has quit [Quit: Miranda IM! Smaller, Faster, Easier. http://miranda-im.org]
-!- hushell [~hushell@c-24-21-141-32.hsd1.or.comcast.net] has quit [Ping timeout: 256 seconds]
-!- gsomix [~Miranda@r206-10.smr.ru] has joined #shogun
-!- lambday [67157d36@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.54] has joined #shogun
 lambday	sonney2k: moin :)
 sonne|work	hey lambday!
 lambday	sonne|work: hi :)
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * 97bfa44 / / (4 files): https://github.com/shogun-toolbox/shogun/commit/97bfa445963e70b2ac008cd6ea8cbe24b4553f72
 shogun-notifier-	shogun: Fix backporting of package finders from 2.8.8
-!- travis-ci [~travis-ci@ec2-50-17-17-135.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7944576
-!- travis-ci [~travis-ci@ec2-50-17-17-135.compute-1.amazonaws.com] has left #shogun []
-!- HeikoS1 [~heiko@nat-189-35.internal.eduroam.ucl.ac.uk] has joined #shogun
 HeikoS1	lambday: around?
 lambday	HeikoS1: yes
 HeikoS1	good, hi :)
 lambday	checked the log, works fine :)
 lambday	hi
 HeikoS1	nice
 HeikoS1	okay
 lambday	how about
 HeikoS1	so what I would suggest for the dense exact matrix logs is
 lambday	okay
 HeikoS1	to have in instance of the linear operator function class that does exact matrix log
 HeikoS1	and the linear operator is just a dense matrix (which is stored and can be accessed)
 lambday	yes... CLogOperatorFunction
 HeikoS1	then the linear operator function class just accesses the matrix and creates a task
 HeikoS1	which simply uses eigen to computet the log
 HeikoS1	this way, we would already use the full framework
 HeikoS1	CExactMatrixLog
 HeikoS1	or even CMatrixLog
 HeikoS1	or CDenseMatrixLog
 lambday	HeikoS1: perfect!
 HeikoS1	because it will only work for CDenseMatrix liena roperators
 lambday	yes
 HeikoS1	do you think this will be useful?
 lambday	and, what should be a good name for the subclass of tasks (jobs) that does that
 HeikoS1	in terms of testing the framework ?
 lambday	I was thinking of CTraceLogComputationJob or something
 HeikoS1	since you had doubts :)
 lambday	HeikoS1: of course!! the thing that you said about focusing more on the framework is just perfect!
 HeikoS1	okay then, note that you can really go for the full things
 lambday	we'll already have a working thing.. and we'll iteratively integrate things
 HeikoS1	you can do the trace with normal vectors
 HeikoS1	so all classes are used
 HeikoS1	CExactLogTask
 HeikoS1	or similar
 HeikoS1	is a good name
 lambday	hmmm.. I suck at choosing names! :(
 HeikoS1	lambday: haha, me too :)
 lambday	no, its a really good name
 lambday	:D
 HeikoS1	always good to ask some people
 HeikoS1	lisitsyn:  around?
 HeikoS1	wiking: around?
 HeikoS1	lisitsyn: any updates on the removal of "clone" ?
 HeikoS1	wiking:  any updates on the automagic generated set of unit-tests?
 lambday	HeikoS1: I'll send the class diagram soon
 HeikoS1	lambday: do we really need a new diagram for this?
 HeikoS1	its just a few instances added right?
 lambday	HeikoS1: yes..
 HeikoS1	I would rather not put those into the diagram
 HeikoS1	since it gets too large then
 HeikoS1	(we can use it later for documentation, so lets keep it clean=
 HeikoS1	maybe rather start implementing the abstract bases
 HeikoS1	and then our first easy implementation
 HeikoS1	that already will be a huge patch
 lambday	HeikoS1: yup! :-/
 lambday	where should I put the classes?
 lambday	mathematics? statistics?
 HeikoS1	lambday: good point
 HeikoS1	thinkink
* lambday too thinks
 HeikoS1	I suggest this:
 HeikoS1	statistics/logdet
 HeikoS1	should have a seperate folder
 HeikoS1	since its so many classes
 HeikoS1	but the computation class should be somewhere else
 lambday	base?
 lambday	no that's bad
 HeikoS1	lib
 HeikoS1	but it should also have a seperate subfolder
 HeikoS1	call it computation for now
 HeikoS1	and then in there we can define the base, the serial one, and maybe even the tasks
 HeikoS1	no the tasks go into statistics/logdet
 lambday	the base class of CIndependentTask, should be in the lib, right?
 lambday	or Job
 HeikoS1	job
 HeikoS1	yeah put it into lib for now
 lambday	and the CIndependentJobResult
 lambday	this one too
 HeikoS1	and the computation class also
 HeikoS1	yes
 HeikoS1	so there are 3 base classes
 HeikoS1	and 1 implementation (serial)
 lambday	serial?
 HeikoS1	lambday: btw we now have clone() for all CSGObjects, so that might be useful when creating computation jobs / parallel computation
 HeikoS1	lambday: yes, first implementation is serial
 HeikoS1	one job after another
 lambday	oh you mean that
 lambday	and clone, ya saw the mail
 lambday	deep copy..
 lambday	but we have shared things among the jobs
 HeikoS1	lambday: yes, lets worry about this later, was just a comment
 HeikoS1	first is serial
 HeikoS1	the job stuff might eat some time once we start extending it, so lets start again simple
 lambday	the CExactLogJob would have this m_log_operator (for the log(C)) and m_vector (samples), and the compute then simply applies the log_operator on the sample vec, and then compute the dot product of the result vec and the original vec
 lambday	and gives a list fo computation results
 lambday	aggregate then just sums them up
 lambday	log_operator is shared among all jobs
 HeikoS1	lambday: wait ...
 lambday	okay
 HeikoS1	lambday: so things should be exactly as discussed before
 HeikoS1	let me find the mail
 lambday	yes.. I'm trying to fit this in terms of previously discussed things..
 HeikoS1	the main class is this CLogDetEstimator
 lambday	yes
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has quit [Ping timeout: 250 seconds]
 HeikoS1	why do you have the samples in the job?
 lambday	in the existing diagram you mean?
 HeikoS1	no you just wrote this
 HeikoS1	in my memory, the trace samples are only only in the CLogDetEstimator class
 HeikoS1	and the dot products are computed there
 HeikoS1	or did we change this?
 HeikoS1	ah
 HeikoS1	sorry
 HeikoS1	lambday: sorry it has been a while
 HeikoS1	you are totally right
 HeikoS1	the task compute log(M)*s
 HeikoS1	so it needs s
 lambday	hmmm... yes... no problem, even I'm forgetting things :(
 lambday	okay, so for exact log
 lambday	we do the same
 HeikoS1	yes
 lambday	compute log(M)*s
 HeikoS1	thats the point
 lambday	and then the dot product?
 HeikoS1	so the main class CLogDetEstimator
 HeikoS1	uses exactly the same code
 HeikoS1	to compute exact log and approximate log
 lambday	yes
 HeikoS1	I would maybe start with this class
 HeikoS1	and all its abstract dependencies
 HeikoS1	then you can push and we can discuss
 HeikoS1	please work in a seperate feature branch for this
 lambday	HeikoS1: as in?
 HeikoS1	we can then push into shogun source in this different branch and develop in the usual way
 HeikoS1	while we dont touch the develop branch yet
 lambday	git flow?
 HeikoS1	use gitflow to create a new branch
 lambday	okay
 HeikoS1	yeah or do it by hand
 HeikoS1	and when you push, push into the same branch
 HeikoS1	and the PR is then also against the same branch in shogun
 HeikoS1	once things work, we merge , then continue extending
 lambday	okay..
 lambday	and before pushing, rebase against develop
 HeikoS1	but if the exact log works, many things to test already
 lambday	?
 HeikoS1	yeah do this from time to time to avoid it getting out of synch
 HeikoS1	make sure not to do many changes to existing code to avoid conflicts
 lambday	HeikoS1: ya.. mostly it will be just addition
 HeikoS1	whenever you change something existing, do it in develop and push there, then rebase your feature branch
 HeikoS1	lambday: exactly
 lambday	okay
@lisitsyn	HeikoS1: not yet sorry
-!- vgorbati [c3ee5cb1@gateway/web/freenode/ip.195.238.92.177] has joined #shogun
 HeikoS1	lisitsyn:  not that you could use the deep copy clone if you wanted
 HeikoS1	lisitsyn:  we could also add a list of parameters to ignore when cloning
-!- thoralf [~thoralf@enki.zib.de] has joined #shogun
 thoralf	Hey.
 HeikoS1	thoralf: hi!
 thoralf	Hey Mr. S1
@wiking	HeikoS1: pong
 HeikoS1	S1? :)
 HeikoS1	haha
 HeikoS1	irc madness
 HeikoS1	wiking: hey!
 HeikoS1	how is this test stuff going?
 thoralf	HeikoS1: IRC still feels like nineties :)
@wiking	thoralf: why u want google wave? :)
 HeikoS1	thoralf: indeed
 HeikoS1	thoralf: most people I tell: If you have problems, join us in IRC say " what does IRC mean?" :)
 HeikoS1	but is there an alternative?
@lisitsyn	skype :D
 HeikoS1	lisitsyn: haha :)
@lisitsyn	no I like irc
@lisitsyn	what is wrong with irc?
@wiking	HeikoS1: so the only question remains: do you want the examples to be generated in the approriate file, or we dont care about that. i.e. GaussianKernel->clone() test should be in GaussianKernel_unittest.cc, or should we just have one base/clone_unittest.cc?
 HeikoS1	wiking: nono, just one sepearte file for all those tests
 HeikoS1	otherwise its horror
@lisitsyn	>700 files
 HeikoS1	the file should be in base
@lisitsyn	instantly
@wiking	lisitsyn: well then we can claim that we have a loooot of unit tests :)
 HeikoS1	and be called comething as SGObject_equals_clone_unittest or so
@lisitsyn	wiking: yeah more than 700 :D
 HeikoS1	lisitsyn, wiking this file will be very useful
@lisitsyn	just count # of classes
@wiking	HeikoS1: so basically you would do a ->clone() + equals() call in that test /:)
@lisitsyn	and say we have > # of classes tests
 HeikoS1	since if you run it with valgrind, it will detect whether parameters have not been properly initialised
 HeikoS1	wiking: yes, the code would look as the one I sent you
 HeikoS1	yesterday
@wiking	HeikoS1: plz send it in an email :)
 HeikoS1	ok
@wiking	HeikoS1: i dont wanna dig in irc logs
@wiking	btw: can i push it in if it's ready and put it on skip? and then when u push your final code then we can active the unit test?
 HeikoS1	wiking: thats fine!
@wiking	hahaha btw my name is neither in CONTRIBUTIONS nor in AUTHORS :)
 HeikoS1	wiking: sent the mail, just replace the GaussianKernel with any non-abstract class
@wiking	yep got it
 HeikoS1	wiking: add it then :)
 HeikoS1	wiking: cool, many thanks!
 HeikoS1	lisitsyn: how long will the clone removing take?
@wiking	HeikoS1: we have already one SGObject_unittest.cc
@wiking	HeikoS1: i'm tempted to keep that file
@wiking	just make it a template ;P
 HeikoS1	wiking: I know
 HeikoS1	wiking: no, please make a new file
 HeikoS1	with different name
 HeikoS1	since people will edit the existing one
 HeikoS1	and put something as "autogenerated file - do not edit" on tup
 HeikoS1	oh, and you can add your name in there in the GPL copyright :D
 HeikoS1	only include is class_list.h btw
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has joined #shogun
-!- mode/#shogun [+o iglesiasg] by ChanServ
@lisitsyn	HeikoS1: I don't kno
 HeikoS1	lisitsyn: thing is I dont want to touch those things since I did not write the code and dont really know whats going on - since its not tested I won't notice if I break stuff ;)
@lisitsyn	HeikoS1: let me dig into that tonight and then I'll let you know
 HeikoS1	lisitsyn:  cool thanks! :)
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has quit [Read error: Connection reset by peer]
 thoralf	HeikoS1: I closed issue #1164, because I was wrong.
 HeikoS1	thoralf: what was the problem then?
 HeikoS1	I saw
 HeikoS1	please add a comment on how to use it, so others dont make this mistake again :)
 thoralf	HeikoS1: I don't know how to use it.  For inc=1 it works like I expected.  inc>1 is something used for multiclass settings.
 HeikoS1	thoralf: okay, Ill push the others then to document it
-!- lambday [67157d36@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.54] has quit [Quit: http://www.kiwiirc.com/ - A hand crafted IRC client]
 thoralf	"A hand crafted IRC client"?  So they don't use compilers? :)
-!- HeikoS2 [9052bd23@gateway/web/cgi-irc/kiwiirc.com/ip.144.82.189.35] has joined #shogun
 HeikoS2	thoralf:this client is actually very nice!
 HeikoS2	all web-base but with comfort
 HeikoS2	even has autocompletition
-!- HeikoS2 [9052bd23@gateway/web/cgi-irc/kiwiirc.com/ip.144.82.189.35] has left #shogun []
@iglesiasg	thoralf: hey
 thoralf	iglesiasg: Hey.
@iglesiasg	thoralf: do you think it can be right for inc>1?
@iglesiasg	thoralf: it does not really make sense for me then
 thoralf	iglesiasg: I think you should ask soeren.  I suppose, this method does take something like a vector of length (num_classes*num_examples) and then only taking every inc-th element to compute the arg_max of a specific subset of decision values?
@iglesiasg	thoralf: let's see if we get an answer from him today
 thoralf	So "len" is actually not the length of the vector, as I was thinking, but the number of examples or sth like that.
@iglesiasg	thoralf: in the case you are saying the argument len should be equal to num_examples
@iglesiasg	yeah
 thoralf	Yes, for inc=1 it should hold that len=length(vector).
-!- vgorbati [c3ee5cb1@gateway/web/freenode/ip.195.238.92.177] has quit [Ping timeout: 250 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- gsomix [~Miranda@r206-10.smr.ru] has quit [Quit: Miranda IM! Smaller, Faster, Easier. http://miranda-im.org]
-!- lambday [67157d36@gateway/web/cgi-irc/kiwiirc.com/ip.103.21.125.54] has joined #shogun
-!- nube [~rho@49.244.57.131] has joined #shogun
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * ea7afd6 / src/shogun/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/ea7afd6e224fd825cf7f6daaf7bcd5b3ffe5faef
 shogun-notifier-	shogun: Add 'make install' target for libshogun
-!- iglesiasg [c1934d16@gateway/web/freenode/ip.193.147.77.22] has quit [Quit: Page closed]
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * 3c19faa / CMakeLists.txt,src/shogun/CMakeLists.txt: https://github.com/shogun-toolbox/shogun/commit/3c19faac1aa95aaaad1f0e00e02e75f54d6da7f6
 shogun-notifier-	shogun: Fix LZO linking flags and class_list.cpp compilation
-!- FSCV [~FSCV@187.210.54.166] has joined #shogun
-!- travis-ci [~travis-ci@ec2-107-22-45-75.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7951371
-!- travis-ci [~travis-ci@ec2-107-22-45-75.compute-1.amazonaws.com] has left #shogun []
 shogun-notifier-	shogun: Viktor Gal :feature/CMake * 0917a31 / cmake/FindLZO.cmake: https://github.com/shogun-toolbox/shogun/commit/0917a31acbc7b598374570d95c74a780f93c40a7
 shogun-notifier-	shogun: Fix FindLZO.cmake
 shogun-notifier-	shogun: Detecting liblzo on darwin was not working and the linking flags
 shogun-notifier-	shogun: were not exported properly
-!- travis-ci [~travis-ci@ec2-107-22-45-75.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Viktor Gal's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7953114
-!- travis-ci [~travis-ci@ec2-107-22-45-75.compute-1.amazonaws.com] has left #shogun []
@wiking	woohoooo 2 successful build out of 9 \o/
-!- naywhaya1e is now known as naywhayare
 lambday	template declaration has to be in single line to make it pass the PT_NOT_GENERIC thing in class_list.cpp :|
-!- cwidmer [5fd02c64@gateway/web/freenode/ip.95.208.44.100] has joined #shogun
-!- sonney2k [~shogun@7nn.de] has quit [Excess Flood]
-!- sonney2k [~shogun@7nn.de] has joined #shogun
-!- cwidmer [5fd02c64@gateway/web/freenode/ip.95.208.44.100] has quit [Quit: Page closed]
-!- van51 [~van51@athedsl-408350.home.otenet.gr] has left #shogun ["PING 1370882948"]
-!- zxtx [~zv@cpe-75-83-151-252.socal.res.rr.com] has quit [Ping timeout: 252 seconds]
-!- mode/#shogun [+o sonney2k] by ChanServ
-!- lisitsyn [~lisitsin@mxs.kg.ru] has quit [Quit: Leaving.]
-!- nube [~rho@49.244.57.131] has quit [Ping timeout: 246 seconds]
-!- shogun-notifier- [~irker@7nn.de] has quit [Quit: transmission timeout]
-!- vgorbati [~vgorbati@212.2.159.34] has joined #shogun
-!- shogun-notifier- [~irker@7nn.de] has joined #shogun
 shogun-notifier-	shogun: Soeren Sonnenburg :feature/sparse_matrix * afeb303 / / (7 files): https://github.com/shogun-toolbox/shogun/commit/afeb3034f0a7190864a35adc271faa3b5e44147d
 shogun-notifier-	shogun: make sparse features use SGSparseMatrix underneath
-!- nube [~rho@49.244.74.29] has joined #shogun
@sonney2k	HeikoS, you said you don't get why we have SGVector?
@sonney2k	HeikoS, could you explain that?
@sonney2k	HeikoS, and you did complain the structure of the sparse features. What's wrong with it?
 HeikoS1	sonney2k: so about the vector
 HeikoS1	sometimes it would be useful if SGVector and SGMatrix had a common bas
 HeikoS1	i.e. Vector is a matrix with num_cols=1
 HeikoS1	then methods could either return vectors or matrices
 HeikoS1	changing their behaviour at implementation time
 HeikoS1	also, all methods that we call on these objects are the same
 HeikoS1	like set_const, math operations etc
 HeikoS1	and about the sparse, I actually meant string
 HeikoS1	why do we have that?
 HeikoS1	why not just use vector for string?
 HeikoS1	memory is pre-allocated anyways
 HeikoS1	sonney2k: sorry, I meant runtime, not implementation time
-!- travis-ci [~travis-ci@ec2-54-224-160-16.compute-1.amazonaws.com] has joined #shogun
 travis-ci	[travis-ci] it's Soeren Sonnenburg's turn to pay the next round of drinks for the massacre he caused in shogun-toolbox/shogun: http://travis-ci.org/shogun-toolbox/shogun/builds/7958602
-!- travis-ci [~travis-ci@ec2-54-224-160-16.compute-1.amazonaws.com] has left #shogun []
-!- lisitsyn [~lisitsyn@83.234.54.170] has joined #shogun
@sonney2k	HeikoS, dropping SGString is already decided
@sonney2k	HeikoS, about SGVector - the same argument holds for nd-arrays then
@sonney2k	HeikoS, SGVector got introduced to be minimal. back then a ptr to data and length
 HeikoS1	sonney2k: but you want to replace it with the variable length right?
@sonney2k	to be efficient when you just have very few dims
@sonney2k	it was never meant to be derived from some baseclass (overhead!)
 HeikoS1	sonney2k: I wonder whether this would hurt us, treating vectors as 2d arrays?
 HeikoS1	sonney2k: ok, maybe the solution is to have this eigen factory for math stuff
 shogun-notifier-	shogun: Soeren Sonnenburg :feature/sparse_matrix * 3902963 / src/shogun/features/SparseFeatures.cpp,src/shogun/features/SparseFeatures.h: https://github.com/shogun-toolbox/shogun/commit/3902963981e337a8f808916702ab43a14680dc45
 shogun-notifier-	shogun: don't change the api return sparse transposed features
 HeikoS1	then all these problems disappear
 HeikoS1	since eigen does have this base class for both vector and matrix
 HeikoS1	ah but still for interfacves its sometimes annoying
@sonney2k	HeikoS, but then we have to rely on eigen3 completely
@sonney2k	and that is not an option
 HeikoS1	sonney2k: no as you said, have a factory
 HeikoS1	that is seperate and then one can use eigen's math functions on matrices/vectors
@sonney2k	shogun started with no vectors/matrices at all
@sonney2k	it was all about strings
 HeikoS1	well thats different now isnt it?
@sonney2k	lots and lots of code are still about strings
@sonney2k	but yes
 lisitsyn	eigen is easy peasy dependency
 lisitsyn	just my 2 cents :D
 HeikoS1	I think sonney2k suggestion with the factory is nice
 HeikoS1	then one can decide whether to rely on eigen or not
 HeikoS1	but re-implementing all matrix functions (mean/cov/bla) is a little annoying and we even have to do it twice since SGMatrix/SGVector
@sonney2k	HeikoS, well we certainly could implement it just once but that is not the point here I guess
 lisitsyn	I am still not a fan of having math in sgmatrix
-!- zxtx [~zv@rrcs-74-62-200-195.west.biz.rr.com] has joined #shogun
@sonney2k	lisitsyn, you want it back in CMath?
 lisitsyn	sonney2k: I don't know - I'd prefer to treat them as eigen matrices
 HeikoS1	sonney2k: why dont you want to rely on eigen?
 HeikoS1	we could remove all this ugly stuff ... and have a well tested version of it instead
 lisitsyn	in the end we'd have to rely on something
 lisitsyn	either blas or eigen3 or armadillo or anything
 HeikoS1	I gotta go now, see you tomorrow!
 HeikoS1	lisitsyn: could you check the clone stuff at some point? Id like to merge before it gets out of synch with the dev branch :)
 lisitsyn	HeikoS1: yeah let me recover a bit from job thing and then I'll check
@sonney2k	lisitsyn, only for complex stuff. for lot of shogun stuff all you need is a dot product
@sonney2k	no cov/mean whatever
